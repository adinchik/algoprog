Result= [{'materials': [{'materials': [], 'force': False, '_id': 'module-20927_0', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_1', 'order': 1, 'type': 'epigraph', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Надо думать головой!</h2>\n<p>Девиз нашего курса — «Надо думать головой!»</p>\n\n<p>Это обозначает, что все время при работе на спецкурсе вам надо думать. Вам нужно думать над тем, как решать те или иные задачи, как сделать много что еще. У вас не будет универсальных рецептов, которые позволят решить все задачи — наоборот, самые лучшие, самые интересные задачи — те, где от вас требуется что-то придумать.</p>\n\n<p>Кроме того, к любой получаемой информации, ко всему, что написано в учебниках, ко всему, что я вам говорю, что написано на страничку курса, относитесь всегда критически. Думайте, пытайтесь понять, почему это написано, почему вам советуют делать так, а не иначе. В учебниках, в том, что вам говорят другие люди, и тем более в моих материалах и советах легко могут быть ошибки, опечатки, наконец, вы, возможно, найдете более простые способы добиться того же — поэтому никогда не принимайте на веру то, что вы где-нибудь прочитали, всегда обдумывайте и перерабатывайте полученную информацию. Может так оказаться, что в одном месте вы прочитаете одну информацию, а в другом месте — диаметрально противоположную — подумайте, проверьте (см. ниже), и поймите, как делать лучше.</p>\n\n<p>Кроме того, не бойтесь экспериментировать! Если вы не уверены, можно ли в питоне/паскале/... написать ту или иную команду, отработает ли она так, как вы ожидаете — попробуйте: напишите и проверьте. Если вы точно не помните, как пишется какая-нибудь команда — попробуйте перебрать варианты, пока не получится. Если вы в разных местах прочитали совсем разную информацию о том, как что-то надо сделать — возьмите и проверьте, какой способ работает! Не бойтесь пробовать, не бойтесь экспериментировать — так вы научитесь намного большему, чем если просто будете строго следовать тому, что написано в каких-либо учебниках, что вам кто-то сказал.</p></div>', 'title': 'Надо думать головой!', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_2', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_3', 'order': 3, 'type': 'epigraph', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><div style="text-align:right;width:100%;padding-bottom:2ex;"><i>There are nine and sixty ways of constructing tribal lays,<br>\nAnd every single one of them is right!</i><br><br>\nRudyard Kipling. In the Neolithic Age<br><br><br>\nЕсть девять и шестьдесят способов писать песни племен<br>\nИ каждый из них без исключения верный!<br><br>\nРедьярд Киплинг. В эпоху Неолита</div>\n\n<p>У каждой задачи есть очень много решений, и многие из них — верные. Не следует ожидать, что у каждой задачи есть единственное правильное решение; бывают решения лучше, бывают решения хуже, но почти всегда есть два-три существенно разных решения, которые все весьма хороши, и из которых сложно выбрать одно лучшее. Будьте готовы к этому, будьте готовы видеть эти разные решения и разные подходы.</p>\n\n<p>В частности, если у вас есть ошибка в программе, то обычно есть много способов ее исправить. Поэтому не удивляйтесь, если вы меня спрашиваете, как исправить ошибку, а я вам предлагаю несколько вариантов исправления.</p></div>', 'title': 'There are nine and sixty ways of constructing tribal lays,\nAnd every single one of them is right!', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_4', 'order': 4, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Самая главная информация</h2>\n\n<div><a href="https://www.youtube.com/watch?v=kTC7z1NpOb4">\nВводная видеолекция про занятия на алгопроге (дублирует основную информацию ниже)</a></div>\n\n<div style="height:1ex;"></div>\n\n<div><b>Для начала</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_5', 'order': 5, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Общие вопросы (FAQ) по курсу</h2>\n<h3>Что это за курс?</h3>\n<p>Это курс по алгоритмическому программированию (фактически, по олимпиадным задачам). В первую очередь, он ориентирован на учеников лицея 40 Нижнего Новгорода, а также школьников Нижнего Новгорода и Нижегородской области, у которых в школе нет занятий по алгоритмическому программированию, или которых чем-то не устраивают такие занятия в их школе. Но при этом, если в этом курсе захотят участвовать школьники не из Нижегородской области, я ничего против иметь не буду.</p>\n\n<h3>Что за странный формат? Что за занятия в лицее 40 и в ННГУ?</h3>\n<p>В этом курсе можно заниматься полностью заочно — по многим темам материалы есть на сайте, и вы всегда можете написать вопрос мне. Кроме того, по материалам этого курса я веду очные занятия в лицее 40 (только для учеников лицея) и в ННГУ (для всех желающих). Но при этом у нас нет регулярных лекций по строгому расписанию, все школьники занимаются в своем темпе, поэтому можно ходить и в лицей, и в ННГУ, можно ходить не каждый раз. Поэтому это получается такой очно-заочный курс.</p>\n\n<h3>Чему тут учат?</h3>\n<p>Основное направление — это алгоритмическое программирование. Начиная с основ программирования, и далее в алгоритмы и структуры данных. Это то, что по-английски называется Computer Science. С существенным уклоном в сторону олимпиадного программирования (в первую очередь по линии Всероссийской олимпиады школьников), тем более что задачи на олимпиадах — это как раз задачи на алгоритмы и структуры данных.</p>\n\n<h3>Чему тут НЕ учат?</h3>\n<p>Мы не будем специально заниматься "техническими" вопросами:</p>\n<ul>\n<li>Созданием пользовательских интерфейсов, кнопочек, окошек и т.д.</li>\n<li>Программированием под конкретные платформы: созданием web-приложений, программированием под Android, iOS и т.п.</li>\n</ul>\n<p>Мы будем изучать алгоритмы, которые лежат в основе многих таких программ (мы не будем обсуждать, как сделать кнопку "сортировать по алфавиту", но будем обсуждать, как реализовать сортировку, когда список объектов для сортировки уже есть).</p>\n<p>Кроме того, мы не будем специально готовиться к ЕГЭ или поступлению в вузы. Тем не менее, задачи части C ЕГЭ по информатике — это фактически довольно простые олимпиадные задачи, поэтому если вы хорошо решаете олимпиадные задачи, то проблем с ЕГЭ у вас быть не должно.</p>\n\n<h3>Вы действительно будете учить?</h3>\n<p>И да, и нет. Формат заочного курса подразумевает, что существенную часть материала вы будете изучать сами. Я буду скорее направлять вас, советуя, где можно посмотреть тот или иной вопрос, на каких задачах отладить навыки, а также буду довольно активно комментировать ваши программы. Кроме того, вы всегда можете со мной связаться (контакты на главной странице курса) и задать любой вопрос.</p>\n\n<h3>Какой язык программирования?</h3>\n<p>Сложный вопрос, точнее вопрос с длинным ответом.</p>\n<p>Если вы только еще начинаете программировать, то я рекомендую использовать Python 3. Теоретические материалы для начинающих я буду подбирать именно по Python.</p>\n<p>Еще один популярный вариант — C++, но я настоятельно не рекомендую его выбирать, если вы только начинаете учиться программировать. Если же вы где-то уже научились неплохо писать на C++ (контрольный вопрос: какой тип данных вы используете для работы со строками и насколько это для вас сложно), то можете писать на C++. Теории по C++ на начальных уровнях нет, но если вы его где-то уже изучили, то она вам не нужна :) Если же вы неуверенно знаете темы уровня 1, то лучше учите питон по материалам на сайте.</p>\n<p>Довольно популярный вариант — Паскаль. Раньше я его рекомендовал, но в современном мире единственная причина учить паскаль — если вас в школе учат на паскале, вы уже неплохо его знаете, и не хотите распыляться на два языка. На самом деле, даже в этом случае я рекомендую вам изучить питон и заниматься в этом курсе на питоне, но в принципе, если хотите, то можете заниматься и на паскале. Теории по паскалю на сайте нет, но если вы его изучаете в школе и неплохо его знаете, то теория вам не нужна :) Если же вы неуверенно знаете темы уровня 1, то лучше учите питон по материалам на сайте.</p>\n<p>Но в целом я не настаиваю на том или ином выборе языка. Вы можете заниматься на любом языке из тех, которые поддерживается этим сайтом (только еще раз хорошо взвесьте все плюсы и минусы); правда, я сам лучше всего знаю паскаль, питон и c++, поэтому по другим языкам моя помощь вам будет ограничена . Ну и теории по другим языкам на сайте нет.</p>\n<p>Если у вас возникают вопросы, то свяжитесь со мной.</p>\n\n<h3>Что от меня требуется для занятий?</h3>\n<p>От вас требуется, в первую очередь, желание заниматься. Я не ваш школьный учитель, не ваш родитель, я не могу чего-то требовать от вас; ваше присутствие здесь — дело добровольное. Я не буду вас торопить, или ругать вас, если вы ничего не делаете неделями. Но при этом понимайте, что каких-либо результатов можно добиться только регулярными занятиями; если вы хотите конкретных цифр по тому, сколько времени надо выделить, то я бы считал, что как минимум два раза в неделю часа по 2-3 выделить надо, а лучше больше. (Для школьников, которые ходят ко мне на очные занятия, я рекомендую, в добавок в 2-3 часовому очному занятию, еще примерно столько же заниматься дома.) Но <b>следите за этим сами</b>, я не буду стоять у вас над душой. (Родителям и учителям: если вы хотите контролировать успехи ваших детей, см. отдельный документ по ссылке с главной страницы курса, и/или напишите мне.)</p>\n<p>Тот же принцип с моей стороны относится и к остальным вопросам: я лишь советую вам что-то, но не могу требовать. Если вы хотите выбрать определенный язык программирования вопреки моим рекомендациям — ну хорошо; и т.п.</p>\n<p>Но при этом учтите, что не только ваше участие здесь — дело добровольное, но и моя вам помощь — это тоже дело добровольное. Естественно, я с большей радостью буду помогать школьнику, который активно занимается, чем школьнику, который что-то пытается делать раз в месяц, и т.п.</p>\n\n<h3>А какие изначальные знания требуются? И каких классов могут быть школьники?</h3>\n<p>По программированию — от никаких и выше. Вообще, заочный формат позволяет реализовать почти индивидуальное обучение (т.е. я готов каждому школьнику выдавать личные задания), поэтому я готов принимать школьников, начиная от тех, кто ничего не умеет, и до школьников существенно более высокого уровня.</p>\n<p>Важными являются предварительные знания по математике. Опыт показывает, что чем сильнее математическая подготовка у школьника, тем он лучше занимается программированием. Поэтому если вы участвуете (пусть и на невысоком уровне) в математических олимпиадах — это вам плюс.</p>\n<p>Я ожидаю здесь видеть школьников от 7 и до 11 класса. Если школьник сильный (участвует в олимпиадах или конкурсах по математике, или как минимум весьма хорошо знает школьную программу), то можно и 5-6 классы. Для сильных школьников, чем раньше начать заниматься программированием, тем лучше.</p>\n\n<h3>Что надо сделать, чтобы начать заниматься?</h3>\n<p>Прочитайте документ "Инструкция для тех, кто здесь в первый раз" (ссылка на главной странице курса) и сделайте то, что там написано.</p>\n\n<h3>Когда можно начать заниматься? Когда "следующий набор"?</h3>\n<p>К курсу можно присоединится в любое время. Все равно занимающиеся школьники имеют довольно разный уровень подготовки, поэтому никакой единой программы типа "на этой неделе проходим то-то, на следующей то-то, а если вы пропустили или слишком поздно узнали о курсе, то ждите следующей группы или следующего года" нет.</p>\n<p>Единственное — во время праздников или летом у меня может быть ограничен доступ к интернету, поэтому я могу не так быстро отвечать на ваши письма, смотреть ваши решения и т.д.</p>\n<p>То же относится и к очным занятиям, можно присоединиться на любом занятии. Только проверьте, нет ли на главной странице курса объявления об отмене очередного занятия (например, из-за праздников); кроме того, летом занятий нет. На всякий случай можете мне заранее написать и уточнить, когда проходят занятия.</p>\n\n<h3><i>— И как думаешь, Василич? Будет от этой работы толк?</i></h3>\n<p><i>— А вот поработаешь, Петр Николаич, увидишь!</i><br>\n(Лев Успенский. Сопка «Камянистка», или торжество науки.)</p>\n<p>Конечно, я не гарантирую, что стоит начать заниматься, и вы сразу достигнете высоких результатов. Это зависит от многого, в том числе то того, что за пределами моего влияния — в первую очередь, математического образования, общей математической культуры, да и одаренности школьника; а также от трудолюбия и желания заниматься. Но думаю, что для большинства школьников, имеющих нужный склад мышления, эти занятия будут полезны.</p>\n\n<h3>А кто вообще вы такой?</h3>\n<p>Я — Петр Андреевич Калинин, к.ф.-м.н., старший разработчик компании Яндекс, выпускник ВШОПФ ННГУ. Я в свое время активно участвовал в различных олимпиадах: бронзовый призер международной олимпиады школьников по информатике (IOI) 2001 года, золотой призер IOI 2002 года; в составе команды ННГУ дважды участник финала чемпионата мира по командному программированию ACM (ACM ICPC). Я много лет езжу преподавателем в Летнюю компьютерную школу, крупнейшую российскую летнюю школу по алгоритмическому программированию; я постоянный член жюри Нижегородской городской олимпиады школьников по программированию (последние годы — председатель жюри). С 2017 по 2019 год я преподавал в Школе анализа данных Яндекса. Я ученик В.Д. Лелюха.</p>\n\n<p>В том или ином виде я учу школьников программированию с тех пор, как сам окончил школу в 2002 году (я ездил преподавателем в различные летние школы и т.п.); этот курс существует с 2013 года. Среди моих учеников — ряд участников и один победитель заключительного этапа Всероссийской олимпиады школьников по информатике (не считая моего брата Николая, в обучении которого я тоже принимал не последнее участие и который является абсолютным победителем заключительного этапа 2013 года и дважды — в 2013 и 2014 годах — золотым призером международной олимпиады школьников по информатике).</p>\n\n<p>Команды школьников под моим руководством регулярно участвуют в Нижегородской и Всероссийской командных олимпиада школьников по программированию. На большинстве прошедших к данному моменту Нижегородских командных олимпиадах абсолютное первое место занимала моя команда; на Всероссийской командной олимпиаде мои команды регулярно становятся призерами, нередко — медалистами, а два раза — занимали абсолютное первое место.</p>\n\n<p>Вы всегда можете связаться со мной, контактные данные указаны на главной странице курса.</p>\n\n<h3>А что за сайт informatics.mccme.ru?</h3>\n<p>Informatics.mccme.ru — это сайт дистанционной подготовки по информатике, организованный Московским центром непрерывного математического образования (МЦНМО) и Московским институтом открытого образования (МИОО); он очень удобен для организации курсов подобных этому, и, как вы можете видеть на главной странице сайта, реально широко используется, но в первую очередь для организации очных занятий. Я не имею непосредственного отношения к этому сайту (хотя и знаком с людьми, которые его создали и поддерживают).</p>\n\n<p>Этот курс строится на базе материалов с informatics и использует его в качестве тестирующей системы (а раньше вообще курс существовал только на informatics). Местами еще могли остаться ссылки на информатикс, если обнаруживаете такую, пишите мне.</p></div>', 'title': 'FAQ для школьников', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_6', 'order': 6, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_7', 'order': 7, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><div style="text-align:center;"><font size="+2">Занятия алгоритмическим программированием для студентов, выпускников вузов и вообще всех желающих</font></div>\n\n<h3>Что это за курс?</h3>\n<p>Это курс по алгоритмическому программированию (алгоритмы, структуры данных и т.д.)</p>\n\n<p>Он в первую очередь рассчитан на школьников и в качестве подготовки к школьным олимпиадами (и многие материалы в курсе написаны именно как для школьников), но также в курсе могут заочно заниматься (и реально занимаются) вообще все желающие: студенты, выпускники вузов и т.д. Занятия для нижегородских школьников бесплатные, для всех остальных — платные.</p>\n\n<p>Эта страничка — она как раз для студентов, выпускников и т.д., а не для школьников. Для школьников есть <a href="/material/module-20927_5" onclick="window.goto(\'/material/module-20927_5\')();return false;">отдельная страничка</a>.</p>\n\n<h3>Чему тут учат?</h3>\n<p>Основное направление — это алгоритмическое программирование. Начиная с основ программирования, и далее в алгоритмы и структуры данных. Это то, что по-английски называется Computer Science.</p>\n\n<h3>Чему тут НЕ учат?</h3>\n<p>Мы не занимаемся "техническими" вопросами:</p>\n<ul>\n<li>Созданием пользовательских интерфейсов, кнопочек, окошек и т.д.</li>\n<li>Программированием под конкретные платформы: созданием web-приложений, программированием под Android, iOS и т.п.</li>\n<li>Использованием различных фреймворков, библиотек и т.д.</li>\n</ul>\n<p>Мы будем изучать алгоритмы, которые лежат в основе многих таких программ (мы не будем обсуждать, как сделать кнопку "сортировать по алфавиту", но будем обсуждать, как реализовать сортировку, когда список объектов для сортировки уже есть).</p>\n\n<h3>Вы действительно будете учить?</h3>\n<p>И да, и нет. Формат заочного курса подразумевает, что существенную часть материала вы будете изучать сами. Я буду скорее направлять вас, советуя, где можно посмотреть тот или иной вопрос, на каких задачах отладить навыки, а также буду довольно активно комментировать ваши программы. Кроме того, вы всегда можете со мной связаться (контакты на главной странице курса) и задать любой вопрос.</p>\n\n<h3>Какой язык программирования?</h3>\n<p>Вообще говоря, какой хотите, из тех, что позволяют писать консольные приложения и поддерживаются этим сайтом. Это C++, Java, Python, C#, PHP, Ruby, Perl, Pascal, Basic, даже 1С. </p>\n\n<p>При этом, если вы еще не знаете никакого языка программирования, то я рекомендую Python. На страничке курса есть материалы для начинающих по питону. Если вы знаете какой-то из перечисленных в предыдущем абзаце языков, то можете использовать его; но вообще все продвинутые темы не зависят от языка.</p>\n\n<p>Лично я лучше всего знаю C++, питон и паскаль; по этим языкам я смогу вам достаточно подробно помогать. По другим языкам я не смогу вам подсказывать по различным тонкостям языка, хотя, как показывает опыт, для алгоритмов это не очень существенно.</p>\n\n<h3>А какие изначальные знания требуются?</h3>\n<p>По программированию — от никаких и выше. Вообще, заочный формат позволяет реализовать почти индивидуальное обучение (т.е. каждый участник курса занимается в своем ритме и режиме), поэтому я ожидаю здесь людей с широким спектром начальных знаний: от студентов младших курсов, только начинающих программировать, до уже профессиональных программистов, желающих улучшить свои знания в области алгоритмов.</p>\n\n<h3>Что надо сделать, чтобы начать заниматься?</h3>\n<ul>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (для этого вас попросят еще зарегистрироваться на сайте informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, где вы учитесь/работаете. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля".</li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты в разделе "О курсе" на главной странице курса.</li>\n<li>Дождитесь ответа и дальнейших инструкций от меня.\n</li>\n</ul>\n<p></p>\n\n<h3>Когда можно начать заниматься? Когда "следующий набор"?</h3>\n<p>К курсу можно присоединится в любое время. Все равно занимающиеся имеют довольно разный уровень подготовки, поэтому никакой единой программы типа "на этой неделе проходим то-то, на следующей то-то, а если вы пропустили или слишком поздно узнали о курсе, то ждите следующей группы или следующего года" нет.</p>\n<p>Единственное — во время праздников или летом у меня может быть ограничен доступ к интернету, поэтому я могу не так быстро отвечать на ваши письма, смотреть ваши решения и т.д.</p>\n\n<h3>Занятия только заочные?</h3>\n<p>Да, очных занятий для не-школьников нет. А если бы и были, то стоили бы намного дороже.</p>\n\n<h3>А кто вообще вы такой?</h3>\n<p>Я — Петр Андреевич Калинин, к.ф.-м.н., старший разработчик компании Яндекс, выпускник ВШОПФ ННГУ. Я в свое время активно участвовал в различных олимпиадах: бронзовый призер международной олимпиады школьников по информатике (IOI) 2001 года, золотой призер IOI 2002 года; в составе команды ННГУ дважды участник финала чемпионата мира по командному программированию ACM (ACM ICPC). С 2017 по 2019 год я преподавал в Школе анализа данных Яндекса. Я ученик В.Д. Лелюха.</p>\n\n<p>В том или ином виде я учу школьников программированию с тех пор, как сам окончил школу в 2002 году (я ездил преподавателем в различные летние школы и т.п.); этот курс существует с 2013 года. Среди моих учеников — ряд участников и один победитель заключительного этапа Всероссийской олимпиады школьников по информатике (не считая моего брата Николая, в обучении которого я тоже принимал не последнее участие и который является абсолютным победителем заключительного этапа 2013 года и дважды — в 2013 и 2014 годах — золотым призером международной олимпиады школьников по информатике).</p>\n\n<p>Команды школьников под моим руководством регулярно участвуют в Нижегородской и Всероссийской командных олимпиада школьников по программированию. На большинстве прошедших к данному моменту Нижегородских командных олимпиадах абсолютное первое место занимали мои команды; на Всероссийской командной олимпиаде мои команды регулярно становятся призерами, нередко — медалистами, а два раза — занимали абсолютное первое место.</p>\n\n<p>Вы всегда можете связаться со мной, контактные данные указаны на главной странице курса.</p>\n\n<h3>А что за сайт informatics.mccme.ru?</h3>\n<p>Informatics.mccme.ru — это сайт дистанционной подготовки по информатике, организованный Московским центром непрерывного математического образования (МЦНМО) и Московским институтом открытого образования (МИОО); он очень удобен для организации курсов подобных этому, и, как вы можете видеть на главной странице сайта, реально широко используется, но в первую очередь для организации очных занятий. Я не имею непосредственного отношения к этому сайту (хотя и знаком с людьми, которые его создали и поддерживают).</p>\n\n<p>Мой курс строится на базе материалов с informatics и использует его в качестве тестирующей системы (а раньше вообще курс существовал только на informatics). Местами еще могли остаться ссылки на информатикс, если обнаруживаете такую, пишите мне.</p></div>', 'title': 'FAQ для студентов и старше', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_8', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_9', 'order': 9, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Инструкция для тех, кто здесь в первый раз</h1>\n<h2>Для школьников</h2>\nЕсли вы хотите начать заниматься в этом курсе, то сделайте следующее:\n<ol>\n<li>Во-первых, можно просто придти на очное занятие (в ННГУ для всех желающих, в лицее 40 для лицеистов, информация о занятиях на страничке курса). Но можно начать (и продолжать) заниматься и дома, не дожидаясь очного занятия, можно и вообще на очные занятия не ходить. Все инструкции ниже идут как раз для случая, если вы хотите начать заниматься из дома.</li>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (вас попросят еще зарегистрироваться на informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, школу, класс, город. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля"; если вы участвовали в каких-либо олимпиадах по математике или программированию, укажите это. (Это не значит, что здесь будет какой-то отбор, я готов принять в курс всех желающих. Но я просто хочу заранее знать, какой у вас уже есть опыт.) </li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты разделе "О курсе".</li>\n<li>Далее:\n<ul>\n<li>Если вы — начинающий, т.е. не знаете никакой язык программирования на уровне, позволяющем вам уверенно писать простые программы, то начинайте с <a href="/material/1" onclick="window.goto(\'/material/1\')();return false;">уровня 1</a>. Там последовательно разбираются различные стороны языка программирования — начните их последовательно проходить. Вам надо будет выбрать, на каком языке программирования работать, я советую начинающим питон.</li>\n<li>Если вы какие-то программы писать умеете, но не очень уверенно, то выберите на уровнях <a href="/material/1%D0%90" onclick="window.goto(\'/material/1%D0%90\')();return false;">1А</a> или <a href="/material/1%D0%91" onclick="window.goto(\'/material/1%D0%91\')();return false;">1Б</a> первую тему, которую не очень уверенно знаете, и начинайте с нее.</li>\n<li>Если вы на выбранном вами языке программирования можете достаточно уверенно писать простые программы, то начните с темы "вещественные числа" на <a href="/material/1%D0%91" onclick="window.goto(\'/material/1%D0%91\')();return false;">уровне 1Б</a>, и после этого переходите к уровню 1В и далее. Вполне возможно, что эти задачи вам покажутся простыми, и вы их очень быстро решите, но, возможно, над некоторыми вам придется подумать, а заодно я посмотрю на ваш стиль программирования и на разного рода мелкие моменты, которые вы можете не знать, пусть даже и хорошо пишите программы. (Обратите внимание, что там не надо решать все задачи для перехода на следующие уровни.) Перед тем, как начинать решать задачи, прочитайте в разделе "О курсе" тексты "Работа с сайтом..." и "Начало работы с Free pascal" (если вы пишите на паскале). Многое вам там будет знакомо, но я уверен, что что-то найдете и новое.</li>\n<li>Если вы — уже очень сильно продолжающий, т.е. умеете уверенно писать простые задачи (и, скорее всего, вы уже участник региональных олимпиад), то напишите мне и ждите инструкций.</li>\n</ul>\n</li></ol>\n\n<h2>Для студентов и старше</h2>\n<ul>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (для этого вас попросят еще зарегистрироваться на сайте informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, где вы учитесь/работаете. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля".</li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты в разделе "О курсе" на главной странице курса.</li>\n<li>Дождитесь ответа и дальнейших инструкций от меня.\n</li>\n</ul></div>', 'title': '\nИнструкция для тех, кто здесь в первый раз (или "Что надо сделать, чтобы начать заниматься?")', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_10', 'order': 10, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>Про то, как тут заниматься</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_11', 'order': 11, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Работа с сайтом</h2>\n<p>Основное, что вы будете делать на наших занятиях — это решать задачи. Большинство задач будут требовать написания программы, которая считывает (с клавиатуры или из файла) некоторые данные, по ним вычисляет новые данные, и результат выводит на экран или сохраняет в файл.</p>\n<p>Написанную вами программу вы можете (и должны) отправить на проверку. Этот сайт предоставляет возможность автоматической проверки ваших программ — вы сразу (в течение максимум одной-двух минут) получаете результат проверки: работает ваша программа корректно или нет. Кроме того, я буду видеть все ваши попытки, которые вы отправляете на сайт, и смогу их комментировать, писать замечания и т.д., а вы сможете эти комментарии видеть и по ним улучшать свои программы.</p>\n\n<h3>Пример задачи</h3>\n<p>Зайдите на уровень 1А (внутри уровня 1). Там есть ссылка "Задачи на арифметические операции". Зайдите туда. Вы увидите список задач: "Дележ яблок - 1", "Дележ яблок - 2", и т.д., до "Разность времен". Это и есть набор задач (коротко говорят "контест"), которые вам предлагается прорешать для закрепления знаний по первой теме курса — арифметическим операциям. \n</p><p>Все названия задач — ссылки, по ним открывается собственно задача. Откройте задачу "Дележ яблок - 1". Вы видите ее условие: "N школьников делят K яблок поровну, неделящийся остаток остается в корзинке. Сколько яблок достанется каждому школьнику? Программа получает на вход числа N и K и должна вывести искомое количество яблок." Ниже идет пример: при вводе данных "3 14" программа должна вывести "4".</p>\n<p>Условие задачи четко описывает, что должна делать ваша программа: для любых значений N и K она должна вычислить и вывести ответ на задачу. В более серьезных задачах в условии всегда указываются ограничения на допустимые N и K, но в задачах для начинающих на этом сайте считается, что N и K "разумные" (в частности, помещаются в тип данных integer в паскале); в "разумность" в данном случае входит и то, что оба числа положительны.</p>\n<p>Пример нужен только для проверки того, что вы верно поняли условие, формат входных данных, и смогли проверить программу на простейшем тесте. Тем не менее, ваша программа должна работать не только на тесте из примера, но и на других допустимых тестах.</p>\n\n<h3>Написание решения</h3>\nДанная задача решается достаточно легко. Нам надо, конечно, завести две переменные, N и K, считать их с клавиатуры, и вывести неполное частное от деления K на N (обратите внимание, именно K на N, а не N на K!). Программа будет выглядеть так:\n<table>\n<tbody><tr><th>Паскаль</th><th>Питон</th></tr>\n<tr><td>\n<pre>{$mode delphi}\nvar n,k:integer;\nbegin\nread(n,k);\nwriteln(k div n);\nend.</pre>\n</td><td>\n<pre>n = int(input())\nk = int(input())\nprint(k // n)</pre>\n</td></tr></tbody></table>\n\nОбратите внимание на следующие особенности (в вашем учебнике может быть написано не так — надо делать так, как написано тут, а не в учебнике. Возможно, чего-то из описанного здесь вы не поймете — тогда просто пропускайте этот пункт). Часть из этих особенностей относятся только к паскалю, часть — к любому языку программирования.\n<ul>\n<li>(паскаль) Написано <code>{$mode delphi}</code>. Пока вы не знаете, какие разные режимы компилятора бывают, всегда пишите эту конструкцию. Потом, когда узнаете, сможете выбирать, какой режим компилятора вам нужен.</li>\n<li>(паскаль) Не используется конструкция <code>program ...;</code>. В современном программировании она не нужна вообще.</li>\n<li>(паскаль) Вся программа пишется маленькими буквами. Поскольку в Pascal все равно, использовать маленькие или заглавные буквы, то сейчас принято использовать маленькие.</li>\n<li>Мы не выводим никаких "приглашений" типа "введите N". В условии задачи четко написано, что именно наша программа должна выводить на экран, и там ничего не сказано про то, что надо выводить приглашения. Поэтому любой лишний вывод на экран будет рассмотрен как нарушение формата вывода.</li>\n<li>Нет никаких "проверок на дурака", например, нет проверки "а вдруг N=0?", или "а вдруг ввели не число?". Аналогично предыдущему, это в наших задачах не требуется. В более серьезных задачах в условии будут стоять ограничения на допустимые значения N, и никто не будет тестировать вашу программу с N, не удовлетворяющим этим ограничениям. В этой задаче считается, что N&gt;0 всегда.</li>\n<li>(паскаль) Мы не делаем <code>clrsrc;</code> в начале программы — это не требуется. И пользователь, и тестирующая система способны отличить вывод этой программы от того, что было выведено на экран раньше.</li>\n<li>Аналогично, мы не ставим в конце программы пустой <code>readln;</code> или <code>readkey;</code>, или <code>input()</code> в питоне, или <code>getch();</code> в c++ или другую задержку работы. Это тоже не требуется; информация, выведенная на экран, все равно сохраняется и ее все равно можно посмотреть.</li>\n<li>Мы посчитали и сразу вывели ответ, не сохраняя его в промежуточную переменную. Можно было сохранить:\n<pre>// паскаль\nans:=k div n;\nwriteln(ans);\n// питон\nans = k / n\nprint(ans)\n</pre>\nВ этой простой программе проще вывести сразу, но если выражение будет сложнее, то можно и сохранить.</li>\n</ul>\n<p>Сохраните эту программу в какой-нибудь файл. Запомните как имя файла, так и ту директорию (папку), куда вы сохранили файл (в free pascal она отображается в нижней части диалога сохранения файла).</p>\n\n<p>Теперь протестируйте программу. Запустите ее и повводите разные тесты.</p>\n\n<p>Введите для начала тест из примера: "3 14" и убедитесь, что она вывела 4.</p>\n\n<p>В этой задаче на каждый тест ответ однозначно определен (например, на пример из условия ответ может быть только 4). Бывают задачи, когда на каждый тест может быть несколько правильных вариантов ответа, в таких задачах в условии обычно написано "если есть несколько решений, выведите любое" или присутствует какая-нибудь подобная фраза. В таком случае ваша программа не обязана выдавать ответ, точно совпадающий с тем, что указан в примере — достаточно, чтобы он был одним из правильных. Аналогично, в дальнейшем, при тестировании вашей программы на сайте (см. ниже) по каждому тесту будет допускаться любой из правильный ответов.</p>\n\n<p>Придумайте еще несколько примеров к этой задаче. Постарайтесь, чтобы они были разнообразными: чтобы были разные N, K, и разные ответы. Например, введите "5 25" и проверьте, что ответ 5. Придумайте сами еще несколько примеров. Важно: прежде чем вводить каждый пример в программу, сначала в уме вычислите ответ, и только потом запустите программу и проверьте, что она вывела именно то, что вы и ожидали. Старайтесь всегда знать ответ на свой пример ДО запуска программы.</p>\n\n<p>Если программа написана правильно, то она правильно отработает на ваших тестах. Тогда ее можно сдавать на проверку на сайт (говорят "сдать/послать на проверку в тестирующую систему" или просто "сдать в систему").</p>\n\n<h3>Отправка на проверку</h3>\n<p>Вернитесь на страницу с условием задачи. Ниже условия есть раздел "Отправить решение" (он есть только если вы зарегистрированы на сайте и залогинены). Нажмите кнопку "Выбор файла" и выберите файл с вашим решением. Убедитесь, что вы выбираете файл .pas/.py (с исходным кодом), а не .o или .exe (уже скомпилированную программу)! Убедитесь, что в выпадающем списке рядом выбран правильный язык (в частности, если вы пишете на PascalABC, то надо его выбрать вручную), и нажмите кнопку "Отправить".</p>\n\n<p>Ваша программа отсылается на сервер, который ее компилирует и проверяет путем запуска на нескольких тестовых примерах. Эти тестовые примеры вам неизвестны, но в каждой конкретной задаче всегда одинаковы (т.е. если вы будете посылать несколько раз, то каждый раз тестовые примеры будут одни и те же). В данном случае тестирующая система запустит вашу программу несколько раз, каждый раз сымитирует ввод с клавиатуры значений N и K из очередного тестового примера, и проверит, что ваша программа выводит правильный ответ.</p>\n\n<p>Под формой для отправки находится таблица, перечисляющая все ваши попытки (также говорят "посылки") по этой задаче. Изначально там, конечно, никакой таблицу нет. После того, как вы отправили ваше решение, оно появится в этой таблице (через некоторое время — примерно через минуту). В колонке "Статус" отображается результат тестирования вашей программы. Сразу после того, как вы отправили программу, вы можете увидеть там "Компилирование" или "Тестирование", что обозначает, что ваша задача тестируется. Таблица обновляется автоматически, дождитесь, пока в колонке "Статус" не появится окончательный результат проверки.</p>\n\n<p>Основные результаты проверки, которые вы можете увидеть:\n</p><ul>\n<li>OK — ваша программа правильно прошла все тесты, ура!</li>\n<li>Ошибка компиляции — ваша программа не скомпилировалась</li>\n<li>Частичное решение — ваша программа прошла не все тесты (может быть, даже не прошла ни одного). Значит, ваша программа работает не совсем верно (или совсем неверно), постарайтесь найти ошибки.</li>\n<li>Бывают еще статусы "Зачтено" и "Проигнорировано", но они не ставятся автоматически, поэтому про них ниже.</li>\n</ul>\n\n<p>Справа в таблице есть колонка ссылок "Подробнее". Если вы нажмете на такую ссылку, то откроется окошко с подробной информацией о посылке. Во-первых, там будет полный код вашей программы, поэтому вы всегда сможете проверить, отправили ли вы именно то, что хотели; если вы решали задачи из школы, то придя домой, вы сможете посмотреть коды всех ваших программ, и т.д.</p>\n\n<p>Во-вторых, в открывшемся окне есть закладка "Протокол", где отображается протокол тестирования вашей программы. Если ваша программа не скомпилировалась (статус "Ошибка компиляции"), то там будет протокол компиляции: будут указаны ошибки, найденные в программе. Если же ваша программа скомпилировалась, то там будет протокол тестирования: по каждому тесту будет приведена информация о том, прошел этот тест (OK) или нет. В задаче "Дележ яблок - 1" всего 6 тестов, поэтому в таблице должно быть 6 строк. Если ваша посылка получила статус "ОК", то все 6 строк будут ОК; иначе какие-то тесты будут иметь другой статус (из названия статуса обычно понятно, что это значит).</p>\n\n<p>Таким образом, вы можете видеть, какие (по номерам) тесты у вас пройдены, а какие нет. Но вы не можете узнать, какой именно это тест (в нашей задаче — какие именно там N и K). Это сделано для того, чтобы вы учились сами тестировать свое решение и сами находить примеры, на которых оно не работает, а не рассматривали тестирующую систему как волшебный ящик, выдающий вам примеры, на которых ваша программа не работает. Поэтому если ваша программа не работает, то ищите сами примеры, на которых она ошибается. Если вы не можете их найти, то напишите мне, попробуем разобраться вместе. В крайнем случае у меня есть доступ ко всем тестовым данным, поэтому если я не смогу найти ошибку просто посмотрев код вашей программы, я смогу посмотреть, что там за тест, на котором ваша программа не работает.</p>\n\n<p>Но вообще, старайтесь проверять задачу до того, как ее отправлять в систему (и этому мы будем отдельно учиться). Рассматривайте неудачные попытки как конкретную неудачу, и старайтесь делать как можно меньше неудачных попыток. Вообще, на многих олимпиадах у вас будет только одна возможность сдать задачу, и если она не пройдет какие-то тесты, то возможности исправиться у вас уже не будет!</p>\n\n<h3>Засчитывание и игнорирование решений, комментарии к решению</h3>\n<p>Я буду просматривать все ваши решения: при наличии времени — все вообще посылки, в том числе и неуспешные, если же у меня времени будет мало, а посылок много — то только посылки со статусом ОК.</p>\n\n<p>В успешных посылках я буду просматривать ваш код на предмет следующего:\n</p><ul>\n<li>Во-первых, я буду смотреть, нет ли в коде каких-то ошибок, которые смогли миновать тесты тестирующей системы. Бывает так, что в коде какая-нибудь совсем неожиданная ошибка, и тестирующая система ее может пропустить (хотя тесты в тестирующей системе обычно подготовлены хорошо, и как правило все ошибки в коде проявляются при тестировании) — я буду смотреть, нет ли у вас таких ошибок.</li>\n<li>Также я буду смотреть, нет ли у меня каких-либо замечаний по коду, пусть и не являющихся ошибками, но являющихся общими пожеланиями. Например, может быть, что-то можно сделать проще, или что-то надо сделать по-другому, и т.д.</li>\n</ul>\n<p>Если к вашей программе у меня будут какие-либо замечания или комментарии, я их напишу, и вы сможете их увидеть. Во-первых, они появятся на сайте в правой колонке в разделе "Комментарии"; во-вторых, в каждой посылке, в окошке, открываемом по ссылке "подробнее", есть специальная закладка "комментарии". Соответственно, как только я прокомментирую вашу посылку, вы увидите комментарий. Обычно я стараюсь просматривать все посылки в течение суток, хотя иногда бывают и бОльшие задержки, до нескольких дней.</p>\n\n<p>Помимо собственно написания комментария, я по каждой вашей посылке принимаю решение — либо я принимаю это решение (пусть и с небольшими замечаниями), либо я потребую от вас это решение переписать с учетом моих замечаний. В первом случае я меняю статус посылки на "Зачтено" (т.е. вы будете видеть именно "Зачтено" вместо "ОК" в таблице с вашими посылками), во втором случае я меняю статус на "Проигнорировано". Соответственно, в первом случае просто примите к сведению замечания, которые я написал (а бывает так, что я и никаких замечаний не пишу), хотя можете и переписать решение, если хотите. Во втором случае обязательно перепишите решение с учетом этих замечаний.</p>\n\n<p>В сводной таблице решения "ОК" (т.е. которые я еще не посмотрел) отображаются с желтым фоном, решения "Зачтено" (т.е. которые я принял) — с зеленым фоном, проигнорированные решения не учитываются в общем количестве решенных вами задач, просто соответствующая задача в сводной таблице отображаются с красным фоном.</p>\n\n<p>Я буду стараться также писать комментарии по вашим неуспешным посылкам — указывать на ошибку или советовать, где ее поискать, и т.п. Я, конечно, не всегда буду писать их сразу как увижу вашу попытку, и не всегда буду полностью сообщать о найденной ошибке — ведь обычно вам полезно будет все-таки найти ошибку более-менее самостоятельно, я постараюсь вам давать наводящие советы (но, конечно, это зависит от ошибки). В общем, если вы пытались сделать задачу, но она не проходит тесты, то возможно в течение суток я вам напишу совет в комментарии к вашей посылке.</p>\n\n<p>Иногда я могу не успевать просмотреть все ваши неуспешные посылки, или не пишу комментарий по каким-то еще причинам. В таком случае, если вы хотите получить комментарий по какой-нибудь из них, просто напишите мне.</p>\n\n<h3>Хорошие решения</h3>\n<p>После того, как я засчитываю вам решение (ставлю статус "Зачтено"), у вас появляется доступ к "хорошим решения" по соответствующей задаче — на странице задачи, над формой для отправки решения, появляется ссылка на "хорошие решения".</p>\n\n<p>"Хорошие решения" — это несколько (до 5 штук) решений, которые сдавали другие ученики курса, и которые, на мой взгляд, написаны достаточно хорошо и могут считаться образцом решения этой задачи. Смотрите их, особенно по тем задачам, где я вам зачел решение с какими-либо комментариями (но вообще полезно смотреть "хорошие решения" и по всем зачтенным задачам вообще). Сравните "хорошие решения" с вашим решением, возможно, вы увидите, что что-то можно сделать проще, или вообще найдете другие полезные идеи.</p>\n\n<p>Я стараюсь в "хороших решениях" по возможности поддерживать баланс разных языков (т.е. как правило среди "хороших решений" есть решения на разных языках). Но смотрите и решения на вашем языке, и на других языках, даже которых вы не знаете — как правило, понять алгоритм можно даже на языках, которых вы вообще не знаете. С другой стороны, для вашего языка в "хороших решениях" вы можете найти и какие-нибудь интересные чисто языковые тонкости и приёмы.</p>\n\n<p>Кроме того, нередко в "хороших решениях" я показываю разные подходы к решению задачи, нередко там встречаются вообще разные алгоритмы. Если вы видите, что "хорошее решение" сильно отличается от вашего, полезно разобраться, как оно вообще работает.</p>\n\n<p>При этом понимайте, что на самом деле по многим задачам на сайте сданы уже сотни решений, и на самом деле "хороших" из них десятки, если не больше. Вы видите максимум пять из них, просто потому, что смотреть десятки более-менее одинаковых решений смысла нет. Вы увидите какие-то пять из них, которым повезло, что я их отметил как "хорошие", но это "везение" часто определяется случайностью, ну и указанными выше принципами про разнообразие языков и подходов. То есть вы видите не пять самых лучших решений, а пять случайных из числа достаточно хороших.</p>\n\n<p>Поэтому не надо считать, что если ваше личное решение не попало в "хорошие", то оно хуже "хороших". Оно может быть столь же хорошо, или даже чем-то лучше "хороших", просто ему не повезло. Если вы видите, что "хорошие" решения написаны столь же чисто и понятно, как ваше — значит, ваше тоже могло бы быть "хорошим". И наоборот, если ваше решение попало в "хорошие", это не обозначает, что оно намного лучше всех остальных :) По той же причине авторы "хороших решений" не подписаны.</p>\n\n<p>С другой стороны, если вы посмотрели "хорошие решения", и считаете, что ваше решение заметно лучше всех "хороших", напишите мне, может быть, я и ваше решение добавлю в "хорошие". (Хотя обычно я назначаю решение "хорошим" одновременно с тем, как я его засчитываю, поэтому если ваше решение действительно заметно лучше других хороших, как правило, я его сделаю "хорошим" еще до того, как вы сможете посмотреть "хорошие решения" :) .)</p>\n\n<h3>Сводная таблица</h3>\n<p>Все ваши посылки по нашим задачам отображаются в сводных таблицах, ссылки на которые есть в меню сайта. А именно, каждая клетка в основной части этой таблицы указывает статистику посылок от конкретного школьника по конкретной задаче. Если в клетке стоит знак "+", значит, задача сдана успешно ("ОК" или "Зачтено"), если "-" — значит, человек пытался сдавать задачу, но прошел не все тесты. Число после значка (если оно есть) указывает количество неуспешных попыток (если они есть). Например:\n</p><ul>\n<li>Пустая клетка обозначает, что задача не сдавалась вообще;</li>\n<li>"+" обозначает, что задача сдана с первой попытки;</li>\n<li>обозначения "-" не бывает;</li>\n<li>"+2" обозначает, что задача сдана с третьей попытки (две неуспешные попытки и потом успешная);</li>\n<li>"-2" обозначает, что по задаче были только две неуспешные попытки и всё.</li>\n</ul><p></p>\n\n<p>Фон ячейки обозначает статус задачи относительно вердиктов "Зачтено" и "Проигнорировано":\n</p><ul>\n<li>Желтый фон — статус "ОК", т.е. я еще не смотрел эту задачу;</li>\n<li>Зеленый фон — статус "Зачтено";</li>\n<li>Красный фон — статус "Проигнорировано", при этом сама проигнорированная попытка считается неуспешной.</li>\n</ul><p></p>\n\n<p>В последних двух колонках таблицы указывается общее количество решенных задач и общее количество неуспешных ("штрафных") попыток (учитываются только те задачи, по которым в итоге была получена правильная программа, проигнорированные попытки не учитываются). Таблица отсортирована по общему количеству решенных задач, а при равном числе решенных задач — по количеству штрафных попыток.</p>\n\n<p>Еще у таблицы есть следующая особенность: в ней появляются только школьники, которые удовлетворяют сразу двум требованиям: во-первых, я их должен активировать их учетную запись, во-вторых, у школьника должна быть хотя бы одна попытка сдачи задачи. Поэтому если вы еще ничего не пытались сдавать, не удивляйтесь, что вас нет в таблице. Если же вы уже пытались что-то сдавать, а в таблице вас нет, то напишите мне — возможно, я забыл вас активировать.</p>\n\n<p>Аналогично, наборы задач (контесты) появляются в сводной таблице только когда хотя бы кто-нибудь отправит какое-нибудь решение по какой-нибудь задаче этого контеста.</p>\n\n<h3>Терминология</h3>\nВыше я уже ввел некоторую специфическую терминологию, которая используется в олимпиадном программировании, на всякий случай повторю ее тут:\n<ul>\n<li>Контест — любой набор задач, каким-то образом сгруппированный и выделенный от остальных. В пределах контеста задачи обычно занумерованы (1, 2, 3, ... или A, B, C, ... и т.п.) Это может быть отдельный тур олимпиады, или набор задач к какому-нибудь занятию или на какую-нибудь тему, и т.д. В рамках наших занятий "контестом" мы называем набор задач, доступных по каждой отдельной ссылке с главной страницы курса; слева от таких ссылок обычно значок, похожий на изображение клавиатуры. Например, "Задачи на арифметические операции" — это отдельный контест.</li>\n<li>Посылка (синонимы: попытка, сабмит) — отдельная ваша попытка сдать задачу в тестирующую систему; также программа, которую вы сдали в этой попытке.</li>\n<li>Штрафная попытка (обычно в контексте сводного рейтинга) — попытка, которая не прошла все тесты.</li>\n<li>Тест — это отдельный тестовый пример, подготовленный авторами задачи, чтобы на нем проверять ваши программы. Обычно по каждой задаче автор задачи подготавливает от 5 до 60 тестов, и программы, которые вы сдаете на проверку, проверяются по очереди на всех этих тестах. Чтобы попытка считалась успешной, надо, чтобы программа прошла все тесты, т.е. на все тесты дала правильный ответ. (На других олимпиадах могут быть другие правила.)</li>\n</ul></div>', 'title': '\nРабота с сайтом, отправка решений и просмотр моих комментариев', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_12', 'order': 12, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_13', 'order': 13, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><p>Я буду просматривать, по возможности, все ваши решения, и комментировать их тем или иным образом. Тем решениям, которые я просмотрю, я буду присваивать новый статус: \n</p><ul>\n<li>"Зачтено" — задача написана более-менее нормально, ура. На страничке просмотра кода вашей посылки (по ссылке "Подробнее") под кодом вы можете увидеть мои комментарии. Если там комментария нет, значит, задача решена весьма хорошо. Если есть комментарий, то он обычно указывает, что можно улучшить.</li>\n<li>"Проигнорировано" — мне что-то весьма не понравилось в вашем коде. На страничке просмотра кода вашей посылки (по ссылке "Подробнее") под кодом вы увидите мои комментарии, объясняющие, что именно мне не понравилось. Исправьте это и пересдайте решение.</li></ul><p></p>\n\n<p>Если вы не понимаете комментарий, спросите, я объясню подробнее.</p>\n\n<p>Посылки со статусом "Зачтено" отмечаются в таблице зеленым.</p>\n\n<p>Посылки со статусом "Проигнорировано" отмечаются в таблице синим.</p>\n\n<p>Не относитесь к "игнорам" как к издевательству над вами. Я постараюсь игнорить только те программы, которые можно довольно существенно улучшить (например, существенно сократив количество кода). Помните, что ваша цель — не только написать программу, которая пройдет все тесты, но и вообще научиться программировать. Фактически, "Проигнорировано" я ставлю тогда, когда считаю, что комментарий, который я пишу к вашей посылке, настолько важен, что вам обязательно его стоит прочитать; "игнор" — это такой способ обратить ваше внимание на комментарий.</p>\n\n<p>То, что вы сумели, пусть и не самым оптимальным образом, написать программу и сдать ее — это очень круто, но еще круче будет, если вы узнаете и поймете, как то же самое можно сделать еще проще. Считайте, что в большинстве задач написать программу, чтобы она прошла все тесты — это, грубо говоря, 70% успеха, но получить по ней "Зачтено" — это оставшиеся 30%.</p>\n\n<p>Все комментарии (в том числе и к зачтенным посылкам, и даже к неуспешным) вы также можете просмотреть в правой колонка не сайте.</p></div>', 'title': '\nПро засчитывание и игнорирование решений', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_14', 'order': 14, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_15', 'order': 15, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>О системе уровней</h1>\n<p>Весь материал в нашем курсе распределен по уровням, от самого простого до очень сложного. Уровни нумеруются последовательными числами (1, 2, 3, ...), в пределах уровня также введены подуровни, нумеруемые буквами (в уровне 1 — подуровни 1А, 1Б, 1В и 1Г, и т.п.)</p>\n\n<p>Большинство уровней имееют следующую структуру: подуровни А и Б содержат новый материал, а подуровни В и Г (последний есть не всегда) — дополнительные задачи повышенной сложности на закрепление этого материала. Иногда в уровнях В и Г могут быть особенно сложные задачи на материал существенно более ранних уровней (например, в уровне 5В может оказаться сложная задача на материал уровня 3). Иногда в уровнях В и Г выделены контесты по отдельным темам, иногда дополнительные задачи в этих уровнях идут в случайном порядке.</p>\n\n<p>Я предполагаю, что вы будете проходить подуровни последовательно, переходя к новому подуровню как правило тогда, когда вы "прошли" предыдущий подуровень. Исключение: если вы прошли какую-то тему в подуровне А или Б, и видите в подуровне В или Г контест продвинутых задач на эту же тему, то можете его порешать.</p>\n\n<p>Требования к "прохождению" каждого подуровня указаны под его заголовком. Как правило, для подуровней А и Б требуется прорешать все задачи, для уровней В и Г требуется прорешать часть (половину или треть) задач. Тем не менее это не обозначает, что оставшиеся задачи уровней В и Г решать не надо. Я рекомендую, если вы прорешали необходимый минимум задач уровней В и Г, переходить на следующий уровень, чтобы побыстрее приступить к изучению новой теории. Но при этом возвращайтесь регулярно к недорешенным задачам предыдущих уровней. Примерно можно оценивать так: когда вы переходите на уровень 4А, у вас должна быть решена половина задач уровня 3В, 3/4 задач уровня 2В и примерно 7/8 задач уровней 1В и 1Г. Аналогично, когда вы переходите на уровень 5А, у вас должна быть решена половина задач уровня 4В, а также 3/4 задач уровня 3В, 7/8 задач уровня 2В и почти все (за редким исключением особенно неприятных задач) задачи уровней 1В и 1Г. Аналогично для других уровней.</p>\n\n<p>Обратите внимание, что в уровнях В и Г задачи далеко не всегда упорядочены по сложности. Поэтому решайте их в том порядке, в каком вам удобнее!</p>\n\n</div>', 'title': '\nПро систему уровней', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_16', 'order': 16, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_17', 'order': 17, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про очные занятия для школьников</h1>\n<h2>Общая информация</h2>\n\n<p>Для школьников в течение учебного года проходят очные занятия — в лицее 40 по средам и в ННГУ им. Лобачевского по воскресеньям. На занятия в лицее 40 можно ходить только ученикам лицея 40, на занятия в ННГУ можно ходить вообще всем желающим школьникам (школьникам из Нижнего Новгорода и области, в том числе ученикам лицея 40, а также школьникам из других регионов, если вы занимаетесь у меня на курсе и по каким-то причинам оказались в Нижнем).</p>\n\n<p>На очные занятия можно приходить <b>только тем, кто решил хотя бы одну задачу в курсе</b>. Исключение — специальные занятия, про которые на сайте явно написано, что можно приходить новичкам (как правило, это второе занятие каждого семестра). Если вы опоздали на такое занятие, вы должны начать заниматься заочно; после того, как решите хотя бы одну задачу, можете приходить на очные занятия.</p>\n\n<p>В ННГУ занятия проходят <b>по воскресеньям, в 2 корпусе (пр. Гагарина, 23, к. 2), в аудиториях 110 и 114</b>. Я обычно бываю в ННГУ с 14.00 до 17.00. В это время параллельно проходят два занятия: с 14.00 до 17.00 для старших уровней (у кого уровень 3 и выше, также можно по желанию тем, у кого уровень 2В), и с 15.00 до 16.30 для начинающих. При этом начинающие тоже могут приходить раньше и оставаться до 17.00, просто до 15.00 до после 16.30 я буду больше времени уделять старшим.\n\nНа занятия в ННГУ действует обязательная запись, см. ниже. Кроме того, <b>берите с собой паспорт или свидетельство о рождении</b>, его может спросить охрана (хотя вроде никогда не спрашивают, но теоретически могут спросить). Если охранники вас не пускают, звоните мне.</p>\n\n<p>В лицее 40 занятия проходят <b>по средам в КЦ</b>. Я обычно бываю в лицее с 14.30 до 17.00, иногда чуть позже. Аналогично, можно приходить и уходить в любое время, но см. ниже про нехватку компьютеров. Если вы хотите получить зачем за спецкурс, смотрите отдельные <a href="/material/in20946" onclick="window.goto(\'/material/in20946\')();return false;">правила</a>.</p>\n\n<h2>Формат занятий</h2>\n\n<p>Очные занятия у нас проходят полностью в формате практики. У нас нет каких-либо общих лекций, я не рассказываю на занятиях новую теорию «для всех» (за исключением отдельных, специально анонсированных, занятий). Вы приходите, садитесь за компьютер, заходите на алгопрог, и продолжаете заниматься с того места, где остановились в прошлый раз — решаете задачи и/или читаете теорию. Самостоятельно. Я время от времени прохожу по классам, смотрю, кто что решает, могу что-то помогать, советовать, объяснять, но в основном вы занимаетесь самостоятельно.</p>\n\n<p>То есть вы занимаетесь так же, как если бы вы занимались из дома. Единственное отличие очных занятий от занятий из дома состоит в том, что на очных занятиях присутствую я, и вы всегда можете меня спросить о чем-либо, и как правило я достаточно быстро отвечу. (Правда, учтите, что на очных занятиях помимо вас обычно еще присутствует пара десятков школьников, у которых тоже есть свои вопросы :) ).</p>\n\n<p>Если вы на занятии добрались до новой теории — скажите мне. Возможно, я вам ее расскажу. Но, возможно, я отправлю вас читать теорию на сайте.</p>\n\n<p>В частности, поэтому расписание занятий у нас нестрогое. Вы можете опоздать на занятие, можете уйти раньше, можете пропустить часть занятий, можете, наоборот, ходить на два занятия — всё на ваше усмотрение. Конечно, чем больше вы занимаетесь, тем лучше у вас, наверное, будут результаты, но я не требую какого-то строгого посещения занятий.</p>\n\n<p><b>Занятия в ННГУ для старших уровней</b> немного отличаются по формату: мы решаем разные старые контесты, а потом обсуждаем задачи.</p>\n\n<h2>Про регистрацию на занятия и компьютеры</h2>\n\n<p>Как правило, особенно в первой половине учебного года, и особенно в ННГУ, на занятия приходят больше школьников, чем есть компьютеров. Поэтому на занятия в ННГУ надо регистрироваться, чтобы всем точно хватило компьютеров. На сайте есть <a href="/checkins">специальный раздел</a>, где надо регистрироваться на очередное занятие, там же есть подробные правила. Регистрироваться надо каждую неделю заново.</p>\n\n<p>На занятия в лицей 40 регистрации нет. Занятие в лицее 40 официально начинается в 14.30; как правило, к этому моменту свободные компьютеры еще есть. Если вы опоздали, не обижайтесь, если вам не хватило компьютеров. С другой стороны, как правило, уже в районе 15.30 компьютеры начинают освобождаться (далеко не все школьники сидят до конца занятия), поэтому если вам не хватило компьютера, можете просто подождать (например, поделав домашние задания по другим предметам).</p>\n\n<p>Универсальный способ избежать пробему нехватки компьютеров — приносить свой ноутбук. Но <a href="/material/module-16024_1" onclick="window.goto(\'/material/module-16024_1\')();return false;">см. отдельные правила про это</a>.</p></div>', 'title': '\nПро очные занятия для школьников', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_18', 'order': 18, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>Про оплату</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'pay', 'order': 19, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix">\n<h1>Стоимость и порядок оплаты занятий</h1>\n\n<h2>Для школьников из Нижегородской области</h2>\n<p>Для нижегородских школьников <b>занятия бесплатны</b>, и в обозримом будущем останутся бесплатными (т.к. мне проведение занятий оплачивает лицей 40 и ННГУ).</p>\n\n<p>Формально вы считаетесь нижегородским школьников, если учитесь в школе, находящейся в Нижегородской области, и имеете теоретическую возможность, пройдя школьный и муниципальный этапы, участвовать в Нижегородской областной олимпиаде школьников по информатике.</p>\n\n<p>Если у меня возникнут подозрения, являетесь ли вы нижегородским школьников или нет, я могу попросить вас как-то это подтвердить.</p>\n\n<p>Прочитайте, пожалуйста, отдельный текст <a href="/material/module-20927_21" onclick="window.goto(\'/material/module-20927_21\')();return false;">про бесплатность занятий для нижегородских школьников</a>.</p>\n\n<p>Вы также можете поддержать занятия, переведя мне любую сумму денег на карту Тинькофф-банка номер 5536 9137 7443 1460. Например, для перевода вы можете воспользоваться <a href="https://www.tinkoff.ru/cardtocard/">сервисом перевода с карты на карту Тинькофф-банка</a>, там по идее должно быть без комиссии, или любым другим сервисом по переводу денег с карты на карту.</p>\n\n<p><b>При этом, пожалуйста, никак не указывайте, кто именно переводит деньги, и не сообщайте мне, что вы их перевели — я не хочу знать, кто из школьников мне переводит деньги, а кто нет.</b></p>\n\n<h2>Для всех остальных</h2>\n\n<p>Занятия для всех остальных (не-нижегородских школьников, а также не-школьников) платные. Точнее, собственно все материалы в курсе бесплатные. Они же есть на сайте informatics.mccme.ru в <a href="http://informatics.mccme.ru/course/view.php?id=1135">соответствующем разделе</a>, вы можете бесплатно заниматься там. Я беру деньги за то, что я добавлю вас в сводные таблицы, буду просматривать и комментировать ваши решения, отвечать на ваши вопросы (заочно) и т.д.</p>\n\n<p>Стоимость занятий определяется следующим образом:</p>\n\n<table class="table table-striped table-condensed table-hover">\n<tbody><tr><td>Младше 9 класса</td><td>500 рублей в месяц</td></tr>\n<tr><td>9 класс</td><td>1000 рублей в месяц</td></tr>\n<tr><td>10 класс</td><td>1500 рублей в месяц</td></tr>\n<tr><td>11 класс</td><td>1500 рублей в месяц</td></tr>\n<tr><td>Не школьники (студенты и старше)</td><td>1500 рублей в месяц</td></tr>\n</tbody></table>\n\n<p>Для новых учащихся первая неделя занятий в курсе бесплатна.</p>\n\n<h3>Дополнительные правила</h3>\n<p>Стоимость занятий для школьников фиксируется на тот момент, когда я активировал вам аккаунт в конкретном учебном году, и до конца учебного года; если в дальнейшем я буду поднимать стоимость занятий, то вы продолжите заниматься по старой цене (до конца учебного года, а если будете заниматься успешно, то и на следующий год и т.д.).</p>\n\n<p>Для студентов стоимость занятий фиксируется на момент первой оплаты и пожизненно.</p>\n\n<p>Для нижегородских школьников, занимавшихся в моем курсе более-менее успешно (условно говоря, набравших рейтинг 200 или выше, но может обсуждаться индивидуально), действует пожизненная скидка 50% на занятия после того, как они закончат школу.</p>\n\n<p>Границей учебного года (для определения "успешно занимающихся школьников", а также для "перевода" в следующий класс или в статус студентов) считается 1 июля.</p>\n\n<h3>Подтверждение</h3>\n\n<p>Если вы — не-нижегородский школьник младше 11 класса (т.е. стоимость занятий для вас ниже, чем для студентов), то вам надо подвердить это. Проще всего — прислать мне ссылку на какую-нибудь официальную страничку в интернете, где указаны ваши имя, фамилия, класс и школа. Например, это могут быть результаты какой-нибудь олимпиады, конкурса или т.п.; это может быть какая-нибудь новость на сайте вашей школы и т.д. Возможно, я еще попрошу ссылку на ваш профиль в социальных сетях. Альтернативный вариант для российских школьников — вы можете взять в школе справку о том, что вы учитесь, написать на ней ваш логин на алгопроге и прислать мне фотографию. Возможны и другие варианты подтверждения — напишите мне, как вы можете подтвердить ваш класс.</p>\n\n<p>Если вы не можете подтвердить свое право на сниженную стоимость занятий, вы можете заниматься по студенческой стоимости.</p>\n\n<h3>Скидки для успешных школьников</h3>\n\n<p>Для школьников существует дополнительная акция: если вы успешно занимались в курсе, и остаетесь школьником на следующий год, то на следующий год для вас сохраняется та же стоимость обучения, которая была и в этом году. Школьник считается успешно занимавшимся, если за год он решил минимум 70 задач, не считая задач уровней 1А и 1Б.</p>\n\n<p>Например, если 8-классник успешно занимался в курсе в течение года, то когда он перейдет в 9 класс, он продолжит заниматься по той же цене. Если он и в 9 классе будет успешно заниматься, то и в 10 классе он будет заниматься по той же цене, и т.д. Если, к примеру, в 10 классе он не будет успешно заниматься, то в 11 классе стоимость занятий для него сбросится на ту стоимость, которая будет установлена для 11 классов в соответствующем году.</p>\n\n<h2>Оплата</h2>\n<p>\nОплатить занятия можно картой <a href="/payment" onclick="window.goto(\'/payment\')();return false;">на сайте</a>.</p>\n\n<h2>Возможен ли возврат денег?</h2>\n<p>Стоимость не зависит от того, насколько вы активны в курсе (если вы решаете много, то я буду на вас тратить больше времени, чем если вы решаете мало, а вы платите одну и ту же сумму). Поэтому довольно странно возвращать деньги, если вы не делали ничего. Поэтому политика такая:</p>\n<ul>\n<li>Если вы по объективным непредвиденным причинам не могли заниматься в курсе более 5 дней подряд (сломали руку и т.п.), то я вам верну деньги за весь период, когда вы не могли заниматься. Предсказуемые вещи типа поездок, сессии и т.п. сюда не считаются.</li>\n<li>Если вы по каким бы то ни было причинам не занимались более 10 дней подряд, то я вам верну половину денег за этот период.</li>\n<li>Если вы заранее предупреждаете меня о том, что не сможете заниматься более 10 дней подряд, то я могу вернуть вам деньги за этот период.</li>\n<li>Конечно, если я по каким-то причинам не мог проверять ваши решения и отвечать на ваши письма в течение более чем 5 дней подряд, то я вам верну деньги за весь этот период.</li>\n</ul>\n</div>', 'title': 'Стоимость и порядок оплаты занятий', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_20', 'order': 20, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div><a href="/payment" onclick="window.goto(\'/payment\')();return false;">Оплатить занятия</a></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_21', 'order': 21, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h3>Занятия и правда бесплатные?</h3>\n<p>Да, занятия для школьников из Нижегородской области бесплатные. (Для студентов и всех остальных занятия платные, можете не читать этот текст.) </p>\n\n<h3>Но есть какие-то требования или условия?</h3>\n<p>Я, естественно, хочу от вас чего-то попросить за то, что я с вами занимаюсь. А именно, если эти занятия вам действительно полезны, и вы собираетесь применять полученные знания на какой-нибудь олимпиаде, конкурсе или подобном мероприятии, то я прошу вас указывать меня как вашего учителя, или преподавателя кружка и т.п. Особенно это касается, конечно, ситуации, если вы будете участвовать в олимпиадах высокого уровня (ну, начиная с городской/областной).</p>\n\n<h3>Но ведь я занимаюсь и где-то еще...</h3>\n<p>Конечно. Я поэтому прошу вас сначала понять, насколько этот курс вам полезен по сравнению с другими занятиями. Если подавляющую часть своих знаний вы получили где-то еще (на уроках в школе, на другом кружке или спецкурсе, от родителей и т.п.), и ваш результат на олимпиаде будет в первую очередь результатом других занятий — то, конечно, меня не надо указывать. Если вы получали важные знания как здесь, так и на других занятиях — значит, укажите и меня, и другого преподавателя. На многих олимпиадах можно указать нескольких преподавателей, или можно отдельно указать школьного учителя и преподавателя кружка, и т.п. Если же вы все знания получили только здесь, а другие занятия вам практически не помогли — я буду благодарен, если вы укажете только меня.</p>\n\n<h3>Но школа будет против указывать кого-то постороннего...</h3>\n<p>Попробуйте объяснить вашему учителю или завучу ситуацию. Объясните, что ваши результаты будут во многом определяться именно тем, что вы занимались на этом курсе (а если это не так, и вам эти занятия не помогли, — то, см. предыдущий вопрос, и не надо меня указывать); что если бы вы здесь не занимались, то ваш результат был бы хуже. Может быть, попросите ваших родителей помочь объяснить. В крайнем случае напишите мне, я могу связаться с некоторыми школами города. Или дайте учителю или завучу мой телефон, пусть позвонят.</p>\n\n<h3>Но заявку подает школа, я не могу на нее повлиять...</h3>\n<p>На многих олимпиадах на регистрации перед началом олимпиады вы можете проверить, кто у вас указан как учитель, и исправить. Кроме того, если вы прошли на олимпиаду сравнительно высокого уровня, то можете заранее подойти к вашему учителю или завучу и попросить указать меня в заявке на следующую олимпиаду.</p>\n\n<h3>А как вас указывать?</h3>\nВ большинстве случаев достаточно указать фамилию, имя и отчество — Калинин Петр Андреевич. Если это какой-то очень официальный текст (титульный лист какого-нибудь доклада и т.п.), то можете добавить «к.ф.-м.н.» (что значит кандидат физико-математических наук), но лучше сначала уточните у кого-нибудь или у меня. Если надо указать должность и место работы, пишите «старший разработчик, Яндекс». Если надо указать мой телефон, он есть на главной страничке курса. Если надо что-то еще, то свяжитесь со мной.\n\n<h3>А еще?</h3>\n<p>Вторая вещь, о которой я вас попрошу — если вам эти занятия оказались полезными, и у вас есть друзья или знакомые, которые являются достаточно умными школьниками, хорошо знают математику, участвуют в олимпиадах, или просто интересуются программированием — расскажите им про эти занятия.</p>\n</div>', 'title': '\nО бесплатности занятий для нижегородских школьников', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_22', 'order': 22, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>И еще немного...</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_23', 'order': 23, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Для учителей и родителей</h2>\n<p>Я про это уже написал в FAQ, но на всякий случай повторю здесь. Я рассматриваю занятия ваших детей здесь как добровольные, и не собираюсь от них требовать чего-либо, заставлять и т.д. Если школьник не хочет заниматься, или не может себя заставить — я не буду от него ничего требовать. У меня банально нет никакого канала влияния на него.</p>\n\n<p>Но вы можете влиять на школьника, поэтому, если вы хотите, чтобы от занятий был какой-то результат, то следите за тем, как ваш школьник занимается. На главной странице курса есть "сводная таблица", там можно отслеживать прогресс каждого школьника. Школьник также может показать вам, какие задачи он пытался сдавать, каков был результат проверки и т.д. На главной страничке курса есть также "Таблица по неделям кто что решал", в ней указывается, кто достиг какого уровня, а также по неделям кто сколько задач решил. Цвет ячейки в "таблице уровней" обозначает, насколько хороший результат показал школьник на очередной неделе: ярко-зеленый — очень хорошо, светло-зеленый — средненько, белый — вообще ничего даже не пытался. (Таблица обновляется вручную.) Наконец, вы всегда можете связаться со мной.</p>\n\n<p>Отдельное обращение к учителям: часто бывает так, что сильным школьникам на школьных уроках информатики просто скучно. Если ваш школьник занимается по этому курсу, разрешите ему во время урока решать задачи, читать теорию этого курса! И, конечно, если у вас есть сильные ученики — расскажите им об этом курсе!</p>\n\n<p>И еще одно замечание. Пожалуйста, прочитайте раздел <a href="/material/module-20927_21" onclick="window.goto(\'/material/module-20927_21\')();return false;">"О бесплатности занятий"</a>. А именно, если ваши школьники благодаря моим занятиям будут достигать хороших результатов, то постарайтесь сделать так, чтобы я был указан их учителем/преподавателем на тех олимпиадах и подобных мероприятиях, где они будут применять полученные здесь знания.</p></div>', 'title': 'Для учителей и родителей', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_24', 'order': 24, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_25', 'order': 25, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Про самостоятельность</h2>\n\n<p>Отдельно хочу вас написать про вашу самостоятельность. Я ожидаю, что при работе в курсе (независимо от того, работаете вы в заочном курсе, на занятиях в ННГУ или в лицее 40) вы будете проявлять способность к достаточно самостоятельной работе. В заочном курсе самостоятельность подразумевается сама собой, но и в при очных занятиях я хочу, чтобы вы не просто тупо писали то, что я вам рассказал, но и могли думать сами.</p>\n\n<p>Это обозначает, во-первых, не будут сам вас торопить или заставлять решать задачи. Хотите — решайте, не хотите — ну и не решайте, мне же проще — меньше проверять. Я не буду стоять у вас над душой и что-то с вас требовать. (Хотя, если вы учитесь в лицее 40 и хотите получить зачет, то к вам отдельные требования.)</p>\n\n<p>Во-вторых, не ожидайте, что на занятиях или в теоретических материалах на сайте будет отражено <i>абсолютно всё</i>, что может вам потребоваться для решения задач. Вполне возможно, что в каких-нибудь задачах вы обнаружите, что требуется что-то, что мы "не проходили". Не страшно. Вы всегда можете меня спросить, а лучше — сначала исследовать вопрос самостоятельно (в вашей любимой книжке, или в интернете), а если не получится, то спросить меня. Я вас не съем за такие вопросы, наоборот, я буду очень рад, если вы увидите, что в какой-то задаче требуется что-то дополнительное, и сможете четко спросить, что именно вам требуется.</p>\n\n<p>В-третьих, если вы чего-то не поняли на занятии, в моем комментарии к вашему решению, в теоретических материалах или где еще; или если вы не понимаете, почему не работает ваша программа, то просто подойдите ко мне и спросите (или напишите мне). Не ожидайте, что я вам все очень подробно объясню с первого раза или что я вам буду писать сверхподробные комментарии к решениям. Я объясняю и пишу как раз с расчетом что, если вы что-то не поняли, то вы переспросите.</p></div>', 'title': '\nПро самостоятельность', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_26', 'order': 26, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_27', 'order': 27, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Рекомендуемая литература</h2>\n<h3>Для начинающих — для изучения языка</h3>\n<h4>Питон</h4>\n<p>По питону, как ни странно, книжек не очень много, и вот именно учебных, направленных на школьников, я пока не видел (но я еще поищу). Поэтому, если хотите, можете купить какую-нибудь книжку, которая вам понравится.</p>\n\n<p>Но зато по питону есть очень много ресурсов в интернете; если вы будете задавать поиск по конкретным вопросам, то для питона вы получите адекватный ответ намного более вероятно, чем для паскаля. Поэтому я далеко не уверен, что вам надо покупать бумажную книжку по питону, лучше используйте интернет.</p>\n\n<p>В частности, очень рекомендую вам сайт <a href="http://pythontutor.ru/">http://pythontutor.ru/</a>. Там достаточно адекватная теория, и очень удобный визуальный отладчик питона.</p>\n<h4>Паскаль</h4>\n<p>Здесь приведен список книг, которые можно использовать для изучения языка программирования Pascal. При этом имейте в виду, что большинство из них описывает среду Turbo Pascal (или Borland Pascal, что то же самое); она является весьма устаревшей и в некоторых деталях отличается от среды Free Pascal, которую мы изучаем. Кроме того, во многих книжках есть разного рода устаревшие подходы к написанию программ. </p>\n<p>Большинство из этих книг можно скачать из интернета, или купить; в частности, ряд книг я видел недавно в магазине Дирижабль на Б. Покровской.</p>\n<p>В принципе, можно учиться и по другим книгам, не указанным здесь. Главное — чтобы это был именно учебник по основам языка программирования Pascal (Delphi скорее всего не подойдет). Прежде чем выбирать книгу, посмотрите, как в ней излагается простейший материал. Мне не понравились книги, которые сначала определяют "алфавит языка" и прочие заумные понятия, и только потом приступают к изучению языка; я считаю, что лучше начать изучение языка на простых примерах и только потом переходить к общим вещам. Если найдете книгу, которая вам понравится, скажите мне, чтобы я ее добавил сюда.</p>\n<p>При этом я не читал подробно ни одну из этих книг, я только поверхностно их просмотрел. Поэтому если у вас будут какие-либо комментарии по ним, то тоже скажите мне.</p>\n<ul>\n<li><b>Ушаков Д. М., Юркова Т. А. Паскаль для школьников</b> — мне очень понравилась; эта книга, пожалуй, ближе всего к тому, как я хочу строить обучение языку.</li>\n<li><b>Деревенец О. В. Песни о Паскале </b> (свободна распространяема с сайта <a href="http://oleg-derevenets.narod.ru/">http://oleg-derevenets.narod.ru/</a>) — очень необычный стиль изложения, возможно, понравится школьникам. Очень подробно и хорошо рассказывают про среду Free Pascal. Правда, порядок изучения тем весьма отличается от запланированного мной, но тем не менее, книга весьма неплохая.</li>\n<li><b>Кашаев С. М., Шерстнева Л. В. Паскаль для школьников. Подготовка к ЕГЭ</b> — довольно неплохой подробный учебник.</li>\n<li><b>Андреева Е. В. Программирование — это так просто, программирование — это так сложно</b>. Елена Владимировна Андреева (в отличие от авторов всех остальных учебников) — очень известный в олимпиадной информатике учитель, подготовившая многих сильных олимпиадников, многократный член жюри заключительного этапа Всероссийской олимпиады школьников. Эта книга довольно популярна в обучении олимпиадному программированию, вы можете встретить ссылки на нее во многих разных местах. Тем не менее, книга написана с точки зрения «формального» подхода, когда внимание уделяется в первую очередь полноте и строгости изложения, а не понятности и количеству примеров. Поэтому мне кажется, что она подходит скорее как справочник, или как дополнение к материалу, который я рассказываю на занятиях.\n</li><li><b>Культин Н. Б. Turbo pascal в задачах и примерах</b> — фактически только примеры, без теории.</li>\n<li><b>Павловская Т. А. Паскаль. Программирование на языке высокого уровня. Практикум</b> — не очень много теории, довольно много примеров.</li>\n<li><b>Рапаков Г. Г., Ржеуцкая С. Ю. Turbo Pascal для студентов и школьников</b> — более-менее обычный учебник, ничего особенного, на самом деле мне даже не очень понравился.</li>\n<li><b>Семакин И. Г., Шестаков А. П. Основы программирования</b> — более-менее обычный учебник, ничего особенного, на самом деле мне даже не очень понравился.</li>\n</ul>\n\n<p>Кроме того, следующие книги я видел, но они мне весьма не понравились. Я не рекомендую вам их использовать, хотя, возможно, кому-то они покажутся проще. Если сочтете, что какая-то книга тут находится незаслуженно, тоже напишите мне — на самом деле, я смотрел весьма поверхностно.</p>\n<ul>\n<li><b>Кетков Ю. Л., Кетков А. Ю. Свободное программное обеспечение. FREE PASCAL для студентов и школьников</b></li>\n<li><b>Фаронов В. В. Turbo Pascal 7.0. Учебный курс</b></li>\n</ul>\n\n<p>Наконец, непосредственно на этом сайте есть много теоретического материала — надо зайти на главную страницу сайта и далее следовать по ссылкам на разные темы или на разные курсы. К сожалению, качество материала здесь очень и очень сильно варьируется, от довольно плохого до довольно хорошего.</p>\n\n<h3>Для продолжающих — для изучения алгоритмов</h3>\n<p>К сожалению, нет хороших полноценных учебников по алгоритмам. Те книги, которые я указываю ниже, считаются довольно хорошими книгами, но покрывают материалы нашего курса далеко не полностью и/или зачастую содержат много дополнительной или не всегда нужной информации. Я стараюсь на страничке курса давать ссылки на полезные материалы по разным темам; также я всегда готов вам рассказывать нужные темы на занятиях. Соответственно, я предполагаю, что изучать нужные темы вы будете именно по материалам, на которые есть ссылки со странички курса, и/или по моим рассказам, а литература, указанная ниже — скорее вспомогательные книги.</p>\n\n<ul>\n<li><b>Т. Кормен, Ч. Лейзерсон, Р. Ривест «Алгоритмы. Построение и анализ»</b> (во втором издании к авторам присоединился еще К. Штайн). Самая популярная книга по алгоритмам, книга, которую должен знать каждый уважающий себя крутой программист. Довольно хорошая, но довольно продвинутая (вряд ли ее стоит читать школьникам ниже 3-4 уровня), и местами чересчур теоретизирована (рассчитана скорее на студентов, а не на школьников).</li>\n<li><b>А. Шень. Программирование: теоремы и задачи</b> (свободно доступна с сайта <a href="http://www.mccme.ru/free-books/">http://www.mccme.ru/free-books/</a>). Тоже довольно известная книга, и написанная в расчете на в том числе школьников, хотя на мой взгляд дает местами лишний или чересчур глубокий материала, а часть материала, наоборот, можно было бы изложить более детально. Но все равно весьма рекомендую.</li>\n<li><b>Д. Кнут. Искусство программирования.</b>. (В ранних изданиях русского перевода — Искусство программирования для ЭВМ.) Классическая и очень-очень известная монография, но содержит очень много информации, которую тяжело фильтровать на более и менее важную, очень тяжело читается, и чувствуется, что первое издание было почти 50 лет назад (!) (проблема скорее не в устаревании материала, а в устаревании способа подачи, например, примеры даются на ассемблерно-подобном языке, а не на языке высокого уровня или псевдокоде).</li>\n</ul></div>', 'title': '\nРекомендуемая литература', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_28', 'order': 28, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div><a href="https://docs.google.com/document/d/1YrAWXEK4ak9lE07Sx8C7vLZ0kgJav86IouaNU91GNGM/pub">\nПримерный план уровней</a></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_29', 'order': 29, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Формулы расчета рейтинга и т.д.</h1>\n<p>В сводных таблицах показывается рейтинг, активность, рейтинг на codeforces, взвешенное изменение рейтинга на codeforces и взвешенное количество контестов на codeforces.</p>\n\n<h2>Рейтинг</h2>\n<p>(Кому интересно, конкретный код расчета рейтинга и активности есть <a href="https://github.com/petr-kalinin/algoprog/blob/master/server/calculations/calculateRatingEtc.coffee">вот здесь</a>.)</p>\n\n<p>Рейтинг определяется просто набором решенных задач. А именно, каждая задача стоит некоторое фиксированное количество баллов рейтинга, определяемое уровнем этой задачи.</p>\n\n<p>Задача уровня 1А стоит $2.5$ балла рейтинга. Задача уровня 2А стоит $2.5^2$ баллов рейтинга. Задача уровня 3А стоит $2.5^3$ баллов рейтинга, и т.д. Задача уровня $N$А стоит $2.5^N$ баллов рейтинга.</p>\n\n<p>Задачи промежуточных уровней стоят промежуточное число баллов. А именно, задача уровня $N$Б стоит $2.5^{N+0.25}$ баллов рейтинга, уровня $N$В — $2.5^{N+0.5}$, уровня $N$Г — $2.5^{N+0.75}$ баллов.</p>\n\n<p>Задачи с региональных олимпиад считаются как задачи с уровня 3А. Если одна и та же задача есть на нескольких уровнях, то учитывается только самый высокий уровень этой задачи.</p>\n\n<p>При выводе рейтинга в таблицы он округляется до целых, но при подсчете все считается вещественными числами.</p>\n\n<p>Табличка стоимости (округленная до двух знаков после запятой):</p>\n<pre>          А        Б        В        Г\n1      2.50     3.14     3.95     4.97 \n2      6.25     7.86     9.88 \n3     15.62    19.65    24.71 \n4     39.06    49.12    61.76 \n5     97.66   122.80   154.41 \n6    244.14   306.99   386.02 \n7    610.35   767.48   965.05 \n8   1525.88  1918.69  2412.63 \n9   3814.70  4796.73  6031.57 \n10  9536.74 11991.82 15078.91 \n</pre>\n\n<h3>Идеология</h3>\n<p>Баллы за задачу растут очень быстро, специально для того, чтобы на высоких уровнях было не так важно, что вы решали на младших уровнях. Например, если вы уже на уровне 5, то, скорее всего, задачи уровня 1 не представляют для вас вообще никакой сложности. Поэтому не важно, сколько вы решили на уровне 1. И это получается за счет того, что задачи уровня 5 стоят намного больше, чем задачи уровня 1.</p>\n\n<h2>Активность</h2>\n<p>(Конкретный код расчета — по той же ссылке)</p>\n\n<p>Активность — показатель того, насколько активно вы решали задачи последнее время. Каждая задача, которую вы когда-либо решали, дает свой вклад в активность. У каждой задачи есть "базовые" баллы активности — это квадратный корень из номера уровня. (У всех задач уровня 1 "базовый" балл равен 1, у каждой задачи уровня 2 базовый балл равен 1.4, и т.д.) Этот базовый балл умножается на $0.55^{t/\\tau}$, где $t$ — время, прошедшее с того момента, как вы сдали эту задачу, а $\\strut\\tau$ равно 1 неделе. Например, если вы сдали задачу только что, то базовый балл учитывается полностью. Если вы сдали задачу ровно сутки назад, то базовый балл умножается на $0.55^{1/7}\\approx 0.92$. Если вы сдали задачу ровно две недели назад, то базовый балл умножается на $0.55^2\\approx0.3$. Если вы сдали задачу 8 недель назад, то базовый балл умножается на $0.55^8\\approx0.0083$, т.е. эта задача уже почти не учитывается.</p>\n\n<p>Суммарное значение активности по всем задачам делится на 0.45, в результате получается эдакое среднее число "задач" в неделю.</p>\n\n<p>Получается, что на самом деле учитываются только недавно сданные задачи, а те, которые вы решали давно, не учитываются. Но при этом падение этой "учитываемости" плавное. Если вы перестанете решать задачи, то ваша активность будет постепенно падать со временем (хотя и никогда не станет ровно нулем). В таблицах активность выводится округленной до одного знака после запятой, но на самом деле активность — настоящее вещественное число.</p>\n\n<p>В ряде сводных таблиц сначала указываются школьники, активность которых больше 0.1, и только потом все остальные.</p>\n\n<h2>Цвет</h2>\n<p>Имена школьников в таблицах рисуются цветом, определяемым их рейтингом и активностью. А именно, активность определяет яркость цвета (от почти черного до насыщенного), а рейтинг определяет оттенок (от фиолетового через все цвета радуги до красного). Например, школьник с рейтингом 1 и активностью 10 будет иметь ярко-фиолетовый цвет, школьник с рейтингом 1 и активностью 0.1 будет иметь темно-фиолетовый цвет, школьник с рейтингом примерно 1500 и активностью 10 будет иметь ярко-зеленый цвет, а с активностью 0.1 — темно-зеленый цвет; красный цвет соответствует рейтингу примерно 160000.</p>\n\n<p>Конкретная формула: в <a href="https://ru.wikipedia.org/wiki/HSV_(%D1%86%D0%B2%D0%B5%D1%82%D0%BE%D0%B2%D0%B0%D1%8F_%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C)">модели HSV</a> цвет участника имеет следующие компоненты:</p>\n$h = 11/12 \\cdot (1 - log(r+1) / log(R + 1))$<br>\n$v = 0.3 + 0.7 \\cdot log(a+1) / log(A + 1)$<br>\n$s = 1$<br>\n<p>здесь $r$ и $a$ — рейтинг и активность, $R$ — "максимальный рейтинг" (те самые примерно 160000, точнее — рейтинг, который получит человек, на каждом уровне решивший по 10 задач, возможно, я буду подправлять константу в будущем), $A=7$.</p>\n\n<p>Еще есть мелкие поправки на краях возможных интервалов значений. Код, кому интересно, <a href="https://github.com/petr-kalinin/algoprog/blob/master/client/components/UserName.coffee">здесь</a>.</p>\n\n<h2>Параметры codeforces</h2>\n<p><a href="https://github.com/petr-kalinin/algoprog/blob/master/server/calculations/calculateCfRating.coffee">Код</a></p>\n\n<p>Рейтинг на CF берется прямо с CF, обновляется раз в сутки.</p>\n\n<p>Взвешенное количество контестов вычисляется так: каждый написанный вами контест дает вклад, равный $0.5^{t/\\tau}$, где $t$ — время, прошедшее с написания контеста, а $\\tau$ равно 4 неделям. Все такие вклады суммируются. Т.е. только что написанный контест дает вклад 1, контест, написанный 4 недели назад — 0.5, и т.д.</p>\n\n<p>Взвешенное изменение рейтинга вычисляется так: каждый написанный вами контест дает вклад, равный $\\delta\\cdot0.5^{t/\\tau}$, где $\\delta$ — изменение рейтинга в этом контесте, $t$ — время, прошедшее с написания контеста, а $\\tau$ равно 4 неделям. При этом самый первый в жизни написанный контест не учитывается, т.к. там изменение рейтинга — это бессмысленная вещь.</p></div>', 'title': '\nФормулы расчета рейтинга, активности и т.д.', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_30', 'order': 30, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_31', 'order': 31, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про ачивки</h1>\n<p>На алгопроге каждый пользователь может заработать ачивки. Ачивки выдаются за разные вещи, в первую очередь за успешные занятия на алгопроге, а также за участие в различных олимпиадах. Заработанные пользователем ачивки показываются в его профиле, также три наиболее «крутые» ачивки показываются рядом с именем пользователя в сводных таблицах и т.д.</p>\n\n<p>Полный список доступных ачивок можно посмотреть <a href="/achieves">здесь</a>, а также в виде исходного кода <a href="https://github.com/petr-kalinin/algoprog/blob/master/client/lib/achieves.coffee">здесь</a>.</p>\n\n<p>Часть ачивок выдается автоматически, часть ачивок (в основном за олимпиады) я устанавливаю вручную. Если вы считаете, что у вас должна быть какая-то ачивка, а у вас ее нет, то напишите мне. Особенно это касается школьников из-за пределов Нижегородской области — я не всегда могу отслеживать все ваши олимпиады, поэтому пишите мне про свои олимпиады сами.</p></div>', 'title': ' \nПро ачивки', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_32', 'order': 32, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_33', 'order': 33, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про дополнительные лекции</h1>\n\n<p>Я планирую время от времени по воскресеньям на занятии в ННГУ проводить дополнительные лекции на разные темы, не связанные напрямую с алгопрогом и вообще с алгоритмами — но которые серьезный программист по идее должен знать.</p>\n\n<p>Эти лекции совершенно не нужны для занятий на алгопроге, да и по бóльшей части для олимпиад тоже (хотя отчасти и будут полезны, особенно про командную строку). Но они очень полезны для вашего кругозора.</p><p>\n\n</p><p>Цель таких лекций — дать вам общее представление о той или иной теме. Я не буду ставить целью чтобы вы сразу научились чему-то новому, я буду ставить целью чтобы вы узнали о существовании чего-то нового и поняли, что надо искать и про что читать в интернете, чтобы с этим разобраться. </p>\n\n<p>Лекции будут проходить в среднем раз в две недели по воскресеньям в ННГУ в аудитории 114 в 15.00, и длиться примерно 30-60 минут. На них можно приходить и тем, кто зарегистрировался на занятие в 14.00, и тем, кто зарегистрировался на занятие в 15.30, и тем, кто не регистрировался на занятия вообще.</p>\n\n<p>Предварительный список тем (я готов принимать от вас запросы на какие-либо еще темы):</p><p>\n\n</p><ul>\n<li><b>6 октября</b>: Командная строка</li>\n<li><b>27 октября</b>: Far manager</li>\n<li><b>16 февраля</b>: Системы контроля версий</li>\n<li>TeX и LaTeX</li>\n<li>...</li>\n</ul>\n\n<p>Запрошенные темы (не обещаю, что расскажу, но подумаю):</p>\n\n<ul>\n<li>Нейронные сети и их обучение</li>\n<li>Компиляторы, интерпретаторы, ассемблер и т.д.</li>\n<li>История языков программирования</li>\n</ul></div>', 'title': ' \nПро дополнительные лекции по воскресеньям', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_34', 'order': 34, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_35', 'order': 35, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>О лицензии на материалы этого сайта</h2>\n<h3>Исходный код сайта</h3>\nИсходный код собственно сайта algoprog.ru написан мною (Петром Калининым) и распространяется по лицензии <a href="http://www.gnu.org/licenses/agpl">GNU Affero General Public License</a>. Скачать исходный код можно с сайта <a href="http://github.com/petr-kalinin/algoprog">github.com/petr-kalinin/algoprog</a>.\n\n<h3>Теоретические материалы</h3>\n<p>На этом сайте есть различные теоретические материалы с разной степенью понятности с точки зрения лицензии.</p>\n<p>Материалы, в которых лицензия указана явно, распространяются по указанной в них лицензии.</p>\n<p>Материалы, размещенные на других сайтах, на которые с сайта algoprog.ru проставлена только ссылка, распространяются по лицензии, определяемой указанным сайтом.</p>\n<p>Материалы, в которых лицензия явно не указана, но автором которых являюсь я (это большинство материалов, размещенных непосредственно на сайте algoprog.ru), распространяются по лицензии <a href="http://creativecommons.org/licenses/by-sa/4.0/">Creative Commons Attribution-ShareAlike (CC BY-SA) 4.0</a>.</p>\n<p>Если вы не уверены, какая лицензия распространяется на конкретный материал, спросите меня.</p>\n\n<h3>Условия задач</h3>\n<p>Условия задач взяты с сайта <a href="http://informatics.mccme.ru">informatics.mccme.ru</a>, где они в большинстве случаев собраны с различных олимпиад. Условия лицензии на них не ясны.</p>\n</div>', 'title': '\nО лицензии на материалы сайта', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_36', 'order': 36, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_37', 'order': 37, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Франшиза</h1>\n\n<p>Если вы уже учите кого-нибудь (школьников, студентов и т.д.) программированию, и хотите использовать алгопрог или его материалы в своих занятиях...</p>\n\n<p>...или если вы хотите начать учить кого-нибудь на базе алгопрога или с использованием его материалов...</p>\n\n<p>...или если вы хотите использовать движок алгопрога в своих занятиях, наполнив его своими материалами</p>\n\n<p>то этот текст для вас.</p>\n\n<h2>Материалы</h2>\n\n<p>Если вам нужен не функционал алгопрога, а только <i>материалы</i> — теоретические материалы, видеолекции, задачи и т.д. — то они доступны в том или ином виде свободно. Теоретические материалы, автором которых являюсь я, как правило, распространяются под той или иной свободной лицензией, вы можете их использовать. Она обычно указана в самом материале, если там лицензия не указана, то спросите меня. Материалы, автором которых являюсь не я, взяты с других сайтов, вы обычно тоже можете их использовать. Задачи взяты с сайта <a href="http://informatics.mccme.ru">informatics.mccme.ru</a>, этот сайт специально создан для проведения различных курсов по программированию, вы можете формировать свои курсы из доступных там задач и т.д. В частности, вообще все содержимое алгопрога есть на информатиксе: <a href="https://informatics.msk.ru/course/view.php?id=1135">informatics.msk.ru/course/view.php?id=1135</a> — собственно, весь алгопрог вырос из этого моего курса на информатиксе.</p>\n\n<h2>Движок</h2>\n\n<p>Сам движок алгопрога также <a href="https://github.com/petr-kalinin/algoprog">свободно доступен</a>, вы можете поднять собственный инстанс алгопрога и делать там что угодно. (Хотя, конечно, это не так просто, и я вряд ли буду вам помогать.)</p>\n\n<h2>Отдельный инстанс</h2>\n\n<p>Я могу поднять отдельный инстанс алгопрога для ваших учеников, с вашими материалами и задачами. Это требует отдельного обсуждения, но в принципе это возможно. Это будет платно, конкретная стоимость будет зависеть от необходимой работы по поддержке инстанса, необходимых доработок, и ожидаемого количества учеников. В качестве грубой предварительной оценки, если не требуется серьезных доработок, и ожидается 20-50 учеников, то стоимость отдельного инстанса будет составлять 500-1000 рублей с ученика в месяц.</p>\n\n<h2>Занятия прямо на алгопроге по материалам алгопрога</h2>\n\n<p>Если вы хотите заниматься именно на алгопроге, то есть следующие варианты. Во-первых, ваши ученики может зарегистрироваться на алгопроге и заниматься как независимые ученики. С моей точки зрения это будут просто дополнительные ученики на алгопроге, вы сможете организовывать занятия, помогать ученикам и т.д., но у вас не появится никаких дополнительных возможностей на алгопроге (вы не сможете просматривать решения учеников и т.д.). Ваши ученики занимаются независимо, для них стоимость занятий будет, естественно, определяться <a href="/pay">по общим правилам</a>, с вас я, естественно, денег брать не буду (и вообще могу про вас и не знать :) ).</p>\n\n<p>Если вы хотите иметь дополнительные возможности — просматривать решения учеников, комментировать их, засчитывать/игнорировать, иметь отдельные сводные таблицы, то напишите мне. Это все (равно как и другие запросы с вашей стороны) вполне реально, но требует отдельного обсуждения. В качестве <b>базовых</b> вариантов есть следующие:</p>\n<ul>\n<li>Ваши ученики занимаются на алгопроге на равных правах с остальными, я их проверяю, комментирую, засчитываю/игнорирую их решения — и плюс вы можете делать то же самое; для ваших учеников будут отдельные таблички и т.д. <b>Как правило</b>, стоимость таких занятий для ваших учеников будет такая же, как если бы они занимались независимо. (Т.е. никакой дополнительной оплаты за дополнительный функционал нет, но и скидок нет.)</li>\n<li>Я никак не взаимодействую с вашими учениками — не смотрю их решения, не засчитываю/игнорирую. Все это делаете, если хотите, вы. <b>Как правило</b>, стоимость таких занятий для ваших учеников будет в два раза меньше, чем если бы они занимались независимо.</li>\n</ul>\n<p>В обоих вариантах выше существенны слова «базовые» (варианты) и «как правило». Это обозначает, что, с одной стороны, это не публичная оферта — в конкретной ситуации возможны другие условия и другие цены; с другой стороны, возможны также и другие варианты по функционалу и по нашему с вами взаимодействию. Пишите, поговорим :)</p>\n\n<p>В частности, если для ваших учеников занятия обычно бесплатные, то оба варианта выше будут, как правило, бесплатными.</p>\n\n</div>', 'title': '\nО франшизе', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_38', 'order': 38, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>«Стажировка» на алгопроге</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_39', 'order': 39, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>«Стажировка» на алгопроге</h1>\n<p>Что летом делают большинство нормальных студентов-программистов? Стажируются в IT-компаниях. Школьников обычно на такие стажировки не зовут, да и участвовать школьникам в стажировках обычно сложно.</p>\n\n<p>Поэтому я подумал, чем алгопрог хуже IT-компаний? И решил организовать возможность некоего аналога стажировок на алгопроге. А именно, если вы хотите, то можете поучаствовать в развитии самой платформы алгопрога. Если вы всегда хотели добавить на алгопрог какую-нибудь фичу, то вы сможете этим заняться. Или у меня для вас есть список вещей, которые я давно хочу сделать на алгопроге, но все не успеваю, и вы можете заняться ими.</p>\n\n<p>Это, конечно, будет довольно сильно отличаться от обычных задач, которые вы решаете на алгопроге. Вам придется разбираться в довольно объемном уже существующем (и очень грязном) коде алгопрога, вам придется разбираться в наверняка незнакомом языке программирования (Coffeescript, но не бойтесь — он несложный и поначалу весьма похож на питон), вам придется разбираться со множеством технологий, с которыми вы возможно еще не работали (git, MongoDB, node.js, React, немного Redux), вам придется разбираться с HTML и браузерным Javascript, вам придется много гуглить и читать, причем скорее всего по-английски (ну или через переводчик) — но я верю, что если вы абсолютно уверенно решаете как минимум задачи уровней 1А и 1Б, и не боитесь самостоятельно разбираться с возникающими проблемами, то вы вполне можете и со всем этим разобраться.</p>\n\n<p>Исходный код алгопрога вот: <a href="https://github.com/petr-kalinin/algoprog">https://github.com/petr-kalinin/algoprog</a>. Список доделок, которыми вы можете заняться, вот: <a href="https://github.com/petr-kalinin/algoprog/issues">https://github.com/petr-kalinin/algoprog/issues</a>, или вы можете обсудить со мной и предложить что-то свое.</p>\n\n<p>В отличие от классических стажировок, я не буду требовать от вас какой-то регулярности в работе (ну собственно как и с обычными задачами на алгопроге), и не буду вам платить денег :) — но обещаю, что буду вникать в то, что вы делаете, и помогать. А вы внесете свой вклад в развитие алгопрога, и получите много нового разнообразного опыта.</p>\n\n<p>Кроме того, в отличие от классических стажировок, я не смогу вам уделять столько внимания, сколько обычно уделяет руководитель стажеру в IT-компаниях. Вам придется очень во многом разбираться самостоятельно, я буду скорее направлять ваши действия, а не давать конкретные детальные указания. Будьте к этому готовы.</p>\n\n<p>В общем, если вы хотите в этом поучаствовать, пишите. Распространяется на всех, кто занимается на алгопроге (не обязательно школьников) и имеет уровень минимум 1В. Пока только лето (с апреля по август включительно).</p></div>', 'title': '«Стажировка» на алгопроге', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Очные занятия</h2>\n<font size="+1"><a href="/material/module-20927_17" onclick="window.goto(\'/material/module-20927_17\')();return false;">Подробная информация</a></font><br>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_1', 'order': 2, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про свои ноутбуки</h1>\n<p>Иногда бывает, что на занятиях не хватает компьютеров (особенно в начале учебного года). Поэтому вы <b>можете приносить свои ноутбуки</b>, но на следующих условиях:</p>\n<ol>\n<li>Вы сами несете ответственность за свой ноутбук. Я не готов решать какие-либо проблемы, связанные с ноутбуком, начиная от отсутствующей зарядки или отсутствующего интернета (см. ниже), поломки его вами или другими школьниками, и до даже его пропажи (хотя и надеюсь, что такого не будет). Если вы и ваши родители не уверены, стоит ли вам брать с собой ноутбук — не берите.</li>\n<li>Обеспечивайте доступ в интернет на своем ноутбуке самостоятельно. Проще всего — имейте с собой usb-модем или научитесь раздавать доступ в интернет со своего телефона. Убедитесь, что у вас достаточно трафика для работы, или заранее подключите пакет трафика (я думаю, если вы собираетесь только работать на informatics, то сотни мегабайт будет более чем достаточно). Лучше проверьте заранее, что все работает. Вы можете также объединиться, чтобы в группе друзей один человек раздавал интернет на всех, но договаривайтесь об этом самостоятельно и заранее, а также читайте следующие пункты.</li>\n<li>Убедитесь, что у вас на ноутбуке нет вирусов и других программ, которые могут захотеть скачать большое количество данных из интернета; вирусы еще могут подписать вас на какие-нибудь платные мобильные рассылки. (Многие программы с функцией автообновления могут расходовать много трафика без предупреждения). Если вы используете интернет друга, или предоставляете свой интернет друзьям, то риск скачивания большого объема данных тем более возрастает. (В частности, именно поэтому я сам не раздаю интернет со своего телефона.)</li>\n<li>Имейте с собой все нужные зарядки (для ноутбука и для телефона, хотя телефон проще подключать к ноутбуку). Имейте также с собой <b>удлинитель</b> метра на 3 как минимум, а то и на 5 метров, т.к. в наших аудиториях у многих столов или нет розеток, или их мало.</li>\n<li>Заранее установите требуемые для работы программы — среду программирования и/или среды разработки, какие вы используете; для команд также убедитесь, что у вас установлено всё, что требуется для всей вашей команды.</li>\n<li>Для команд нет большого смысла приносить более 1 ноутбука на команду.</li>\n</ol></div>', 'title': 'Про свои ноутбуки на занятиях', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_2', 'order': 3, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Лицей 40</h3>\n<p><b>Только для учеников лицея 40</b></p>\n<p>Занятия проходят по средам в 14:30 КЦ.</p>\n<ul>\n<li>Новичкам (кто не ходил ни разу и не решал задач заочно) <b>прежде чем приходить на занятие, необходимо зарегистрироваться на сайте и решить хотя бы одну задачу</b>. Исключение — занятие 25 сентября, туда можно приходить всем новичкам вообще.</li>\n<li>Те, кто уже был хотя бы один раз, или решил в курсе хотя бы одну задачу заочно, могут приходить каждую среду.</li>\n</ul>\n<a href="/material/in20946" onclick="window.goto(\'/material/in20946\')();return false;">Правила получения зачета</a>\n<h3>ННГУ</h3>\n<p><b>Только для школьников</b>\n</p><p>Занятия проходят по воскресеньям в ННГУ ил. Лобачевского (пр. Гагарина, 23), корп. 2, ауд. 110 и 114.</p>\n<p><b>Берите с собой паспорт или свидетельство о рождении.</b> Если вас не пускает охрана, звоните мне.</p>\n<ul>\n<li>Проходит два занятия: с 14.00 до 15.30 и с 15.30 до 17.00.</li>\n<!--<li>Занятие проходит с 14.00 до 16.00.</li>-->\n<li>Новичкам (кто не ходил ни разу и не решал задач заочно) <b>прежде чем приходить на занятие, необходимо зарегистрироваться на сайте и решить хотя бы одну задачу</b>. Исключение — занятие 22 сентября, туда можно приходить всем новичкам вообще.</li>\n<li>Те, кто уже был хотя бы один раз, или решил в курсе хотя бы одну задачу заочно, могут приходить каждое воскресенье на любое из двух занятий.</li>\n<li>Чтобы вам точно хватило компьютеров, <b><a href="/checkins" onclick="window.goto(\'/checkins\')();return false;">зарегистрируйтесь на занятие</a></b>. Без регистрации приходить можно, но если компьютеров хватать не будет, то преимущество будет у тех, кто записался. Каждую неделю надо регистрироваться заново.</li>\n<li>Регистрироваться на два занятия нельзя, но те, кто записались на 14.00, могут остаться на второе занятие, если будут места. Те, кто со своими ноутбуками, тоже могут приходить на оба занятия.</li>\n</ul>\n<hr>\n\n<div class="algoprog-contacts">\n<h2>Контакты</h2>\nПетр Андреевич Калинин\n<ul>\n<li>e-mail: petr@kalinin.nnov.ru</li>\n<li><a href="http://vk.com/petr.kalinin">http://vk.com/petr.kalinin</a>*</li>\n<li>+7(910)794-32-07**</li>\n<li>Телеграм: +7(910)794-32-07</li>\n</ul>\n<b>Телеграм:</b>\n<ul>\n<li><a href="https://t.me/algoprog_news">Канал с важными объявлениями</a>, в первую очередь про очные занятия. Рекомендую всем подписаться. (Если ссылка на t.me заблокирована, просто в телеграмме поищите канал «algoprog_news».)</li>\n<!--<li><a href="https://t.me/joinchat/CDV8hRTLsYl_pplIhhLZzw">Телеграм-чат для общих вопросов и разного флуда</a></li>-->\n</ul>\n<p>Мои контактные данные можно свободно распространять по любым вопросам, связанным с работой курса или с олимпиадным программированием в Нижегородской области вообще.</p>\n<p><b>Если у вас есть какие-то проблемы с работой в курсе, какие-то вопросы и т.п., сразу пишите мне!</b></p>\n<p>* Политика добавления в друзья во вКонтакте: я не возражаю, если вы добавите меня в друзья, но я буду добавлять только тех, кто уже давно и успешно занимается.</p>\n<p>** Пожалуйста, звоните по телефону только в экстренных случаях. Если ваш вопрос не очень срочный и может подождать несколько часов, напишите мне любым указанным выше способом — во вКонтакте, в Телеграм или на email.</p>\n</div>\n<hr>\n\n<h2>Полезные ссылки</h2>\n<font size="+1"><a href="https://www.dropbox.com/s/1n5g6w6hkryqwcw/Free%20Pascal%202.6.4%20-%20installer%20.exe?dl=0">Ссылка на установщик Free Pascal</a></font>\n<hr>\n<font size="+1">Установщики питона: <a href="https://www.python.org/ftp/python/3.5.2/python-3.5.2.exe">сам Python</a> и <a href="http://wingware.com/pub/wingide-101/5.1.12/wingide-101-5.1.12-1.exe">Wing IDE 101</a></font>\n<hr>\n<font size="+1">\n<a href="http://petr-kalinin.github.io/keyb/">Клавиатурный тренажер</a> на скорость набора программистского текста. </font> Ориентировочные результаты: 150 символов/минуту — довольно неплохо, 200 символов/минуту — очень круто. <a href="/material/in20938" onclick="window.goto(\'/material/in20938\')();return false;">Подробнее</a>.\n\n<hr class="algoprog-main-page-separator">\n\n<h2>Текущие олимпиады и т.п.</h2>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_3', 'order': 4, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>О школьной олимпиаде</h1>\n<font color="red">Эта информация касается школьной олимпиады в Нижегородской области. В других регионах могут быть отличия.</font>\n<h3>Краткое содержание того, что ниже</h3>\n<ul>\n<li>В школьной олимпиаде стоит участвовать как минимум всем, у кого уровень 1В и выше</li>\n<li>Участвовать надо по задачам за 9-11 класс, даже если вы в младших классах</li>\n<li>Заранее выясните, где и когда будет олимпиада, и попросите вам дать возможность писать на том языке, на котором вы хотите.</li>\n<li>На самой олимпиаде:</li>\n<ul>\n<li>Тщательно тестируйте свои задачи, жюри будет проверять их только после олимпиады и второй попытки у вас не будет!</li>\n<li>Неполные решения также оцениваются</li>\n<li>Прочитайте все задачи сразу, не тратьте всё время на одну задачу.</li>\n<li>Регулярно сохраняйте решения</li>\n<li>Не бойтесь задач, самые сложные обычно примерно соответствуют уровню 1Г-2А, и не обязательно решать всё, чтобы пройти дальше.</li>\n<li>Если что-то забыли, ищите обходные пути</li>\n<li>Ищите закономерности</li>\n<li>Применяйте здравый смысл</li>\n</ul>\n<li>Как только узнаете свой результат, скажите его мне</li>\n<li><font color="red">(Только нижегородцы) По любым вопросам, а особенно если что-то идет не так, сразу и в любое время звоните мне!</font></li>\n</ul>\n<h3>О чем речь?</h3>\n<p>Школьная олимпиада по информатике в Нижнем Новгороде состоится, видимо, в конце сентября — начале октября; сроки могут быть разными в разных районах. Уточните сроки заранее в своей школе. (Школьники не из Нижнего Новгорода — тоже уточняйте у себя в школе).</p>\n<p><b>Говорят, что в некоторых школах олимпиада будет аж 19 сентября! Это очень рано, конечно. Но это обозначает, что обязательно поторопитесь и выясните всё заранее!</b></p>\n<p>Школьная олимпиада — это первый этап в системе Всероссийской олимпиады школьников. Победители школьной проходят на районную олимпиаду, с районной — на областную и далее на собственно всероссийскую и международную, поэтому это — самая важная последовательность олимпиад в году, и школьная олимпиада является "входом" в нее. Не пропустите.</p>\n\n<h3>Кому стоит участвовать?</h3>\n<p>Я очень рекомендую участвовать всем, кто на момент олимпиады будут иметь уровень 1В и выше (независимо от класса). Если у вас на момент олимпиады еще не будет уровня 1В, но вы хотите, то можете тоже участвовать — хотя, возможно, задачи вам покажутся несколько сложными. Я думаю, что уровня 1В, скорее всего, будет достаточно, чтобы пройти на районную олимпиаду.</p>\n<p>Если вы в прошлом году участвовали в олимпиадах и стали призером (или победителем) районной или областной олимпиады, то школьную олимпиаду в этом году можете пропустить — вы проходите автоматом на ту олимпиаду, на которой стали призером год назад. (К городской олимпиаде из В.Д.Лелюха это не относится, она не входит в систему Всероссийской олимпиады школьников.)</p>\n\n<h3>Что надо сделать, чтобы участвовать?</h3>\n<p>Заранее, как можно раньше, подойдите к своему учителю информатики и скажите ей, что вы хотите участвовать. Ближе к дате олимпиады вам, наверное, скажут, где и когда именно она будет проходить; если не сказали, то еще раз подойдите к учителю и уточните. Пожалуйста, контролируйте сами, что вы все знаете про олимпиаду — я не могу связаться с каждой школой и сказать, чтобы вас не забыли. (В лицее 40 я передам список школьников уровня 1В и выше учителям, чтобы они про вас не забыли. Если вы хотите участвовать, но имеете уровень ниже 1В, то сообщите мне об этом заранее, я вас тоже включу в список.)</p>\n<p>Если вы младше 9 класса, то обязательно скажите, что вы хотите писать задачи за 9 класс (см. про это подробнее ниже). (В лицее 40 я сам это проконтролирую.) Младше 9 класса могут быть очень странные задачи, очень странная организация и т.д. — ни в коем случае не соглашайтесь участвовать по задачам младше 9 класса, даже если вы сами намного младше :)</p>\n<p>Заранее уточните, на каком языке программирования вы сможете писать. Постарайтесь уговорить учителей, чтобы вам дали написать вашем любимом языке, будь то Free Pascal, и PascalABC или Python или что угодно еще; если нужно, предложите, что вы сами установите нужные программы (компиляторы, среди разработки) на компьютер(ы), на которых будет олимпиада. (В лицее 40 я постараюсь заранее это все обсудить, но на всякий случай можете и сами уточить.)</p>\n<p>Если возникают какие-то проблемы, обязательно пишите или даже звоните мне (только нижегородцы)! Я не уверен, что смогу чем-то помочь, но вдруг. Не тяните с проблемами до последнего.</p>\n\n<h3>Как проходит олимпиада</h3>\n<p>Олимпиады по информатике, по крайней мере низших уровней (школьная, районная) проходят в следующем формате. Вам предлагается несколько (обычно от 2 до 5) задач, по каждой задаче вам надо написать программу. Задачи имеют такой же формат, как у нас на этом сайте: вводятся какие-то данные, надо вывести ответ. Как и у нас, гарантируется, что входные данные соответствуют ограничениям, указанным в условиях. В общем, все весьма похоже на то, как вы решаете задачи на сайте.</p>\n\n<p>Но есть важное отличие — на сайте результат проверки задачи сообщается вам сразу же, и вы можете сдавать одну и ту же задачу несколько раз. На олимпиаде ваши задачи будут проверяться только после тура, и у вас уже <b>не будет возможности исправить никакие ошибки</b>. Поэтому тщательно проверяйте свои решения, про это еще см. ниже.</p>\n\n<p>Олимпиада длится ограниченное время (скорее всего, два урока, но уточните заранее), поэтому внимательно контролируйте время. Не зависайте над одной задачей; если что-то не получается, то подумайте, может быть, стоит переключиться на другую задачу?</p>\n\n<p>В частности, <b>прочитайте все условия всех задач сразу в начале тура,</b> до того, как начнете что-либо программировать. От нашего жюри можно ожидать, что они разместят задачи по возрастанию сложности, но этого может и не быть (не говоря уж о том, что ваше восприятие сложности может отличаться от того, как это воспринимает жюри). Поэтому сначала прочитайте задачи, убедитесь, что вы их понимаете, а потом уже начинайте решать — причем с тех, которые выглядят проще. Ни в коем случае не должно быть такого, что "я все время решал первую задачу, а остальные даже не прочитал или даже не подумал над ними".</p>\n\n<p>Еще одно отличие от сдачи задач на сайте — на олимпиаде у вас будут оцениваться также и неполные решения. По каждой задаче будет подготовлено несколько тестов, и за каждый тест вы будете получать определенное количество баллов. Поэтому если у вас не получается придумать решение, которое будет работать всегда — напишите хотя бы решение, которое будет работать иногда. Постарайтесь, чтобы по каждой задаче у вас было хоть что-то сделано, чтобы у вас <b>не было нулевых баллов ни по одной задаче.</b></p>\n\n<p>В конце тура полезно еще раз проверить, что у вас все работает так, как вы ожидаете. Выделите в конце минут пять-десять, чтобы вернуться ко всем задачам и проверить, что они работают хотя бы на тесте из условия.</p>\n\n<p>В конце олимпиады вы должны сдать свои программы (исходные тексты) на проверку. На олимпиадах начального уровня обычно это делается следующим образом: вы просто оставляете их на вашем компьютере в указанном вам каталоге, откуда их потом заберут на проверку; иногда проверка осуществляется сразу после тура, даже в вашем присутствии. Заранее или в начале тура убедитесь, что вы понимаете, где вы должны оставить свои решения или как еще их вы должны сдать на проверку; если не понимаете, то спросите учителей.</p>\n\n<p>Сохраняйте решения! Во время олимпиады может произойти что угодно — отключиться свет, перезагрузиться компьютер и т.п. Если у вас из-за этого пропадет несохраненное решение, то это будут полностью ваши проблемы. Вообще, полезно привыкнуть сохранять свое решение каждые 10-20 секунд.</p>\n\n<p>Не теряйте свои решения! Если даже вы думаете, что ваше решение неправильное и его надо переписать — не удаляйте его, просто пишите в новом файле (ну или скопируйте старое решение куда-то про запас).</p>\n\n<p>Имейте в виду, что вам не обязательно решать всё. Чтобы пройти на районную олимпиаду, часто достаточно набрать половину баллов, поэтому не бойтесь, если у вас не получается решить самую сложную задачу (или две самых сложных, если задач много). (Но все равно постарайтесь по ним хоть что-то написать.) Для 11-классников порог прохода на район может быть выше.</p>\n\n<h3>О задачах за разные классы</h3>\n<p>Так исторически сложилось (и на то есть ряд дополнительных причин), что на олимпиадах по информатике набор задач общий для всех классов. Итоги потом подводятся по классам по отдельности, но задачи общие. (Иногда бывают исключения, но довольно редко.)</p>\n<p>При этом формально может быть сказано, что олимпиада проходит только для определенных классов, как правило — для 9-11 классов. Но это вовсе не значит, что младшеклассники не могут в ней участвовать — даже если вы младше 9 класса, вполне можете писать за 9 класс.</p>\n<p>Но помимо этого, я иногда слышал, что в некоторых школах бывают какие-то отдельные задачи для более младших (например, 7-8 классов). Это довольно странно; в лицее 40 я никогда про такое не слышал. Возможно, это инициатива отдельных школ или районов. В любом случае, это не то: по этим задачам вы в лучшем случае пройдете на район и дальше никуда, в худшем случае вам скажут, что "района по вашим классам не бывает" (знаю реальный такой случай). Задачи на этих олимпиадах могут иметь мало общего с тем, что мы тут проходим, организация может быть хуже (например, вам могут предложить писать программу на бумажке (!)) — в общем, если вы младше 9 класса, убедитесь, что вы выступаете за 9 класс и пишите по тем же задачам, что и 9-классники. Для этого может быть полезно заранее сказать, что вы хотите участвовать за 9-й класс. Не бойтесь этого; как я уже писал, если у вас уровень 1В или выше, то вам эти задачи будут по силам. И даже если вы решите их плохо, все равно вы получите ценный опыт, который вам пригодится через год.</p>\n\n<h3>О результатах</h3>\n<p>Как только будут известны ваши результаты, сообщите их мне. Результаты — это общее число набранных баллов (а хорошо бы и распределение баллов по задачам) и проходите вы на район или нет. Про район иногда сообщают сразу, иногда не сразу — если вы пока знаете только баллы, то сообщите мне только баллы, потом как будет известно про район, сообщите мне.</p>\n\n<h3>Какие будут задачи?</h3>\n<p>Сложно предсказать, да и в интернете задачи прошлых найти сложно (но можете попробовать, только ищите обязательно задачи и вашего района города или области — в разных районах задачи могут быть очень разными). Спросите в школе, у них наверное есть архивы прошлых лет.\n\n</p><h3>Какие знания могут потребоваться?</h3>\n<p>Вообще, я думаю, что знаний уровней 1А-1Б (т.е. основ языка), вместе со здравым смыслом, скорее всего будет достаточно, чтобы набрать половину баллов и пройти на район (для 11-классников может потребоваться чуть больше). Уровни 1В и 1Г очень полезны в том плане, что они содержат нестандартные задачи как раз типа тех, что будут на олимпиаде. Кроме того, в ряде задач могут потребоваться следующие знания:</p>\n\n<h4>int64</h4>\nВ паскале есть очень полезный тип данных, про который вы, возможно, не знаете. Это <code>int64</code> — 64-битное целое число. Он может хранить числа от (примерно) -2<sup>63</sup> до 2<sup>63</sup>; это примерно от -9e18 до 9e18. Он полезен, если значения, которые вам нужны в вашей программе, не влезают в integer.\n<pre>var a:int64;\nbegin\na:=1000000000;\na:=a*1000000000;\nwriteln(a); // выведет 1000000000000000000\nend.\n</pre>\n\n<h4>Тестирование задач</h4>\n<p>Очень важная вещь на олимпиаде — аккуратно протестировать задачи. На эту тему я недавно написал <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">длинный текст</a> (ссылка на него также есть в уровне 1В). Прочитайте его и следуйте его рекомендациям. Конечно, вам пока не обязательно использовать совсем уж продвинутые вещи типа стресс-тестирования или assert\'ов, но практически весь остальной текст вам будет полезен. Не жалейте времени на аккуратное тестирование.</p>\n\n<p>Полезно хотя бы немного отработать навык тестирования до олимпиады. Постарайтесь порешать несколько задач из еще не решенных вами с учетом рекомендаций по тестированию.</p>\n\n<h4>Работа с файлами</h4>\n<p>Ниже — про паскаль; про работу с файлами в питоне см. текст на уровне 2А.</p>\n<p>На школьной олимпиаде, вполне возможно, вам придется вводить данные не с клавиатуры, а из указанного в условии задачи файла, и аналогично выводить данные не на экран, а в файл. В паскале это делается это так: вы заводите переменную специального типа <code>text</code>, а потом командами <code>assign</code> и <code>reset/rewrite</code> "открываете" файл на чтение/запись соответственно. Далее в командах <code>read/readln</code> и <code>write/writeln</code> <i>первым</i> аргументом указываете файл (переменную), откуда читать или куда выводить. После работы с файлом "закрываете" его командой <code>close</code>. При этом тогда ваша программа <b>не должна ничего вообще</b> читать с клавиатуры! Т.е. по нажатию Ctrl-F9 черное окошко должно мелькать на мгновение, после чего должно возвращаться синее окошко паскаля.</p>\n\n<p>Пример кода, который читает из файла <code>input.txt</code> два числа и выводит в файл <code>output.txt</code> их сумму:</p>\n<pre>var f,g:text;\n    a,b:integer;\nbegin\nassign(f,\'input.txt\');reset(f); // "открыли" файл input.txt для чтения\nread(f,a,b); // из файла f прочитали числа a и b\nclose(f); // "закрыли" файл\nassign(g,\'output.txt\');rewrite(g); // "открыли" файл output.txt для записи\nwriteln(g,a+b); // вывели сумму чисел в файл g\nclose(g); // "закрыли" файл\nend.\n</pre>\n\n<p>Как тестировать такую программу? В оболочке паскаля вы можете открыть несколько окон (через меню File - Open). В одном набираете программу (и сохраняете файл как <code>чтонибудь.pas</code>), в другом редактируете входной файл (и сохраняете как требуется по условию), в третьем открываете выходной файл.</p>\n\n<p>Переключаться между окнами можно, нажав Alt-0 — будет окошко со списком всех открытых файлов. Можно также заметь в правом верхнем углу каждого окошка цифру (1, 2, 3 и т.д.) и переключаться в это окошко, нажав Alt-1, Alt-2 и т.п. Я, например, предпочитаю иметь в окошке "1" исходный текст программы, в окошке "2" входной файл, в окошке "3" выходной файл. Я не советую вам иметь много открытых окон — оставляйте открытыми только те окна, которые нужны для текущей задачи. Когда переключаетесь на новую задачу, закрывайте все окна от старой задачи и открывайте окна для новой задачи.</p>\n\n<p>Соответственно, теперь вводите тест в окошко с входным файлом, не забываете его сохранить (!), и запускаете программу. Если в одном из окон у вас открыт выходной файл, то после запуска программы паскаль вам будет выводить диалоговое окно вида "File output.txt has changed on disk. Reload?" ("Файл output.txt изменился на диске. Перезагрузить?"; точный английский текст я не помню.) Нажмите "yes" — и в окошке с выходным файлом его содержимое автоматически обновится.</p>\n\n<p>Тестировать программу так даже удобнее, чем при вводе с клавиатуры: если вы отлаживаете программу на конкретном тесте, то вам не надо его вводить заново при каждом запуске.</p>\n\n<p>Обязательно попробуйте работать с файлами <b>до олимпиады</b>!. Если на олимпиаде у вас не получается быстро наладить работу с файлами, то лучше попросите разрешения работать по старинке — с клавиатуры и на экран. Не теряйте время на то, чтобы разобраться с файлами на олимпиаде!</p>\n\n<h4>Алгоритмы</h4>\n<p>В основном большинство задач на школьной олимпиаде вряд ли будут требовать специальных знаний, особенных алгоритмов. Задачи, скорее всего, будут требовать только аккуратного размышления и аккуратной реализации; ничего такого, что мы с вами не проходили, не потребуется. Возможно, придется пописать что-то на бумажке, сделать какое-то моделирование и т.п. Все будет довольно похоже на задачи уровней 1В и 1Г. </p>\n\n<p>В наиболее сложных задачах, возможно, потребуются алгоритмы, обсуждаемые в уровнях 2А и 2Б — в первую очередь НОД, сортировки, простые числа и разложения на множители, может быть ДП. Если у вас уже решено хотя бы задач 10-15 уровней 1В/1Г, можете переключиться на эти темы на уровне 2, но не тратьте много времени — лучше порешайте еще задач с уровней 1В/1Г и научитесь тестировать задачи. Конечно, если у вас уже много задач уровней 1В/1Г решено и вы уже находитесь на уровне 2, то изучите эти темы.</p>\n\n<h4>Сложность алгоритмов</h4>\n<p>Важной вещью может оказаться определение того, насколько долго работает придуманный вами алгоритм на больших входных данных. Это обязательно стоит проверить, в идеале — еще до написания программы. Для этого существует понятие <i>сложности алгоритма</i>, про нее можно почитать <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/02_complexity.pdf">тут</a> (в первую очередь читайте часть 1; самое главное — в абзаце, который на стыке страниц 2 и 3, про 100 миллионов действий).\n\n</p><h4>Используйте компьютер по полной</h4>\n<p>Помните, что вы можете на компьютере не только писать программы-решения задач. Если вы, например, думаете над задачей, и вам стало важно узнать, чему равно 163*634, то не надо умножать числа в столбик. Воспользуйтесь калькулятором на компьютере или напишите отдельную программу из одного writeln/print. Если у вас в задаче описан какой-то процесс (есть N бактерий, они размножаются по каким-нибудь правилам, или что-нибудь подобное), не бойтесь написать отдельную программу, которая промоделирует этот процесс, выведет что вам надо, чтобы вы могли поискать какие-нибудь закономерности. И так далее. Не бойтесь писать вспомогательные программы.</p>\n\n<h4>Ищите закономерности</h4>\n<p>Наше жюри иногда любит давать задачи, в которых легко находится та или иная закономерность. Если вы не можете решить какую-то задачу для всех входных данных, то решите ее на бумажке для маленьких входных данных (или, с учетом предыдущего пункта — напишите простую программу, которая решит задачу для маленьких и средних входных данных), и посмотрите на ответы и решения глазами: вдруг вы найдете какую-нибудь закономерность.</p>\n\n<h4>Знакомые задачи</h4>\n<p>Авторы задач школьной олимпиады не очень изобретательны и нередко у них появляются задачи, которые вы уже знаете или которые очень похожи на что-то, что вы уже решали. (Например, год назад то ли на школьной, то ли на районной олимпиаде была задача "Автобусы" из наших "Продвинутых задач на условный оператор". Я не думаю, что авторы задач пользовались этим сайтом, скорее всего они сами независимо придумали эту задачу.) Не удивляйтесь, но решите-таки.</p>\n\n<h4>Если чего-то не знаете, ищите обходные пути</h4>\n<p>Если вы понимаете, что в задаче требуется что-то, чего вы не помните, не знаете, "не проходили" — попробуйте придумать обходной путь — как сделать то же самое, пусть сложнее, но с использованием тех вещей, которые вы знаете. Или как вообще решить задачу по-другому, не используя это знание вообще. Например, если вы не помните, какая функция переводит число в строку — подумайте, как написать такую функцию самостоятельно (подсказка: по аналогии со всякими задачами про цифры с уровня 1А). Или подумайте, а может быть, вам и не надо переводить число в строку вообще? Если вы поняли, что вам нужна сортировка, но вы не знаете, как ее делать — попробуйте или придумать, или придумать, как решать задачу без сортировки. Зачастую это получится. И так далее.</p>\n\n<h4>Здравый смысл</h4>\n<p>Ну и главное. Применяйте здравый смысл. Думайте головой, постоянно думайте над тем, что вы делаете, и помните, что <b>ваша цель на олимпиаде — как можно лучше выступить по сумме заданий.</b></p>\n\n<p>В частности, тут я написал много рекомендаций, дал ссылки на много текстов. Если вы их все прочитаете и поймете — хорошо. Но если вы успели прочитать не все, или не во всем разобрались — не так страшно. Если вы чего-то не поняли, не применяйте это на олимпиаде (ну или точнее, подумайте, не сможете ли вы на олимпиаде быстро допонимать). Не суетитесь и не переживайте, а спокойно решайте задачи.</p></div>', 'title': 'Про школьную олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_4', 'order': 5, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_5', 'order': 6, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про командную олимпиаду</h1>\n<p><b>Это относится только к нижегородским школьникам. В других регионах свои отборочные олимпиады, и я не буду собирать команды из школьников других регионов. Тем не менее, если вы не из Нижегородской области, у вас нет команды, и вы хотите поучаствовать вместе с другими школьниками, занимающимися на моем курсе, можете мне написать, я может быть стыкую вас с другими такими желающими (если такие "другие желающие" будут).</b></p>\n\n<p>В ноябре в в Нижегородском техническом университете (политехе) состоится <a href="http://www.nnstuicpc.ru">Командная олимпиада школьников Нижегородской области по программированию</a>, она же — отбор на <a href="http://neerc.ifmo.ru/school/russia-team/index.html">Всероссийскую командную олимпиаду школьников по программированию (ВКОШП)</a>. Участвуют команды из трех человек, подробные правила будут в информационном письме на сайте нижегородской олимпиады и на сайте ВКОШПа, они несколько отличаются от классических школьных олимпиад (пока на сайте нижегородской олимпиады еще ничего нет). Также подробные правила я могу рассказать желающим.</p>\n\n<p>Желающие могут участвовать, а именно:</p><p>\n</p><ol>\n<li>Из достаточно сильных школьников (примерно уровень 2В и выше), которые занимаются в моем курсе, я составлю команды. Я сам свяжусь с соответствующими школьниками в ближайшее время, или вы можете написать мне.</li>\n<li>Остальные могут составить команды сами. Сообщите мне на всякий случай, что вы хотите участвовать, возможно, я найду для вас команду, но в общем случае я не готов администрировать ваши команды (подавать заявку и т.п.). Тем не менее, во-первых, если в вашей школе есть много желающих участвовать, то можете подать заявку от школы (договориться с вашим учителем информатики и т.п.); во-вторых, если вы сами соберетесь в какую-нибудь сборную команду, даже из разных школ, то можете подавать заявку полностью самостоятельно. Я считаю, что вам может иметь смысл участвовать, если вы уже уровень 1В или выше, но, конечно, самостоятельно вы вольны подавать заявку как хотите.</li>\n</ol>\n\n<p>Уровень задач на олимпиаде, я думаю, стоит ожидать такой: будет одна-две простых задачи уровня школьной олимпиады (уровня 1Б), будет большая группа задач средней сложности — примерно от уровня районной до уровня областной олимпиады (примерно сложности 1В-3В), и будет одна-две очень сложные задачи. При этом, как всегда, не следует думать, что надо решать все задачи: думаю, основная борьба будет на уровне, где решены примерно половина задач. На сайте командной олимпиады вы можете посмотреть примеры задач прошлых лет (правда, если вы хотите участвовать в тренировках — см. ниже — то особенно не вникайте в задачи прошлых лет — мы как-нибудь напишем по ним тренировку).</p>\n\n<p>Несколько лучших команд с нижегородской олимпиады проходят на Всероссийскую командную олимпиаду школьников по программированию (ВКОШП). Сразу предупреждаю: во-первых, в области есть сильные команды, поэтому самостоятельно собранным командам будет довольно сложно пройти на ВКШОП. Во-вторых, если вы и пройдете на ВКОШП, то возможно поездку на ВКОШП вам никто не оплатит — возможно, надо будет ехать за свой счет или самим искать финансирование (говорить со школой и т.п.) (К моим командам — тех, у кого есть высокий шанс пройти на ВКОШП, я об этом предупрежу. Остальные, если вдруг пройдете, то будем думать.) (Возможно, финансирование все-таки найдем.)</p>\n\n<p>Но участвовать имеет смысл и даже без цели прохода на ВКОШП. Во-первых, это интересно и весело, во-вторых, дипломы и (небольшие) призы получат не только те команды, которые пройдут на ВКОШП.</p>\n\n<p>По воскресеньям параллельно с обычными занятиями скорее всего будут командные тренировки к командной олимпиаде. Тренировки длиннее по времени, чем обычные занятия (4-6 часов), время может быть сдвинуто относительно основных занятий — следите за объявлениями на страничке курса. Командам из п. 1 выше я настоятельно рекомендую участвовать (и я напишу в личку); если будут желающие участвовать из самостоятельно-собранных команд, то напишите мне.</p></div>', 'title': 'Про командную олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_6', 'order': 7, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_7', 'order': 8, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про районную/городскую олимпиаду</h1>\n<p><font color="red">Эта информация касается Нижегородской области. В других регионах могут быть отличия.</font></p>\n\n<p>Районная олимпиада, она же городская в ряде городов области (формально "муниципальный этап Всероссийской олимпиады школьников") пройдет, по текущей информации, <b>12 декабря</b>. Участие в ней принимают те, кто хорошо написал школьную олимпиаду. Критериев прохода со школьной на районную я точно не знаю, уточняйте у своих учителей. Кроме того, в олимпиаде принимают участие призеры и победители районной олимпиады прошлого года, даже если они не участвовали в школьной олимпиаде этого года.</p>\n\n<p>Участники районной олимпиады, хорошо ее написавшие, проходят на областную. Механизм здесь примерно следующий: все районы пишут по одним и тем же задачам. Все результаты сводятся в сводную таблица по всем районам области. В этой таблице проводят границу, и все школьники, набравшие больше определенного количества баллов, проходят на область. Это пороговое количество баллов определяется тем, чтобы на область прошло столько школьников, сколько область может принять; по разным классам порог разный.</p>\n\n<p>Чего стоит ожидать на районной олимпиаде? Примерно того же, что и на школьной (см. <a href="/material/module-16024_3" onclick="window.goto(\'/material/module-16024_3\')();return false;">соответствующий текст</a>), возможно, задачи будут сложнее. На страничке курса давно висит ссылка на <a href="https://www.dropbox.com/s/brq5dotrg4lmym2/raion_archive.pdf?dl=0">архив прошлогодних районных олимпиад</a>, посмотрите задачи там, очень рекомендую над ними подумать. Я не думаю, что будут требоваться какие-то более продвинутые знания, но прочитайте текст про школьную олимпиаду еще раз и учитывайте то, что там написано. На районной олимпиаде более вероятно, чем на школьной, что потребуются алгоритмы уровня 2-3. По опыту прошлых лет, может быть одна реально сложная задача. (Но в ее практически никто не решает.)</p>\n\n<p>Ближе к делу (8 декабря в ННГУ и 4 декабря в лицее 40) я проведу отдельное занятие, посвященное подготовке к районной олимпиаде.</p>\n\n<p>С позапозапрошлого года задачи районной олимпиады составляет другое жюри, поэтому задачи в этом году могут быть не похожими на те, что были четыре года назад и более. Обратите особое внимание на задачи за последние три года.</p>\n\n<p>Обязательно убедитесь заранее (спросите учителей в школе, чтобы они спросили организаторов районной олимпиады), что вам предоставят нужное ПО (нужный Питон, или Паскаль, или c++ с нужной средой и т.д.). Если есть какие-то проблемы, звоните, но это очень хорошо бы сделать заранее.</p>\n\n<p>Последние два года районная олимпиада проходила в системе Яндекс.Контест, скорее всего и в этом году будет так же. Тогда вы сможете в течение тура отправлять решения на проверку в тестирующую систему и узнавать результаты. Скорее всего, по каждой задаче будет выбрано ваше лучшее решение (набирающее больше всего баллов), и именно этот результат и будет вашим результатом по задаче. Я не знаю, будут ли в этом году штрафы за неверные попытки, постараюсь узнать ближе к делу, в прошлом году не было. </p>\n\n<p>Количество отправок решений на проверку скорее всего будет ограничено, оно будет указано в тестирующей системе. В прошлом году в качестве примера было приведено ограничение в 100 попыток, что на самом деле очень много и фактически эквивалентно бесконечному количеству попыток (вряд ли кто из вас реально израсходует 100 попыток), но в реальности может оказаться меньше.</p>\n\n<p>Это обозначает, что все будет довольно похоже на то, как вы работаете на сайте (только, в отличие от сайта, частичные решения тоже оцениваются). Если у вас программа не прошла тесты, вы можете ее пересдать. Поэтому, в частности, если за неудачные попытки нет штрафов, то не обязательно поначалу тщательно тестировать простые задачи — потестируйте немного, отправьте решение на проверку и, если оно набирает полный балл, то забудьте про эту задачу. Вот в противоположном случае тестируйте внимательнее.</p>\n\n<p>Возможно, будут еще какие-то неожиданности и отличия, будьте к ним готовы. По идее вам должны заранее объявить полные правила, хотя по факту это бывает редко. Но можете заранее спросить в школе, нет ли у них данных о том, как будет проводиться олимпиада; я со своей стороны попробую это тоже выяснить.</p>\n\n<p>Если же у вас в районе внезапно проводят олимпиаду не в Яндекс.Контесте, то требуйте Я.Контест и/или срочно звоните мне. Если у вас будут проводить по старинке, с ручным тестированием, то вы сразу оказываетесь в заведомо проигрышном положении по сравнению с другими районами — в других районах участники будут узнавать результаты в течение тура и смогут исправлять решения, а у вас — нет. Поэтому требуйте Яндекс.Контест и отстаивайте свои права.</p>\n\n<p>Важный момент — не полагайтесь на Яндекс.Контест. Будьте готовы в случае чего сдавать решения по старинке в конце тура. В частности, не теряйте свои решения! Если вы отправили решение в Контест, не удаляйте его у себя, и уж тем более не начинайте решать другую задачу в том же файле. Контест может заглючить, может потерять ваши решения, и т.д. — если и вы их тоже потеряете, все будет совсем плохо. А если решения останутся у вас на компьютере, вы хотя бы сможете потом что-то поапеллировать.</p>\n</div>', 'title': 'Про районную/городскую олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_8', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'reg_about', 'order': 10, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix">\n\n<h1>Про областную олимпиаду</h1>\n\n<p><i>(C) Петр Калинин, 2015-20. Этот текст можно свободно распространять на условиях лицензии Creative Commons Attribution-ShareAlike 2.0 (CC-BY-SA). Пожалуйста, при ссылках на этот текст используйте адрес <a href="/material/reg_about" onclick="window.goto(\'/material/reg_about\')();return false;">algoprog.ru/material/reg_about</a></i>\n\n</p><p><font color="red">Часть информации касается только Нижегородской области, часть относится ко всем регионам.</font></p>\n\n<p>Областная олимпиада по информатике (формально — региональный этап Всероссийской олимпиады) пройдет в два тура 16 и 18 января в ННГУ им. Лобачевского.</p>\n\n<h2>Отбор на область</h2>\n\n<p>Отбор на нее осуществляется следующим образом. Решения районной (она же городская в ряде городов области — Дзержинске, Арзамасе и т.д.) олимпиады сводятся по каждому классу в единую таблицу, и в этой таблице проводится граница: для каждого класса выбирается проходной балл, и все, кто набрал столько баллов или больше, проходит на область. Кроме того, вне зависимости от результатов районной олимпиады, на областную проходят призеры прошлогодней областной олимпиады.</p>\n\n<p>В этом году проходные баллы — 200 баллов по каждому классу. На <a href="http://imc.codnn.ru/vserossijskaya-olimpiada-shkolnikov/">сайте ЦОДа</a> есть итоговые результаты и списки участников областной олимпиады (где нужен пароль к архиву — пароль "2019"); в <a href="https://docs.google.com/spreadsheets/d/1Li__hzA7ZjyBR1y-2Nej0tW8TEesP-IG6gbYaPJk81s/edit#gid=0">отдельном гуглодоке</a> я свел результаты из Я.Контеста с результатами с сайта ЦОДа.</p>\n\n<h2>Формат областной олимпиады</h2>\n<p>Ну, во-первых, областная олимпиада — это фактически первая серьезная олимпиада для многих из вас. Школьная и районная олимпиады — это скорее игрушки, как по тому, какие задачи предлагаются, так и по организации вообще и по сложности прохода на следующий этап. Сильные школьники должны проходить на область "на классе", т.е. абсолютно уверенно, не прилагая особенных усилий, чисто за счет уже давно имеющихся навыков. Областная же олимпиада — это совсем другое, там и задачи ощутимо более сложные, и организация лучше. Областная олимпиада проходит в одно и то же время по одним и тем же задачам по всей России, так что это фактически крупнейшая олимпиада по информатике в России.</p>\n\n<p>Областная олимпиада проходит в два тура по пять часов каждый. На каждом туре вам, скорее всего, будут предложены 4 задачи. Примеры прошлогодних задач вы можете посмотреть и попробовать посдавать на этом сайте, ссылка есть в конце раздела "О курсе", в разделе "Архивы старых олимпиад". Но сначала прочитайте до конца этот текст.</p>\n\n<p>Вообще, если раньше вы в областных олимпиадах не участвовали, то я рекомендую вам в зимние каникулы найти свободные пять часов и сесть и порешать какой-нибудь тур с одной из олимпиад последних лет, представляя, что вы реально сидите на олимпиаде. Еще лучше сделать это пару раз. Во-первых, если вы ни разу раньше не писали пятичасовые туры, это вам будет полезно как минимум с точки зрения понимания того, насколько вам сложно просто думать над задачами 5 часов подряд. Во-вторых, вы поймете примерно, чего вы можете ожидать на области.</p>\n\n<h2>Языки программирования</h2>\n<p>Набор языков программирования будет определяться жюри. Почти наверняка будут Free Pascal и C++ (Visual Studio, по идее должен быть минимум C++11). Скорее всего будут C# и Python. Будет ли Pascal ABC, я не знаю. Обычно жюри старается вкючить разумный набор языков, но и вы со своей стороны можете попросить школу официально заявить вам нужный язык и проверить, что он будет. С другой стороны, вроде последние годы серьезных проблем с языками на области не было.</p>\n\n<p>(Вообще, по поводу общения с жюри в целом — я, конечно, могу что-то написать в жюри, и жюри зачастую прислушивается ко мне, но надо понимать, что я не являюсь официальным представителем вас, вашей школы и т.д., поэтому жюри может и полностью проигнорировать мой вопрос. Поэтому помимо того, что я могу общаться с жюри неофициально, вы лично, а также ваши родители и ваша школа могут общаться с жюри официально, и в случае каких-то серьезных проблем это может быть полезно.)</p>\n\n<h2>Система оценивания</h2>\n<p>До 2014<sup>1</sup> года включительно областная олимпиада оценивалась очень похоже на  школьную: вы пять часов писали задачи, после чего жюри брало ваши решения и проверяло на заранее подготовленных тестах; при этом каждый тест оценивался отдельно. В процессе этой проверки вы уже ничего не могли исправить в своих решениях.</p>\n\n<p><sup>1</sup> Областная олимпиада всегда проводится после Нового года, поэтому здесь и ниже, говоря «олимпиада 2014 года», я имею в виду олимпиаду 2013-14 уч. года, и аналогично про другие годы.</p>\n\n<p>С 2015 года введена новая система — так называемая система с подзадачами и фидбеком (обратной связью). Она работает примерно следующим образом.</p>\n\n<h4>Подзадачи</h4>\n\n<p>Во-первых, в каждой задаче выделяются <i>подзадачи</i> — вариации той же задачи, как правило, с меньшими ограничениями или с дополнительными условиями. Например, если в основной задаче сказано $1\\leq N\\leq 10000$, $1\\leq K \\leq 10$, и еще задан массив $a$, а в задаче идет речь про то, что надо как-то ходить направо и налево, то подзадачи могут быть, например, такими:</p>\n<ul>\n<li>Подзадача 1: $N\\leq 100$ и $K=1$;</li>\n<li>Подзадача 2: $N\\leq 100$, но $K&gt;1$;</li>\n<li>Подзадача 3: $K=1$, но $N&gt;100$;</li>\n<li>Подзадача 4: все элементы массива $a$ одинаковы;</li>\n<li>Подзадача 5: в оптимальном решении никогда не надо ходить налево;</li>\n<li>Подзадача 6: никаких дополнительных ограничений нет.</li>\n</ul>\n<p>В каждой подзадаче все не указанные явно ограничения подразумеваются взятыми из основной задачи, например, в четвертой подзадаче подразумевается, что $N\\leq 10000$, $K\\leq 10$ и нет никаких дополнительных условий по тому, как выглядит ответ.</p>\n\n<p>Таким образом, подзадачи — это упрощенные варианты основной задачи. Как правило, для каждой подзадачи существует свой алгоритм решения, который проще, чем алгоритм, решающий полную задачу. Поэтому, если вы можете написать решение полной задачи, то пишите его (почти всегда у задачи есть естественное "полное" решение, которое автоматически решает и подзадачи, поэтому если вы можете без проблем его написать, то напишите, и не думайте про подзадачи), а если нет, то пишите решения подзадач.</p>\n\n<p>При этом подзадачи оцениваются хитро. В некоторых подзадачах, как и раньше, каждый тест оценивается независимо: за каждый тест начисляется несколько баллов, и чем больше вы тестов прошли, тем больше у вас баллов. Но в некоторых подзадачах (обычно в более простых) баллы начисляются по принципу "всё или ничего", т.е. вы получаете не ноль баллов за эту подзадачу <b>только если у вас прошли все тесты этой подзадачи</b>. Т.е. если вы прошли все тесты этой подзадачи, вы получаете полный балл за нее, иначе вы получаете ноль баллов за эту подзадачу. Собственно сами подзадачи обычно оцениваются независимо, но бывает даже так, что очередная подзадача оценивается только если в предыдущих подзадачах все тесты пройдены. Правила оценивания каждой подзадачи указаны в условиях; посмотрите примеры задач прошлых лет, чтобы понять, как это.</p>\n\n<p>Это обозначает, что вам как правило нет смысла писать "какие-то" решения. Вы должны написать решение, которое как минимум абсолютно корректно решает как минимум простые подзадачи. Навыки тестирования задач становятся очень важны; если вы все еще не читали <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">мой текст</a> про это, то прочитайте.</p>\n\n<h4>Фидбек</h4>\n\n<p>Но, чтобы компенсировать увеличение сложности от введения подзадач, также вводится так называемый фидбек. А именно, <b>в течение тура вы можете отправлять ваши решения на проверку</b>. Решения будут проверяться на всех финальных тестах, и после проверки вы можете попросить, чтобы вам сообщили результат этой проверки. Скорее всего, у вас на компьютере будет стоять клиент тестирующей системы нашего жюри, вы через этот клиент будете отправлять решения, и в нем же будет какая-нибудь кнопочка типа "узнать результат этого решения". Соответственно, узнав результат, вы можете дальше планировать свою работу.</p>\n\n<p>Бывают три варианта того, что вам сообщают в качестве результата, и это зависит не только от задачи, но и от подзадачи. В каких-то подзадачах вам могут сообщать информацию по каждому тесту, прошел он или нет (или даже если не прошел, то почему — неправильный ответ, превышение предела времени и т.п. — всё очень похоже на то, что вы видите на этом сайте на закладке "результаты"). В других подзадачах вам могут только сообщать полный балл за эту подзадачу. В третьих подзадачах — первый непройденный тест и вердикт на нем (как на командных олимпиадах). Что именно вам сообщают, обычно указывается в условии.</p>\n\n<p>При этом может быть установлено ограничение на количество посылок вида, например, «по каждой задаче за весь тур вы можете сделать не более 50 попыток», или что-то подобное. Тогда, после того, как у вас кончились эти 50 попыток, вы, видимо, больше не можете решать эту задачу.</p>\n\n<h4>Итоговая оценка</h4>\n\n<p>Итоговая оценка за каждую задачу — это максимальный балл из всех отправленных вами решений. Итоговый суммарный результат, конечно, есть сумма баллов по всем задачам.</p>\n\n<p>Тут важны два момента. Во-первых, учитываются только <i>отправленные</i> в систему решения, а не просто сохраненные вами в вашем рабочем каталоге. Во-вторых, если одно из ваших решений набирает баллы только по одной подзадаче, а второе — только по второй, но вы не сдали решения, которое набирало бы баллы по обеим подзадачам, то вы получите баллы только за одну подзадачу (от того решения, которое набирает больше баллов). Аналогично если одно решение проходит только два теста из некоторой подзадачи, в которой все тесты оцениваются независимо, а другое решение проходит только два других теста, то вы не получите суммарного балла.</p>\n\n<h4>Тесты из условия</h4>\n<p>Раньше присутстввало требование, что ваше решение <b>обязано проходить все тесты из условия</b>, даже если эти тесты не попадают под ограничения той подзадачи, на которую вы нацелились. Например, в примере подзадач, приведенном выше, если в условии есть тест с $K=2$, то, даже если вы придумали только решение для $K=1$ и рассчитываете только на баллы за соответствующую подзадачу, то все равно от вас могут потребовать, чтобы вы прошли тест из условия с $K=2$. Если хотя бы один тест из условия не пройден, то вы получаете ноль баллов за это решение.</p>\n\n<p>В этом году в официальных требованиях про это ничего не написано. Но я не буду удивлен, если в тестирующей системе это будет, поэтому будьте к этому готовы.</p>\n\n<p>В таком случае обязательно убедитесь, что вы умеете проходить все тесты из условия. Если надо, то добавьте соответствующий <code>if</code>, и просто напишите <code>writeln</code> с тем ответом, который указан в условии. Типа того:\n</p><pre>// пусть в условии есть следующие тесты:\n// n=3, k=1, решается основным алгоритмом\n// n=3, k=2, ответ 42\n// n=5, k=2, ответ 137\nread(n,k);\nif k=2 then begin\n    if n=3 then writeln(42)\n    else writeln(137);\n    halt;\nend;\n// дальше решение для k=1\n</pre>\n<p>В условии обычно не так много тестов, и не так уж и сложно написать ряд <code>if</code>\'ов, которые будут все эти тесты различать.</p>\n\n<h4>Явный if</h4>\n<p>Вот выше я уже написал, что тесты из условия можно отличать, написав явный <code>if</code> и <code>writeln</code>. Ничего в этом зазорного нет. Аналогично вы можете писать явный <code>if</code> для различения подзадач. Если вы придумали одно решение для $K=1$ и еще одно решение для случая, когда все элементы массива $a$ равны, то не стесняйтесь написать в программе <code>if</code>, отличающий эти два случая, и запускать разные алгоритмы в зависимости от теста — именно так, если у вас есть решения двух подзадач, вы их можете объединить в одно решение.</p>\n\n<p>Кстати, еще важный момент — если ваша программа видит, что ей попался тест, который не попадает ни под одну подзадачу из тех, для которых у вас есть решение, то не надо сразу вылетать. Хуже не будет, если вы для этого теста запустите решение какой-нибудь подзадачи, вдруг тест-другой так и пройдут.</p>\n\n<h2>Особенности задач</h2>\n<p>Задачи на областной олимпиаде могут быть сильно варьирующимися по сложности. Как правило, самая простая задача будет действительно простой, не требующей ничего знать, примерно уровня 1В. Самая же сложная будет очень сложной, может требовать хитрых знаний, может быть даже уровня эдак 11-го; вообще, год из года только несколько человек по всей России на областных набирают полный балл (800).</p>\n\n<p>Обычно задачи в туре устроены так: первая задача самая простая. Она обычно не требует ничего знать; вы ее должны решать на полный балл. Вторая задача чуть посложнее. Ее тоже хорошо бы решить на полный балл, но это получается не всегда. Третья обычно довольно сложная, но для самых крутых из вас она вполне должна быть по силам. Четвертая же задача обычно очень сложная, почти наверняка никто в области не решит обе четвертых задачи.</p>\n\n<p>Но бывает по-разному. То, что написано в предыдущем абзаце — это наиболее распространенная схема, см, например, первый тур 2014 года как один из самых ярких примеров таких сильно распределенных по сложности задач. Но бывает и так (и последние годы все чаще и чаще), что распределение задач по сложности намного менее выражено. Вполне может первая задача оказаться не самой простой, а последняя вполне посильной; вполне может вторая задача оказаться сравнимой по сложности или даже проще первой. Тем не менее обычно задачи все-таки идут более-менее в порядке возрастания сложности.</p>\n\n<p>Но всегда помните, что в каждой задаче есть подзадачи! Как правило, даже в самых сложных задачах первые подзадачи очень простые; часто в них достаточно перебрать все возможные решения парой вложенных <code>for</code>\'ов или т.п.; в крайнем случае написать рекурсивный перебор или какой-нибудь простой алгоритм. Поэтому обязательно решайте не только первые задачи туров, но и последние (пишите в них простые подзадачи)! Обязательно постарайтесь, чтобы <b>по каждой задаче у вас было ненулевое количество баллов!</b></p>\n\n<p>Вообще, на самом деле, как показывает опыт, вполне реально в каждом туре набрать хотя бы 200 баллов, поэтому и постарайтесь это сделать. В идеале надо решать полностью первые две задачи каждого тура, но, даже если не получилось, то недостающие до 200 баллы можно набрать в более сложных задачах. 400 баллов в сумме за два тура — это вполне достойный результат. (Конечно, это общая рекомендация; ясно, что сильные школьники должны набирать больше, а для не очень сильных и 200-300 в сумме будет хорошо. Но тем не менее баллов 150 в каждом туре обычно можно набрать вообще не думая, поэтому 200 за тур — это хорошая цель для большинства из вас.)</p>\n\n<p>Для сравнения, баллы прохождения на собственно Всероссийскую олимпиаду обычно примерно такие: по 9 классам — 450-580, по 10 классам — 500-600, по 11 классам 550-650. Проход на Россию — это очень и очень хороший результат. (Ну, для всех, кроме тех, кто на Россию уже ездил :) )</p>\n\n<p>Возможно, будет ввод из файла, хотя скорее всего будет будет только ввод с клавиатуры.</p>\n\n<h2>Про языки программирования</h2>\n\n<p>Про питон: на питоне вы, возможно, не сможете в принципе решить отдельные задачи на полный балл (возможно, не сможете решить вторую, а может быть, даже первую) — потому что решение не будет успевать по времени. (Но это не обозначает, что любые проблемы в задаче надо списывать на то, что это питон. Имейте в виду то, что на питоне может не успевать по времени; полезно оценить сложность алгоритма и прикинуть, успел ли бы такой алгоритм на C++; но если вы придумали явно неоптимальный алгоритм, то надо все-таки придумать нормальный алгоритм.) Но эту невозможность решить задачи на полный балл вы можете компенсировать тем, что на питоне вы можете заметно быстрее и легче писать небольшие подзадачи в сложных задачах, да и первую задачу вы возможно напишите быстрее, чем ваши друзья, пишущие на C++. С другой стороны, если вы хотите иметь хороший результат на областной олимпиаде, то, конечно, надо бы уже знать C++ (но если вы хотите иметь хороший результат, то наверное вы уже минимум на 3 уровне, а тогда про C++ вы уже читали).</p>\n\n<p>Если же вы знаете и C++, и питон, то, конечно, по каждой задаче выбирайте, на каком языке лучше писать.</p>\n\n<p>Паскаль по производительности сравним с C++, поэтому там проблем со временем работы быть не должно.</p>\n\n<h2>Тактика поведения на туре</h2>\n<p>Во-первых, все мои рекомендации из <a href="/material/module-15955_1" onclick="window.goto(\'/material/module-15955_1\')();return false;">текста про школьную олимпиаду</a> справедливы. Прочитайте все условия сразу, еще до того, как что-то программировать. Контролируйте время, не зависайте над одной задачей надолго. Как я уже писал выше и как писал в тексте про школьную олимпиаду, старайтесь, чтобы по всем задачам у вас был не ноль. Сохраняйте решения, чтобы, если у вас зависнет компьютер или выключится электричество, решения не пропали; вообще, полезно привыкнуть нажимать "сохранить" (F2 или Ctrl-S в разных средах программирования) каждые минуту-другую.</p>\n\n<p>Обязательно внимательно сравнивать ответ с примером. Один раз был случай, когда участник выводил два числа на двух разных строках, а в задаче требовалось вывести два числа на одной строке — и тестирующая система нашего местного жюри отказывалась засчитывать это решение (хотя это и не соответствовало требованиям центрального всероссийского жюри). Конечно, это вина жюри, но школьнику от этого было не сильно легче (после тура мы отапеллировали эти баллы, но время на туре было все равно потрачено). Поэтому если вы видите, что ваша программа выводит не совсем то, что в примере, тщательно перепроверьте, правда ли, что ваше решение правильное.</p>\n\n<p>Но наличие фидбека и четко выделенных подзадач вносит свои ньюансы в тактику. Во-первых, если вы видите, что задача простая, то напишите ее, сдайте, убедитесь, что у вас 100 баллов, и забудьте про нее вообще. Более конкретно: если вы считаете, что какая-то задача простая, если вы думаете, что там особенно негде ошибиться, то напишите ее, слегка потестируйте, не тестируйте подробно (!) и сдайте. Если у вас 100, то забудьте про нее. Если же нет, то начинайте тестировать. Не тратьте время на простые задачи, если вы можете сразу проверить, работают они или нет. (Если есть ограничение на количество попыток по задаче, то сказанное выше справедливо, если у вас еще было немного попыток по задаче. В таком случае помните про ограничение количества попыток по задаче; чем меньше у вас остается попыток, тем тщательнее тестируйте и аккуратнее расходуйте попытки.)</p>\n\n<p>В более сложных задачах часто бывает полезно написать первую подзадачу, если она простая и пишется недолго. А именно, подумайте над сложной задачей. Если сразу ничего, что могло бы решить задачу полностью, в голову не приходит, то попробуйте придумать решение к первой подзадаче. Если получилось придумать простое решение, то напишите его и сдайте — у вас уже станет не ноль баллов, и заодно вы будете уверены, что вы понимаете задачу верно. Наконец, простое решение потом можно использовать для стресс-тестов. Но это только для не самых простых задач; в простых задачах не тратьте время на подзадачи, если вы можете написать полностью задачу!</p>\n\n<p>Наоборот, если вы написали "полное" решение, оно на ваших тестах работает, но у жюри упорно набирает мало баллов, то можно написать простое решение первой подзадачи, отправить его, убедиться, что уж оно-то верное, и дальше написать стресс-тестирование. Очень полезно заранее научиться стресс-тестированию (см. еще раз <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">текст про тестирование задач</a>)!</p>\n\n<p>Контролируйте время до конца тура. Если вы придумали сложное решение, которое может решить сложную задачу полностью, но видите, что вы рискуете не успеть его дописать (и помните, что вам наверняка придется его отлаживать и тестировать! — вряд ли оно сразу 100 наберет), то может быть проще прерваться и написать простое решение по той же задаче, чтобы уж гарантированно иметь не ноль.</p>\n\n<p>Если есть ограничение на количество попыток по задаче, то контролируйте количество оставшихся попыток. 50 попыток — это реально много и в подавляющем большинстве случаев достаточно, но если вы будете их активно расходовать, то они могут внезапно кончиться. Вообще, по всем задачам, кроме самых сложных, думаю, реально использовать не больше 5 попыток за тур.</p>\n\n<p>Конечно, даже если самую простую подзадачу вы уже решили, это не значит, что надо сразу бросаться на полное решение — все вышеописанные соображения применимы, но к следующим подзадачам. Если не получается придумать или написать полное решение, то напишите решение к еще одной подзадаче, объедините с написанным ранее и сдайте. Помните, что подзадачи сделаны не просто так, каждая подзадача имеет какое-то более простое решение.</p>\n\n<p>Не теряйте решения! Вообще, постарайтесь сохранять все свои решения, которые вы отправляете в систему и которые там набирают какие-то баллы. Будет очень неприятно, если вы решили простую подзадачу, потом стали писать общий алгоритм, он в результате не заработал даже для простой подзадачи, а решения простой подзадачи у вас уже нет. Конечно, правило оценки лучшего решения вас частично от этого спасает, но лучше подстрахуйтесь. Еще хуже если вы решили первую подзадачу, начали писать вторую подзадачу, она у вас даже заработала, но при этом сломалось решение первой. Вам бы объединить два решения, но для этого надо иметь решение первой подзадачи.</p>\n\n<p>В частности, не полагайтесь на то, что вы сможете скачать решение из тестирующей системы! Система может заглючить, может потерять ваши решения, и т.д. — если и вы их тоже потеряете, все будет совсем плохо. А если решения останутся у вас на компьютере, то, на худой конец, вы сможете их использовать для апелляции.</p>\n\n<p>Вообще, я бы считал, что у успешного участника должны быть примерно следующие "вехи" во времени (конечно, это "средняя температура по больнице", т.е. варьироваться может очень и очень сильно, но тем не менее) (время везде от начала тура):</p>\n<ul>\n<li>0:10: прочитаны все задачи;</li>\n<li>0:45-1:00: есть 100 по одной из задач;</li>\n<li>2:00-2:30: есть 100 по двум задачам или в крайнем случае 100+60;</li>\n<li>3:30: написаны простые подзадачи в двух сложных задачах, соответственно есть 100+100+30+20 или в крайнем случае 100+60+30+20;</li>\n<li>оставшееся время добиваем недорешанные задачи.</li>\n</ul>\n<p>Еще раз: это очень среднее, и это "идеал" для такого "среднего", и это из предположения, что задачи сильно распределены по сложности. Но это очень грубый ориентир.</p>\n\n<p>Да, все написанное про подзадачи выше подразумевает, что у каждой задачи есть естественное правильное решение, автоматически решающее и все подзадачи тоже; в таком случае вы теоретически можете решить задачу полностью, не думая про подзадачи вообще; так обычно и бывает. Но я не исключаю, что могут быть и задачи, где подзадачи различны настолько, что даже в самом простом и правильном решении удобнее их рассматривать отдельно.</p>\n\n<h2>Особенности C++</h2>\n<p>Если вы пишите на C++, то есть ряд особенностей, которые вам полезно и даже необходимо знать.</p>\n<h4>Быстрый ввод-вывод</h4>\n<p>Стандартный ввод/вывод через <code>iostream</code> (т.е. с использованием <code>cin</code>/<code>cout</code>) по умолчанию работает медленно на больших данных. Если вам надо ввести, допустим, 100000 чисел, то с использованием <code>cin</code> вы наверняка получите time limit; аналогично если вам надо выводить много данных. Это связано с двумя проблемами.</p>\n\n<p>Во-первых, медленно работает <code>endl</code> (для тех, кто понимает — вывод в <code>cout</code> буферизуется, но <code>endl</code> каждый раз сбрасывает буфер, реально выводя данные на диск, а реальный доступ к диску работает медленно). Поэтому не используйте <code>endl</code> вообще, используйте <code>\'\\n\'</code>.</p>\n\n<p>Во-вторых, есть еще проблема синхронизации с <code>stdio</code> (не буду сейчас подробнее писать, что это значит). Чтобы эту проблему побороть, есть три способа:</p>\n<ul>\n<li>Работать с файлами, а не с клавиатурой/экраном (если это будет допустимо на олимпиаде). У <code>fstream</code> таких проблем со скоростью работы нет.</li>\n<li>Использовать для ввода/вывода конструкции из <code>stdio.h</code> (<code>scanf</code> и <code>printf</code>), а не из <code>iostream</code>.</li>\n<li>Написать в самом начале программы две магические строчки (их надо выучить наизусть): \n<pre>std::ios_base::sync_with_stdio(false);\nstd::cin.tie(nullptr);\n</pre></li></ul>\n\n<p>Лично я вам рекомендую использовать первый или последний вариант.</p>\n\n<p>Еще раз: есть <b>две</b> проблемы: одна с <code>endl</code>, другая с синхронизацией stdio и iostream. Одна решается тем, что вы не используете <code>endl</code>, другая — вот одним из трех описанных выше способов. Вам надо решить <b>обе</b> проблемы, т.е. и не использовать <code>endl</code>, и как-то разобраться с синхронизацией. Типичная ошибка — написать в начале программы этот страшный код с <code>sync_with_stdio</code>, но выводить все равно через <code>endl</code>. Получите time limit exceeded все равно.\n\n</p><h4>Установка стека в Visual Studio</h4>\n<p>В популярных компиляторах C++ по умолчанию установлен очень маленький размер стека. Если в вашей программе глубокая рекурсия (например, если вы пишете поиск в глубину), то программа может упасть.</p>\n\n<p>В GCC попросить большой размер стека из самой программы невозможно, это должно настраивать жюри при настройке компиляции. На нормальных олимпиадах жюри прописывает большой размер стека в настройки компиляции, будет ли это на нашей области — я не знаю.</p>\n\n<p>Но в Visual Studio можно установить необходимый размер стека прямо из программы примерно следующей конструкцией (проверьте заранее!): <code>#pragma comment(linker, "/STACK:32000000")</code>, здесь число — это необходимый вам размер стека в байтах (в этом примере 32 миллиона байт, т.е. примерно 32 Мб). Размер стека можете посчитать в уме исходя из вашей программы, а можете и подобрать опытным путем — 32-64 Мб обычно достаточно. Учитывайте еще, конечно, ограничение по памяти.</p>\n\n<p>Поэтому если жюри на олимпиаде нормально настроит стек в gcc (это должно быть видно в строках компиляции gcc в памятке участника), то сдавайте под gcc. Иначе если ваше решение под gcc не влезает в стек, то добавьте эту магическую строку и сдавайте под Visual Studio.</p>\n\n<h2>Про надежность тестирующих систем</h2>\n<p>Возможно, на турах будет использоваться тестирующая система нашего жюри, но скорее всего будет Яндекс.Контест (как последние несколько лет и на области, и на районе), возможно, какая-то еще из известных тестирующих систем. С любой системой возможны различные проблемы, например, тестирующая система нашего жюри может неправильно оценивать корректность решений (см. выше пример с выводом в одной строке или на разных строках), а Яндекс.Контест печально известен тем, что регулярно не справляется с нагрузкой на первом туре и тестирует решения по несколько часов (!); на втором туре все обычно работает нормально. Правда, в прошлом году вроде с этим уже не было проблем, надеюсь, что и в этом не будет. Я не знаю, какая система будет в этом году, и будут ли в ней проблемы и какие, поэтому если что-то идет не так, то думайте головой и действуйте по обстоятельствам. Например, если ваши решения тестируются долго — не паникуйте, а просто переключайтесь на другие задачи, ну и тщательнеее сами тестируйте те решения, которые вы отправляете на проверку.</p>\n\n<h2>Дополнительные замечания</h2>\n<h4>Не пугайтесь!</h4>\n<p>Год из года регулярно многие школьники на областной олимпиаде показывают результат хуже, чем от них можно было ожидать. Возможно, многие пугаются непривычной системы задач, системы тестирования и т.д. Так вот, не пугайтесь. Вы вполне способны показать весьма неплохой результат.</p>\n\n<h4>Ищите обходные решения проблем</h4>\n<p>Если у вас что-то не получается, вы не помните, как что-то сделать в вашем языке программирования и т.п. — подумайте, как эту проблему можно обойти. Если вы не помните простого способа что-то сделать, то, может быть, есть более сложный? Если у вас не работает какой-то код, может быть, можно написать как-то по-другому, пусть и сложнее, но надежнее? И т.д.</p>\n\n<h4>Неполадки на туре</h4>\n<p>Если у вас на туре что-то из оборудования работает не так, как вы хотите, сразу же спрашивайте жюри! Если, например, не работает клавиатура, или если программа не запускается с очень непонятными сообщениями об ошибках, то сразу зовите жюри! У нас в ННГУ часто бывает так, что антивирус мешает нормальной работе (например, удаляя exe-шник сразу после его создания, или очень задерживая запуск программы — вы в ННГУ на занятиях иногда это наблюдали, на занятиях это еще не так страшно, но на олимпиаде — ненормально) — сразу зовите жюри и просите отключить антивирус. Если жюри решает вашу проблему долго, требуйте компенсации времени.</p>\n\n<h4>Не уходите без баллов</h4>\n<p>По идее, после каждого тура у вас будет обед в столовой университета, потом разбор задач и объявление итогов тура. Я очень вам рекомендую дождаться объявления итогов. Последнее время обычно жюри раздает каждому участнику бумажки с его баллами — вот получите эту бумажку, чтобы проверить, что все подсчитано верно. У нашего жюри регулярно случаются проблемы с подсчетом баллов, поэтому лучше дождитесь и проверьте, что все соответствует вашим ожиданиям. Конечно, вы по идее должны знать свои баллы за счет фидбека, но лучше все-таки дождитесь бумажки.</p>\n\n<p>Я буду на олимпиаде на втором туре как перед туром, так и после тура и на закрытии; и постараюсь также подъехать когда-нибудь в день первого тура (или на открытие, или после тура, или и тогда и тогда). Если окажется, что вам неправильно посчитали баллы, то мы с вами можем пойти и поругаться. Но если вы уйдете раньше и не получите бумажку с результатами, то я сам за вас ругаться не пойду; как минимум, вы намного лучше меня знаете, чего вы ожидали.</p>\n\n<h4>Укажите меня своим преподавателем</h4>\n<p>Как я где-то уже писал, <b>пожалуйста, укажите меня своим преподавателем</b>, если наши занятия были для вас достаточно полезными. А именно, попросите школу указать меня преподавателем в заявке. На регистрации на олимпиаду перед первым туром обычно можно проверить, кто у вас указан и, если хотите, наверное можно будет исправить.</p>\n\n<h4>Прочитайте этот текст еще раз перед олимпиадой</h4>\n<p>Я могу вспомнить что-то и добавить в этот текст новую информацию. Поэтому прочитайте его перед олимпиадой еще раз.</p>\n\n<h4>Местное жюри и вариации</h4>\n<p>Все написанное выше написано по мотивам официальных правил областной олимпиады. К сожалению, наше местное жюри не всегда понимает эти правила до конца. (Правила, равно как и условия задач и тесты, составляются централизованно на всю Россию.) Например, в 2015 году они не хотели обеспечивать фидбек. Поэтому будьте готовы к каким-нибудь вариациям (например, они могут сказать, что финально будет оцениваться только то решение, которое вы оставите у себя в рабочем каталоге, а не то, которое вы сдавали). Мое мнение — пока эти вариации не сильно вам портят жизнь, не стоит ругаться с жюри; если же это что-то серьезное, то будем ругаться.</p>\n\n<p>Например, если они хотят, чтобы вы оставляли свое решение в рабочем каталоге — ну так сохраните свое лучшее решение и оставьте, не так уж это и сложно, так и вам и мне и жюри спокойнее. Конечно, если в итоге вы сохраните по ошибке не то решение и потеряете баллы из-за того, то будем ругаться, но лучше до этого не доводить. Если же жюри что-то глобальное сделает не так (например, отменит фидбек), то я буду ругаться сразу.</p>\n\n<p>Полные официальные Требования к проведению регионального этапа, которые обязательны к соблюдению во всех регионах, можно почитать <a href="http://vserosolymp.rudn.ru/mm/mpp/files/tr20/Информатика%20-%20Требования%20к%20проведению%20регионального%20этапа%202020.pdf">вот здесь</a>. Рекомендую почитать всем, кто участвует в регионе не первый раз и серьезно рассчитывает на высокий балл; а также если у вас возникли какие-то специфические вопросы (например, «можно ли разные задачи решать на разных языках программирования»).</p>\n\n<h1>Советы от <a href="/user/254947" onclick="window.goto(\'/user/254947\')();return false;"><span class="_client_components_UserName__name" style="color:#7b0000">Алексея Упирвицкого</span></a></h1>\n\n<p>(c) Алексей Упирвицкий, CC-BY-SA</p>\n\n<p>В этом тексте представлены мои личные идеи относительно регионального тура ВСОШ. Я основываюсь на своем опыте и опыте своих товарищей.</p>\n\n<p>Самым лучшим способом подготовки к региону будет прорешивание прошлогодних регионов и подготовка своей стратегии.\nТак как тур идет 5 часов, ближе к концу вы можете устать и быть куда менее продуктивными нежели в самом начале, и если вы не распределите время заранее, то можете что-то не успеть. Поэтому я предлагаю вам написать 2-3 тура и засечь, сколько времени у вас занимает та или иная задача. </p>\n\n<p>Например: <br>\nзадача А — 45 минут;<br>\nзадача В — 1.5 часа; <br>\nчто-то разумное в С — час;<br>\nполный перебор в Д — 20 минут.</p>\n\n<p>Имея такой приблизительный план, вы не будете терять время на туре, думая: что бы мне сейчас порешать. </p>\n\n<p>Вообще, в идеале стратегия должна выглядеть так:</p>\n\n<p>А — до часу. Если так происходит, что через час задача А не решена — нельзя отчаиваться и продолжать ее пихать. Нужно переключиться на задачу В и полностью погрузиться в работу над ней.</p>\n\n<p>В — еще час после А вы решаете задачу В. Записываете все свои мысли и пишете какое-нибудь решение. Пусть не на 100, но на 40-60 баллов оно должно быть. </p>\n\n<p>Теперь, когда прошло 2 часа от начала тура, я рекомендую оставить А и В и открыть D (конечно, нельзя оставлять задачу если вы прямо сейчас ее пишете или у вас есть абсолютно верная идея на очень много баллов).</p>\n\n<p>Наверное, большинство из вас удивится выбору задачи D, но это правильный выбор. Всегда в этой задаче есть подзадача на ~10 баллов, которая сдается полным перебором (вообще, я рекомендую потренироваться сдавать полный перебор заранее, это полезный навык — быстро и аккуратно написать его). Таким образом вы сможете избавиться от задачи D и отдохнуть от А и В. Возможно, это позволит взглянуть на них по-новому и придумать новое решение. </p>\n\n<p>Эти полчаса не думайте о других задачах. Да, это сложно, так как написание перебора зачастую не требует активной мыслительной деятельности, но вам нужен перерыв.</p>\n\n<p>Таким образом, прошло 2.5 часа от начала контеста, у вас сдана D на максимум который может набрать тупняк, и вы остаетесь с тремя задачами. Сейчас нужно посмотреть на А и В. Уделите каждой из них по полчаса. Скорее всего после перерыва вы сможете сгенерировать новые идеи. Прошло 3.5 часа, и нужно открывать задачу С. По моему мнению, задача С — это самое странное, что есть на регионе (но об этом позже), именно поэтому я рекомендую ее открывать последней. </p>\n\n<p>Дальше все зависит от задачи. В 2017-2018 году была задача \n<a href="/material/p113763" onclick="window.goto(\'/material/p113763\')();return false;">«Красота фейерверка»</a> и она была простой. Даже проще В, на мой взгляд (и многих других участников того года).\nНо с другой стороны, порой бывают очень сложные С. Поэтому важно быстро понять, сдавать ли ее на 100 или на частичные. Мой совет: первые  полчаса старайтесь придумать ее на 100, а если не получилось — полчаса сдавайте ее на частичные баллы. Так у вас останется полчаса, и идеальной будет разбалловка вида: 100 100 50± 20±\nЕсли она не такая, не надо отчаиваться, потому что получить идеальный результат сложнее, чем кажется.</p>\n\n<p>Теперь стоит сказать несколько слов про каждую позицию на контесте:\nЯ специально не буду рассматривать задачи с прошлого года. Почему — объясню позже.</p>\n<p>A — обычно простая задача. Очень часто формула, например: <a href="/material/p113757" onclick="window.goto(\'/material/p113757\')();return false;">«Улучшение успеваемости»</a> или <a href="/material/p113443" onclick="window.goto(\'/material/p113443\')();return false;">«Автоматизированное управление доставкой»</a></p>\n<p>В — конструктив/дп/бин-поиск не сложные темы. Просто нужно догадаться до решения. Очень часто помогает перебор всех известных вам алгоритмов, которые хоть как то могут сюда подойти.</p>\n<p>С — обычно что то очень идейное или структуры данных. Хорошим результатом будет сдать все подгруппы, не требующие мощных структур, и, может, еще одну с использованием неоптимальных структур. </p>\n<p>D — Что то очень сложное, что порой практически никто не сдает в стране. </p>\n\n<p>Почему я не касаюсь прошлого года? Потому что тур был очень сложным. Неоправдано сложным. По моему мнению, в этом году тур будет сильно проще. Например, как в 2016-17 или 2017-18 году. </p>\n\n<p>Мое мнение относительно тем по задачам: </p>\n<p>А — будет один конструктив и один бинпоиск</p>\n<p>В — думаю, что будет алгоритм на графах/конструктив/простые структуры данных. Например, дерево отрезков.</p>\n<p>С — в последние годы была подозрительная мода на интерактивные задачи, поэтому будьте готовы к ним. Будет забавно, если опять будет Декартово Дерево. Поговаривают про дп и его оптимизации. Но я больше думаю про что-то на графах/структурах данных. В задаче С всегда есть подвох. Она либо простая, либо сложная. Про нее не понятно, что можно дать, поэтому изворачиваются как могут.</p>\n<p>D — какая-то сложная, никому не известная тема, или старый добрый баян. Тут возможны оптимизации дп. Но если это так, то всем рекомендую оптимизацию buben вида: ну давайте переберем не все, а ±константу. Например, если в дп вам приходится пересчитывать значение через все предыдущие, но у вас есть подозрение, что вас не интересуют некоторые, смело пишите что-то в духе\n</p><pre><code>for (int i = 0; i &lt; n; ++i)\n    for (int j = i; j &gt;= max(0, i - buben); --j)\n</code></pre>\nВозможно, будут очень сложные строки.<p></p>\n\n<p>Вообще, есть такая тема как Сканлайн, и она может быть на любой позиции, потому что на нее можно накрутить практически что угодно.</p>\n\n<p>Также у каждого из вас есть тема, про которую вы уверены, что ее не будет, и потому не нужно ее учить. Поверьте моему опыту, именно она и будет. Так что повторите все, по чему у вас просадки. Сдайте пару прошлых регионов. Потренируйтесь писать перебор.</p>\n\n<p>Постарайтесь изучить корневую эвристику. Она позволяет делать полезные трюки и получать много баллов.</p>\n\n<p>Еще: подзадачи вам даны не только для того чтобы пихать, а для того чтобы тестировать! Что я имею ввиду: у вас есть идея на много баллов но почему то wa. Вы берёте и начинаете по частям код разбирать.</p>\n\n<p>Например есть подзадача на квадрат и есть на N log N.\nВот вы берёте и основную идею оставляете, а то что делает лог заменяете на простой алгоритм, работающий за линию.\nТак вы можете понять в какой части кода ошибка.</p>\n\n<p>Вообще не рекомендую сразу писать код на 100.\nЛучше выделить несколько ключевых идей и протестировать их так.\nДа, вы потратите время, но избавите себя от возможного дебага.</p>\n<p>Ещё иногда подзадачи могут натолкнуть на правильное решение. \nБерете простую подзадачу, которую знаете как решать, берете более сложную и начинаете думать, чем таким эти задачи отличаются, можно ли из решения простой подзадачи сделать решение сложной, или наоборот, сложную подзадачу свести к простой.</p>\n\n<p>Полезные статьи на codeforces (<i>это в первую очередь для уже реально крутых школьников, уровня эдак 5-6+ — П.К.</i>):<br>\n<a href="https://codeforces.com/blog/entry/44351">https://codeforces.com/blog/entry/44351</a><br>\n<a href="https://codeforces.com/blog/entry/63823">https://codeforces.com/blog/entry/63823</a><br>\n<a href="https://codeforces.com/blog/entry/45223">https://codeforces.com/blog/entry/45223</a><br>\n</p>\n\n<h1>Разбор районной олимпиады</h1>\n\n<p>Возможно, со временем я добавлю сюда разбор районной олимпиады.</p></div>', 'title': 'Про областную олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_10', 'order': 11, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_11', 'order': 12, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про Нижегородскую городскую олимпиаду им. В.Д. Лелюха</h1>\n<p>В феврале 2019 года (ориентировочно 8 февраля, но возможно дата будет изменена) состоится XVI Нижегородская городская олимпиада школьников по информатике им. В.Д. Лелюха. Я рекомендую подавать заявку всем школьникам моего курса, которые являются учениками школ города Нижнего Новгорода (не области!), и имеющим уровень как минимум 1В. Можете подать заявку и если у вас уровень ниже, но, возможно, задачи даже отбора вам покажутся сложными.</p>\n\n<p>Для участия в олимпиаде надо подать заявку. Информация про олимпиаду и порядок подачи заявок (приказ Департамента образования Администрации г. Н. Новгорода № 965 от 23.12.2019) уже направлен в школы города, поэтому ваши школы должны быть в курсе. Также приказ выставлен на <a href="http://olympiads.nnov.ru">сайте олимпиады</a> в разделе "Новости"; если до вашей школы он не дошел, то скачайте его с сайта олимпиады и покажите своим учителям или завучам.</p>\n\n<p>В принципе, подать заявку на вас может кто угодно — и ваша школа, и вы лично. Но не плодите заявки; если ваша школа сама подаст заявку на вас, то не дублируйте заявку. Если по каким-то причинам они не будут подавать заявку, или вы не уверены, подадут они или нет, то можете сами заполнить анкету по ссылке из приказа. В любом случае, даже если школа подает заявку за вас, все равно следите за <a href="http://olympiads.nnov.ru">сайтом олимпиады</a>, там будет появляться информация о рассмотрении заявок.</p>\n\n<p>Отбор на олимпиаду будет проводиться из числа заполнивших заявку по итогам районной и школьной олимпиад, также будет проведен дополнительный заочный отборочный тур 18 января. Подробная информация есть в приказе (см. на сайте олимпиады), а также информация будет разослана после заполнения заявок.</p>\n\n<p>На этой олимпиаде я председатель жюри, поэтому я не буду вам писать про нее столь подробно, как про другие олимпиады. Но изучите сайт олимпиады, посмотрите задания прошлых лет, чтобы понимать, чего ожидать. И прочитайте и применяйте те же рекомендации, которые я пишу по другим олимпиадам.</p>\n\n<p>На олимпиаду также будет приглашено несколько участников из области; их мы будем приглашать лично с учетом результатов областной олимпиады.</p>\n\n</div>', 'title': 'Про Нижегородскую городскую олимпиаду им. В.Д. Лелюха', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_12', 'order': 13, 'indent': 0, 'type': 'label', 'title': '', 'content': '<p><a href="https://codeforces.com/blog/entry/70187">Олимпиада Технокубок</a></p>\n<p><a href="https://olympiads.ru/zaoch/">Открытая олимпиада школьников по программированию ("заочка")</a> — очень известная и крупная олимпиада, заодно еще и поступательная. Советую участвовать, хотя задачи не самые простые.\n</p>\n\n\n<hr>\n\n<h2>Летняя компьютерная школа</h2>\n<p>\nЛетняя компьютерная школа (ЛКШ) — это очень круто, у нее только один недостаток: она платная (поездка стоит около 50 тыс. рублей).</p>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_13', 'order': 14, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><center><img src="https://lksh.ru/sis/scripts/logo.png" style="background:#000055;padding:10px;width:80%"></center>\n<h1>Летняя компьютерная школа — 2020</h1>\n\n<!--<p><b><font size=+1>NEW (29.03.2017):</font></b> <a href="https://docs.google.com/document/d/1Jc8JWvVeIMdTQGmqRgVMUFl6-xEvLOCGa43RwLP1QuE/pub">Советы по поступлению</a></p>-->\n\n<p><a href="http://lksh.ru">Летняя компьютерная школа (ЛКШ)</a> — это летняя школа для учащихся средних и старших классов, занимающихся программированием. ЛКШ проходит в две смены по три недели (в июле и в конце июля-августе, каждый школьник может поехать только в одну смену). Традиционным местом проведения школы является база отдыха "Берендеевы Поляны" в Костромской области, но последнее время смены нередко проводятся и в других местах.</p>\n\n<p>В ЛКШ приезжают школьники со всей России; преподавателями являются учителя школ и преподаватели вузов Москвы, Санкт-Петербурга и других городов, организаторы и члены жюри различных олимпиад, сильные студенты российских вузов. (Я многие годы ездил в ЛКШ преподавателем, правда, в этом году, скорее всего, не поеду.) В ЛКШ очень хорошая учебная программа, также очень хорошая внеучебная программа. От Нижегородской области (и от лицея 40) туда регулярно ездят несколько школьников (см., например, <a href="http://poldnev.ru/lksh/cities/Nizhny_Novgorod">здесь</a>). Более подробная информация про ЛКШ <a href="https://lksh.ru/sis/2019/aboutlksh.shtml">здесь</a> (это пока страничка прошлого года).</p>\n\n<p>На сайте пока никакой информации за этот год нет, но для общей справки вполне можете смотреть информацию прошлого года. Еще много информации в <a href="https://vk.com/sis">группе вКонтакте</a>.</p>\n\n<!--\n<p>В этом году июльская смена пройдет с 4 по 24 июля на базе отдыха «Берендеевы поляны» в Костромской области (это самое стандартное место для ЛКШ). Августовская смена <b>предварительно</b> пройдет в Эстонии в отеле «Laagna» с 31 июля по 20 августа. Вступительная работа будет опубликована ориентировочно 25 марта, выполнить её нужно будет до 22 апреля.</p> -->\n\n<p>Я <b>очень рекомендую</b> всем, кто может, и при этом имеет достаточный уровень программирования, туда поехать. А именно:</p>\n<ul>\n<li>Всем 8-классникам и младше, имеющим уровень как минимум 1Б, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем 9-классникам, имеющим уровень как минимум 1Г, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем вообще (кроме 11-классников, конечно), имеющим уровень как минимум 2Б, даже если у вас нет возможности поехать — все равно как минимум постараться поступить, если поступите, то будем думать, как вам поехать.</li>\n</ul>\n<p>Отбор в ЛКШ осуществляется по результатам выполнения вступительной работы, которую надо написать в марте-апреле.</p>\n\n<p>Еще раз: <b>ЛКШ — это очень и очень круто и полезно!</b> Поэтому всем, кто имеет уровень хоть сколько-то выше начального, имеет смысл туда поехать.</p>\n\n<p>Правда, есть проблема: участие в ЛКШ платное (ЛКШ проводится группой инициативных преподавателей и не имеет государственной поддержки), стоимость участия (3 недели: проживание, питание, занятия) в 2019 году была около 50000 рублей, в этом году будет, скорее всего, больше. Если вы можете оплатить эту сумму, то хорошо; иначе вы можете написать заявление на социальную скидку, и скорее всего она будет вам предоставлена за счет спонсорских средств ЛКШ (см. для примера  <a href="https://lksh.ru/sis/2019/zacisl/skidki.shtml">информацию о скидках 2019 года</a>).</p>\n\n<p>Школьники, расскажите про ЛКШ своим родителям! Если у ваших родителей есть какие-то вопросы, пусть звонят мне. <b>Если вы уже планируете лето, постарайтесь запланировать поездку в ЛКШ.</b> (Я специально говорю вам про ЛКШ настолько заранее, т.к. знаю, что многие планируют лето еще зимой.) Ближе к поступлению я тут напишу более подробную информацию. Если возникают какие-то вопросы, обращайтесь. См. также советы по поступлению в ЛКШ ниже.</p>\n\n<p>Сайт школы со всей информацией — <a href="http://lksh.ru">lksh.ru</a>.</p>\n\n<!-- <p><b><font color=red>NEW:</font></b> <a href="https://docs.google.com/document/d/e/2PACX-1vQkAIuVK7ZErO0mVYd8hVcYOKCP6m9r3dQ5VhzOkrfn6cNw0Aj3tZ2zkQFdN4Fw4v1f7CIsVmuMh-Rt/pub">Советы по поступлению в ЛКШ</a></p> -->\n\n<p>Ролик про ЛКШ разных лет (довольно старый уже; другие, тоже старые, видео есть на <a href="http://www.youtube.com/user/pakalinin">моем канале</a>):</p>\n\n<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/4nVl5MHeqIY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>', 'title': 'Информация про школу, читать всем!', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_14', 'order': 15, 'indent': 0, 'type': 'label', 'title': '', 'content': '<p><b>Я настоятельно рекомендую:</b></p>\n<ul>\n<li>Всем 8-классникам и младше, имеющим уровень как минимум 1Б, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем 9-классникам, имеющим уровень как минимум 1Г, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем вообще (кроме 11-классников, конечно), имеющим уровень как минимум 2Б, даже если у вас нет возможности поехать — все равно как минимум постараться поступить, если поступите, то будем думать, как вам поехать.</li>\n</ul>\n\n\n\n\n\n\n<h2>Архивы старых олимпиад</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-18043_0', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="https://www.dropbox.com/s/brq5dotrg4lmym2/raion_archive.pdf?dl=0">Архив прошлых районных олимпиад</a> (в тестирующей системе их скорее всего нигде нет)\n<hr>\n<a href="/material/reg">Областные олимпиады прошлых лет</a> (у нас в тестирующей засчитываются только полные баллы, но на реальной олимпиаде частичные решения тоже оцениваются)', 'path': []}], 'force': False, '_id': '0', 'order': 0, 'type': 'level', 'indent': 0, 'title': 'О курсе', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-16127_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 1</h2>', 'indent': 0}, {'_id': '1А', 'title': 'Уровень 1А', 'type': 'level'}, {'_id': 'module-15941_0t', 'title': '', 'type': 'label', 'content': 'Арифметические операции', 'indent': 20}, {'_id': 'module-15942_0t', 'title': '', 'type': 'label', 'content': 'Условный оператор', 'indent': 20}, {'_id': 'module-49287_0t', 'title': '', 'type': 'label', 'content': 'Как отлаживать программы', 'indent': 20}, {'_id': 'module-15943_0t', 'title': '', 'type': 'label', 'content': 'Циклы', 'indent': 20}, {'_id': '1Б', 'title': 'Уровень 1Б', 'type': 'level'}, {'_id': 'module-15945_0t', 'title': '', 'type': 'label', 'content': 'Массивы', 'indent': 20}, {'_id': 'module-15946_0t', 'title': '', 'type': 'label', 'content': 'Символы и строки', 'indent': 20}, {'_id': 'module-15947_0t', 'title': '', 'type': 'label', 'content': 'Вещественные числа', 'indent': 20}, {'_id': '1В', 'title': 'Уровень 1В', 'type': 'level'}, {'_id': 'module-21146_0t', 'title': '', 'type': 'label', 'content': 'Вещественные числа', 'indent': 20}, {'_id': 'module-15980_0t', 'title': '', 'type': 'label', 'content': 'Основы тестирования задач (без контеста)', 'indent': 20}, {'_id': 'module-16264_0t', 'title': '', 'type': 'label', 'content': 'Задачи', 'indent': 20}, {'_id': '1Г', 'title': 'Уровень 1Г', 'type': 'level'}], 'force': False, '_id': '1', 'order': 1, 'type': 'level', 'indent': 0, 'title': 'Уровень 1', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-15997_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 2</h2>', 'indent': 0}, {'_id': '2А', 'title': 'Уровень 2А', 'type': 'level'}, {'_id': 'module-15998_0t', 'title': '', 'type': 'label', 'content': '*Работа с файлами (без контеста)', 'indent': 20}, {'_id': 'module-16005_0t', 'title': '', 'type': 'label', 'content': '*Функции (без контеста)', 'indent': 20}, {'_id': 'module-16007_0t', 'title': '', 'type': 'label', 'content': 'НОД, алгоритм Евклида', 'indent': 20}, {'_id': 'module-16010_0t', 'title': '', 'type': 'label', 'content': '*Рекурсивный перебор', 'indent': 20}, {'_id': 'module-16018_0t', 'title': '', 'type': 'label', 'content': 'Квадратичные сортировки', 'indent': 20}, {'_id': 'module-25197_0t', 'title': '', 'type': 'label', 'content': 'Задачи "на технику"', 'indent': 20}, {'_id': '2Б', 'title': 'Уровень 2Б', 'type': 'level'}, {'_id': 'module-16027_0t', 'title': '', 'type': 'label', 'content': 'Сложность алгоритмов (без контеста)', 'indent': 20}, {'_id': 'module-16035_0t', 'title': '', 'type': 'label', 'content': 'Основы динамического программирования', 'indent': 20}, {'_id': 'module-16039_0t', 'title': '', 'type': 'label', 'content': 'Стек, дек, очередь', 'indent': 20}, {'_id': 'module-16042_0t', 'title': '', 'type': 'label', 'content': 'Простые числа и разложение на множители', 'indent': 20}, {'_id': 'module-25223_0t', 'title': '', 'type': 'label', 'content': 'Простая жадность', 'indent': 20}, {'_id': '2В', 'title': 'Уровень 2В', 'type': 'level'}], 'force': False, '_id': '2', 'order': 2, 'type': 'level', 'indent': 0, 'title': 'Уровень 2', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-16093_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 3</h2>', 'indent': 0}, {'_id': '3А', 'title': 'Уровень 3А', 'type': 'level'}, {'_id': 'module-16272_0t', 'title': '', 'type': 'label', 'content': 'Проcтые графы', 'indent': 20}, {'_id': 'module-16275_0t', 'title': '', 'type': 'label', 'content': 'Поиск в ширину', 'indent': 20}, {'_id': 'module-16279_0t', 'title': '', 'type': 'label', 'content': 'Бинарный поиск (поиск делением пополам)', 'indent': 20}, {'_id': '3Б', 'title': 'Уровень 3Б', 'type': 'level'}, {'_id': 'module-16305_0t', 'title': '', 'type': 'label', 'content': 'Системы счисления. Двоичная система счисления.', 'indent': 20}, {'_id': 'module-16343_0t', 'title': '', 'type': 'label', 'content': 'Два указателя', 'indent': 20}, {'_id': 'module-16369_0t', 'title': '', 'type': 'label', 'content': 'Основы поиска в глубину', 'indent': 20}, {'_id': 'module-16373_0t', 'title': '', 'type': 'label', 'content': 'Продвинутое тестирование задач (без контеста)', 'indent': 20}, {'_id': '3В', 'title': 'Уровень 3В', 'type': 'level'}], 'force': False, '_id': '3', 'order': 3, 'type': 'level', 'indent': 0, 'title': 'Уровень 3', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-16470_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 4</h2>', 'indent': 0}, {'_id': '4А', 'title': 'Уровень 4А', 'type': 'level'}, {'_id': 'module-16472_0t', 'title': '', 'type': 'label', 'content': 'Логарифмические сортировки', 'indent': 20}, {'_id': 'module-16577_0t', 'title': '', 'type': 'label', 'content': 'Динамическое программирование: баяны', 'indent': 20}, {'_id': 'module-16614_0t', 'title': '', 'type': 'label', 'content': 'Связные списки', 'indent': 20}, {'_id': 'module-16618_0t', 'title': '', 'type': 'label', 'content': 'Хранение графов списками смежности', 'indent': 20}, {'_id': '4Б', 'title': 'Уровень 4Б', 'type': 'level'}, {'_id': 'module-16682_0t', 'title': '', 'type': 'label', 'content': 'Алгоритм Дейкстры', 'indent': 20}, {'_id': 'module-16685_0t', 'title': '', 'type': 'label', 'content': 'Сортировка подсчетом', 'indent': 20}, {'_id': 'module-16786_0t', 'title': '', 'type': 'label', 'content': 'Длинная арифметика', 'indent': 20}, {'_id': 'module-16789_0t', 'title': '', 'type': 'label', 'content': 'Сортировка событий', 'indent': 20}, {'_id': '4В', 'title': 'Уровень 4В', 'type': 'level'}], 'force': False, '_id': '4', 'order': 4, 'type': 'level', 'indent': 0, 'title': 'Уровень 4', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-16885_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 5</h2>', 'indent': 0}, {'_id': '5А', 'title': 'Уровень 5А', 'type': 'level'}, {'_id': 'module-16887_0t', 'title': '', 'type': 'label', 'content': 'Тернарный (троичный) поиск', 'indent': 20}, {'_id': 'module-16952_0t', 'title': '', 'type': 'label', 'content': 'Задачи средней сложности на ДП', 'indent': 20}, {'_id': 'module-42872_0t', 'title': '', 'type': 'label', 'content': 'Хеширование', 'indent': 20}, {'_id': '5Б', 'title': 'Уровень 5Б', 'type': 'level'}, {'_id': 'module-17239_0t', 'title': '', 'type': 'label', 'content': 'Куча', 'indent': 20}, {'_id': 'module-17295_0t', 'title': '', 'type': 'label', 'content': 'Продвинутый алгоритм Дейкстры', 'indent': 20}, {'_id': 'module-19008_0t', 'title': '', 'type': 'label', 'content': 'Рекурсивный перебор', 'indent': 20}, {'_id': 'module-19010_0t', 'title': '', 'type': 'label', 'content': 'Применения сортировки', 'indent': 20}, {'_id': '5В', 'title': 'Уровень 5В', 'type': 'level'}], 'force': False, '_id': '5', 'order': 5, 'type': 'level', 'indent': 0, 'title': 'Уровень 5', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-19470_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 6</h2>', 'indent': 0}, {'_id': '6А', 'title': 'Уровень 6А', 'type': 'level'}, {'_id': 'module-19472_0t', 'title': '', 'type': 'label', 'content': 'Алгоритмы Флойда и Форда-Беллмана', 'indent': 20}, {'_id': 'module-19475_0t', 'title': '', 'type': 'label', 'content': 'Простые игры на графах', 'indent': 20}, {'_id': 'module-19478_0t', 'title': '', 'type': 'label', 'content': 'Поиск в ширину в 1-k и 0-k графах', 'indent': 20}, {'_id': '6Б', 'title': 'Уровень 6Б', 'type': 'level'}, {'_id': 'module-19481_0t', 'title': '', 'type': 'label', 'content': 'Жадные алгоритмы', 'indent': 20}, {'_id': 'module-19483_0t', 'title': '', 'type': 'label', 'content': 'Простая геометрия', 'indent': 20}, {'_id': '6В', 'title': 'Уровень 6В', 'type': 'level'}], 'force': False, '_id': '6', 'order': 6, 'type': 'level', 'indent': 0, 'title': 'Уровень 6', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-25508_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 7</h2>', 'indent': 0}, {'_id': '7А', 'title': 'Уровень 7А', 'type': 'level'}, {'_id': 'module-25510_0t', 'title': '', 'type': 'label', 'content': 'Сложные задачи на поиск в глубину', 'indent': 20}, {'_id': 'module-25513_0t', 'title': '', 'type': 'label', 'content': 'Алгоритм Кнута-Морриса-Пратта (КМП)', 'indent': 20}, {'_id': 'module-25515_0t', 'title': '', 'type': 'label', 'content': 'Z-функция', 'indent': 20}, {'_id': '7Б', 'title': 'Уровень 7Б', 'type': 'level'}, {'_id': 'module-25518_0t', 'title': '', 'type': 'label', 'content': 'Sqrt-декомпозиция, она же корневая эвристика', 'indent': 20}, {'_id': 'module-25520_0t', 'title': '', 'type': 'label', 'content': 'Дерево отрезков', 'indent': 20}, {'_id': 'module-25527_0t', 'title': '', 'type': 'label', 'content': 'Декартово дерево', 'indent': 20}, {'_id': '7В', 'title': 'Уровень 7В', 'type': 'level'}], 'force': False, '_id': '7', 'order': 7, 'type': 'level', 'indent': 0, 'title': 'Уровень 7', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-26191_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 8</h2>', 'indent': 0}, {'_id': '8А', 'title': 'Уровень 8А', 'type': 'level'}, {'_id': 'module-26193_0t', 'title': '', 'type': 'label', 'content': 'Системы непересекающихся множеств и минимальный остов', 'indent': 20}, {'_id': 'module-26195_0t', 'title': '', 'type': 'label', 'content': 'Паросочетания и связанные темы', 'indent': 20}, {'_id': 'module-26197_0t', 'title': '', 'type': 'label', 'content': 'Функция Гранди', 'indent': 20}, {'_id': '8Б', 'title': 'Уровень 8Б', 'type': 'level'}, {'_id': 'module-26200_0t', 'title': '', 'type': 'label', 'content': 'Сложные задачи на ДП', 'indent': 20}, {'_id': 'module-26202_0t', 'title': '', 'type': 'label', 'content': 'Декартово дерево по неявному ключу', 'indent': 20}, {'_id': 'module-26204_0t', 'title': '', 'type': 'label', 'content': 'Геометрия средней сложности', 'indent': 20}, {'_id': '8В', 'title': 'Уровень 8В', 'type': 'level'}], 'force': False, '_id': '8', 'order': 8, 'type': 'level', 'indent': 0, 'title': 'Уровень 8', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-35188_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 9</h2>', 'indent': 0}, {'_id': '9А', 'title': 'Уровень 9А', 'type': 'level'}, {'_id': 'module-35191_0t', 'title': '', 'type': 'label', 'content': 'Простые потоки', 'indent': 20}, {'_id': 'module-35194_0t', 'title': '', 'type': 'label', 'content': 'Дерево Фенвика', 'indent': 20}, {'_id': 'module-35698_0t', 'title': '', 'type': 'label', 'content': 'LCA', 'indent': 20}, {'_id': '9Б', 'title': 'Уровень 9Б', 'type': 'level'}, {'_id': 'module-35703_0t', 'title': '', 'type': 'label', 'content': 'Групповые операции на деревьях', 'indent': 20}, {'_id': 'module-35706_0t', 'title': '', 'type': 'label', 'content': 'Бор и алгоритм Ахо-Корасик', 'indent': 20}, {'_id': 'module-35708_0t', 'title': '', 'type': 'label', 'content': 'Многомерные деревья', 'indent': 20}, {'_id': '9В', 'title': 'Уровень 9В', 'type': 'level'}], 'force': False, '_id': '9', 'order': 9, 'type': 'level', 'indent': 0, 'title': 'Уровень 9', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-39719_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 10</h2>', 'indent': 0}, {'_id': '10А', 'title': 'Уровень 10А', 'type': 'level'}, {'_id': 'module-39721_0t', 'title': '', 'type': 'label', 'content': 'Продвинутая теория чисел, китайская теорема об остатках', 'indent': 20}, {'_id': 'module-39723_0t', 'title': '', 'type': 'label', 'content': 'Суффиксные структуры данных', 'indent': 20}, {'_id': 'module-39768_0t', 'title': '', 'type': 'label', 'content': 'Сложная геометрия', 'indent': 20}, {'_id': '10Б', 'title': 'Уровень 10Б', 'type': 'level'}, {'_id': 'module-39862_0t', 'title': '', 'type': 'label', 'content': 'Mincost-maxflow', 'indent': 20}, {'_id': 'module-39864_0t', 'title': '', 'type': 'label', 'content': 'Паросочетание максимального веста, венгерский алгоритм', 'indent': 20}, {'_id': 'module-39866_0t', 'title': '', 'type': 'label', 'content': 'Матрицы и их применение к ДП', 'indent': 20}, {'_id': '10В', 'title': 'Уровень 10В', 'type': 'level'}], 'force': False, '_id': '10', 'order': 10, 'type': 'level', 'indent': 0, 'title': 'Уровень 10', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'materials': [], 'force': False, '_id': 'reghead', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Региональные олимпиады</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}]}, {'force': False, '_id': 'reg2009', 'order': 2009, 'type': 'level', 'indent': 0, 'title': '2009', 'content': '', 'path': []}, {'force': False, '_id': 'reg2010', 'order': 2010, 'type': 'level', 'indent': 0, 'title': '2010', 'content': '', 'path': []}, {'force': False, '_id': 'reg2011', 'order': 2011, 'type': 'level', 'indent': 0, 'title': '2011', 'content': '', 'path': []}, {'force': False, '_id': 'reg2012', 'order': 2012, 'type': 'level', 'indent': 0, 'title': '2012', 'content': '', 'path': []}, {'force': False, '_id': 'reg2013', 'order': 2013, 'type': 'level', 'indent': 0, 'title': '2013', 'content': '', 'path': []}, {'force': False, '_id': 'reg2014', 'order': 2014, 'type': 'level', 'indent': 0, 'title': '2014', 'content': '', 'path': []}, {'force': False, '_id': 'reg2015', 'order': 2015, 'type': 'level', 'indent': 0, 'title': '2015', 'content': '', 'path': []}, {'force': False, '_id': 'reg2016', 'order': 2016, 'type': 'level', 'indent': 0, 'title': '2016', 'content': '', 'path': []}, {'force': False, '_id': 'reg2017', 'order': 2017, 'type': 'level', 'indent': 0, 'title': '2017', 'content': '', 'path': []}, {'force': False, '_id': 'reg2018', 'order': 2018, 'type': 'level', 'indent': 0, 'title': '2018', 'content': '', 'path': []}, {'force': False, '_id': 'reg2019', 'order': 2019, 'type': 'level', 'indent': 0, 'title': '2019', 'content': '', 'path': []}], 'force': False, '_id': 'reg', 'order': 100, 'type': 'level', 'indent': 0, 'title': 'Региональные олимпиады', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'materials': [], 'force': False, '_id': 'roihead', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Всероссийские олимпиады</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}]}, {'force': False, '_id': 'roi2009', 'order': 2009, 'type': 'level', 'indent': 0, 'title': '2009', 'content': '', 'path': []}, {'force': False, '_id': 'roi2010', 'order': 2010, 'type': 'level', 'indent': 0, 'title': '2010', 'content': '', 'path': []}, {'force': False, '_id': 'roi2011', 'order': 2011, 'type': 'level', 'indent': 0, 'title': '2011', 'content': '', 'path': []}, {'force': False, '_id': 'roi2012', 'order': 2012, 'type': 'level', 'indent': 0, 'title': '2012', 'content': '', 'path': []}, {'force': False, '_id': 'roi2013', 'order': 2013, 'type': 'level', 'indent': 0, 'title': '2013', 'content': '', 'path': []}, {'force': False, '_id': 'roi2014', 'order': 2014, 'type': 'level', 'indent': 0, 'title': '2014', 'content': '', 'path': []}, {'force': False, '_id': 'roi2015', 'order': 2015, 'type': 'level', 'indent': 0, 'title': '2015', 'content': '', 'path': []}, {'force': False, '_id': 'roi2016', 'order': 2016, 'type': 'level', 'indent': 0, 'title': '2016', 'content': '', 'path': []}, {'force': False, '_id': 'roi2017', 'order': 2017, 'type': 'level', 'indent': 0, 'title': '2017', 'content': '', 'path': []}, {'force': False, '_id': 'roi2018', 'order': 2018, 'type': 'level', 'indent': 0, 'title': '2018', 'content': '', 'path': []}, {'force': False, '_id': 'roi2019', 'order': 2019, 'type': 'level', 'indent': 0, 'title': '2019', 'content': '', 'path': []}], 'force': False, '_id': 'roi', 'order': 200, 'type': 'level', 'indent': 0, 'title': 'Всероссийские олимпиады', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'table:header', 'type': 'label', 'content': '<h1>Сводные таблицы</h1>'}, {'_id': 'tables:lic40', 'title': 'Лицей 40', 'type': 'level'}, {'_id': 'tables:lic87', 'title': 'Лицей 87', 'type': 'level'}, {'_id': 'tables:zaoch', 'title': 'Нижегородские школьники', 'type': 'level'}, {'_id': 'tables:vega', 'title': 'Вега', 'type': 'level'}, {'_id': 'tables:notnnov', 'title': 'Остальные школьники', 'type': 'level'}, {'_id': 'tables:stud', 'title': 'Студенты и старше', 'type': 'level'}], 'force': False, '_id': 'tables', 'type': 'level', 'title': 'Сводные таблицы', 'path': [{'_id': 'main', 'title': '/'}]}]
In convert_level main materials= [{'materials': [{'materials': [], 'force': False, '_id': 'module-20927_0', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_1', 'order': 1, 'type': 'epigraph', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Надо думать головой!</h2>\n<p>Девиз нашего курса — «Надо думать головой!»</p>\n\n<p>Это обозначает, что все время при работе на спецкурсе вам надо думать. Вам нужно думать над тем, как решать те или иные задачи, как сделать много что еще. У вас не будет универсальных рецептов, которые позволят решить все задачи — наоборот, самые лучшие, самые интересные задачи — те, где от вас требуется что-то придумать.</p>\n\n<p>Кроме того, к любой получаемой информации, ко всему, что написано в учебниках, ко всему, что я вам говорю, что написано на страничку курса, относитесь всегда критически. Думайте, пытайтесь понять, почему это написано, почему вам советуют делать так, а не иначе. В учебниках, в том, что вам говорят другие люди, и тем более в моих материалах и советах легко могут быть ошибки, опечатки, наконец, вы, возможно, найдете более простые способы добиться того же — поэтому никогда не принимайте на веру то, что вы где-нибудь прочитали, всегда обдумывайте и перерабатывайте полученную информацию. Может так оказаться, что в одном месте вы прочитаете одну информацию, а в другом месте — диаметрально противоположную — подумайте, проверьте (см. ниже), и поймите, как делать лучше.</p>\n\n<p>Кроме того, не бойтесь экспериментировать! Если вы не уверены, можно ли в питоне/паскале/... написать ту или иную команду, отработает ли она так, как вы ожидаете — попробуйте: напишите и проверьте. Если вы точно не помните, как пишется какая-нибудь команда — попробуйте перебрать варианты, пока не получится. Если вы в разных местах прочитали совсем разную информацию о том, как что-то надо сделать — возьмите и проверьте, какой способ работает! Не бойтесь пробовать, не бойтесь экспериментировать — так вы научитесь намного большему, чем если просто будете строго следовать тому, что написано в каких-либо учебниках, что вам кто-то сказал.</p></div>', 'title': 'Надо думать головой!', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_2', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_3', 'order': 3, 'type': 'epigraph', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><div style="text-align:right;width:100%;padding-bottom:2ex;"><i>There are nine and sixty ways of constructing tribal lays,<br>\nAnd every single one of them is right!</i><br><br>\nRudyard Kipling. In the Neolithic Age<br><br><br>\nЕсть девять и шестьдесят способов писать песни племен<br>\nИ каждый из них без исключения верный!<br><br>\nРедьярд Киплинг. В эпоху Неолита</div>\n\n<p>У каждой задачи есть очень много решений, и многие из них — верные. Не следует ожидать, что у каждой задачи есть единственное правильное решение; бывают решения лучше, бывают решения хуже, но почти всегда есть два-три существенно разных решения, которые все весьма хороши, и из которых сложно выбрать одно лучшее. Будьте готовы к этому, будьте готовы видеть эти разные решения и разные подходы.</p>\n\n<p>В частности, если у вас есть ошибка в программе, то обычно есть много способов ее исправить. Поэтому не удивляйтесь, если вы меня спрашиваете, как исправить ошибку, а я вам предлагаю несколько вариантов исправления.</p></div>', 'title': 'There are nine and sixty ways of constructing tribal lays,\nAnd every single one of them is right!', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_4', 'order': 4, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Самая главная информация</h2>\n\n<div><a href="https://www.youtube.com/watch?v=kTC7z1NpOb4">\nВводная видеолекция про занятия на алгопроге (дублирует основную информацию ниже)</a></div>\n\n<div style="height:1ex;"></div>\n\n<div><b>Для начала</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_5', 'order': 5, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Общие вопросы (FAQ) по курсу</h2>\n<h3>Что это за курс?</h3>\n<p>Это курс по алгоритмическому программированию (фактически, по олимпиадным задачам). В первую очередь, он ориентирован на учеников лицея 40 Нижнего Новгорода, а также школьников Нижнего Новгорода и Нижегородской области, у которых в школе нет занятий по алгоритмическому программированию, или которых чем-то не устраивают такие занятия в их школе. Но при этом, если в этом курсе захотят участвовать школьники не из Нижегородской области, я ничего против иметь не буду.</p>\n\n<h3>Что за странный формат? Что за занятия в лицее 40 и в ННГУ?</h3>\n<p>В этом курсе можно заниматься полностью заочно — по многим темам материалы есть на сайте, и вы всегда можете написать вопрос мне. Кроме того, по материалам этого курса я веду очные занятия в лицее 40 (только для учеников лицея) и в ННГУ (для всех желающих). Но при этом у нас нет регулярных лекций по строгому расписанию, все школьники занимаются в своем темпе, поэтому можно ходить и в лицей, и в ННГУ, можно ходить не каждый раз. Поэтому это получается такой очно-заочный курс.</p>\n\n<h3>Чему тут учат?</h3>\n<p>Основное направление — это алгоритмическое программирование. Начиная с основ программирования, и далее в алгоритмы и структуры данных. Это то, что по-английски называется Computer Science. С существенным уклоном в сторону олимпиадного программирования (в первую очередь по линии Всероссийской олимпиады школьников), тем более что задачи на олимпиадах — это как раз задачи на алгоритмы и структуры данных.</p>\n\n<h3>Чему тут НЕ учат?</h3>\n<p>Мы не будем специально заниматься "техническими" вопросами:</p>\n<ul>\n<li>Созданием пользовательских интерфейсов, кнопочек, окошек и т.д.</li>\n<li>Программированием под конкретные платформы: созданием web-приложений, программированием под Android, iOS и т.п.</li>\n</ul>\n<p>Мы будем изучать алгоритмы, которые лежат в основе многих таких программ (мы не будем обсуждать, как сделать кнопку "сортировать по алфавиту", но будем обсуждать, как реализовать сортировку, когда список объектов для сортировки уже есть).</p>\n<p>Кроме того, мы не будем специально готовиться к ЕГЭ или поступлению в вузы. Тем не менее, задачи части C ЕГЭ по информатике — это фактически довольно простые олимпиадные задачи, поэтому если вы хорошо решаете олимпиадные задачи, то проблем с ЕГЭ у вас быть не должно.</p>\n\n<h3>Вы действительно будете учить?</h3>\n<p>И да, и нет. Формат заочного курса подразумевает, что существенную часть материала вы будете изучать сами. Я буду скорее направлять вас, советуя, где можно посмотреть тот или иной вопрос, на каких задачах отладить навыки, а также буду довольно активно комментировать ваши программы. Кроме того, вы всегда можете со мной связаться (контакты на главной странице курса) и задать любой вопрос.</p>\n\n<h3>Какой язык программирования?</h3>\n<p>Сложный вопрос, точнее вопрос с длинным ответом.</p>\n<p>Если вы только еще начинаете программировать, то я рекомендую использовать Python 3. Теоретические материалы для начинающих я буду подбирать именно по Python.</p>\n<p>Еще один популярный вариант — C++, но я настоятельно не рекомендую его выбирать, если вы только начинаете учиться программировать. Если же вы где-то уже научились неплохо писать на C++ (контрольный вопрос: какой тип данных вы используете для работы со строками и насколько это для вас сложно), то можете писать на C++. Теории по C++ на начальных уровнях нет, но если вы его где-то уже изучили, то она вам не нужна :) Если же вы неуверенно знаете темы уровня 1, то лучше учите питон по материалам на сайте.</p>\n<p>Довольно популярный вариант — Паскаль. Раньше я его рекомендовал, но в современном мире единственная причина учить паскаль — если вас в школе учат на паскале, вы уже неплохо его знаете, и не хотите распыляться на два языка. На самом деле, даже в этом случае я рекомендую вам изучить питон и заниматься в этом курсе на питоне, но в принципе, если хотите, то можете заниматься и на паскале. Теории по паскалю на сайте нет, но если вы его изучаете в школе и неплохо его знаете, то теория вам не нужна :) Если же вы неуверенно знаете темы уровня 1, то лучше учите питон по материалам на сайте.</p>\n<p>Но в целом я не настаиваю на том или ином выборе языка. Вы можете заниматься на любом языке из тех, которые поддерживается этим сайтом (только еще раз хорошо взвесьте все плюсы и минусы); правда, я сам лучше всего знаю паскаль, питон и c++, поэтому по другим языкам моя помощь вам будет ограничена . Ну и теории по другим языкам на сайте нет.</p>\n<p>Если у вас возникают вопросы, то свяжитесь со мной.</p>\n\n<h3>Что от меня требуется для занятий?</h3>\n<p>От вас требуется, в первую очередь, желание заниматься. Я не ваш школьный учитель, не ваш родитель, я не могу чего-то требовать от вас; ваше присутствие здесь — дело добровольное. Я не буду вас торопить, или ругать вас, если вы ничего не делаете неделями. Но при этом понимайте, что каких-либо результатов можно добиться только регулярными занятиями; если вы хотите конкретных цифр по тому, сколько времени надо выделить, то я бы считал, что как минимум два раза в неделю часа по 2-3 выделить надо, а лучше больше. (Для школьников, которые ходят ко мне на очные занятия, я рекомендую, в добавок в 2-3 часовому очному занятию, еще примерно столько же заниматься дома.) Но <b>следите за этим сами</b>, я не буду стоять у вас над душой. (Родителям и учителям: если вы хотите контролировать успехи ваших детей, см. отдельный документ по ссылке с главной страницы курса, и/или напишите мне.)</p>\n<p>Тот же принцип с моей стороны относится и к остальным вопросам: я лишь советую вам что-то, но не могу требовать. Если вы хотите выбрать определенный язык программирования вопреки моим рекомендациям — ну хорошо; и т.п.</p>\n<p>Но при этом учтите, что не только ваше участие здесь — дело добровольное, но и моя вам помощь — это тоже дело добровольное. Естественно, я с большей радостью буду помогать школьнику, который активно занимается, чем школьнику, который что-то пытается делать раз в месяц, и т.п.</p>\n\n<h3>А какие изначальные знания требуются? И каких классов могут быть школьники?</h3>\n<p>По программированию — от никаких и выше. Вообще, заочный формат позволяет реализовать почти индивидуальное обучение (т.е. я готов каждому школьнику выдавать личные задания), поэтому я готов принимать школьников, начиная от тех, кто ничего не умеет, и до школьников существенно более высокого уровня.</p>\n<p>Важными являются предварительные знания по математике. Опыт показывает, что чем сильнее математическая подготовка у школьника, тем он лучше занимается программированием. Поэтому если вы участвуете (пусть и на невысоком уровне) в математических олимпиадах — это вам плюс.</p>\n<p>Я ожидаю здесь видеть школьников от 7 и до 11 класса. Если школьник сильный (участвует в олимпиадах или конкурсах по математике, или как минимум весьма хорошо знает школьную программу), то можно и 5-6 классы. Для сильных школьников, чем раньше начать заниматься программированием, тем лучше.</p>\n\n<h3>Что надо сделать, чтобы начать заниматься?</h3>\n<p>Прочитайте документ "Инструкция для тех, кто здесь в первый раз" (ссылка на главной странице курса) и сделайте то, что там написано.</p>\n\n<h3>Когда можно начать заниматься? Когда "следующий набор"?</h3>\n<p>К курсу можно присоединится в любое время. Все равно занимающиеся школьники имеют довольно разный уровень подготовки, поэтому никакой единой программы типа "на этой неделе проходим то-то, на следующей то-то, а если вы пропустили или слишком поздно узнали о курсе, то ждите следующей группы или следующего года" нет.</p>\n<p>Единственное — во время праздников или летом у меня может быть ограничен доступ к интернету, поэтому я могу не так быстро отвечать на ваши письма, смотреть ваши решения и т.д.</p>\n<p>То же относится и к очным занятиям, можно присоединиться на любом занятии. Только проверьте, нет ли на главной странице курса объявления об отмене очередного занятия (например, из-за праздников); кроме того, летом занятий нет. На всякий случай можете мне заранее написать и уточнить, когда проходят занятия.</p>\n\n<h3><i>— И как думаешь, Василич? Будет от этой работы толк?</i></h3>\n<p><i>— А вот поработаешь, Петр Николаич, увидишь!</i><br>\n(Лев Успенский. Сопка «Камянистка», или торжество науки.)</p>\n<p>Конечно, я не гарантирую, что стоит начать заниматься, и вы сразу достигнете высоких результатов. Это зависит от многого, в том числе то того, что за пределами моего влияния — в первую очередь, математического образования, общей математической культуры, да и одаренности школьника; а также от трудолюбия и желания заниматься. Но думаю, что для большинства школьников, имеющих нужный склад мышления, эти занятия будут полезны.</p>\n\n<h3>А кто вообще вы такой?</h3>\n<p>Я — Петр Андреевич Калинин, к.ф.-м.н., старший разработчик компании Яндекс, выпускник ВШОПФ ННГУ. Я в свое время активно участвовал в различных олимпиадах: бронзовый призер международной олимпиады школьников по информатике (IOI) 2001 года, золотой призер IOI 2002 года; в составе команды ННГУ дважды участник финала чемпионата мира по командному программированию ACM (ACM ICPC). Я много лет езжу преподавателем в Летнюю компьютерную школу, крупнейшую российскую летнюю школу по алгоритмическому программированию; я постоянный член жюри Нижегородской городской олимпиады школьников по программированию (последние годы — председатель жюри). С 2017 по 2019 год я преподавал в Школе анализа данных Яндекса. Я ученик В.Д. Лелюха.</p>\n\n<p>В том или ином виде я учу школьников программированию с тех пор, как сам окончил школу в 2002 году (я ездил преподавателем в различные летние школы и т.п.); этот курс существует с 2013 года. Среди моих учеников — ряд участников и один победитель заключительного этапа Всероссийской олимпиады школьников по информатике (не считая моего брата Николая, в обучении которого я тоже принимал не последнее участие и который является абсолютным победителем заключительного этапа 2013 года и дважды — в 2013 и 2014 годах — золотым призером международной олимпиады школьников по информатике).</p>\n\n<p>Команды школьников под моим руководством регулярно участвуют в Нижегородской и Всероссийской командных олимпиада школьников по программированию. На большинстве прошедших к данному моменту Нижегородских командных олимпиадах абсолютное первое место занимала моя команда; на Всероссийской командной олимпиаде мои команды регулярно становятся призерами, нередко — медалистами, а два раза — занимали абсолютное первое место.</p>\n\n<p>Вы всегда можете связаться со мной, контактные данные указаны на главной странице курса.</p>\n\n<h3>А что за сайт informatics.mccme.ru?</h3>\n<p>Informatics.mccme.ru — это сайт дистанционной подготовки по информатике, организованный Московским центром непрерывного математического образования (МЦНМО) и Московским институтом открытого образования (МИОО); он очень удобен для организации курсов подобных этому, и, как вы можете видеть на главной странице сайта, реально широко используется, но в первую очередь для организации очных занятий. Я не имею непосредственного отношения к этому сайту (хотя и знаком с людьми, которые его создали и поддерживают).</p>\n\n<p>Этот курс строится на базе материалов с informatics и использует его в качестве тестирующей системы (а раньше вообще курс существовал только на informatics). Местами еще могли остаться ссылки на информатикс, если обнаруживаете такую, пишите мне.</p></div>', 'title': 'FAQ для школьников', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_6', 'order': 6, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_7', 'order': 7, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><div style="text-align:center;"><font size="+2">Занятия алгоритмическим программированием для студентов, выпускников вузов и вообще всех желающих</font></div>\n\n<h3>Что это за курс?</h3>\n<p>Это курс по алгоритмическому программированию (алгоритмы, структуры данных и т.д.)</p>\n\n<p>Он в первую очередь рассчитан на школьников и в качестве подготовки к школьным олимпиадами (и многие материалы в курсе написаны именно как для школьников), но также в курсе могут заочно заниматься (и реально занимаются) вообще все желающие: студенты, выпускники вузов и т.д. Занятия для нижегородских школьников бесплатные, для всех остальных — платные.</p>\n\n<p>Эта страничка — она как раз для студентов, выпускников и т.д., а не для школьников. Для школьников есть <a href="/material/module-20927_5" onclick="window.goto(\'/material/module-20927_5\')();return false;">отдельная страничка</a>.</p>\n\n<h3>Чему тут учат?</h3>\n<p>Основное направление — это алгоритмическое программирование. Начиная с основ программирования, и далее в алгоритмы и структуры данных. Это то, что по-английски называется Computer Science.</p>\n\n<h3>Чему тут НЕ учат?</h3>\n<p>Мы не занимаемся "техническими" вопросами:</p>\n<ul>\n<li>Созданием пользовательских интерфейсов, кнопочек, окошек и т.д.</li>\n<li>Программированием под конкретные платформы: созданием web-приложений, программированием под Android, iOS и т.п.</li>\n<li>Использованием различных фреймворков, библиотек и т.д.</li>\n</ul>\n<p>Мы будем изучать алгоритмы, которые лежат в основе многих таких программ (мы не будем обсуждать, как сделать кнопку "сортировать по алфавиту", но будем обсуждать, как реализовать сортировку, когда список объектов для сортировки уже есть).</p>\n\n<h3>Вы действительно будете учить?</h3>\n<p>И да, и нет. Формат заочного курса подразумевает, что существенную часть материала вы будете изучать сами. Я буду скорее направлять вас, советуя, где можно посмотреть тот или иной вопрос, на каких задачах отладить навыки, а также буду довольно активно комментировать ваши программы. Кроме того, вы всегда можете со мной связаться (контакты на главной странице курса) и задать любой вопрос.</p>\n\n<h3>Какой язык программирования?</h3>\n<p>Вообще говоря, какой хотите, из тех, что позволяют писать консольные приложения и поддерживаются этим сайтом. Это C++, Java, Python, C#, PHP, Ruby, Perl, Pascal, Basic, даже 1С. </p>\n\n<p>При этом, если вы еще не знаете никакого языка программирования, то я рекомендую Python. На страничке курса есть материалы для начинающих по питону. Если вы знаете какой-то из перечисленных в предыдущем абзаце языков, то можете использовать его; но вообще все продвинутые темы не зависят от языка.</p>\n\n<p>Лично я лучше всего знаю C++, питон и паскаль; по этим языкам я смогу вам достаточно подробно помогать. По другим языкам я не смогу вам подсказывать по различным тонкостям языка, хотя, как показывает опыт, для алгоритмов это не очень существенно.</p>\n\n<h3>А какие изначальные знания требуются?</h3>\n<p>По программированию — от никаких и выше. Вообще, заочный формат позволяет реализовать почти индивидуальное обучение (т.е. каждый участник курса занимается в своем ритме и режиме), поэтому я ожидаю здесь людей с широким спектром начальных знаний: от студентов младших курсов, только начинающих программировать, до уже профессиональных программистов, желающих улучшить свои знания в области алгоритмов.</p>\n\n<h3>Что надо сделать, чтобы начать заниматься?</h3>\n<ul>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (для этого вас попросят еще зарегистрироваться на сайте informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, где вы учитесь/работаете. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля".</li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты в разделе "О курсе" на главной странице курса.</li>\n<li>Дождитесь ответа и дальнейших инструкций от меня.\n</li>\n</ul>\n<p></p>\n\n<h3>Когда можно начать заниматься? Когда "следующий набор"?</h3>\n<p>К курсу можно присоединится в любое время. Все равно занимающиеся имеют довольно разный уровень подготовки, поэтому никакой единой программы типа "на этой неделе проходим то-то, на следующей то-то, а если вы пропустили или слишком поздно узнали о курсе, то ждите следующей группы или следующего года" нет.</p>\n<p>Единственное — во время праздников или летом у меня может быть ограничен доступ к интернету, поэтому я могу не так быстро отвечать на ваши письма, смотреть ваши решения и т.д.</p>\n\n<h3>Занятия только заочные?</h3>\n<p>Да, очных занятий для не-школьников нет. А если бы и были, то стоили бы намного дороже.</p>\n\n<h3>А кто вообще вы такой?</h3>\n<p>Я — Петр Андреевич Калинин, к.ф.-м.н., старший разработчик компании Яндекс, выпускник ВШОПФ ННГУ. Я в свое время активно участвовал в различных олимпиадах: бронзовый призер международной олимпиады школьников по информатике (IOI) 2001 года, золотой призер IOI 2002 года; в составе команды ННГУ дважды участник финала чемпионата мира по командному программированию ACM (ACM ICPC). С 2017 по 2019 год я преподавал в Школе анализа данных Яндекса. Я ученик В.Д. Лелюха.</p>\n\n<p>В том или ином виде я учу школьников программированию с тех пор, как сам окончил школу в 2002 году (я ездил преподавателем в различные летние школы и т.п.); этот курс существует с 2013 года. Среди моих учеников — ряд участников и один победитель заключительного этапа Всероссийской олимпиады школьников по информатике (не считая моего брата Николая, в обучении которого я тоже принимал не последнее участие и который является абсолютным победителем заключительного этапа 2013 года и дважды — в 2013 и 2014 годах — золотым призером международной олимпиады школьников по информатике).</p>\n\n<p>Команды школьников под моим руководством регулярно участвуют в Нижегородской и Всероссийской командных олимпиада школьников по программированию. На большинстве прошедших к данному моменту Нижегородских командных олимпиадах абсолютное первое место занимали мои команды; на Всероссийской командной олимпиаде мои команды регулярно становятся призерами, нередко — медалистами, а два раза — занимали абсолютное первое место.</p>\n\n<p>Вы всегда можете связаться со мной, контактные данные указаны на главной странице курса.</p>\n\n<h3>А что за сайт informatics.mccme.ru?</h3>\n<p>Informatics.mccme.ru — это сайт дистанционной подготовки по информатике, организованный Московским центром непрерывного математического образования (МЦНМО) и Московским институтом открытого образования (МИОО); он очень удобен для организации курсов подобных этому, и, как вы можете видеть на главной странице сайта, реально широко используется, но в первую очередь для организации очных занятий. Я не имею непосредственного отношения к этому сайту (хотя и знаком с людьми, которые его создали и поддерживают).</p>\n\n<p>Мой курс строится на базе материалов с informatics и использует его в качестве тестирующей системы (а раньше вообще курс существовал только на informatics). Местами еще могли остаться ссылки на информатикс, если обнаруживаете такую, пишите мне.</p></div>', 'title': 'FAQ для студентов и старше', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_8', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_9', 'order': 9, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Инструкция для тех, кто здесь в первый раз</h1>\n<h2>Для школьников</h2>\nЕсли вы хотите начать заниматься в этом курсе, то сделайте следующее:\n<ol>\n<li>Во-первых, можно просто придти на очное занятие (в ННГУ для всех желающих, в лицее 40 для лицеистов, информация о занятиях на страничке курса). Но можно начать (и продолжать) заниматься и дома, не дожидаясь очного занятия, можно и вообще на очные занятия не ходить. Все инструкции ниже идут как раз для случая, если вы хотите начать заниматься из дома.</li>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (вас попросят еще зарегистрироваться на informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, школу, класс, город. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля"; если вы участвовали в каких-либо олимпиадах по математике или программированию, укажите это. (Это не значит, что здесь будет какой-то отбор, я готов принять в курс всех желающих. Но я просто хочу заранее знать, какой у вас уже есть опыт.) </li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты разделе "О курсе".</li>\n<li>Далее:\n<ul>\n<li>Если вы — начинающий, т.е. не знаете никакой язык программирования на уровне, позволяющем вам уверенно писать простые программы, то начинайте с <a href="/material/1" onclick="window.goto(\'/material/1\')();return false;">уровня 1</a>. Там последовательно разбираются различные стороны языка программирования — начните их последовательно проходить. Вам надо будет выбрать, на каком языке программирования работать, я советую начинающим питон.</li>\n<li>Если вы какие-то программы писать умеете, но не очень уверенно, то выберите на уровнях <a href="/material/1%D0%90" onclick="window.goto(\'/material/1%D0%90\')();return false;">1А</a> или <a href="/material/1%D0%91" onclick="window.goto(\'/material/1%D0%91\')();return false;">1Б</a> первую тему, которую не очень уверенно знаете, и начинайте с нее.</li>\n<li>Если вы на выбранном вами языке программирования можете достаточно уверенно писать простые программы, то начните с темы "вещественные числа" на <a href="/material/1%D0%91" onclick="window.goto(\'/material/1%D0%91\')();return false;">уровне 1Б</a>, и после этого переходите к уровню 1В и далее. Вполне возможно, что эти задачи вам покажутся простыми, и вы их очень быстро решите, но, возможно, над некоторыми вам придется подумать, а заодно я посмотрю на ваш стиль программирования и на разного рода мелкие моменты, которые вы можете не знать, пусть даже и хорошо пишите программы. (Обратите внимание, что там не надо решать все задачи для перехода на следующие уровни.) Перед тем, как начинать решать задачи, прочитайте в разделе "О курсе" тексты "Работа с сайтом..." и "Начало работы с Free pascal" (если вы пишите на паскале). Многое вам там будет знакомо, но я уверен, что что-то найдете и новое.</li>\n<li>Если вы — уже очень сильно продолжающий, т.е. умеете уверенно писать простые задачи (и, скорее всего, вы уже участник региональных олимпиад), то напишите мне и ждите инструкций.</li>\n</ul>\n</li></ol>\n\n<h2>Для студентов и старше</h2>\n<ul>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (для этого вас попросят еще зарегистрироваться на сайте informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, где вы учитесь/работаете. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля".</li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты в разделе "О курсе" на главной странице курса.</li>\n<li>Дождитесь ответа и дальнейших инструкций от меня.\n</li>\n</ul></div>', 'title': '\nИнструкция для тех, кто здесь в первый раз (или "Что надо сделать, чтобы начать заниматься?")', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_10', 'order': 10, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>Про то, как тут заниматься</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_11', 'order': 11, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Работа с сайтом</h2>\n<p>Основное, что вы будете делать на наших занятиях — это решать задачи. Большинство задач будут требовать написания программы, которая считывает (с клавиатуры или из файла) некоторые данные, по ним вычисляет новые данные, и результат выводит на экран или сохраняет в файл.</p>\n<p>Написанную вами программу вы можете (и должны) отправить на проверку. Этот сайт предоставляет возможность автоматической проверки ваших программ — вы сразу (в течение максимум одной-двух минут) получаете результат проверки: работает ваша программа корректно или нет. Кроме того, я буду видеть все ваши попытки, которые вы отправляете на сайт, и смогу их комментировать, писать замечания и т.д., а вы сможете эти комментарии видеть и по ним улучшать свои программы.</p>\n\n<h3>Пример задачи</h3>\n<p>Зайдите на уровень 1А (внутри уровня 1). Там есть ссылка "Задачи на арифметические операции". Зайдите туда. Вы увидите список задач: "Дележ яблок - 1", "Дележ яблок - 2", и т.д., до "Разность времен". Это и есть набор задач (коротко говорят "контест"), которые вам предлагается прорешать для закрепления знаний по первой теме курса — арифметическим операциям. \n</p><p>Все названия задач — ссылки, по ним открывается собственно задача. Откройте задачу "Дележ яблок - 1". Вы видите ее условие: "N школьников делят K яблок поровну, неделящийся остаток остается в корзинке. Сколько яблок достанется каждому школьнику? Программа получает на вход числа N и K и должна вывести искомое количество яблок." Ниже идет пример: при вводе данных "3 14" программа должна вывести "4".</p>\n<p>Условие задачи четко описывает, что должна делать ваша программа: для любых значений N и K она должна вычислить и вывести ответ на задачу. В более серьезных задачах в условии всегда указываются ограничения на допустимые N и K, но в задачах для начинающих на этом сайте считается, что N и K "разумные" (в частности, помещаются в тип данных integer в паскале); в "разумность" в данном случае входит и то, что оба числа положительны.</p>\n<p>Пример нужен только для проверки того, что вы верно поняли условие, формат входных данных, и смогли проверить программу на простейшем тесте. Тем не менее, ваша программа должна работать не только на тесте из примера, но и на других допустимых тестах.</p>\n\n<h3>Написание решения</h3>\nДанная задача решается достаточно легко. Нам надо, конечно, завести две переменные, N и K, считать их с клавиатуры, и вывести неполное частное от деления K на N (обратите внимание, именно K на N, а не N на K!). Программа будет выглядеть так:\n<table>\n<tbody><tr><th>Паскаль</th><th>Питон</th></tr>\n<tr><td>\n<pre>{$mode delphi}\nvar n,k:integer;\nbegin\nread(n,k);\nwriteln(k div n);\nend.</pre>\n</td><td>\n<pre>n = int(input())\nk = int(input())\nprint(k // n)</pre>\n</td></tr></tbody></table>\n\nОбратите внимание на следующие особенности (в вашем учебнике может быть написано не так — надо делать так, как написано тут, а не в учебнике. Возможно, чего-то из описанного здесь вы не поймете — тогда просто пропускайте этот пункт). Часть из этих особенностей относятся только к паскалю, часть — к любому языку программирования.\n<ul>\n<li>(паскаль) Написано <code>{$mode delphi}</code>. Пока вы не знаете, какие разные режимы компилятора бывают, всегда пишите эту конструкцию. Потом, когда узнаете, сможете выбирать, какой режим компилятора вам нужен.</li>\n<li>(паскаль) Не используется конструкция <code>program ...;</code>. В современном программировании она не нужна вообще.</li>\n<li>(паскаль) Вся программа пишется маленькими буквами. Поскольку в Pascal все равно, использовать маленькие или заглавные буквы, то сейчас принято использовать маленькие.</li>\n<li>Мы не выводим никаких "приглашений" типа "введите N". В условии задачи четко написано, что именно наша программа должна выводить на экран, и там ничего не сказано про то, что надо выводить приглашения. Поэтому любой лишний вывод на экран будет рассмотрен как нарушение формата вывода.</li>\n<li>Нет никаких "проверок на дурака", например, нет проверки "а вдруг N=0?", или "а вдруг ввели не число?". Аналогично предыдущему, это в наших задачах не требуется. В более серьезных задачах в условии будут стоять ограничения на допустимые значения N, и никто не будет тестировать вашу программу с N, не удовлетворяющим этим ограничениям. В этой задаче считается, что N&gt;0 всегда.</li>\n<li>(паскаль) Мы не делаем <code>clrsrc;</code> в начале программы — это не требуется. И пользователь, и тестирующая система способны отличить вывод этой программы от того, что было выведено на экран раньше.</li>\n<li>Аналогично, мы не ставим в конце программы пустой <code>readln;</code> или <code>readkey;</code>, или <code>input()</code> в питоне, или <code>getch();</code> в c++ или другую задержку работы. Это тоже не требуется; информация, выведенная на экран, все равно сохраняется и ее все равно можно посмотреть.</li>\n<li>Мы посчитали и сразу вывели ответ, не сохраняя его в промежуточную переменную. Можно было сохранить:\n<pre>// паскаль\nans:=k div n;\nwriteln(ans);\n// питон\nans = k / n\nprint(ans)\n</pre>\nВ этой простой программе проще вывести сразу, но если выражение будет сложнее, то можно и сохранить.</li>\n</ul>\n<p>Сохраните эту программу в какой-нибудь файл. Запомните как имя файла, так и ту директорию (папку), куда вы сохранили файл (в free pascal она отображается в нижней части диалога сохранения файла).</p>\n\n<p>Теперь протестируйте программу. Запустите ее и повводите разные тесты.</p>\n\n<p>Введите для начала тест из примера: "3 14" и убедитесь, что она вывела 4.</p>\n\n<p>В этой задаче на каждый тест ответ однозначно определен (например, на пример из условия ответ может быть только 4). Бывают задачи, когда на каждый тест может быть несколько правильных вариантов ответа, в таких задачах в условии обычно написано "если есть несколько решений, выведите любое" или присутствует какая-нибудь подобная фраза. В таком случае ваша программа не обязана выдавать ответ, точно совпадающий с тем, что указан в примере — достаточно, чтобы он был одним из правильных. Аналогично, в дальнейшем, при тестировании вашей программы на сайте (см. ниже) по каждому тесту будет допускаться любой из правильный ответов.</p>\n\n<p>Придумайте еще несколько примеров к этой задаче. Постарайтесь, чтобы они были разнообразными: чтобы были разные N, K, и разные ответы. Например, введите "5 25" и проверьте, что ответ 5. Придумайте сами еще несколько примеров. Важно: прежде чем вводить каждый пример в программу, сначала в уме вычислите ответ, и только потом запустите программу и проверьте, что она вывела именно то, что вы и ожидали. Старайтесь всегда знать ответ на свой пример ДО запуска программы.</p>\n\n<p>Если программа написана правильно, то она правильно отработает на ваших тестах. Тогда ее можно сдавать на проверку на сайт (говорят "сдать/послать на проверку в тестирующую систему" или просто "сдать в систему").</p>\n\n<h3>Отправка на проверку</h3>\n<p>Вернитесь на страницу с условием задачи. Ниже условия есть раздел "Отправить решение" (он есть только если вы зарегистрированы на сайте и залогинены). Нажмите кнопку "Выбор файла" и выберите файл с вашим решением. Убедитесь, что вы выбираете файл .pas/.py (с исходным кодом), а не .o или .exe (уже скомпилированную программу)! Убедитесь, что в выпадающем списке рядом выбран правильный язык (в частности, если вы пишете на PascalABC, то надо его выбрать вручную), и нажмите кнопку "Отправить".</p>\n\n<p>Ваша программа отсылается на сервер, который ее компилирует и проверяет путем запуска на нескольких тестовых примерах. Эти тестовые примеры вам неизвестны, но в каждой конкретной задаче всегда одинаковы (т.е. если вы будете посылать несколько раз, то каждый раз тестовые примеры будут одни и те же). В данном случае тестирующая система запустит вашу программу несколько раз, каждый раз сымитирует ввод с клавиатуры значений N и K из очередного тестового примера, и проверит, что ваша программа выводит правильный ответ.</p>\n\n<p>Под формой для отправки находится таблица, перечисляющая все ваши попытки (также говорят "посылки") по этой задаче. Изначально там, конечно, никакой таблицу нет. После того, как вы отправили ваше решение, оно появится в этой таблице (через некоторое время — примерно через минуту). В колонке "Статус" отображается результат тестирования вашей программы. Сразу после того, как вы отправили программу, вы можете увидеть там "Компилирование" или "Тестирование", что обозначает, что ваша задача тестируется. Таблица обновляется автоматически, дождитесь, пока в колонке "Статус" не появится окончательный результат проверки.</p>\n\n<p>Основные результаты проверки, которые вы можете увидеть:\n</p><ul>\n<li>OK — ваша программа правильно прошла все тесты, ура!</li>\n<li>Ошибка компиляции — ваша программа не скомпилировалась</li>\n<li>Частичное решение — ваша программа прошла не все тесты (может быть, даже не прошла ни одного). Значит, ваша программа работает не совсем верно (или совсем неверно), постарайтесь найти ошибки.</li>\n<li>Бывают еще статусы "Зачтено" и "Проигнорировано", но они не ставятся автоматически, поэтому про них ниже.</li>\n</ul>\n\n<p>Справа в таблице есть колонка ссылок "Подробнее". Если вы нажмете на такую ссылку, то откроется окошко с подробной информацией о посылке. Во-первых, там будет полный код вашей программы, поэтому вы всегда сможете проверить, отправили ли вы именно то, что хотели; если вы решали задачи из школы, то придя домой, вы сможете посмотреть коды всех ваших программ, и т.д.</p>\n\n<p>Во-вторых, в открывшемся окне есть закладка "Протокол", где отображается протокол тестирования вашей программы. Если ваша программа не скомпилировалась (статус "Ошибка компиляции"), то там будет протокол компиляции: будут указаны ошибки, найденные в программе. Если же ваша программа скомпилировалась, то там будет протокол тестирования: по каждому тесту будет приведена информация о том, прошел этот тест (OK) или нет. В задаче "Дележ яблок - 1" всего 6 тестов, поэтому в таблице должно быть 6 строк. Если ваша посылка получила статус "ОК", то все 6 строк будут ОК; иначе какие-то тесты будут иметь другой статус (из названия статуса обычно понятно, что это значит).</p>\n\n<p>Таким образом, вы можете видеть, какие (по номерам) тесты у вас пройдены, а какие нет. Но вы не можете узнать, какой именно это тест (в нашей задаче — какие именно там N и K). Это сделано для того, чтобы вы учились сами тестировать свое решение и сами находить примеры, на которых оно не работает, а не рассматривали тестирующую систему как волшебный ящик, выдающий вам примеры, на которых ваша программа не работает. Поэтому если ваша программа не работает, то ищите сами примеры, на которых она ошибается. Если вы не можете их найти, то напишите мне, попробуем разобраться вместе. В крайнем случае у меня есть доступ ко всем тестовым данным, поэтому если я не смогу найти ошибку просто посмотрев код вашей программы, я смогу посмотреть, что там за тест, на котором ваша программа не работает.</p>\n\n<p>Но вообще, старайтесь проверять задачу до того, как ее отправлять в систему (и этому мы будем отдельно учиться). Рассматривайте неудачные попытки как конкретную неудачу, и старайтесь делать как можно меньше неудачных попыток. Вообще, на многих олимпиадах у вас будет только одна возможность сдать задачу, и если она не пройдет какие-то тесты, то возможности исправиться у вас уже не будет!</p>\n\n<h3>Засчитывание и игнорирование решений, комментарии к решению</h3>\n<p>Я буду просматривать все ваши решения: при наличии времени — все вообще посылки, в том числе и неуспешные, если же у меня времени будет мало, а посылок много — то только посылки со статусом ОК.</p>\n\n<p>В успешных посылках я буду просматривать ваш код на предмет следующего:\n</p><ul>\n<li>Во-первых, я буду смотреть, нет ли в коде каких-то ошибок, которые смогли миновать тесты тестирующей системы. Бывает так, что в коде какая-нибудь совсем неожиданная ошибка, и тестирующая система ее может пропустить (хотя тесты в тестирующей системе обычно подготовлены хорошо, и как правило все ошибки в коде проявляются при тестировании) — я буду смотреть, нет ли у вас таких ошибок.</li>\n<li>Также я буду смотреть, нет ли у меня каких-либо замечаний по коду, пусть и не являющихся ошибками, но являющихся общими пожеланиями. Например, может быть, что-то можно сделать проще, или что-то надо сделать по-другому, и т.д.</li>\n</ul>\n<p>Если к вашей программе у меня будут какие-либо замечания или комментарии, я их напишу, и вы сможете их увидеть. Во-первых, они появятся на сайте в правой колонке в разделе "Комментарии"; во-вторых, в каждой посылке, в окошке, открываемом по ссылке "подробнее", есть специальная закладка "комментарии". Соответственно, как только я прокомментирую вашу посылку, вы увидите комментарий. Обычно я стараюсь просматривать все посылки в течение суток, хотя иногда бывают и бОльшие задержки, до нескольких дней.</p>\n\n<p>Помимо собственно написания комментария, я по каждой вашей посылке принимаю решение — либо я принимаю это решение (пусть и с небольшими замечаниями), либо я потребую от вас это решение переписать с учетом моих замечаний. В первом случае я меняю статус посылки на "Зачтено" (т.е. вы будете видеть именно "Зачтено" вместо "ОК" в таблице с вашими посылками), во втором случае я меняю статус на "Проигнорировано". Соответственно, в первом случае просто примите к сведению замечания, которые я написал (а бывает так, что я и никаких замечаний не пишу), хотя можете и переписать решение, если хотите. Во втором случае обязательно перепишите решение с учетом этих замечаний.</p>\n\n<p>В сводной таблице решения "ОК" (т.е. которые я еще не посмотрел) отображаются с желтым фоном, решения "Зачтено" (т.е. которые я принял) — с зеленым фоном, проигнорированные решения не учитываются в общем количестве решенных вами задач, просто соответствующая задача в сводной таблице отображаются с красным фоном.</p>\n\n<p>Я буду стараться также писать комментарии по вашим неуспешным посылкам — указывать на ошибку или советовать, где ее поискать, и т.п. Я, конечно, не всегда буду писать их сразу как увижу вашу попытку, и не всегда буду полностью сообщать о найденной ошибке — ведь обычно вам полезно будет все-таки найти ошибку более-менее самостоятельно, я постараюсь вам давать наводящие советы (но, конечно, это зависит от ошибки). В общем, если вы пытались сделать задачу, но она не проходит тесты, то возможно в течение суток я вам напишу совет в комментарии к вашей посылке.</p>\n\n<p>Иногда я могу не успевать просмотреть все ваши неуспешные посылки, или не пишу комментарий по каким-то еще причинам. В таком случае, если вы хотите получить комментарий по какой-нибудь из них, просто напишите мне.</p>\n\n<h3>Хорошие решения</h3>\n<p>После того, как я засчитываю вам решение (ставлю статус "Зачтено"), у вас появляется доступ к "хорошим решения" по соответствующей задаче — на странице задачи, над формой для отправки решения, появляется ссылка на "хорошие решения".</p>\n\n<p>"Хорошие решения" — это несколько (до 5 штук) решений, которые сдавали другие ученики курса, и которые, на мой взгляд, написаны достаточно хорошо и могут считаться образцом решения этой задачи. Смотрите их, особенно по тем задачам, где я вам зачел решение с какими-либо комментариями (но вообще полезно смотреть "хорошие решения" и по всем зачтенным задачам вообще). Сравните "хорошие решения" с вашим решением, возможно, вы увидите, что что-то можно сделать проще, или вообще найдете другие полезные идеи.</p>\n\n<p>Я стараюсь в "хороших решениях" по возможности поддерживать баланс разных языков (т.е. как правило среди "хороших решений" есть решения на разных языках). Но смотрите и решения на вашем языке, и на других языках, даже которых вы не знаете — как правило, понять алгоритм можно даже на языках, которых вы вообще не знаете. С другой стороны, для вашего языка в "хороших решениях" вы можете найти и какие-нибудь интересные чисто языковые тонкости и приёмы.</p>\n\n<p>Кроме того, нередко в "хороших решениях" я показываю разные подходы к решению задачи, нередко там встречаются вообще разные алгоритмы. Если вы видите, что "хорошее решение" сильно отличается от вашего, полезно разобраться, как оно вообще работает.</p>\n\n<p>При этом понимайте, что на самом деле по многим задачам на сайте сданы уже сотни решений, и на самом деле "хороших" из них десятки, если не больше. Вы видите максимум пять из них, просто потому, что смотреть десятки более-менее одинаковых решений смысла нет. Вы увидите какие-то пять из них, которым повезло, что я их отметил как "хорошие", но это "везение" часто определяется случайностью, ну и указанными выше принципами про разнообразие языков и подходов. То есть вы видите не пять самых лучших решений, а пять случайных из числа достаточно хороших.</p>\n\n<p>Поэтому не надо считать, что если ваше личное решение не попало в "хорошие", то оно хуже "хороших". Оно может быть столь же хорошо, или даже чем-то лучше "хороших", просто ему не повезло. Если вы видите, что "хорошие" решения написаны столь же чисто и понятно, как ваше — значит, ваше тоже могло бы быть "хорошим". И наоборот, если ваше решение попало в "хорошие", это не обозначает, что оно намного лучше всех остальных :) По той же причине авторы "хороших решений" не подписаны.</p>\n\n<p>С другой стороны, если вы посмотрели "хорошие решения", и считаете, что ваше решение заметно лучше всех "хороших", напишите мне, может быть, я и ваше решение добавлю в "хорошие". (Хотя обычно я назначаю решение "хорошим" одновременно с тем, как я его засчитываю, поэтому если ваше решение действительно заметно лучше других хороших, как правило, я его сделаю "хорошим" еще до того, как вы сможете посмотреть "хорошие решения" :) .)</p>\n\n<h3>Сводная таблица</h3>\n<p>Все ваши посылки по нашим задачам отображаются в сводных таблицах, ссылки на которые есть в меню сайта. А именно, каждая клетка в основной части этой таблицы указывает статистику посылок от конкретного школьника по конкретной задаче. Если в клетке стоит знак "+", значит, задача сдана успешно ("ОК" или "Зачтено"), если "-" — значит, человек пытался сдавать задачу, но прошел не все тесты. Число после значка (если оно есть) указывает количество неуспешных попыток (если они есть). Например:\n</p><ul>\n<li>Пустая клетка обозначает, что задача не сдавалась вообще;</li>\n<li>"+" обозначает, что задача сдана с первой попытки;</li>\n<li>обозначения "-" не бывает;</li>\n<li>"+2" обозначает, что задача сдана с третьей попытки (две неуспешные попытки и потом успешная);</li>\n<li>"-2" обозначает, что по задаче были только две неуспешные попытки и всё.</li>\n</ul><p></p>\n\n<p>Фон ячейки обозначает статус задачи относительно вердиктов "Зачтено" и "Проигнорировано":\n</p><ul>\n<li>Желтый фон — статус "ОК", т.е. я еще не смотрел эту задачу;</li>\n<li>Зеленый фон — статус "Зачтено";</li>\n<li>Красный фон — статус "Проигнорировано", при этом сама проигнорированная попытка считается неуспешной.</li>\n</ul><p></p>\n\n<p>В последних двух колонках таблицы указывается общее количество решенных задач и общее количество неуспешных ("штрафных") попыток (учитываются только те задачи, по которым в итоге была получена правильная программа, проигнорированные попытки не учитываются). Таблица отсортирована по общему количеству решенных задач, а при равном числе решенных задач — по количеству штрафных попыток.</p>\n\n<p>Еще у таблицы есть следующая особенность: в ней появляются только школьники, которые удовлетворяют сразу двум требованиям: во-первых, я их должен активировать их учетную запись, во-вторых, у школьника должна быть хотя бы одна попытка сдачи задачи. Поэтому если вы еще ничего не пытались сдавать, не удивляйтесь, что вас нет в таблице. Если же вы уже пытались что-то сдавать, а в таблице вас нет, то напишите мне — возможно, я забыл вас активировать.</p>\n\n<p>Аналогично, наборы задач (контесты) появляются в сводной таблице только когда хотя бы кто-нибудь отправит какое-нибудь решение по какой-нибудь задаче этого контеста.</p>\n\n<h3>Терминология</h3>\nВыше я уже ввел некоторую специфическую терминологию, которая используется в олимпиадном программировании, на всякий случай повторю ее тут:\n<ul>\n<li>Контест — любой набор задач, каким-то образом сгруппированный и выделенный от остальных. В пределах контеста задачи обычно занумерованы (1, 2, 3, ... или A, B, C, ... и т.п.) Это может быть отдельный тур олимпиады, или набор задач к какому-нибудь занятию или на какую-нибудь тему, и т.д. В рамках наших занятий "контестом" мы называем набор задач, доступных по каждой отдельной ссылке с главной страницы курса; слева от таких ссылок обычно значок, похожий на изображение клавиатуры. Например, "Задачи на арифметические операции" — это отдельный контест.</li>\n<li>Посылка (синонимы: попытка, сабмит) — отдельная ваша попытка сдать задачу в тестирующую систему; также программа, которую вы сдали в этой попытке.</li>\n<li>Штрафная попытка (обычно в контексте сводного рейтинга) — попытка, которая не прошла все тесты.</li>\n<li>Тест — это отдельный тестовый пример, подготовленный авторами задачи, чтобы на нем проверять ваши программы. Обычно по каждой задаче автор задачи подготавливает от 5 до 60 тестов, и программы, которые вы сдаете на проверку, проверяются по очереди на всех этих тестах. Чтобы попытка считалась успешной, надо, чтобы программа прошла все тесты, т.е. на все тесты дала правильный ответ. (На других олимпиадах могут быть другие правила.)</li>\n</ul></div>', 'title': '\nРабота с сайтом, отправка решений и просмотр моих комментариев', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_12', 'order': 12, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_13', 'order': 13, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><p>Я буду просматривать, по возможности, все ваши решения, и комментировать их тем или иным образом. Тем решениям, которые я просмотрю, я буду присваивать новый статус: \n</p><ul>\n<li>"Зачтено" — задача написана более-менее нормально, ура. На страничке просмотра кода вашей посылки (по ссылке "Подробнее") под кодом вы можете увидеть мои комментарии. Если там комментария нет, значит, задача решена весьма хорошо. Если есть комментарий, то он обычно указывает, что можно улучшить.</li>\n<li>"Проигнорировано" — мне что-то весьма не понравилось в вашем коде. На страничке просмотра кода вашей посылки (по ссылке "Подробнее") под кодом вы увидите мои комментарии, объясняющие, что именно мне не понравилось. Исправьте это и пересдайте решение.</li></ul><p></p>\n\n<p>Если вы не понимаете комментарий, спросите, я объясню подробнее.</p>\n\n<p>Посылки со статусом "Зачтено" отмечаются в таблице зеленым.</p>\n\n<p>Посылки со статусом "Проигнорировано" отмечаются в таблице синим.</p>\n\n<p>Не относитесь к "игнорам" как к издевательству над вами. Я постараюсь игнорить только те программы, которые можно довольно существенно улучшить (например, существенно сократив количество кода). Помните, что ваша цель — не только написать программу, которая пройдет все тесты, но и вообще научиться программировать. Фактически, "Проигнорировано" я ставлю тогда, когда считаю, что комментарий, который я пишу к вашей посылке, настолько важен, что вам обязательно его стоит прочитать; "игнор" — это такой способ обратить ваше внимание на комментарий.</p>\n\n<p>То, что вы сумели, пусть и не самым оптимальным образом, написать программу и сдать ее — это очень круто, но еще круче будет, если вы узнаете и поймете, как то же самое можно сделать еще проще. Считайте, что в большинстве задач написать программу, чтобы она прошла все тесты — это, грубо говоря, 70% успеха, но получить по ней "Зачтено" — это оставшиеся 30%.</p>\n\n<p>Все комментарии (в том числе и к зачтенным посылкам, и даже к неуспешным) вы также можете просмотреть в правой колонка не сайте.</p></div>', 'title': '\nПро засчитывание и игнорирование решений', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_14', 'order': 14, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_15', 'order': 15, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>О системе уровней</h1>\n<p>Весь материал в нашем курсе распределен по уровням, от самого простого до очень сложного. Уровни нумеруются последовательными числами (1, 2, 3, ...), в пределах уровня также введены подуровни, нумеруемые буквами (в уровне 1 — подуровни 1А, 1Б, 1В и 1Г, и т.п.)</p>\n\n<p>Большинство уровней имееют следующую структуру: подуровни А и Б содержат новый материал, а подуровни В и Г (последний есть не всегда) — дополнительные задачи повышенной сложности на закрепление этого материала. Иногда в уровнях В и Г могут быть особенно сложные задачи на материал существенно более ранних уровней (например, в уровне 5В может оказаться сложная задача на материал уровня 3). Иногда в уровнях В и Г выделены контесты по отдельным темам, иногда дополнительные задачи в этих уровнях идут в случайном порядке.</p>\n\n<p>Я предполагаю, что вы будете проходить подуровни последовательно, переходя к новому подуровню как правило тогда, когда вы "прошли" предыдущий подуровень. Исключение: если вы прошли какую-то тему в подуровне А или Б, и видите в подуровне В или Г контест продвинутых задач на эту же тему, то можете его порешать.</p>\n\n<p>Требования к "прохождению" каждого подуровня указаны под его заголовком. Как правило, для подуровней А и Б требуется прорешать все задачи, для уровней В и Г требуется прорешать часть (половину или треть) задач. Тем не менее это не обозначает, что оставшиеся задачи уровней В и Г решать не надо. Я рекомендую, если вы прорешали необходимый минимум задач уровней В и Г, переходить на следующий уровень, чтобы побыстрее приступить к изучению новой теории. Но при этом возвращайтесь регулярно к недорешенным задачам предыдущих уровней. Примерно можно оценивать так: когда вы переходите на уровень 4А, у вас должна быть решена половина задач уровня 3В, 3/4 задач уровня 2В и примерно 7/8 задач уровней 1В и 1Г. Аналогично, когда вы переходите на уровень 5А, у вас должна быть решена половина задач уровня 4В, а также 3/4 задач уровня 3В, 7/8 задач уровня 2В и почти все (за редким исключением особенно неприятных задач) задачи уровней 1В и 1Г. Аналогично для других уровней.</p>\n\n<p>Обратите внимание, что в уровнях В и Г задачи далеко не всегда упорядочены по сложности. Поэтому решайте их в том порядке, в каком вам удобнее!</p>\n\n</div>', 'title': '\nПро систему уровней', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_16', 'order': 16, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_17', 'order': 17, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про очные занятия для школьников</h1>\n<h2>Общая информация</h2>\n\n<p>Для школьников в течение учебного года проходят очные занятия — в лицее 40 по средам и в ННГУ им. Лобачевского по воскресеньям. На занятия в лицее 40 можно ходить только ученикам лицея 40, на занятия в ННГУ можно ходить вообще всем желающим школьникам (школьникам из Нижнего Новгорода и области, в том числе ученикам лицея 40, а также школьникам из других регионов, если вы занимаетесь у меня на курсе и по каким-то причинам оказались в Нижнем).</p>\n\n<p>На очные занятия можно приходить <b>только тем, кто решил хотя бы одну задачу в курсе</b>. Исключение — специальные занятия, про которые на сайте явно написано, что можно приходить новичкам (как правило, это второе занятие каждого семестра). Если вы опоздали на такое занятие, вы должны начать заниматься заочно; после того, как решите хотя бы одну задачу, можете приходить на очные занятия.</p>\n\n<p>В ННГУ занятия проходят <b>по воскресеньям, в 2 корпусе (пр. Гагарина, 23, к. 2), в аудиториях 110 и 114</b>. Я обычно бываю в ННГУ с 14.00 до 17.00. В это время параллельно проходят два занятия: с 14.00 до 17.00 для старших уровней (у кого уровень 3 и выше, также можно по желанию тем, у кого уровень 2В), и с 15.00 до 16.30 для начинающих. При этом начинающие тоже могут приходить раньше и оставаться до 17.00, просто до 15.00 до после 16.30 я буду больше времени уделять старшим.\n\nНа занятия в ННГУ действует обязательная запись, см. ниже. Кроме того, <b>берите с собой паспорт или свидетельство о рождении</b>, его может спросить охрана (хотя вроде никогда не спрашивают, но теоретически могут спросить). Если охранники вас не пускают, звоните мне.</p>\n\n<p>В лицее 40 занятия проходят <b>по средам в КЦ</b>. Я обычно бываю в лицее с 14.30 до 17.00, иногда чуть позже. Аналогично, можно приходить и уходить в любое время, но см. ниже про нехватку компьютеров. Если вы хотите получить зачем за спецкурс, смотрите отдельные <a href="/material/in20946" onclick="window.goto(\'/material/in20946\')();return false;">правила</a>.</p>\n\n<h2>Формат занятий</h2>\n\n<p>Очные занятия у нас проходят полностью в формате практики. У нас нет каких-либо общих лекций, я не рассказываю на занятиях новую теорию «для всех» (за исключением отдельных, специально анонсированных, занятий). Вы приходите, садитесь за компьютер, заходите на алгопрог, и продолжаете заниматься с того места, где остановились в прошлый раз — решаете задачи и/или читаете теорию. Самостоятельно. Я время от времени прохожу по классам, смотрю, кто что решает, могу что-то помогать, советовать, объяснять, но в основном вы занимаетесь самостоятельно.</p>\n\n<p>То есть вы занимаетесь так же, как если бы вы занимались из дома. Единственное отличие очных занятий от занятий из дома состоит в том, что на очных занятиях присутствую я, и вы всегда можете меня спросить о чем-либо, и как правило я достаточно быстро отвечу. (Правда, учтите, что на очных занятиях помимо вас обычно еще присутствует пара десятков школьников, у которых тоже есть свои вопросы :) ).</p>\n\n<p>Если вы на занятии добрались до новой теории — скажите мне. Возможно, я вам ее расскажу. Но, возможно, я отправлю вас читать теорию на сайте.</p>\n\n<p>В частности, поэтому расписание занятий у нас нестрогое. Вы можете опоздать на занятие, можете уйти раньше, можете пропустить часть занятий, можете, наоборот, ходить на два занятия — всё на ваше усмотрение. Конечно, чем больше вы занимаетесь, тем лучше у вас, наверное, будут результаты, но я не требую какого-то строгого посещения занятий.</p>\n\n<p><b>Занятия в ННГУ для старших уровней</b> немного отличаются по формату: мы решаем разные старые контесты, а потом обсуждаем задачи.</p>\n\n<h2>Про регистрацию на занятия и компьютеры</h2>\n\n<p>Как правило, особенно в первой половине учебного года, и особенно в ННГУ, на занятия приходят больше школьников, чем есть компьютеров. Поэтому на занятия в ННГУ надо регистрироваться, чтобы всем точно хватило компьютеров. На сайте есть <a href="/checkins">специальный раздел</a>, где надо регистрироваться на очередное занятие, там же есть подробные правила. Регистрироваться надо каждую неделю заново.</p>\n\n<p>На занятия в лицей 40 регистрации нет. Занятие в лицее 40 официально начинается в 14.30; как правило, к этому моменту свободные компьютеры еще есть. Если вы опоздали, не обижайтесь, если вам не хватило компьютеров. С другой стороны, как правило, уже в районе 15.30 компьютеры начинают освобождаться (далеко не все школьники сидят до конца занятия), поэтому если вам не хватило компьютера, можете просто подождать (например, поделав домашние задания по другим предметам).</p>\n\n<p>Универсальный способ избежать пробему нехватки компьютеров — приносить свой ноутбук. Но <a href="/material/module-16024_1" onclick="window.goto(\'/material/module-16024_1\')();return false;">см. отдельные правила про это</a>.</p></div>', 'title': '\nПро очные занятия для школьников', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_18', 'order': 18, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>Про оплату</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'pay', 'order': 19, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix">\n<h1>Стоимость и порядок оплаты занятий</h1>\n\n<h2>Для школьников из Нижегородской области</h2>\n<p>Для нижегородских школьников <b>занятия бесплатны</b>, и в обозримом будущем останутся бесплатными (т.к. мне проведение занятий оплачивает лицей 40 и ННГУ).</p>\n\n<p>Формально вы считаетесь нижегородским школьников, если учитесь в школе, находящейся в Нижегородской области, и имеете теоретическую возможность, пройдя школьный и муниципальный этапы, участвовать в Нижегородской областной олимпиаде школьников по информатике.</p>\n\n<p>Если у меня возникнут подозрения, являетесь ли вы нижегородским школьников или нет, я могу попросить вас как-то это подтвердить.</p>\n\n<p>Прочитайте, пожалуйста, отдельный текст <a href="/material/module-20927_21" onclick="window.goto(\'/material/module-20927_21\')();return false;">про бесплатность занятий для нижегородских школьников</a>.</p>\n\n<p>Вы также можете поддержать занятия, переведя мне любую сумму денег на карту Тинькофф-банка номер 5536 9137 7443 1460. Например, для перевода вы можете воспользоваться <a href="https://www.tinkoff.ru/cardtocard/">сервисом перевода с карты на карту Тинькофф-банка</a>, там по идее должно быть без комиссии, или любым другим сервисом по переводу денег с карты на карту.</p>\n\n<p><b>При этом, пожалуйста, никак не указывайте, кто именно переводит деньги, и не сообщайте мне, что вы их перевели — я не хочу знать, кто из школьников мне переводит деньги, а кто нет.</b></p>\n\n<h2>Для всех остальных</h2>\n\n<p>Занятия для всех остальных (не-нижегородских школьников, а также не-школьников) платные. Точнее, собственно все материалы в курсе бесплатные. Они же есть на сайте informatics.mccme.ru в <a href="http://informatics.mccme.ru/course/view.php?id=1135">соответствующем разделе</a>, вы можете бесплатно заниматься там. Я беру деньги за то, что я добавлю вас в сводные таблицы, буду просматривать и комментировать ваши решения, отвечать на ваши вопросы (заочно) и т.д.</p>\n\n<p>Стоимость занятий определяется следующим образом:</p>\n\n<table class="table table-striped table-condensed table-hover">\n<tbody><tr><td>Младше 9 класса</td><td>500 рублей в месяц</td></tr>\n<tr><td>9 класс</td><td>1000 рублей в месяц</td></tr>\n<tr><td>10 класс</td><td>1500 рублей в месяц</td></tr>\n<tr><td>11 класс</td><td>1500 рублей в месяц</td></tr>\n<tr><td>Не школьники (студенты и старше)</td><td>1500 рублей в месяц</td></tr>\n</tbody></table>\n\n<p>Для новых учащихся первая неделя занятий в курсе бесплатна.</p>\n\n<h3>Дополнительные правила</h3>\n<p>Стоимость занятий для школьников фиксируется на тот момент, когда я активировал вам аккаунт в конкретном учебном году, и до конца учебного года; если в дальнейшем я буду поднимать стоимость занятий, то вы продолжите заниматься по старой цене (до конца учебного года, а если будете заниматься успешно, то и на следующий год и т.д.).</p>\n\n<p>Для студентов стоимость занятий фиксируется на момент первой оплаты и пожизненно.</p>\n\n<p>Для нижегородских школьников, занимавшихся в моем курсе более-менее успешно (условно говоря, набравших рейтинг 200 или выше, но может обсуждаться индивидуально), действует пожизненная скидка 50% на занятия после того, как они закончат школу.</p>\n\n<p>Границей учебного года (для определения "успешно занимающихся школьников", а также для "перевода" в следующий класс или в статус студентов) считается 1 июля.</p>\n\n<h3>Подтверждение</h3>\n\n<p>Если вы — не-нижегородский школьник младше 11 класса (т.е. стоимость занятий для вас ниже, чем для студентов), то вам надо подвердить это. Проще всего — прислать мне ссылку на какую-нибудь официальную страничку в интернете, где указаны ваши имя, фамилия, класс и школа. Например, это могут быть результаты какой-нибудь олимпиады, конкурса или т.п.; это может быть какая-нибудь новость на сайте вашей школы и т.д. Возможно, я еще попрошу ссылку на ваш профиль в социальных сетях. Альтернативный вариант для российских школьников — вы можете взять в школе справку о том, что вы учитесь, написать на ней ваш логин на алгопроге и прислать мне фотографию. Возможны и другие варианты подтверждения — напишите мне, как вы можете подтвердить ваш класс.</p>\n\n<p>Если вы не можете подтвердить свое право на сниженную стоимость занятий, вы можете заниматься по студенческой стоимости.</p>\n\n<h3>Скидки для успешных школьников</h3>\n\n<p>Для школьников существует дополнительная акция: если вы успешно занимались в курсе, и остаетесь школьником на следующий год, то на следующий год для вас сохраняется та же стоимость обучения, которая была и в этом году. Школьник считается успешно занимавшимся, если за год он решил минимум 70 задач, не считая задач уровней 1А и 1Б.</p>\n\n<p>Например, если 8-классник успешно занимался в курсе в течение года, то когда он перейдет в 9 класс, он продолжит заниматься по той же цене. Если он и в 9 классе будет успешно заниматься, то и в 10 классе он будет заниматься по той же цене, и т.д. Если, к примеру, в 10 классе он не будет успешно заниматься, то в 11 классе стоимость занятий для него сбросится на ту стоимость, которая будет установлена для 11 классов в соответствующем году.</p>\n\n<h2>Оплата</h2>\n<p>\nОплатить занятия можно картой <a href="/payment" onclick="window.goto(\'/payment\')();return false;">на сайте</a>.</p>\n\n<h2>Возможен ли возврат денег?</h2>\n<p>Стоимость не зависит от того, насколько вы активны в курсе (если вы решаете много, то я буду на вас тратить больше времени, чем если вы решаете мало, а вы платите одну и ту же сумму). Поэтому довольно странно возвращать деньги, если вы не делали ничего. Поэтому политика такая:</p>\n<ul>\n<li>Если вы по объективным непредвиденным причинам не могли заниматься в курсе более 5 дней подряд (сломали руку и т.п.), то я вам верну деньги за весь период, когда вы не могли заниматься. Предсказуемые вещи типа поездок, сессии и т.п. сюда не считаются.</li>\n<li>Если вы по каким бы то ни было причинам не занимались более 10 дней подряд, то я вам верну половину денег за этот период.</li>\n<li>Если вы заранее предупреждаете меня о том, что не сможете заниматься более 10 дней подряд, то я могу вернуть вам деньги за этот период.</li>\n<li>Конечно, если я по каким-то причинам не мог проверять ваши решения и отвечать на ваши письма в течение более чем 5 дней подряд, то я вам верну деньги за весь этот период.</li>\n</ul>\n</div>', 'title': 'Стоимость и порядок оплаты занятий', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_20', 'order': 20, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div><a href="/payment" onclick="window.goto(\'/payment\')();return false;">Оплатить занятия</a></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_21', 'order': 21, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h3>Занятия и правда бесплатные?</h3>\n<p>Да, занятия для школьников из Нижегородской области бесплатные. (Для студентов и всех остальных занятия платные, можете не читать этот текст.) </p>\n\n<h3>Но есть какие-то требования или условия?</h3>\n<p>Я, естественно, хочу от вас чего-то попросить за то, что я с вами занимаюсь. А именно, если эти занятия вам действительно полезны, и вы собираетесь применять полученные знания на какой-нибудь олимпиаде, конкурсе или подобном мероприятии, то я прошу вас указывать меня как вашего учителя, или преподавателя кружка и т.п. Особенно это касается, конечно, ситуации, если вы будете участвовать в олимпиадах высокого уровня (ну, начиная с городской/областной).</p>\n\n<h3>Но ведь я занимаюсь и где-то еще...</h3>\n<p>Конечно. Я поэтому прошу вас сначала понять, насколько этот курс вам полезен по сравнению с другими занятиями. Если подавляющую часть своих знаний вы получили где-то еще (на уроках в школе, на другом кружке или спецкурсе, от родителей и т.п.), и ваш результат на олимпиаде будет в первую очередь результатом других занятий — то, конечно, меня не надо указывать. Если вы получали важные знания как здесь, так и на других занятиях — значит, укажите и меня, и другого преподавателя. На многих олимпиадах можно указать нескольких преподавателей, или можно отдельно указать школьного учителя и преподавателя кружка, и т.п. Если же вы все знания получили только здесь, а другие занятия вам практически не помогли — я буду благодарен, если вы укажете только меня.</p>\n\n<h3>Но школа будет против указывать кого-то постороннего...</h3>\n<p>Попробуйте объяснить вашему учителю или завучу ситуацию. Объясните, что ваши результаты будут во многом определяться именно тем, что вы занимались на этом курсе (а если это не так, и вам эти занятия не помогли, — то, см. предыдущий вопрос, и не надо меня указывать); что если бы вы здесь не занимались, то ваш результат был бы хуже. Может быть, попросите ваших родителей помочь объяснить. В крайнем случае напишите мне, я могу связаться с некоторыми школами города. Или дайте учителю или завучу мой телефон, пусть позвонят.</p>\n\n<h3>Но заявку подает школа, я не могу на нее повлиять...</h3>\n<p>На многих олимпиадах на регистрации перед началом олимпиады вы можете проверить, кто у вас указан как учитель, и исправить. Кроме того, если вы прошли на олимпиаду сравнительно высокого уровня, то можете заранее подойти к вашему учителю или завучу и попросить указать меня в заявке на следующую олимпиаду.</p>\n\n<h3>А как вас указывать?</h3>\nВ большинстве случаев достаточно указать фамилию, имя и отчество — Калинин Петр Андреевич. Если это какой-то очень официальный текст (титульный лист какого-нибудь доклада и т.п.), то можете добавить «к.ф.-м.н.» (что значит кандидат физико-математических наук), но лучше сначала уточните у кого-нибудь или у меня. Если надо указать должность и место работы, пишите «старший разработчик, Яндекс». Если надо указать мой телефон, он есть на главной страничке курса. Если надо что-то еще, то свяжитесь со мной.\n\n<h3>А еще?</h3>\n<p>Вторая вещь, о которой я вас попрошу — если вам эти занятия оказались полезными, и у вас есть друзья или знакомые, которые являются достаточно умными школьниками, хорошо знают математику, участвуют в олимпиадах, или просто интересуются программированием — расскажите им про эти занятия.</p>\n</div>', 'title': '\nО бесплатности занятий для нижегородских школьников', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_22', 'order': 22, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>И еще немного...</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_23', 'order': 23, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Для учителей и родителей</h2>\n<p>Я про это уже написал в FAQ, но на всякий случай повторю здесь. Я рассматриваю занятия ваших детей здесь как добровольные, и не собираюсь от них требовать чего-либо, заставлять и т.д. Если школьник не хочет заниматься, или не может себя заставить — я не буду от него ничего требовать. У меня банально нет никакого канала влияния на него.</p>\n\n<p>Но вы можете влиять на школьника, поэтому, если вы хотите, чтобы от занятий был какой-то результат, то следите за тем, как ваш школьник занимается. На главной странице курса есть "сводная таблица", там можно отслеживать прогресс каждого школьника. Школьник также может показать вам, какие задачи он пытался сдавать, каков был результат проверки и т.д. На главной страничке курса есть также "Таблица по неделям кто что решал", в ней указывается, кто достиг какого уровня, а также по неделям кто сколько задач решил. Цвет ячейки в "таблице уровней" обозначает, насколько хороший результат показал школьник на очередной неделе: ярко-зеленый — очень хорошо, светло-зеленый — средненько, белый — вообще ничего даже не пытался. (Таблица обновляется вручную.) Наконец, вы всегда можете связаться со мной.</p>\n\n<p>Отдельное обращение к учителям: часто бывает так, что сильным школьникам на школьных уроках информатики просто скучно. Если ваш школьник занимается по этому курсу, разрешите ему во время урока решать задачи, читать теорию этого курса! И, конечно, если у вас есть сильные ученики — расскажите им об этом курсе!</p>\n\n<p>И еще одно замечание. Пожалуйста, прочитайте раздел <a href="/material/module-20927_21" onclick="window.goto(\'/material/module-20927_21\')();return false;">"О бесплатности занятий"</a>. А именно, если ваши школьники благодаря моим занятиям будут достигать хороших результатов, то постарайтесь сделать так, чтобы я был указан их учителем/преподавателем на тех олимпиадах и подобных мероприятиях, где они будут применять полученные здесь знания.</p></div>', 'title': 'Для учителей и родителей', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_24', 'order': 24, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_25', 'order': 25, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Про самостоятельность</h2>\n\n<p>Отдельно хочу вас написать про вашу самостоятельность. Я ожидаю, что при работе в курсе (независимо от того, работаете вы в заочном курсе, на занятиях в ННГУ или в лицее 40) вы будете проявлять способность к достаточно самостоятельной работе. В заочном курсе самостоятельность подразумевается сама собой, но и в при очных занятиях я хочу, чтобы вы не просто тупо писали то, что я вам рассказал, но и могли думать сами.</p>\n\n<p>Это обозначает, во-первых, не будут сам вас торопить или заставлять решать задачи. Хотите — решайте, не хотите — ну и не решайте, мне же проще — меньше проверять. Я не буду стоять у вас над душой и что-то с вас требовать. (Хотя, если вы учитесь в лицее 40 и хотите получить зачет, то к вам отдельные требования.)</p>\n\n<p>Во-вторых, не ожидайте, что на занятиях или в теоретических материалах на сайте будет отражено <i>абсолютно всё</i>, что может вам потребоваться для решения задач. Вполне возможно, что в каких-нибудь задачах вы обнаружите, что требуется что-то, что мы "не проходили". Не страшно. Вы всегда можете меня спросить, а лучше — сначала исследовать вопрос самостоятельно (в вашей любимой книжке, или в интернете), а если не получится, то спросить меня. Я вас не съем за такие вопросы, наоборот, я буду очень рад, если вы увидите, что в какой-то задаче требуется что-то дополнительное, и сможете четко спросить, что именно вам требуется.</p>\n\n<p>В-третьих, если вы чего-то не поняли на занятии, в моем комментарии к вашему решению, в теоретических материалах или где еще; или если вы не понимаете, почему не работает ваша программа, то просто подойдите ко мне и спросите (или напишите мне). Не ожидайте, что я вам все очень подробно объясню с первого раза или что я вам буду писать сверхподробные комментарии к решениям. Я объясняю и пишу как раз с расчетом что, если вы что-то не поняли, то вы переспросите.</p></div>', 'title': '\nПро самостоятельность', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_26', 'order': 26, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_27', 'order': 27, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Рекомендуемая литература</h2>\n<h3>Для начинающих — для изучения языка</h3>\n<h4>Питон</h4>\n<p>По питону, как ни странно, книжек не очень много, и вот именно учебных, направленных на школьников, я пока не видел (но я еще поищу). Поэтому, если хотите, можете купить какую-нибудь книжку, которая вам понравится.</p>\n\n<p>Но зато по питону есть очень много ресурсов в интернете; если вы будете задавать поиск по конкретным вопросам, то для питона вы получите адекватный ответ намного более вероятно, чем для паскаля. Поэтому я далеко не уверен, что вам надо покупать бумажную книжку по питону, лучше используйте интернет.</p>\n\n<p>В частности, очень рекомендую вам сайт <a href="http://pythontutor.ru/">http://pythontutor.ru/</a>. Там достаточно адекватная теория, и очень удобный визуальный отладчик питона.</p>\n<h4>Паскаль</h4>\n<p>Здесь приведен список книг, которые можно использовать для изучения языка программирования Pascal. При этом имейте в виду, что большинство из них описывает среду Turbo Pascal (или Borland Pascal, что то же самое); она является весьма устаревшей и в некоторых деталях отличается от среды Free Pascal, которую мы изучаем. Кроме того, во многих книжках есть разного рода устаревшие подходы к написанию программ. </p>\n<p>Большинство из этих книг можно скачать из интернета, или купить; в частности, ряд книг я видел недавно в магазине Дирижабль на Б. Покровской.</p>\n<p>В принципе, можно учиться и по другим книгам, не указанным здесь. Главное — чтобы это был именно учебник по основам языка программирования Pascal (Delphi скорее всего не подойдет). Прежде чем выбирать книгу, посмотрите, как в ней излагается простейший материал. Мне не понравились книги, которые сначала определяют "алфавит языка" и прочие заумные понятия, и только потом приступают к изучению языка; я считаю, что лучше начать изучение языка на простых примерах и только потом переходить к общим вещам. Если найдете книгу, которая вам понравится, скажите мне, чтобы я ее добавил сюда.</p>\n<p>При этом я не читал подробно ни одну из этих книг, я только поверхностно их просмотрел. Поэтому если у вас будут какие-либо комментарии по ним, то тоже скажите мне.</p>\n<ul>\n<li><b>Ушаков Д. М., Юркова Т. А. Паскаль для школьников</b> — мне очень понравилась; эта книга, пожалуй, ближе всего к тому, как я хочу строить обучение языку.</li>\n<li><b>Деревенец О. В. Песни о Паскале </b> (свободна распространяема с сайта <a href="http://oleg-derevenets.narod.ru/">http://oleg-derevenets.narod.ru/</a>) — очень необычный стиль изложения, возможно, понравится школьникам. Очень подробно и хорошо рассказывают про среду Free Pascal. Правда, порядок изучения тем весьма отличается от запланированного мной, но тем не менее, книга весьма неплохая.</li>\n<li><b>Кашаев С. М., Шерстнева Л. В. Паскаль для школьников. Подготовка к ЕГЭ</b> — довольно неплохой подробный учебник.</li>\n<li><b>Андреева Е. В. Программирование — это так просто, программирование — это так сложно</b>. Елена Владимировна Андреева (в отличие от авторов всех остальных учебников) — очень известный в олимпиадной информатике учитель, подготовившая многих сильных олимпиадников, многократный член жюри заключительного этапа Всероссийской олимпиады школьников. Эта книга довольно популярна в обучении олимпиадному программированию, вы можете встретить ссылки на нее во многих разных местах. Тем не менее, книга написана с точки зрения «формального» подхода, когда внимание уделяется в первую очередь полноте и строгости изложения, а не понятности и количеству примеров. Поэтому мне кажется, что она подходит скорее как справочник, или как дополнение к материалу, который я рассказываю на занятиях.\n</li><li><b>Культин Н. Б. Turbo pascal в задачах и примерах</b> — фактически только примеры, без теории.</li>\n<li><b>Павловская Т. А. Паскаль. Программирование на языке высокого уровня. Практикум</b> — не очень много теории, довольно много примеров.</li>\n<li><b>Рапаков Г. Г., Ржеуцкая С. Ю. Turbo Pascal для студентов и школьников</b> — более-менее обычный учебник, ничего особенного, на самом деле мне даже не очень понравился.</li>\n<li><b>Семакин И. Г., Шестаков А. П. Основы программирования</b> — более-менее обычный учебник, ничего особенного, на самом деле мне даже не очень понравился.</li>\n</ul>\n\n<p>Кроме того, следующие книги я видел, но они мне весьма не понравились. Я не рекомендую вам их использовать, хотя, возможно, кому-то они покажутся проще. Если сочтете, что какая-то книга тут находится незаслуженно, тоже напишите мне — на самом деле, я смотрел весьма поверхностно.</p>\n<ul>\n<li><b>Кетков Ю. Л., Кетков А. Ю. Свободное программное обеспечение. FREE PASCAL для студентов и школьников</b></li>\n<li><b>Фаронов В. В. Turbo Pascal 7.0. Учебный курс</b></li>\n</ul>\n\n<p>Наконец, непосредственно на этом сайте есть много теоретического материала — надо зайти на главную страницу сайта и далее следовать по ссылкам на разные темы или на разные курсы. К сожалению, качество материала здесь очень и очень сильно варьируется, от довольно плохого до довольно хорошего.</p>\n\n<h3>Для продолжающих — для изучения алгоритмов</h3>\n<p>К сожалению, нет хороших полноценных учебников по алгоритмам. Те книги, которые я указываю ниже, считаются довольно хорошими книгами, но покрывают материалы нашего курса далеко не полностью и/или зачастую содержат много дополнительной или не всегда нужной информации. Я стараюсь на страничке курса давать ссылки на полезные материалы по разным темам; также я всегда готов вам рассказывать нужные темы на занятиях. Соответственно, я предполагаю, что изучать нужные темы вы будете именно по материалам, на которые есть ссылки со странички курса, и/или по моим рассказам, а литература, указанная ниже — скорее вспомогательные книги.</p>\n\n<ul>\n<li><b>Т. Кормен, Ч. Лейзерсон, Р. Ривест «Алгоритмы. Построение и анализ»</b> (во втором издании к авторам присоединился еще К. Штайн). Самая популярная книга по алгоритмам, книга, которую должен знать каждый уважающий себя крутой программист. Довольно хорошая, но довольно продвинутая (вряд ли ее стоит читать школьникам ниже 3-4 уровня), и местами чересчур теоретизирована (рассчитана скорее на студентов, а не на школьников).</li>\n<li><b>А. Шень. Программирование: теоремы и задачи</b> (свободно доступна с сайта <a href="http://www.mccme.ru/free-books/">http://www.mccme.ru/free-books/</a>). Тоже довольно известная книга, и написанная в расчете на в том числе школьников, хотя на мой взгляд дает местами лишний или чересчур глубокий материала, а часть материала, наоборот, можно было бы изложить более детально. Но все равно весьма рекомендую.</li>\n<li><b>Д. Кнут. Искусство программирования.</b>. (В ранних изданиях русского перевода — Искусство программирования для ЭВМ.) Классическая и очень-очень известная монография, но содержит очень много информации, которую тяжело фильтровать на более и менее важную, очень тяжело читается, и чувствуется, что первое издание было почти 50 лет назад (!) (проблема скорее не в устаревании материала, а в устаревании способа подачи, например, примеры даются на ассемблерно-подобном языке, а не на языке высокого уровня или псевдокоде).</li>\n</ul></div>', 'title': '\nРекомендуемая литература', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_28', 'order': 28, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div><a href="https://docs.google.com/document/d/1YrAWXEK4ak9lE07Sx8C7vLZ0kgJav86IouaNU91GNGM/pub">\nПримерный план уровней</a></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_29', 'order': 29, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Формулы расчета рейтинга и т.д.</h1>\n<p>В сводных таблицах показывается рейтинг, активность, рейтинг на codeforces, взвешенное изменение рейтинга на codeforces и взвешенное количество контестов на codeforces.</p>\n\n<h2>Рейтинг</h2>\n<p>(Кому интересно, конкретный код расчета рейтинга и активности есть <a href="https://github.com/petr-kalinin/algoprog/blob/master/server/calculations/calculateRatingEtc.coffee">вот здесь</a>.)</p>\n\n<p>Рейтинг определяется просто набором решенных задач. А именно, каждая задача стоит некоторое фиксированное количество баллов рейтинга, определяемое уровнем этой задачи.</p>\n\n<p>Задача уровня 1А стоит $2.5$ балла рейтинга. Задача уровня 2А стоит $2.5^2$ баллов рейтинга. Задача уровня 3А стоит $2.5^3$ баллов рейтинга, и т.д. Задача уровня $N$А стоит $2.5^N$ баллов рейтинга.</p>\n\n<p>Задачи промежуточных уровней стоят промежуточное число баллов. А именно, задача уровня $N$Б стоит $2.5^{N+0.25}$ баллов рейтинга, уровня $N$В — $2.5^{N+0.5}$, уровня $N$Г — $2.5^{N+0.75}$ баллов.</p>\n\n<p>Задачи с региональных олимпиад считаются как задачи с уровня 3А. Если одна и та же задача есть на нескольких уровнях, то учитывается только самый высокий уровень этой задачи.</p>\n\n<p>При выводе рейтинга в таблицы он округляется до целых, но при подсчете все считается вещественными числами.</p>\n\n<p>Табличка стоимости (округленная до двух знаков после запятой):</p>\n<pre>          А        Б        В        Г\n1      2.50     3.14     3.95     4.97 \n2      6.25     7.86     9.88 \n3     15.62    19.65    24.71 \n4     39.06    49.12    61.76 \n5     97.66   122.80   154.41 \n6    244.14   306.99   386.02 \n7    610.35   767.48   965.05 \n8   1525.88  1918.69  2412.63 \n9   3814.70  4796.73  6031.57 \n10  9536.74 11991.82 15078.91 \n</pre>\n\n<h3>Идеология</h3>\n<p>Баллы за задачу растут очень быстро, специально для того, чтобы на высоких уровнях было не так важно, что вы решали на младших уровнях. Например, если вы уже на уровне 5, то, скорее всего, задачи уровня 1 не представляют для вас вообще никакой сложности. Поэтому не важно, сколько вы решили на уровне 1. И это получается за счет того, что задачи уровня 5 стоят намного больше, чем задачи уровня 1.</p>\n\n<h2>Активность</h2>\n<p>(Конкретный код расчета — по той же ссылке)</p>\n\n<p>Активность — показатель того, насколько активно вы решали задачи последнее время. Каждая задача, которую вы когда-либо решали, дает свой вклад в активность. У каждой задачи есть "базовые" баллы активности — это квадратный корень из номера уровня. (У всех задач уровня 1 "базовый" балл равен 1, у каждой задачи уровня 2 базовый балл равен 1.4, и т.д.) Этот базовый балл умножается на $0.55^{t/\\tau}$, где $t$ — время, прошедшее с того момента, как вы сдали эту задачу, а $\\strut\\tau$ равно 1 неделе. Например, если вы сдали задачу только что, то базовый балл учитывается полностью. Если вы сдали задачу ровно сутки назад, то базовый балл умножается на $0.55^{1/7}\\approx 0.92$. Если вы сдали задачу ровно две недели назад, то базовый балл умножается на $0.55^2\\approx0.3$. Если вы сдали задачу 8 недель назад, то базовый балл умножается на $0.55^8\\approx0.0083$, т.е. эта задача уже почти не учитывается.</p>\n\n<p>Суммарное значение активности по всем задачам делится на 0.45, в результате получается эдакое среднее число "задач" в неделю.</p>\n\n<p>Получается, что на самом деле учитываются только недавно сданные задачи, а те, которые вы решали давно, не учитываются. Но при этом падение этой "учитываемости" плавное. Если вы перестанете решать задачи, то ваша активность будет постепенно падать со временем (хотя и никогда не станет ровно нулем). В таблицах активность выводится округленной до одного знака после запятой, но на самом деле активность — настоящее вещественное число.</p>\n\n<p>В ряде сводных таблиц сначала указываются школьники, активность которых больше 0.1, и только потом все остальные.</p>\n\n<h2>Цвет</h2>\n<p>Имена школьников в таблицах рисуются цветом, определяемым их рейтингом и активностью. А именно, активность определяет яркость цвета (от почти черного до насыщенного), а рейтинг определяет оттенок (от фиолетового через все цвета радуги до красного). Например, школьник с рейтингом 1 и активностью 10 будет иметь ярко-фиолетовый цвет, школьник с рейтингом 1 и активностью 0.1 будет иметь темно-фиолетовый цвет, школьник с рейтингом примерно 1500 и активностью 10 будет иметь ярко-зеленый цвет, а с активностью 0.1 — темно-зеленый цвет; красный цвет соответствует рейтингу примерно 160000.</p>\n\n<p>Конкретная формула: в <a href="https://ru.wikipedia.org/wiki/HSV_(%D1%86%D0%B2%D0%B5%D1%82%D0%BE%D0%B2%D0%B0%D1%8F_%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C)">модели HSV</a> цвет участника имеет следующие компоненты:</p>\n$h = 11/12 \\cdot (1 - log(r+1) / log(R + 1))$<br>\n$v = 0.3 + 0.7 \\cdot log(a+1) / log(A + 1)$<br>\n$s = 1$<br>\n<p>здесь $r$ и $a$ — рейтинг и активность, $R$ — "максимальный рейтинг" (те самые примерно 160000, точнее — рейтинг, который получит человек, на каждом уровне решивший по 10 задач, возможно, я буду подправлять константу в будущем), $A=7$.</p>\n\n<p>Еще есть мелкие поправки на краях возможных интервалов значений. Код, кому интересно, <a href="https://github.com/petr-kalinin/algoprog/blob/master/client/components/UserName.coffee">здесь</a>.</p>\n\n<h2>Параметры codeforces</h2>\n<p><a href="https://github.com/petr-kalinin/algoprog/blob/master/server/calculations/calculateCfRating.coffee">Код</a></p>\n\n<p>Рейтинг на CF берется прямо с CF, обновляется раз в сутки.</p>\n\n<p>Взвешенное количество контестов вычисляется так: каждый написанный вами контест дает вклад, равный $0.5^{t/\\tau}$, где $t$ — время, прошедшее с написания контеста, а $\\tau$ равно 4 неделям. Все такие вклады суммируются. Т.е. только что написанный контест дает вклад 1, контест, написанный 4 недели назад — 0.5, и т.д.</p>\n\n<p>Взвешенное изменение рейтинга вычисляется так: каждый написанный вами контест дает вклад, равный $\\delta\\cdot0.5^{t/\\tau}$, где $\\delta$ — изменение рейтинга в этом контесте, $t$ — время, прошедшее с написания контеста, а $\\tau$ равно 4 неделям. При этом самый первый в жизни написанный контест не учитывается, т.к. там изменение рейтинга — это бессмысленная вещь.</p></div>', 'title': '\nФормулы расчета рейтинга, активности и т.д.', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_30', 'order': 30, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_31', 'order': 31, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про ачивки</h1>\n<p>На алгопроге каждый пользователь может заработать ачивки. Ачивки выдаются за разные вещи, в первую очередь за успешные занятия на алгопроге, а также за участие в различных олимпиадах. Заработанные пользователем ачивки показываются в его профиле, также три наиболее «крутые» ачивки показываются рядом с именем пользователя в сводных таблицах и т.д.</p>\n\n<p>Полный список доступных ачивок можно посмотреть <a href="/achieves">здесь</a>, а также в виде исходного кода <a href="https://github.com/petr-kalinin/algoprog/blob/master/client/lib/achieves.coffee">здесь</a>.</p>\n\n<p>Часть ачивок выдается автоматически, часть ачивок (в основном за олимпиады) я устанавливаю вручную. Если вы считаете, что у вас должна быть какая-то ачивка, а у вас ее нет, то напишите мне. Особенно это касается школьников из-за пределов Нижегородской области — я не всегда могу отслеживать все ваши олимпиады, поэтому пишите мне про свои олимпиады сами.</p></div>', 'title': ' \nПро ачивки', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_32', 'order': 32, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_33', 'order': 33, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про дополнительные лекции</h1>\n\n<p>Я планирую время от времени по воскресеньям на занятии в ННГУ проводить дополнительные лекции на разные темы, не связанные напрямую с алгопрогом и вообще с алгоритмами — но которые серьезный программист по идее должен знать.</p>\n\n<p>Эти лекции совершенно не нужны для занятий на алгопроге, да и по бóльшей части для олимпиад тоже (хотя отчасти и будут полезны, особенно про командную строку). Но они очень полезны для вашего кругозора.</p><p>\n\n</p><p>Цель таких лекций — дать вам общее представление о той или иной теме. Я не буду ставить целью чтобы вы сразу научились чему-то новому, я буду ставить целью чтобы вы узнали о существовании чего-то нового и поняли, что надо искать и про что читать в интернете, чтобы с этим разобраться. </p>\n\n<p>Лекции будут проходить в среднем раз в две недели по воскресеньям в ННГУ в аудитории 114 в 15.00, и длиться примерно 30-60 минут. На них можно приходить и тем, кто зарегистрировался на занятие в 14.00, и тем, кто зарегистрировался на занятие в 15.30, и тем, кто не регистрировался на занятия вообще.</p>\n\n<p>Предварительный список тем (я готов принимать от вас запросы на какие-либо еще темы):</p><p>\n\n</p><ul>\n<li><b>6 октября</b>: Командная строка</li>\n<li><b>27 октября</b>: Far manager</li>\n<li><b>16 февраля</b>: Системы контроля версий</li>\n<li>TeX и LaTeX</li>\n<li>...</li>\n</ul>\n\n<p>Запрошенные темы (не обещаю, что расскажу, но подумаю):</p>\n\n<ul>\n<li>Нейронные сети и их обучение</li>\n<li>Компиляторы, интерпретаторы, ассемблер и т.д.</li>\n<li>История языков программирования</li>\n</ul></div>', 'title': ' \nПро дополнительные лекции по воскресеньям', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_34', 'order': 34, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_35', 'order': 35, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>О лицензии на материалы этого сайта</h2>\n<h3>Исходный код сайта</h3>\nИсходный код собственно сайта algoprog.ru написан мною (Петром Калининым) и распространяется по лицензии <a href="http://www.gnu.org/licenses/agpl">GNU Affero General Public License</a>. Скачать исходный код можно с сайта <a href="http://github.com/petr-kalinin/algoprog">github.com/petr-kalinin/algoprog</a>.\n\n<h3>Теоретические материалы</h3>\n<p>На этом сайте есть различные теоретические материалы с разной степенью понятности с точки зрения лицензии.</p>\n<p>Материалы, в которых лицензия указана явно, распространяются по указанной в них лицензии.</p>\n<p>Материалы, размещенные на других сайтах, на которые с сайта algoprog.ru проставлена только ссылка, распространяются по лицензии, определяемой указанным сайтом.</p>\n<p>Материалы, в которых лицензия явно не указана, но автором которых являюсь я (это большинство материалов, размещенных непосредственно на сайте algoprog.ru), распространяются по лицензии <a href="http://creativecommons.org/licenses/by-sa/4.0/">Creative Commons Attribution-ShareAlike (CC BY-SA) 4.0</a>.</p>\n<p>Если вы не уверены, какая лицензия распространяется на конкретный материал, спросите меня.</p>\n\n<h3>Условия задач</h3>\n<p>Условия задач взяты с сайта <a href="http://informatics.mccme.ru">informatics.mccme.ru</a>, где они в большинстве случаев собраны с различных олимпиад. Условия лицензии на них не ясны.</p>\n</div>', 'title': '\nО лицензии на материалы сайта', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_36', 'order': 36, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_37', 'order': 37, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Франшиза</h1>\n\n<p>Если вы уже учите кого-нибудь (школьников, студентов и т.д.) программированию, и хотите использовать алгопрог или его материалы в своих занятиях...</p>\n\n<p>...или если вы хотите начать учить кого-нибудь на базе алгопрога или с использованием его материалов...</p>\n\n<p>...или если вы хотите использовать движок алгопрога в своих занятиях, наполнив его своими материалами</p>\n\n<p>то этот текст для вас.</p>\n\n<h2>Материалы</h2>\n\n<p>Если вам нужен не функционал алгопрога, а только <i>материалы</i> — теоретические материалы, видеолекции, задачи и т.д. — то они доступны в том или ином виде свободно. Теоретические материалы, автором которых являюсь я, как правило, распространяются под той или иной свободной лицензией, вы можете их использовать. Она обычно указана в самом материале, если там лицензия не указана, то спросите меня. Материалы, автором которых являюсь не я, взяты с других сайтов, вы обычно тоже можете их использовать. Задачи взяты с сайта <a href="http://informatics.mccme.ru">informatics.mccme.ru</a>, этот сайт специально создан для проведения различных курсов по программированию, вы можете формировать свои курсы из доступных там задач и т.д. В частности, вообще все содержимое алгопрога есть на информатиксе: <a href="https://informatics.msk.ru/course/view.php?id=1135">informatics.msk.ru/course/view.php?id=1135</a> — собственно, весь алгопрог вырос из этого моего курса на информатиксе.</p>\n\n<h2>Движок</h2>\n\n<p>Сам движок алгопрога также <a href="https://github.com/petr-kalinin/algoprog">свободно доступен</a>, вы можете поднять собственный инстанс алгопрога и делать там что угодно. (Хотя, конечно, это не так просто, и я вряд ли буду вам помогать.)</p>\n\n<h2>Отдельный инстанс</h2>\n\n<p>Я могу поднять отдельный инстанс алгопрога для ваших учеников, с вашими материалами и задачами. Это требует отдельного обсуждения, но в принципе это возможно. Это будет платно, конкретная стоимость будет зависеть от необходимой работы по поддержке инстанса, необходимых доработок, и ожидаемого количества учеников. В качестве грубой предварительной оценки, если не требуется серьезных доработок, и ожидается 20-50 учеников, то стоимость отдельного инстанса будет составлять 500-1000 рублей с ученика в месяц.</p>\n\n<h2>Занятия прямо на алгопроге по материалам алгопрога</h2>\n\n<p>Если вы хотите заниматься именно на алгопроге, то есть следующие варианты. Во-первых, ваши ученики может зарегистрироваться на алгопроге и заниматься как независимые ученики. С моей точки зрения это будут просто дополнительные ученики на алгопроге, вы сможете организовывать занятия, помогать ученикам и т.д., но у вас не появится никаких дополнительных возможностей на алгопроге (вы не сможете просматривать решения учеников и т.д.). Ваши ученики занимаются независимо, для них стоимость занятий будет, естественно, определяться <a href="/pay">по общим правилам</a>, с вас я, естественно, денег брать не буду (и вообще могу про вас и не знать :) ).</p>\n\n<p>Если вы хотите иметь дополнительные возможности — просматривать решения учеников, комментировать их, засчитывать/игнорировать, иметь отдельные сводные таблицы, то напишите мне. Это все (равно как и другие запросы с вашей стороны) вполне реально, но требует отдельного обсуждения. В качестве <b>базовых</b> вариантов есть следующие:</p>\n<ul>\n<li>Ваши ученики занимаются на алгопроге на равных правах с остальными, я их проверяю, комментирую, засчитываю/игнорирую их решения — и плюс вы можете делать то же самое; для ваших учеников будут отдельные таблички и т.д. <b>Как правило</b>, стоимость таких занятий для ваших учеников будет такая же, как если бы они занимались независимо. (Т.е. никакой дополнительной оплаты за дополнительный функционал нет, но и скидок нет.)</li>\n<li>Я никак не взаимодействую с вашими учениками — не смотрю их решения, не засчитываю/игнорирую. Все это делаете, если хотите, вы. <b>Как правило</b>, стоимость таких занятий для ваших учеников будет в два раза меньше, чем если бы они занимались независимо.</li>\n</ul>\n<p>В обоих вариантах выше существенны слова «базовые» (варианты) и «как правило». Это обозначает, что, с одной стороны, это не публичная оферта — в конкретной ситуации возможны другие условия и другие цены; с другой стороны, возможны также и другие варианты по функционалу и по нашему с вами взаимодействию. Пишите, поговорим :)</p>\n\n<p>В частности, если для ваших учеников занятия обычно бесплатные, то оба варианта выше будут, как правило, бесплатными.</p>\n\n</div>', 'title': '\nО франшизе', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_38', 'order': 38, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>«Стажировка» на алгопроге</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_39', 'order': 39, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>«Стажировка» на алгопроге</h1>\n<p>Что летом делают большинство нормальных студентов-программистов? Стажируются в IT-компаниях. Школьников обычно на такие стажировки не зовут, да и участвовать школьникам в стажировках обычно сложно.</p>\n\n<p>Поэтому я подумал, чем алгопрог хуже IT-компаний? И решил организовать возможность некоего аналога стажировок на алгопроге. А именно, если вы хотите, то можете поучаствовать в развитии самой платформы алгопрога. Если вы всегда хотели добавить на алгопрог какую-нибудь фичу, то вы сможете этим заняться. Или у меня для вас есть список вещей, которые я давно хочу сделать на алгопроге, но все не успеваю, и вы можете заняться ими.</p>\n\n<p>Это, конечно, будет довольно сильно отличаться от обычных задач, которые вы решаете на алгопроге. Вам придется разбираться в довольно объемном уже существующем (и очень грязном) коде алгопрога, вам придется разбираться в наверняка незнакомом языке программирования (Coffeescript, но не бойтесь — он несложный и поначалу весьма похож на питон), вам придется разбираться со множеством технологий, с которыми вы возможно еще не работали (git, MongoDB, node.js, React, немного Redux), вам придется разбираться с HTML и браузерным Javascript, вам придется много гуглить и читать, причем скорее всего по-английски (ну или через переводчик) — но я верю, что если вы абсолютно уверенно решаете как минимум задачи уровней 1А и 1Б, и не боитесь самостоятельно разбираться с возникающими проблемами, то вы вполне можете и со всем этим разобраться.</p>\n\n<p>Исходный код алгопрога вот: <a href="https://github.com/petr-kalinin/algoprog">https://github.com/petr-kalinin/algoprog</a>. Список доделок, которыми вы можете заняться, вот: <a href="https://github.com/petr-kalinin/algoprog/issues">https://github.com/petr-kalinin/algoprog/issues</a>, или вы можете обсудить со мной и предложить что-то свое.</p>\n\n<p>В отличие от классических стажировок, я не буду требовать от вас какой-то регулярности в работе (ну собственно как и с обычными задачами на алгопроге), и не буду вам платить денег :) — но обещаю, что буду вникать в то, что вы делаете, и помогать. А вы внесете свой вклад в развитие алгопрога, и получите много нового разнообразного опыта.</p>\n\n<p>Кроме того, в отличие от классических стажировок, я не смогу вам уделять столько внимания, сколько обычно уделяет руководитель стажеру в IT-компаниях. Вам придется очень во многом разбираться самостоятельно, я буду скорее направлять ваши действия, а не давать конкретные детальные указания. Будьте к этому готовы.</p>\n\n<p>В общем, если вы хотите в этом поучаствовать, пишите. Распространяется на всех, кто занимается на алгопроге (не обязательно школьников) и имеет уровень минимум 1В. Пока только лето (с апреля по август включительно).</p></div>', 'title': '«Стажировка» на алгопроге', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Очные занятия</h2>\n<font size="+1"><a href="/material/module-20927_17" onclick="window.goto(\'/material/module-20927_17\')();return false;">Подробная информация</a></font><br>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_1', 'order': 2, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про свои ноутбуки</h1>\n<p>Иногда бывает, что на занятиях не хватает компьютеров (особенно в начале учебного года). Поэтому вы <b>можете приносить свои ноутбуки</b>, но на следующих условиях:</p>\n<ol>\n<li>Вы сами несете ответственность за свой ноутбук. Я не готов решать какие-либо проблемы, связанные с ноутбуком, начиная от отсутствующей зарядки или отсутствующего интернета (см. ниже), поломки его вами или другими школьниками, и до даже его пропажи (хотя и надеюсь, что такого не будет). Если вы и ваши родители не уверены, стоит ли вам брать с собой ноутбук — не берите.</li>\n<li>Обеспечивайте доступ в интернет на своем ноутбуке самостоятельно. Проще всего — имейте с собой usb-модем или научитесь раздавать доступ в интернет со своего телефона. Убедитесь, что у вас достаточно трафика для работы, или заранее подключите пакет трафика (я думаю, если вы собираетесь только работать на informatics, то сотни мегабайт будет более чем достаточно). Лучше проверьте заранее, что все работает. Вы можете также объединиться, чтобы в группе друзей один человек раздавал интернет на всех, но договаривайтесь об этом самостоятельно и заранее, а также читайте следующие пункты.</li>\n<li>Убедитесь, что у вас на ноутбуке нет вирусов и других программ, которые могут захотеть скачать большое количество данных из интернета; вирусы еще могут подписать вас на какие-нибудь платные мобильные рассылки. (Многие программы с функцией автообновления могут расходовать много трафика без предупреждения). Если вы используете интернет друга, или предоставляете свой интернет друзьям, то риск скачивания большого объема данных тем более возрастает. (В частности, именно поэтому я сам не раздаю интернет со своего телефона.)</li>\n<li>Имейте с собой все нужные зарядки (для ноутбука и для телефона, хотя телефон проще подключать к ноутбуку). Имейте также с собой <b>удлинитель</b> метра на 3 как минимум, а то и на 5 метров, т.к. в наших аудиториях у многих столов или нет розеток, или их мало.</li>\n<li>Заранее установите требуемые для работы программы — среду программирования и/или среды разработки, какие вы используете; для команд также убедитесь, что у вас установлено всё, что требуется для всей вашей команды.</li>\n<li>Для команд нет большого смысла приносить более 1 ноутбука на команду.</li>\n</ol></div>', 'title': 'Про свои ноутбуки на занятиях', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_2', 'order': 3, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Лицей 40</h3>\n<p><b>Только для учеников лицея 40</b></p>\n<p>Занятия проходят по средам в 14:30 КЦ.</p>\n<ul>\n<li>Новичкам (кто не ходил ни разу и не решал задач заочно) <b>прежде чем приходить на занятие, необходимо зарегистрироваться на сайте и решить хотя бы одну задачу</b>. Исключение — занятие 25 сентября, туда можно приходить всем новичкам вообще.</li>\n<li>Те, кто уже был хотя бы один раз, или решил в курсе хотя бы одну задачу заочно, могут приходить каждую среду.</li>\n</ul>\n<a href="/material/in20946" onclick="window.goto(\'/material/in20946\')();return false;">Правила получения зачета</a>\n<h3>ННГУ</h3>\n<p><b>Только для школьников</b>\n</p><p>Занятия проходят по воскресеньям в ННГУ ил. Лобачевского (пр. Гагарина, 23), корп. 2, ауд. 110 и 114.</p>\n<p><b>Берите с собой паспорт или свидетельство о рождении.</b> Если вас не пускает охрана, звоните мне.</p>\n<ul>\n<li>Проходит два занятия: с 14.00 до 15.30 и с 15.30 до 17.00.</li>\n<!--<li>Занятие проходит с 14.00 до 16.00.</li>-->\n<li>Новичкам (кто не ходил ни разу и не решал задач заочно) <b>прежде чем приходить на занятие, необходимо зарегистрироваться на сайте и решить хотя бы одну задачу</b>. Исключение — занятие 22 сентября, туда можно приходить всем новичкам вообще.</li>\n<li>Те, кто уже был хотя бы один раз, или решил в курсе хотя бы одну задачу заочно, могут приходить каждое воскресенье на любое из двух занятий.</li>\n<li>Чтобы вам точно хватило компьютеров, <b><a href="/checkins" onclick="window.goto(\'/checkins\')();return false;">зарегистрируйтесь на занятие</a></b>. Без регистрации приходить можно, но если компьютеров хватать не будет, то преимущество будет у тех, кто записался. Каждую неделю надо регистрироваться заново.</li>\n<li>Регистрироваться на два занятия нельзя, но те, кто записались на 14.00, могут остаться на второе занятие, если будут места. Те, кто со своими ноутбуками, тоже могут приходить на оба занятия.</li>\n</ul>\n<hr>\n\n<div class="algoprog-contacts">\n<h2>Контакты</h2>\nПетр Андреевич Калинин\n<ul>\n<li>e-mail: petr@kalinin.nnov.ru</li>\n<li><a href="http://vk.com/petr.kalinin">http://vk.com/petr.kalinin</a>*</li>\n<li>+7(910)794-32-07**</li>\n<li>Телеграм: +7(910)794-32-07</li>\n</ul>\n<b>Телеграм:</b>\n<ul>\n<li><a href="https://t.me/algoprog_news">Канал с важными объявлениями</a>, в первую очередь про очные занятия. Рекомендую всем подписаться. (Если ссылка на t.me заблокирована, просто в телеграмме поищите канал «algoprog_news».)</li>\n<!--<li><a href="https://t.me/joinchat/CDV8hRTLsYl_pplIhhLZzw">Телеграм-чат для общих вопросов и разного флуда</a></li>-->\n</ul>\n<p>Мои контактные данные можно свободно распространять по любым вопросам, связанным с работой курса или с олимпиадным программированием в Нижегородской области вообще.</p>\n<p><b>Если у вас есть какие-то проблемы с работой в курсе, какие-то вопросы и т.п., сразу пишите мне!</b></p>\n<p>* Политика добавления в друзья во вКонтакте: я не возражаю, если вы добавите меня в друзья, но я буду добавлять только тех, кто уже давно и успешно занимается.</p>\n<p>** Пожалуйста, звоните по телефону только в экстренных случаях. Если ваш вопрос не очень срочный и может подождать несколько часов, напишите мне любым указанным выше способом — во вКонтакте, в Телеграм или на email.</p>\n</div>\n<hr>\n\n<h2>Полезные ссылки</h2>\n<font size="+1"><a href="https://www.dropbox.com/s/1n5g6w6hkryqwcw/Free%20Pascal%202.6.4%20-%20installer%20.exe?dl=0">Ссылка на установщик Free Pascal</a></font>\n<hr>\n<font size="+1">Установщики питона: <a href="https://www.python.org/ftp/python/3.5.2/python-3.5.2.exe">сам Python</a> и <a href="http://wingware.com/pub/wingide-101/5.1.12/wingide-101-5.1.12-1.exe">Wing IDE 101</a></font>\n<hr>\n<font size="+1">\n<a href="http://petr-kalinin.github.io/keyb/">Клавиатурный тренажер</a> на скорость набора программистского текста. </font> Ориентировочные результаты: 150 символов/минуту — довольно неплохо, 200 символов/минуту — очень круто. <a href="/material/in20938" onclick="window.goto(\'/material/in20938\')();return false;">Подробнее</a>.\n\n<hr class="algoprog-main-page-separator">\n\n<h2>Текущие олимпиады и т.п.</h2>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_3', 'order': 4, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>О школьной олимпиаде</h1>\n<font color="red">Эта информация касается школьной олимпиады в Нижегородской области. В других регионах могут быть отличия.</font>\n<h3>Краткое содержание того, что ниже</h3>\n<ul>\n<li>В школьной олимпиаде стоит участвовать как минимум всем, у кого уровень 1В и выше</li>\n<li>Участвовать надо по задачам за 9-11 класс, даже если вы в младших классах</li>\n<li>Заранее выясните, где и когда будет олимпиада, и попросите вам дать возможность писать на том языке, на котором вы хотите.</li>\n<li>На самой олимпиаде:</li>\n<ul>\n<li>Тщательно тестируйте свои задачи, жюри будет проверять их только после олимпиады и второй попытки у вас не будет!</li>\n<li>Неполные решения также оцениваются</li>\n<li>Прочитайте все задачи сразу, не тратьте всё время на одну задачу.</li>\n<li>Регулярно сохраняйте решения</li>\n<li>Не бойтесь задач, самые сложные обычно примерно соответствуют уровню 1Г-2А, и не обязательно решать всё, чтобы пройти дальше.</li>\n<li>Если что-то забыли, ищите обходные пути</li>\n<li>Ищите закономерности</li>\n<li>Применяйте здравый смысл</li>\n</ul>\n<li>Как только узнаете свой результат, скажите его мне</li>\n<li><font color="red">(Только нижегородцы) По любым вопросам, а особенно если что-то идет не так, сразу и в любое время звоните мне!</font></li>\n</ul>\n<h3>О чем речь?</h3>\n<p>Школьная олимпиада по информатике в Нижнем Новгороде состоится, видимо, в конце сентября — начале октября; сроки могут быть разными в разных районах. Уточните сроки заранее в своей школе. (Школьники не из Нижнего Новгорода — тоже уточняйте у себя в школе).</p>\n<p><b>Говорят, что в некоторых школах олимпиада будет аж 19 сентября! Это очень рано, конечно. Но это обозначает, что обязательно поторопитесь и выясните всё заранее!</b></p>\n<p>Школьная олимпиада — это первый этап в системе Всероссийской олимпиады школьников. Победители школьной проходят на районную олимпиаду, с районной — на областную и далее на собственно всероссийскую и международную, поэтому это — самая важная последовательность олимпиад в году, и школьная олимпиада является "входом" в нее. Не пропустите.</p>\n\n<h3>Кому стоит участвовать?</h3>\n<p>Я очень рекомендую участвовать всем, кто на момент олимпиады будут иметь уровень 1В и выше (независимо от класса). Если у вас на момент олимпиады еще не будет уровня 1В, но вы хотите, то можете тоже участвовать — хотя, возможно, задачи вам покажутся несколько сложными. Я думаю, что уровня 1В, скорее всего, будет достаточно, чтобы пройти на районную олимпиаду.</p>\n<p>Если вы в прошлом году участвовали в олимпиадах и стали призером (или победителем) районной или областной олимпиады, то школьную олимпиаду в этом году можете пропустить — вы проходите автоматом на ту олимпиаду, на которой стали призером год назад. (К городской олимпиаде из В.Д.Лелюха это не относится, она не входит в систему Всероссийской олимпиады школьников.)</p>\n\n<h3>Что надо сделать, чтобы участвовать?</h3>\n<p>Заранее, как можно раньше, подойдите к своему учителю информатики и скажите ей, что вы хотите участвовать. Ближе к дате олимпиады вам, наверное, скажут, где и когда именно она будет проходить; если не сказали, то еще раз подойдите к учителю и уточните. Пожалуйста, контролируйте сами, что вы все знаете про олимпиаду — я не могу связаться с каждой школой и сказать, чтобы вас не забыли. (В лицее 40 я передам список школьников уровня 1В и выше учителям, чтобы они про вас не забыли. Если вы хотите участвовать, но имеете уровень ниже 1В, то сообщите мне об этом заранее, я вас тоже включу в список.)</p>\n<p>Если вы младше 9 класса, то обязательно скажите, что вы хотите писать задачи за 9 класс (см. про это подробнее ниже). (В лицее 40 я сам это проконтролирую.) Младше 9 класса могут быть очень странные задачи, очень странная организация и т.д. — ни в коем случае не соглашайтесь участвовать по задачам младше 9 класса, даже если вы сами намного младше :)</p>\n<p>Заранее уточните, на каком языке программирования вы сможете писать. Постарайтесь уговорить учителей, чтобы вам дали написать вашем любимом языке, будь то Free Pascal, и PascalABC или Python или что угодно еще; если нужно, предложите, что вы сами установите нужные программы (компиляторы, среди разработки) на компьютер(ы), на которых будет олимпиада. (В лицее 40 я постараюсь заранее это все обсудить, но на всякий случай можете и сами уточить.)</p>\n<p>Если возникают какие-то проблемы, обязательно пишите или даже звоните мне (только нижегородцы)! Я не уверен, что смогу чем-то помочь, но вдруг. Не тяните с проблемами до последнего.</p>\n\n<h3>Как проходит олимпиада</h3>\n<p>Олимпиады по информатике, по крайней мере низших уровней (школьная, районная) проходят в следующем формате. Вам предлагается несколько (обычно от 2 до 5) задач, по каждой задаче вам надо написать программу. Задачи имеют такой же формат, как у нас на этом сайте: вводятся какие-то данные, надо вывести ответ. Как и у нас, гарантируется, что входные данные соответствуют ограничениям, указанным в условиях. В общем, все весьма похоже на то, как вы решаете задачи на сайте.</p>\n\n<p>Но есть важное отличие — на сайте результат проверки задачи сообщается вам сразу же, и вы можете сдавать одну и ту же задачу несколько раз. На олимпиаде ваши задачи будут проверяться только после тура, и у вас уже <b>не будет возможности исправить никакие ошибки</b>. Поэтому тщательно проверяйте свои решения, про это еще см. ниже.</p>\n\n<p>Олимпиада длится ограниченное время (скорее всего, два урока, но уточните заранее), поэтому внимательно контролируйте время. Не зависайте над одной задачей; если что-то не получается, то подумайте, может быть, стоит переключиться на другую задачу?</p>\n\n<p>В частности, <b>прочитайте все условия всех задач сразу в начале тура,</b> до того, как начнете что-либо программировать. От нашего жюри можно ожидать, что они разместят задачи по возрастанию сложности, но этого может и не быть (не говоря уж о том, что ваше восприятие сложности может отличаться от того, как это воспринимает жюри). Поэтому сначала прочитайте задачи, убедитесь, что вы их понимаете, а потом уже начинайте решать — причем с тех, которые выглядят проще. Ни в коем случае не должно быть такого, что "я все время решал первую задачу, а остальные даже не прочитал или даже не подумал над ними".</p>\n\n<p>Еще одно отличие от сдачи задач на сайте — на олимпиаде у вас будут оцениваться также и неполные решения. По каждой задаче будет подготовлено несколько тестов, и за каждый тест вы будете получать определенное количество баллов. Поэтому если у вас не получается придумать решение, которое будет работать всегда — напишите хотя бы решение, которое будет работать иногда. Постарайтесь, чтобы по каждой задаче у вас было хоть что-то сделано, чтобы у вас <b>не было нулевых баллов ни по одной задаче.</b></p>\n\n<p>В конце тура полезно еще раз проверить, что у вас все работает так, как вы ожидаете. Выделите в конце минут пять-десять, чтобы вернуться ко всем задачам и проверить, что они работают хотя бы на тесте из условия.</p>\n\n<p>В конце олимпиады вы должны сдать свои программы (исходные тексты) на проверку. На олимпиадах начального уровня обычно это делается следующим образом: вы просто оставляете их на вашем компьютере в указанном вам каталоге, откуда их потом заберут на проверку; иногда проверка осуществляется сразу после тура, даже в вашем присутствии. Заранее или в начале тура убедитесь, что вы понимаете, где вы должны оставить свои решения или как еще их вы должны сдать на проверку; если не понимаете, то спросите учителей.</p>\n\n<p>Сохраняйте решения! Во время олимпиады может произойти что угодно — отключиться свет, перезагрузиться компьютер и т.п. Если у вас из-за этого пропадет несохраненное решение, то это будут полностью ваши проблемы. Вообще, полезно привыкнуть сохранять свое решение каждые 10-20 секунд.</p>\n\n<p>Не теряйте свои решения! Если даже вы думаете, что ваше решение неправильное и его надо переписать — не удаляйте его, просто пишите в новом файле (ну или скопируйте старое решение куда-то про запас).</p>\n\n<p>Имейте в виду, что вам не обязательно решать всё. Чтобы пройти на районную олимпиаду, часто достаточно набрать половину баллов, поэтому не бойтесь, если у вас не получается решить самую сложную задачу (или две самых сложных, если задач много). (Но все равно постарайтесь по ним хоть что-то написать.) Для 11-классников порог прохода на район может быть выше.</p>\n\n<h3>О задачах за разные классы</h3>\n<p>Так исторически сложилось (и на то есть ряд дополнительных причин), что на олимпиадах по информатике набор задач общий для всех классов. Итоги потом подводятся по классам по отдельности, но задачи общие. (Иногда бывают исключения, но довольно редко.)</p>\n<p>При этом формально может быть сказано, что олимпиада проходит только для определенных классов, как правило — для 9-11 классов. Но это вовсе не значит, что младшеклассники не могут в ней участвовать — даже если вы младше 9 класса, вполне можете писать за 9 класс.</p>\n<p>Но помимо этого, я иногда слышал, что в некоторых школах бывают какие-то отдельные задачи для более младших (например, 7-8 классов). Это довольно странно; в лицее 40 я никогда про такое не слышал. Возможно, это инициатива отдельных школ или районов. В любом случае, это не то: по этим задачам вы в лучшем случае пройдете на район и дальше никуда, в худшем случае вам скажут, что "района по вашим классам не бывает" (знаю реальный такой случай). Задачи на этих олимпиадах могут иметь мало общего с тем, что мы тут проходим, организация может быть хуже (например, вам могут предложить писать программу на бумажке (!)) — в общем, если вы младше 9 класса, убедитесь, что вы выступаете за 9 класс и пишите по тем же задачам, что и 9-классники. Для этого может быть полезно заранее сказать, что вы хотите участвовать за 9-й класс. Не бойтесь этого; как я уже писал, если у вас уровень 1В или выше, то вам эти задачи будут по силам. И даже если вы решите их плохо, все равно вы получите ценный опыт, который вам пригодится через год.</p>\n\n<h3>О результатах</h3>\n<p>Как только будут известны ваши результаты, сообщите их мне. Результаты — это общее число набранных баллов (а хорошо бы и распределение баллов по задачам) и проходите вы на район или нет. Про район иногда сообщают сразу, иногда не сразу — если вы пока знаете только баллы, то сообщите мне только баллы, потом как будет известно про район, сообщите мне.</p>\n\n<h3>Какие будут задачи?</h3>\n<p>Сложно предсказать, да и в интернете задачи прошлых найти сложно (но можете попробовать, только ищите обязательно задачи и вашего района города или области — в разных районах задачи могут быть очень разными). Спросите в школе, у них наверное есть архивы прошлых лет.\n\n</p><h3>Какие знания могут потребоваться?</h3>\n<p>Вообще, я думаю, что знаний уровней 1А-1Б (т.е. основ языка), вместе со здравым смыслом, скорее всего будет достаточно, чтобы набрать половину баллов и пройти на район (для 11-классников может потребоваться чуть больше). Уровни 1В и 1Г очень полезны в том плане, что они содержат нестандартные задачи как раз типа тех, что будут на олимпиаде. Кроме того, в ряде задач могут потребоваться следующие знания:</p>\n\n<h4>int64</h4>\nВ паскале есть очень полезный тип данных, про который вы, возможно, не знаете. Это <code>int64</code> — 64-битное целое число. Он может хранить числа от (примерно) -2<sup>63</sup> до 2<sup>63</sup>; это примерно от -9e18 до 9e18. Он полезен, если значения, которые вам нужны в вашей программе, не влезают в integer.\n<pre>var a:int64;\nbegin\na:=1000000000;\na:=a*1000000000;\nwriteln(a); // выведет 1000000000000000000\nend.\n</pre>\n\n<h4>Тестирование задач</h4>\n<p>Очень важная вещь на олимпиаде — аккуратно протестировать задачи. На эту тему я недавно написал <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">длинный текст</a> (ссылка на него также есть в уровне 1В). Прочитайте его и следуйте его рекомендациям. Конечно, вам пока не обязательно использовать совсем уж продвинутые вещи типа стресс-тестирования или assert\'ов, но практически весь остальной текст вам будет полезен. Не жалейте времени на аккуратное тестирование.</p>\n\n<p>Полезно хотя бы немного отработать навык тестирования до олимпиады. Постарайтесь порешать несколько задач из еще не решенных вами с учетом рекомендаций по тестированию.</p>\n\n<h4>Работа с файлами</h4>\n<p>Ниже — про паскаль; про работу с файлами в питоне см. текст на уровне 2А.</p>\n<p>На школьной олимпиаде, вполне возможно, вам придется вводить данные не с клавиатуры, а из указанного в условии задачи файла, и аналогично выводить данные не на экран, а в файл. В паскале это делается это так: вы заводите переменную специального типа <code>text</code>, а потом командами <code>assign</code> и <code>reset/rewrite</code> "открываете" файл на чтение/запись соответственно. Далее в командах <code>read/readln</code> и <code>write/writeln</code> <i>первым</i> аргументом указываете файл (переменную), откуда читать или куда выводить. После работы с файлом "закрываете" его командой <code>close</code>. При этом тогда ваша программа <b>не должна ничего вообще</b> читать с клавиатуры! Т.е. по нажатию Ctrl-F9 черное окошко должно мелькать на мгновение, после чего должно возвращаться синее окошко паскаля.</p>\n\n<p>Пример кода, который читает из файла <code>input.txt</code> два числа и выводит в файл <code>output.txt</code> их сумму:</p>\n<pre>var f,g:text;\n    a,b:integer;\nbegin\nassign(f,\'input.txt\');reset(f); // "открыли" файл input.txt для чтения\nread(f,a,b); // из файла f прочитали числа a и b\nclose(f); // "закрыли" файл\nassign(g,\'output.txt\');rewrite(g); // "открыли" файл output.txt для записи\nwriteln(g,a+b); // вывели сумму чисел в файл g\nclose(g); // "закрыли" файл\nend.\n</pre>\n\n<p>Как тестировать такую программу? В оболочке паскаля вы можете открыть несколько окон (через меню File - Open). В одном набираете программу (и сохраняете файл как <code>чтонибудь.pas</code>), в другом редактируете входной файл (и сохраняете как требуется по условию), в третьем открываете выходной файл.</p>\n\n<p>Переключаться между окнами можно, нажав Alt-0 — будет окошко со списком всех открытых файлов. Можно также заметь в правом верхнем углу каждого окошка цифру (1, 2, 3 и т.д.) и переключаться в это окошко, нажав Alt-1, Alt-2 и т.п. Я, например, предпочитаю иметь в окошке "1" исходный текст программы, в окошке "2" входной файл, в окошке "3" выходной файл. Я не советую вам иметь много открытых окон — оставляйте открытыми только те окна, которые нужны для текущей задачи. Когда переключаетесь на новую задачу, закрывайте все окна от старой задачи и открывайте окна для новой задачи.</p>\n\n<p>Соответственно, теперь вводите тест в окошко с входным файлом, не забываете его сохранить (!), и запускаете программу. Если в одном из окон у вас открыт выходной файл, то после запуска программы паскаль вам будет выводить диалоговое окно вида "File output.txt has changed on disk. Reload?" ("Файл output.txt изменился на диске. Перезагрузить?"; точный английский текст я не помню.) Нажмите "yes" — и в окошке с выходным файлом его содержимое автоматически обновится.</p>\n\n<p>Тестировать программу так даже удобнее, чем при вводе с клавиатуры: если вы отлаживаете программу на конкретном тесте, то вам не надо его вводить заново при каждом запуске.</p>\n\n<p>Обязательно попробуйте работать с файлами <b>до олимпиады</b>!. Если на олимпиаде у вас не получается быстро наладить работу с файлами, то лучше попросите разрешения работать по старинке — с клавиатуры и на экран. Не теряйте время на то, чтобы разобраться с файлами на олимпиаде!</p>\n\n<h4>Алгоритмы</h4>\n<p>В основном большинство задач на школьной олимпиаде вряд ли будут требовать специальных знаний, особенных алгоритмов. Задачи, скорее всего, будут требовать только аккуратного размышления и аккуратной реализации; ничего такого, что мы с вами не проходили, не потребуется. Возможно, придется пописать что-то на бумажке, сделать какое-то моделирование и т.п. Все будет довольно похоже на задачи уровней 1В и 1Г. </p>\n\n<p>В наиболее сложных задачах, возможно, потребуются алгоритмы, обсуждаемые в уровнях 2А и 2Б — в первую очередь НОД, сортировки, простые числа и разложения на множители, может быть ДП. Если у вас уже решено хотя бы задач 10-15 уровней 1В/1Г, можете переключиться на эти темы на уровне 2, но не тратьте много времени — лучше порешайте еще задач с уровней 1В/1Г и научитесь тестировать задачи. Конечно, если у вас уже много задач уровней 1В/1Г решено и вы уже находитесь на уровне 2, то изучите эти темы.</p>\n\n<h4>Сложность алгоритмов</h4>\n<p>Важной вещью может оказаться определение того, насколько долго работает придуманный вами алгоритм на больших входных данных. Это обязательно стоит проверить, в идеале — еще до написания программы. Для этого существует понятие <i>сложности алгоритма</i>, про нее можно почитать <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/02_complexity.pdf">тут</a> (в первую очередь читайте часть 1; самое главное — в абзаце, который на стыке страниц 2 и 3, про 100 миллионов действий).\n\n</p><h4>Используйте компьютер по полной</h4>\n<p>Помните, что вы можете на компьютере не только писать программы-решения задач. Если вы, например, думаете над задачей, и вам стало важно узнать, чему равно 163*634, то не надо умножать числа в столбик. Воспользуйтесь калькулятором на компьютере или напишите отдельную программу из одного writeln/print. Если у вас в задаче описан какой-то процесс (есть N бактерий, они размножаются по каким-нибудь правилам, или что-нибудь подобное), не бойтесь написать отдельную программу, которая промоделирует этот процесс, выведет что вам надо, чтобы вы могли поискать какие-нибудь закономерности. И так далее. Не бойтесь писать вспомогательные программы.</p>\n\n<h4>Ищите закономерности</h4>\n<p>Наше жюри иногда любит давать задачи, в которых легко находится та или иная закономерность. Если вы не можете решить какую-то задачу для всех входных данных, то решите ее на бумажке для маленьких входных данных (или, с учетом предыдущего пункта — напишите простую программу, которая решит задачу для маленьких и средних входных данных), и посмотрите на ответы и решения глазами: вдруг вы найдете какую-нибудь закономерность.</p>\n\n<h4>Знакомые задачи</h4>\n<p>Авторы задач школьной олимпиады не очень изобретательны и нередко у них появляются задачи, которые вы уже знаете или которые очень похожи на что-то, что вы уже решали. (Например, год назад то ли на школьной, то ли на районной олимпиаде была задача "Автобусы" из наших "Продвинутых задач на условный оператор". Я не думаю, что авторы задач пользовались этим сайтом, скорее всего они сами независимо придумали эту задачу.) Не удивляйтесь, но решите-таки.</p>\n\n<h4>Если чего-то не знаете, ищите обходные пути</h4>\n<p>Если вы понимаете, что в задаче требуется что-то, чего вы не помните, не знаете, "не проходили" — попробуйте придумать обходной путь — как сделать то же самое, пусть сложнее, но с использованием тех вещей, которые вы знаете. Или как вообще решить задачу по-другому, не используя это знание вообще. Например, если вы не помните, какая функция переводит число в строку — подумайте, как написать такую функцию самостоятельно (подсказка: по аналогии со всякими задачами про цифры с уровня 1А). Или подумайте, а может быть, вам и не надо переводить число в строку вообще? Если вы поняли, что вам нужна сортировка, но вы не знаете, как ее делать — попробуйте или придумать, или придумать, как решать задачу без сортировки. Зачастую это получится. И так далее.</p>\n\n<h4>Здравый смысл</h4>\n<p>Ну и главное. Применяйте здравый смысл. Думайте головой, постоянно думайте над тем, что вы делаете, и помните, что <b>ваша цель на олимпиаде — как можно лучше выступить по сумме заданий.</b></p>\n\n<p>В частности, тут я написал много рекомендаций, дал ссылки на много текстов. Если вы их все прочитаете и поймете — хорошо. Но если вы успели прочитать не все, или не во всем разобрались — не так страшно. Если вы чего-то не поняли, не применяйте это на олимпиаде (ну или точнее, подумайте, не сможете ли вы на олимпиаде быстро допонимать). Не суетитесь и не переживайте, а спокойно решайте задачи.</p></div>', 'title': 'Про школьную олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_4', 'order': 5, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_5', 'order': 6, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про командную олимпиаду</h1>\n<p><b>Это относится только к нижегородским школьникам. В других регионах свои отборочные олимпиады, и я не буду собирать команды из школьников других регионов. Тем не менее, если вы не из Нижегородской области, у вас нет команды, и вы хотите поучаствовать вместе с другими школьниками, занимающимися на моем курсе, можете мне написать, я может быть стыкую вас с другими такими желающими (если такие "другие желающие" будут).</b></p>\n\n<p>В ноябре в в Нижегородском техническом университете (политехе) состоится <a href="http://www.nnstuicpc.ru">Командная олимпиада школьников Нижегородской области по программированию</a>, она же — отбор на <a href="http://neerc.ifmo.ru/school/russia-team/index.html">Всероссийскую командную олимпиаду школьников по программированию (ВКОШП)</a>. Участвуют команды из трех человек, подробные правила будут в информационном письме на сайте нижегородской олимпиады и на сайте ВКОШПа, они несколько отличаются от классических школьных олимпиад (пока на сайте нижегородской олимпиады еще ничего нет). Также подробные правила я могу рассказать желающим.</p>\n\n<p>Желающие могут участвовать, а именно:</p><p>\n</p><ol>\n<li>Из достаточно сильных школьников (примерно уровень 2В и выше), которые занимаются в моем курсе, я составлю команды. Я сам свяжусь с соответствующими школьниками в ближайшее время, или вы можете написать мне.</li>\n<li>Остальные могут составить команды сами. Сообщите мне на всякий случай, что вы хотите участвовать, возможно, я найду для вас команду, но в общем случае я не готов администрировать ваши команды (подавать заявку и т.п.). Тем не менее, во-первых, если в вашей школе есть много желающих участвовать, то можете подать заявку от школы (договориться с вашим учителем информатики и т.п.); во-вторых, если вы сами соберетесь в какую-нибудь сборную команду, даже из разных школ, то можете подавать заявку полностью самостоятельно. Я считаю, что вам может иметь смысл участвовать, если вы уже уровень 1В или выше, но, конечно, самостоятельно вы вольны подавать заявку как хотите.</li>\n</ol>\n\n<p>Уровень задач на олимпиаде, я думаю, стоит ожидать такой: будет одна-две простых задачи уровня школьной олимпиады (уровня 1Б), будет большая группа задач средней сложности — примерно от уровня районной до уровня областной олимпиады (примерно сложности 1В-3В), и будет одна-две очень сложные задачи. При этом, как всегда, не следует думать, что надо решать все задачи: думаю, основная борьба будет на уровне, где решены примерно половина задач. На сайте командной олимпиады вы можете посмотреть примеры задач прошлых лет (правда, если вы хотите участвовать в тренировках — см. ниже — то особенно не вникайте в задачи прошлых лет — мы как-нибудь напишем по ним тренировку).</p>\n\n<p>Несколько лучших команд с нижегородской олимпиады проходят на Всероссийскую командную олимпиаду школьников по программированию (ВКОШП). Сразу предупреждаю: во-первых, в области есть сильные команды, поэтому самостоятельно собранным командам будет довольно сложно пройти на ВКШОП. Во-вторых, если вы и пройдете на ВКОШП, то возможно поездку на ВКОШП вам никто не оплатит — возможно, надо будет ехать за свой счет или самим искать финансирование (говорить со школой и т.п.) (К моим командам — тех, у кого есть высокий шанс пройти на ВКОШП, я об этом предупрежу. Остальные, если вдруг пройдете, то будем думать.) (Возможно, финансирование все-таки найдем.)</p>\n\n<p>Но участвовать имеет смысл и даже без цели прохода на ВКОШП. Во-первых, это интересно и весело, во-вторых, дипломы и (небольшие) призы получат не только те команды, которые пройдут на ВКОШП.</p>\n\n<p>По воскресеньям параллельно с обычными занятиями скорее всего будут командные тренировки к командной олимпиаде. Тренировки длиннее по времени, чем обычные занятия (4-6 часов), время может быть сдвинуто относительно основных занятий — следите за объявлениями на страничке курса. Командам из п. 1 выше я настоятельно рекомендую участвовать (и я напишу в личку); если будут желающие участвовать из самостоятельно-собранных команд, то напишите мне.</p></div>', 'title': 'Про командную олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_6', 'order': 7, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_7', 'order': 8, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про районную/городскую олимпиаду</h1>\n<p><font color="red">Эта информация касается Нижегородской области. В других регионах могут быть отличия.</font></p>\n\n<p>Районная олимпиада, она же городская в ряде городов области (формально "муниципальный этап Всероссийской олимпиады школьников") пройдет, по текущей информации, <b>12 декабря</b>. Участие в ней принимают те, кто хорошо написал школьную олимпиаду. Критериев прохода со школьной на районную я точно не знаю, уточняйте у своих учителей. Кроме того, в олимпиаде принимают участие призеры и победители районной олимпиады прошлого года, даже если они не участвовали в школьной олимпиаде этого года.</p>\n\n<p>Участники районной олимпиады, хорошо ее написавшие, проходят на областную. Механизм здесь примерно следующий: все районы пишут по одним и тем же задачам. Все результаты сводятся в сводную таблица по всем районам области. В этой таблице проводят границу, и все школьники, набравшие больше определенного количества баллов, проходят на область. Это пороговое количество баллов определяется тем, чтобы на область прошло столько школьников, сколько область может принять; по разным классам порог разный.</p>\n\n<p>Чего стоит ожидать на районной олимпиаде? Примерно того же, что и на школьной (см. <a href="/material/module-16024_3" onclick="window.goto(\'/material/module-16024_3\')();return false;">соответствующий текст</a>), возможно, задачи будут сложнее. На страничке курса давно висит ссылка на <a href="https://www.dropbox.com/s/brq5dotrg4lmym2/raion_archive.pdf?dl=0">архив прошлогодних районных олимпиад</a>, посмотрите задачи там, очень рекомендую над ними подумать. Я не думаю, что будут требоваться какие-то более продвинутые знания, но прочитайте текст про школьную олимпиаду еще раз и учитывайте то, что там написано. На районной олимпиаде более вероятно, чем на школьной, что потребуются алгоритмы уровня 2-3. По опыту прошлых лет, может быть одна реально сложная задача. (Но в ее практически никто не решает.)</p>\n\n<p>Ближе к делу (8 декабря в ННГУ и 4 декабря в лицее 40) я проведу отдельное занятие, посвященное подготовке к районной олимпиаде.</p>\n\n<p>С позапозапрошлого года задачи районной олимпиады составляет другое жюри, поэтому задачи в этом году могут быть не похожими на те, что были четыре года назад и более. Обратите особое внимание на задачи за последние три года.</p>\n\n<p>Обязательно убедитесь заранее (спросите учителей в школе, чтобы они спросили организаторов районной олимпиады), что вам предоставят нужное ПО (нужный Питон, или Паскаль, или c++ с нужной средой и т.д.). Если есть какие-то проблемы, звоните, но это очень хорошо бы сделать заранее.</p>\n\n<p>Последние два года районная олимпиада проходила в системе Яндекс.Контест, скорее всего и в этом году будет так же. Тогда вы сможете в течение тура отправлять решения на проверку в тестирующую систему и узнавать результаты. Скорее всего, по каждой задаче будет выбрано ваше лучшее решение (набирающее больше всего баллов), и именно этот результат и будет вашим результатом по задаче. Я не знаю, будут ли в этом году штрафы за неверные попытки, постараюсь узнать ближе к делу, в прошлом году не было. </p>\n\n<p>Количество отправок решений на проверку скорее всего будет ограничено, оно будет указано в тестирующей системе. В прошлом году в качестве примера было приведено ограничение в 100 попыток, что на самом деле очень много и фактически эквивалентно бесконечному количеству попыток (вряд ли кто из вас реально израсходует 100 попыток), но в реальности может оказаться меньше.</p>\n\n<p>Это обозначает, что все будет довольно похоже на то, как вы работаете на сайте (только, в отличие от сайта, частичные решения тоже оцениваются). Если у вас программа не прошла тесты, вы можете ее пересдать. Поэтому, в частности, если за неудачные попытки нет штрафов, то не обязательно поначалу тщательно тестировать простые задачи — потестируйте немного, отправьте решение на проверку и, если оно набирает полный балл, то забудьте про эту задачу. Вот в противоположном случае тестируйте внимательнее.</p>\n\n<p>Возможно, будут еще какие-то неожиданности и отличия, будьте к ним готовы. По идее вам должны заранее объявить полные правила, хотя по факту это бывает редко. Но можете заранее спросить в школе, нет ли у них данных о том, как будет проводиться олимпиада; я со своей стороны попробую это тоже выяснить.</p>\n\n<p>Если же у вас в районе внезапно проводят олимпиаду не в Яндекс.Контесте, то требуйте Я.Контест и/или срочно звоните мне. Если у вас будут проводить по старинке, с ручным тестированием, то вы сразу оказываетесь в заведомо проигрышном положении по сравнению с другими районами — в других районах участники будут узнавать результаты в течение тура и смогут исправлять решения, а у вас — нет. Поэтому требуйте Яндекс.Контест и отстаивайте свои права.</p>\n\n<p>Важный момент — не полагайтесь на Яндекс.Контест. Будьте готовы в случае чего сдавать решения по старинке в конце тура. В частности, не теряйте свои решения! Если вы отправили решение в Контест, не удаляйте его у себя, и уж тем более не начинайте решать другую задачу в том же файле. Контест может заглючить, может потерять ваши решения, и т.д. — если и вы их тоже потеряете, все будет совсем плохо. А если решения останутся у вас на компьютере, вы хотя бы сможете потом что-то поапеллировать.</p>\n</div>', 'title': 'Про районную/городскую олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_8', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'reg_about', 'order': 10, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix">\n\n<h1>Про областную олимпиаду</h1>\n\n<p><i>(C) Петр Калинин, 2015-20. Этот текст можно свободно распространять на условиях лицензии Creative Commons Attribution-ShareAlike 2.0 (CC-BY-SA). Пожалуйста, при ссылках на этот текст используйте адрес <a href="/material/reg_about" onclick="window.goto(\'/material/reg_about\')();return false;">algoprog.ru/material/reg_about</a></i>\n\n</p><p><font color="red">Часть информации касается только Нижегородской области, часть относится ко всем регионам.</font></p>\n\n<p>Областная олимпиада по информатике (формально — региональный этап Всероссийской олимпиады) пройдет в два тура 16 и 18 января в ННГУ им. Лобачевского.</p>\n\n<h2>Отбор на область</h2>\n\n<p>Отбор на нее осуществляется следующим образом. Решения районной (она же городская в ряде городов области — Дзержинске, Арзамасе и т.д.) олимпиады сводятся по каждому классу в единую таблицу, и в этой таблице проводится граница: для каждого класса выбирается проходной балл, и все, кто набрал столько баллов или больше, проходит на область. Кроме того, вне зависимости от результатов районной олимпиады, на областную проходят призеры прошлогодней областной олимпиады.</p>\n\n<p>В этом году проходные баллы — 200 баллов по каждому классу. На <a href="http://imc.codnn.ru/vserossijskaya-olimpiada-shkolnikov/">сайте ЦОДа</a> есть итоговые результаты и списки участников областной олимпиады (где нужен пароль к архиву — пароль "2019"); в <a href="https://docs.google.com/spreadsheets/d/1Li__hzA7ZjyBR1y-2Nej0tW8TEesP-IG6gbYaPJk81s/edit#gid=0">отдельном гуглодоке</a> я свел результаты из Я.Контеста с результатами с сайта ЦОДа.</p>\n\n<h2>Формат областной олимпиады</h2>\n<p>Ну, во-первых, областная олимпиада — это фактически первая серьезная олимпиада для многих из вас. Школьная и районная олимпиады — это скорее игрушки, как по тому, какие задачи предлагаются, так и по организации вообще и по сложности прохода на следующий этап. Сильные школьники должны проходить на область "на классе", т.е. абсолютно уверенно, не прилагая особенных усилий, чисто за счет уже давно имеющихся навыков. Областная же олимпиада — это совсем другое, там и задачи ощутимо более сложные, и организация лучше. Областная олимпиада проходит в одно и то же время по одним и тем же задачам по всей России, так что это фактически крупнейшая олимпиада по информатике в России.</p>\n\n<p>Областная олимпиада проходит в два тура по пять часов каждый. На каждом туре вам, скорее всего, будут предложены 4 задачи. Примеры прошлогодних задач вы можете посмотреть и попробовать посдавать на этом сайте, ссылка есть в конце раздела "О курсе", в разделе "Архивы старых олимпиад". Но сначала прочитайте до конца этот текст.</p>\n\n<p>Вообще, если раньше вы в областных олимпиадах не участвовали, то я рекомендую вам в зимние каникулы найти свободные пять часов и сесть и порешать какой-нибудь тур с одной из олимпиад последних лет, представляя, что вы реально сидите на олимпиаде. Еще лучше сделать это пару раз. Во-первых, если вы ни разу раньше не писали пятичасовые туры, это вам будет полезно как минимум с точки зрения понимания того, насколько вам сложно просто думать над задачами 5 часов подряд. Во-вторых, вы поймете примерно, чего вы можете ожидать на области.</p>\n\n<h2>Языки программирования</h2>\n<p>Набор языков программирования будет определяться жюри. Почти наверняка будут Free Pascal и C++ (Visual Studio, по идее должен быть минимум C++11). Скорее всего будут C# и Python. Будет ли Pascal ABC, я не знаю. Обычно жюри старается вкючить разумный набор языков, но и вы со своей стороны можете попросить школу официально заявить вам нужный язык и проверить, что он будет. С другой стороны, вроде последние годы серьезных проблем с языками на области не было.</p>\n\n<p>(Вообще, по поводу общения с жюри в целом — я, конечно, могу что-то написать в жюри, и жюри зачастую прислушивается ко мне, но надо понимать, что я не являюсь официальным представителем вас, вашей школы и т.д., поэтому жюри может и полностью проигнорировать мой вопрос. Поэтому помимо того, что я могу общаться с жюри неофициально, вы лично, а также ваши родители и ваша школа могут общаться с жюри официально, и в случае каких-то серьезных проблем это может быть полезно.)</p>\n\n<h2>Система оценивания</h2>\n<p>До 2014<sup>1</sup> года включительно областная олимпиада оценивалась очень похоже на  школьную: вы пять часов писали задачи, после чего жюри брало ваши решения и проверяло на заранее подготовленных тестах; при этом каждый тест оценивался отдельно. В процессе этой проверки вы уже ничего не могли исправить в своих решениях.</p>\n\n<p><sup>1</sup> Областная олимпиада всегда проводится после Нового года, поэтому здесь и ниже, говоря «олимпиада 2014 года», я имею в виду олимпиаду 2013-14 уч. года, и аналогично про другие годы.</p>\n\n<p>С 2015 года введена новая система — так называемая система с подзадачами и фидбеком (обратной связью). Она работает примерно следующим образом.</p>\n\n<h4>Подзадачи</h4>\n\n<p>Во-первых, в каждой задаче выделяются <i>подзадачи</i> — вариации той же задачи, как правило, с меньшими ограничениями или с дополнительными условиями. Например, если в основной задаче сказано $1\\leq N\\leq 10000$, $1\\leq K \\leq 10$, и еще задан массив $a$, а в задаче идет речь про то, что надо как-то ходить направо и налево, то подзадачи могут быть, например, такими:</p>\n<ul>\n<li>Подзадача 1: $N\\leq 100$ и $K=1$;</li>\n<li>Подзадача 2: $N\\leq 100$, но $K&gt;1$;</li>\n<li>Подзадача 3: $K=1$, но $N&gt;100$;</li>\n<li>Подзадача 4: все элементы массива $a$ одинаковы;</li>\n<li>Подзадача 5: в оптимальном решении никогда не надо ходить налево;</li>\n<li>Подзадача 6: никаких дополнительных ограничений нет.</li>\n</ul>\n<p>В каждой подзадаче все не указанные явно ограничения подразумеваются взятыми из основной задачи, например, в четвертой подзадаче подразумевается, что $N\\leq 10000$, $K\\leq 10$ и нет никаких дополнительных условий по тому, как выглядит ответ.</p>\n\n<p>Таким образом, подзадачи — это упрощенные варианты основной задачи. Как правило, для каждой подзадачи существует свой алгоритм решения, который проще, чем алгоритм, решающий полную задачу. Поэтому, если вы можете написать решение полной задачи, то пишите его (почти всегда у задачи есть естественное "полное" решение, которое автоматически решает и подзадачи, поэтому если вы можете без проблем его написать, то напишите, и не думайте про подзадачи), а если нет, то пишите решения подзадач.</p>\n\n<p>При этом подзадачи оцениваются хитро. В некоторых подзадачах, как и раньше, каждый тест оценивается независимо: за каждый тест начисляется несколько баллов, и чем больше вы тестов прошли, тем больше у вас баллов. Но в некоторых подзадачах (обычно в более простых) баллы начисляются по принципу "всё или ничего", т.е. вы получаете не ноль баллов за эту подзадачу <b>только если у вас прошли все тесты этой подзадачи</b>. Т.е. если вы прошли все тесты этой подзадачи, вы получаете полный балл за нее, иначе вы получаете ноль баллов за эту подзадачу. Собственно сами подзадачи обычно оцениваются независимо, но бывает даже так, что очередная подзадача оценивается только если в предыдущих подзадачах все тесты пройдены. Правила оценивания каждой подзадачи указаны в условиях; посмотрите примеры задач прошлых лет, чтобы понять, как это.</p>\n\n<p>Это обозначает, что вам как правило нет смысла писать "какие-то" решения. Вы должны написать решение, которое как минимум абсолютно корректно решает как минимум простые подзадачи. Навыки тестирования задач становятся очень важны; если вы все еще не читали <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">мой текст</a> про это, то прочитайте.</p>\n\n<h4>Фидбек</h4>\n\n<p>Но, чтобы компенсировать увеличение сложности от введения подзадач, также вводится так называемый фидбек. А именно, <b>в течение тура вы можете отправлять ваши решения на проверку</b>. Решения будут проверяться на всех финальных тестах, и после проверки вы можете попросить, чтобы вам сообщили результат этой проверки. Скорее всего, у вас на компьютере будет стоять клиент тестирующей системы нашего жюри, вы через этот клиент будете отправлять решения, и в нем же будет какая-нибудь кнопочка типа "узнать результат этого решения". Соответственно, узнав результат, вы можете дальше планировать свою работу.</p>\n\n<p>Бывают три варианта того, что вам сообщают в качестве результата, и это зависит не только от задачи, но и от подзадачи. В каких-то подзадачах вам могут сообщать информацию по каждому тесту, прошел он или нет (или даже если не прошел, то почему — неправильный ответ, превышение предела времени и т.п. — всё очень похоже на то, что вы видите на этом сайте на закладке "результаты"). В других подзадачах вам могут только сообщать полный балл за эту подзадачу. В третьих подзадачах — первый непройденный тест и вердикт на нем (как на командных олимпиадах). Что именно вам сообщают, обычно указывается в условии.</p>\n\n<p>При этом может быть установлено ограничение на количество посылок вида, например, «по каждой задаче за весь тур вы можете сделать не более 50 попыток», или что-то подобное. Тогда, после того, как у вас кончились эти 50 попыток, вы, видимо, больше не можете решать эту задачу.</p>\n\n<h4>Итоговая оценка</h4>\n\n<p>Итоговая оценка за каждую задачу — это максимальный балл из всех отправленных вами решений. Итоговый суммарный результат, конечно, есть сумма баллов по всем задачам.</p>\n\n<p>Тут важны два момента. Во-первых, учитываются только <i>отправленные</i> в систему решения, а не просто сохраненные вами в вашем рабочем каталоге. Во-вторых, если одно из ваших решений набирает баллы только по одной подзадаче, а второе — только по второй, но вы не сдали решения, которое набирало бы баллы по обеим подзадачам, то вы получите баллы только за одну подзадачу (от того решения, которое набирает больше баллов). Аналогично если одно решение проходит только два теста из некоторой подзадачи, в которой все тесты оцениваются независимо, а другое решение проходит только два других теста, то вы не получите суммарного балла.</p>\n\n<h4>Тесты из условия</h4>\n<p>Раньше присутстввало требование, что ваше решение <b>обязано проходить все тесты из условия</b>, даже если эти тесты не попадают под ограничения той подзадачи, на которую вы нацелились. Например, в примере подзадач, приведенном выше, если в условии есть тест с $K=2$, то, даже если вы придумали только решение для $K=1$ и рассчитываете только на баллы за соответствующую подзадачу, то все равно от вас могут потребовать, чтобы вы прошли тест из условия с $K=2$. Если хотя бы один тест из условия не пройден, то вы получаете ноль баллов за это решение.</p>\n\n<p>В этом году в официальных требованиях про это ничего не написано. Но я не буду удивлен, если в тестирующей системе это будет, поэтому будьте к этому готовы.</p>\n\n<p>В таком случае обязательно убедитесь, что вы умеете проходить все тесты из условия. Если надо, то добавьте соответствующий <code>if</code>, и просто напишите <code>writeln</code> с тем ответом, который указан в условии. Типа того:\n</p><pre>// пусть в условии есть следующие тесты:\n// n=3, k=1, решается основным алгоритмом\n// n=3, k=2, ответ 42\n// n=5, k=2, ответ 137\nread(n,k);\nif k=2 then begin\n    if n=3 then writeln(42)\n    else writeln(137);\n    halt;\nend;\n// дальше решение для k=1\n</pre>\n<p>В условии обычно не так много тестов, и не так уж и сложно написать ряд <code>if</code>\'ов, которые будут все эти тесты различать.</p>\n\n<h4>Явный if</h4>\n<p>Вот выше я уже написал, что тесты из условия можно отличать, написав явный <code>if</code> и <code>writeln</code>. Ничего в этом зазорного нет. Аналогично вы можете писать явный <code>if</code> для различения подзадач. Если вы придумали одно решение для $K=1$ и еще одно решение для случая, когда все элементы массива $a$ равны, то не стесняйтесь написать в программе <code>if</code>, отличающий эти два случая, и запускать разные алгоритмы в зависимости от теста — именно так, если у вас есть решения двух подзадач, вы их можете объединить в одно решение.</p>\n\n<p>Кстати, еще важный момент — если ваша программа видит, что ей попался тест, который не попадает ни под одну подзадачу из тех, для которых у вас есть решение, то не надо сразу вылетать. Хуже не будет, если вы для этого теста запустите решение какой-нибудь подзадачи, вдруг тест-другой так и пройдут.</p>\n\n<h2>Особенности задач</h2>\n<p>Задачи на областной олимпиаде могут быть сильно варьирующимися по сложности. Как правило, самая простая задача будет действительно простой, не требующей ничего знать, примерно уровня 1В. Самая же сложная будет очень сложной, может требовать хитрых знаний, может быть даже уровня эдак 11-го; вообще, год из года только несколько человек по всей России на областных набирают полный балл (800).</p>\n\n<p>Обычно задачи в туре устроены так: первая задача самая простая. Она обычно не требует ничего знать; вы ее должны решать на полный балл. Вторая задача чуть посложнее. Ее тоже хорошо бы решить на полный балл, но это получается не всегда. Третья обычно довольно сложная, но для самых крутых из вас она вполне должна быть по силам. Четвертая же задача обычно очень сложная, почти наверняка никто в области не решит обе четвертых задачи.</p>\n\n<p>Но бывает по-разному. То, что написано в предыдущем абзаце — это наиболее распространенная схема, см, например, первый тур 2014 года как один из самых ярких примеров таких сильно распределенных по сложности задач. Но бывает и так (и последние годы все чаще и чаще), что распределение задач по сложности намного менее выражено. Вполне может первая задача оказаться не самой простой, а последняя вполне посильной; вполне может вторая задача оказаться сравнимой по сложности или даже проще первой. Тем не менее обычно задачи все-таки идут более-менее в порядке возрастания сложности.</p>\n\n<p>Но всегда помните, что в каждой задаче есть подзадачи! Как правило, даже в самых сложных задачах первые подзадачи очень простые; часто в них достаточно перебрать все возможные решения парой вложенных <code>for</code>\'ов или т.п.; в крайнем случае написать рекурсивный перебор или какой-нибудь простой алгоритм. Поэтому обязательно решайте не только первые задачи туров, но и последние (пишите в них простые подзадачи)! Обязательно постарайтесь, чтобы <b>по каждой задаче у вас было ненулевое количество баллов!</b></p>\n\n<p>Вообще, на самом деле, как показывает опыт, вполне реально в каждом туре набрать хотя бы 200 баллов, поэтому и постарайтесь это сделать. В идеале надо решать полностью первые две задачи каждого тура, но, даже если не получилось, то недостающие до 200 баллы можно набрать в более сложных задачах. 400 баллов в сумме за два тура — это вполне достойный результат. (Конечно, это общая рекомендация; ясно, что сильные школьники должны набирать больше, а для не очень сильных и 200-300 в сумме будет хорошо. Но тем не менее баллов 150 в каждом туре обычно можно набрать вообще не думая, поэтому 200 за тур — это хорошая цель для большинства из вас.)</p>\n\n<p>Для сравнения, баллы прохождения на собственно Всероссийскую олимпиаду обычно примерно такие: по 9 классам — 450-580, по 10 классам — 500-600, по 11 классам 550-650. Проход на Россию — это очень и очень хороший результат. (Ну, для всех, кроме тех, кто на Россию уже ездил :) )</p>\n\n<p>Возможно, будет ввод из файла, хотя скорее всего будет будет только ввод с клавиатуры.</p>\n\n<h2>Про языки программирования</h2>\n\n<p>Про питон: на питоне вы, возможно, не сможете в принципе решить отдельные задачи на полный балл (возможно, не сможете решить вторую, а может быть, даже первую) — потому что решение не будет успевать по времени. (Но это не обозначает, что любые проблемы в задаче надо списывать на то, что это питон. Имейте в виду то, что на питоне может не успевать по времени; полезно оценить сложность алгоритма и прикинуть, успел ли бы такой алгоритм на C++; но если вы придумали явно неоптимальный алгоритм, то надо все-таки придумать нормальный алгоритм.) Но эту невозможность решить задачи на полный балл вы можете компенсировать тем, что на питоне вы можете заметно быстрее и легче писать небольшие подзадачи в сложных задачах, да и первую задачу вы возможно напишите быстрее, чем ваши друзья, пишущие на C++. С другой стороны, если вы хотите иметь хороший результат на областной олимпиаде, то, конечно, надо бы уже знать C++ (но если вы хотите иметь хороший результат, то наверное вы уже минимум на 3 уровне, а тогда про C++ вы уже читали).</p>\n\n<p>Если же вы знаете и C++, и питон, то, конечно, по каждой задаче выбирайте, на каком языке лучше писать.</p>\n\n<p>Паскаль по производительности сравним с C++, поэтому там проблем со временем работы быть не должно.</p>\n\n<h2>Тактика поведения на туре</h2>\n<p>Во-первых, все мои рекомендации из <a href="/material/module-15955_1" onclick="window.goto(\'/material/module-15955_1\')();return false;">текста про школьную олимпиаду</a> справедливы. Прочитайте все условия сразу, еще до того, как что-то программировать. Контролируйте время, не зависайте над одной задачей надолго. Как я уже писал выше и как писал в тексте про школьную олимпиаду, старайтесь, чтобы по всем задачам у вас был не ноль. Сохраняйте решения, чтобы, если у вас зависнет компьютер или выключится электричество, решения не пропали; вообще, полезно привыкнуть нажимать "сохранить" (F2 или Ctrl-S в разных средах программирования) каждые минуту-другую.</p>\n\n<p>Обязательно внимательно сравнивать ответ с примером. Один раз был случай, когда участник выводил два числа на двух разных строках, а в задаче требовалось вывести два числа на одной строке — и тестирующая система нашего местного жюри отказывалась засчитывать это решение (хотя это и не соответствовало требованиям центрального всероссийского жюри). Конечно, это вина жюри, но школьнику от этого было не сильно легче (после тура мы отапеллировали эти баллы, но время на туре было все равно потрачено). Поэтому если вы видите, что ваша программа выводит не совсем то, что в примере, тщательно перепроверьте, правда ли, что ваше решение правильное.</p>\n\n<p>Но наличие фидбека и четко выделенных подзадач вносит свои ньюансы в тактику. Во-первых, если вы видите, что задача простая, то напишите ее, сдайте, убедитесь, что у вас 100 баллов, и забудьте про нее вообще. Более конкретно: если вы считаете, что какая-то задача простая, если вы думаете, что там особенно негде ошибиться, то напишите ее, слегка потестируйте, не тестируйте подробно (!) и сдайте. Если у вас 100, то забудьте про нее. Если же нет, то начинайте тестировать. Не тратьте время на простые задачи, если вы можете сразу проверить, работают они или нет. (Если есть ограничение на количество попыток по задаче, то сказанное выше справедливо, если у вас еще было немного попыток по задаче. В таком случае помните про ограничение количества попыток по задаче; чем меньше у вас остается попыток, тем тщательнее тестируйте и аккуратнее расходуйте попытки.)</p>\n\n<p>В более сложных задачах часто бывает полезно написать первую подзадачу, если она простая и пишется недолго. А именно, подумайте над сложной задачей. Если сразу ничего, что могло бы решить задачу полностью, в голову не приходит, то попробуйте придумать решение к первой подзадаче. Если получилось придумать простое решение, то напишите его и сдайте — у вас уже станет не ноль баллов, и заодно вы будете уверены, что вы понимаете задачу верно. Наконец, простое решение потом можно использовать для стресс-тестов. Но это только для не самых простых задач; в простых задачах не тратьте время на подзадачи, если вы можете написать полностью задачу!</p>\n\n<p>Наоборот, если вы написали "полное" решение, оно на ваших тестах работает, но у жюри упорно набирает мало баллов, то можно написать простое решение первой подзадачи, отправить его, убедиться, что уж оно-то верное, и дальше написать стресс-тестирование. Очень полезно заранее научиться стресс-тестированию (см. еще раз <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">текст про тестирование задач</a>)!</p>\n\n<p>Контролируйте время до конца тура. Если вы придумали сложное решение, которое может решить сложную задачу полностью, но видите, что вы рискуете не успеть его дописать (и помните, что вам наверняка придется его отлаживать и тестировать! — вряд ли оно сразу 100 наберет), то может быть проще прерваться и написать простое решение по той же задаче, чтобы уж гарантированно иметь не ноль.</p>\n\n<p>Если есть ограничение на количество попыток по задаче, то контролируйте количество оставшихся попыток. 50 попыток — это реально много и в подавляющем большинстве случаев достаточно, но если вы будете их активно расходовать, то они могут внезапно кончиться. Вообще, по всем задачам, кроме самых сложных, думаю, реально использовать не больше 5 попыток за тур.</p>\n\n<p>Конечно, даже если самую простую подзадачу вы уже решили, это не значит, что надо сразу бросаться на полное решение — все вышеописанные соображения применимы, но к следующим подзадачам. Если не получается придумать или написать полное решение, то напишите решение к еще одной подзадаче, объедините с написанным ранее и сдайте. Помните, что подзадачи сделаны не просто так, каждая подзадача имеет какое-то более простое решение.</p>\n\n<p>Не теряйте решения! Вообще, постарайтесь сохранять все свои решения, которые вы отправляете в систему и которые там набирают какие-то баллы. Будет очень неприятно, если вы решили простую подзадачу, потом стали писать общий алгоритм, он в результате не заработал даже для простой подзадачи, а решения простой подзадачи у вас уже нет. Конечно, правило оценки лучшего решения вас частично от этого спасает, но лучше подстрахуйтесь. Еще хуже если вы решили первую подзадачу, начали писать вторую подзадачу, она у вас даже заработала, но при этом сломалось решение первой. Вам бы объединить два решения, но для этого надо иметь решение первой подзадачи.</p>\n\n<p>В частности, не полагайтесь на то, что вы сможете скачать решение из тестирующей системы! Система может заглючить, может потерять ваши решения, и т.д. — если и вы их тоже потеряете, все будет совсем плохо. А если решения останутся у вас на компьютере, то, на худой конец, вы сможете их использовать для апелляции.</p>\n\n<p>Вообще, я бы считал, что у успешного участника должны быть примерно следующие "вехи" во времени (конечно, это "средняя температура по больнице", т.е. варьироваться может очень и очень сильно, но тем не менее) (время везде от начала тура):</p>\n<ul>\n<li>0:10: прочитаны все задачи;</li>\n<li>0:45-1:00: есть 100 по одной из задач;</li>\n<li>2:00-2:30: есть 100 по двум задачам или в крайнем случае 100+60;</li>\n<li>3:30: написаны простые подзадачи в двух сложных задачах, соответственно есть 100+100+30+20 или в крайнем случае 100+60+30+20;</li>\n<li>оставшееся время добиваем недорешанные задачи.</li>\n</ul>\n<p>Еще раз: это очень среднее, и это "идеал" для такого "среднего", и это из предположения, что задачи сильно распределены по сложности. Но это очень грубый ориентир.</p>\n\n<p>Да, все написанное про подзадачи выше подразумевает, что у каждой задачи есть естественное правильное решение, автоматически решающее и все подзадачи тоже; в таком случае вы теоретически можете решить задачу полностью, не думая про подзадачи вообще; так обычно и бывает. Но я не исключаю, что могут быть и задачи, где подзадачи различны настолько, что даже в самом простом и правильном решении удобнее их рассматривать отдельно.</p>\n\n<h2>Особенности C++</h2>\n<p>Если вы пишите на C++, то есть ряд особенностей, которые вам полезно и даже необходимо знать.</p>\n<h4>Быстрый ввод-вывод</h4>\n<p>Стандартный ввод/вывод через <code>iostream</code> (т.е. с использованием <code>cin</code>/<code>cout</code>) по умолчанию работает медленно на больших данных. Если вам надо ввести, допустим, 100000 чисел, то с использованием <code>cin</code> вы наверняка получите time limit; аналогично если вам надо выводить много данных. Это связано с двумя проблемами.</p>\n\n<p>Во-первых, медленно работает <code>endl</code> (для тех, кто понимает — вывод в <code>cout</code> буферизуется, но <code>endl</code> каждый раз сбрасывает буфер, реально выводя данные на диск, а реальный доступ к диску работает медленно). Поэтому не используйте <code>endl</code> вообще, используйте <code>\'\\n\'</code>.</p>\n\n<p>Во-вторых, есть еще проблема синхронизации с <code>stdio</code> (не буду сейчас подробнее писать, что это значит). Чтобы эту проблему побороть, есть три способа:</p>\n<ul>\n<li>Работать с файлами, а не с клавиатурой/экраном (если это будет допустимо на олимпиаде). У <code>fstream</code> таких проблем со скоростью работы нет.</li>\n<li>Использовать для ввода/вывода конструкции из <code>stdio.h</code> (<code>scanf</code> и <code>printf</code>), а не из <code>iostream</code>.</li>\n<li>Написать в самом начале программы две магические строчки (их надо выучить наизусть): \n<pre>std::ios_base::sync_with_stdio(false);\nstd::cin.tie(nullptr);\n</pre></li></ul>\n\n<p>Лично я вам рекомендую использовать первый или последний вариант.</p>\n\n<p>Еще раз: есть <b>две</b> проблемы: одна с <code>endl</code>, другая с синхронизацией stdio и iostream. Одна решается тем, что вы не используете <code>endl</code>, другая — вот одним из трех описанных выше способов. Вам надо решить <b>обе</b> проблемы, т.е. и не использовать <code>endl</code>, и как-то разобраться с синхронизацией. Типичная ошибка — написать в начале программы этот страшный код с <code>sync_with_stdio</code>, но выводить все равно через <code>endl</code>. Получите time limit exceeded все равно.\n\n</p><h4>Установка стека в Visual Studio</h4>\n<p>В популярных компиляторах C++ по умолчанию установлен очень маленький размер стека. Если в вашей программе глубокая рекурсия (например, если вы пишете поиск в глубину), то программа может упасть.</p>\n\n<p>В GCC попросить большой размер стека из самой программы невозможно, это должно настраивать жюри при настройке компиляции. На нормальных олимпиадах жюри прописывает большой размер стека в настройки компиляции, будет ли это на нашей области — я не знаю.</p>\n\n<p>Но в Visual Studio можно установить необходимый размер стека прямо из программы примерно следующей конструкцией (проверьте заранее!): <code>#pragma comment(linker, "/STACK:32000000")</code>, здесь число — это необходимый вам размер стека в байтах (в этом примере 32 миллиона байт, т.е. примерно 32 Мб). Размер стека можете посчитать в уме исходя из вашей программы, а можете и подобрать опытным путем — 32-64 Мб обычно достаточно. Учитывайте еще, конечно, ограничение по памяти.</p>\n\n<p>Поэтому если жюри на олимпиаде нормально настроит стек в gcc (это должно быть видно в строках компиляции gcc в памятке участника), то сдавайте под gcc. Иначе если ваше решение под gcc не влезает в стек, то добавьте эту магическую строку и сдавайте под Visual Studio.</p>\n\n<h2>Про надежность тестирующих систем</h2>\n<p>Возможно, на турах будет использоваться тестирующая система нашего жюри, но скорее всего будет Яндекс.Контест (как последние несколько лет и на области, и на районе), возможно, какая-то еще из известных тестирующих систем. С любой системой возможны различные проблемы, например, тестирующая система нашего жюри может неправильно оценивать корректность решений (см. выше пример с выводом в одной строке или на разных строках), а Яндекс.Контест печально известен тем, что регулярно не справляется с нагрузкой на первом туре и тестирует решения по несколько часов (!); на втором туре все обычно работает нормально. Правда, в прошлом году вроде с этим уже не было проблем, надеюсь, что и в этом не будет. Я не знаю, какая система будет в этом году, и будут ли в ней проблемы и какие, поэтому если что-то идет не так, то думайте головой и действуйте по обстоятельствам. Например, если ваши решения тестируются долго — не паникуйте, а просто переключайтесь на другие задачи, ну и тщательнеее сами тестируйте те решения, которые вы отправляете на проверку.</p>\n\n<h2>Дополнительные замечания</h2>\n<h4>Не пугайтесь!</h4>\n<p>Год из года регулярно многие школьники на областной олимпиаде показывают результат хуже, чем от них можно было ожидать. Возможно, многие пугаются непривычной системы задач, системы тестирования и т.д. Так вот, не пугайтесь. Вы вполне способны показать весьма неплохой результат.</p>\n\n<h4>Ищите обходные решения проблем</h4>\n<p>Если у вас что-то не получается, вы не помните, как что-то сделать в вашем языке программирования и т.п. — подумайте, как эту проблему можно обойти. Если вы не помните простого способа что-то сделать, то, может быть, есть более сложный? Если у вас не работает какой-то код, может быть, можно написать как-то по-другому, пусть и сложнее, но надежнее? И т.д.</p>\n\n<h4>Неполадки на туре</h4>\n<p>Если у вас на туре что-то из оборудования работает не так, как вы хотите, сразу же спрашивайте жюри! Если, например, не работает клавиатура, или если программа не запускается с очень непонятными сообщениями об ошибках, то сразу зовите жюри! У нас в ННГУ часто бывает так, что антивирус мешает нормальной работе (например, удаляя exe-шник сразу после его создания, или очень задерживая запуск программы — вы в ННГУ на занятиях иногда это наблюдали, на занятиях это еще не так страшно, но на олимпиаде — ненормально) — сразу зовите жюри и просите отключить антивирус. Если жюри решает вашу проблему долго, требуйте компенсации времени.</p>\n\n<h4>Не уходите без баллов</h4>\n<p>По идее, после каждого тура у вас будет обед в столовой университета, потом разбор задач и объявление итогов тура. Я очень вам рекомендую дождаться объявления итогов. Последнее время обычно жюри раздает каждому участнику бумажки с его баллами — вот получите эту бумажку, чтобы проверить, что все подсчитано верно. У нашего жюри регулярно случаются проблемы с подсчетом баллов, поэтому лучше дождитесь и проверьте, что все соответствует вашим ожиданиям. Конечно, вы по идее должны знать свои баллы за счет фидбека, но лучше все-таки дождитесь бумажки.</p>\n\n<p>Я буду на олимпиаде на втором туре как перед туром, так и после тура и на закрытии; и постараюсь также подъехать когда-нибудь в день первого тура (или на открытие, или после тура, или и тогда и тогда). Если окажется, что вам неправильно посчитали баллы, то мы с вами можем пойти и поругаться. Но если вы уйдете раньше и не получите бумажку с результатами, то я сам за вас ругаться не пойду; как минимум, вы намного лучше меня знаете, чего вы ожидали.</p>\n\n<h4>Укажите меня своим преподавателем</h4>\n<p>Как я где-то уже писал, <b>пожалуйста, укажите меня своим преподавателем</b>, если наши занятия были для вас достаточно полезными. А именно, попросите школу указать меня преподавателем в заявке. На регистрации на олимпиаду перед первым туром обычно можно проверить, кто у вас указан и, если хотите, наверное можно будет исправить.</p>\n\n<h4>Прочитайте этот текст еще раз перед олимпиадой</h4>\n<p>Я могу вспомнить что-то и добавить в этот текст новую информацию. Поэтому прочитайте его перед олимпиадой еще раз.</p>\n\n<h4>Местное жюри и вариации</h4>\n<p>Все написанное выше написано по мотивам официальных правил областной олимпиады. К сожалению, наше местное жюри не всегда понимает эти правила до конца. (Правила, равно как и условия задач и тесты, составляются централизованно на всю Россию.) Например, в 2015 году они не хотели обеспечивать фидбек. Поэтому будьте готовы к каким-нибудь вариациям (например, они могут сказать, что финально будет оцениваться только то решение, которое вы оставите у себя в рабочем каталоге, а не то, которое вы сдавали). Мое мнение — пока эти вариации не сильно вам портят жизнь, не стоит ругаться с жюри; если же это что-то серьезное, то будем ругаться.</p>\n\n<p>Например, если они хотят, чтобы вы оставляли свое решение в рабочем каталоге — ну так сохраните свое лучшее решение и оставьте, не так уж это и сложно, так и вам и мне и жюри спокойнее. Конечно, если в итоге вы сохраните по ошибке не то решение и потеряете баллы из-за того, то будем ругаться, но лучше до этого не доводить. Если же жюри что-то глобальное сделает не так (например, отменит фидбек), то я буду ругаться сразу.</p>\n\n<p>Полные официальные Требования к проведению регионального этапа, которые обязательны к соблюдению во всех регионах, можно почитать <a href="http://vserosolymp.rudn.ru/mm/mpp/files/tr20/Информатика%20-%20Требования%20к%20проведению%20регионального%20этапа%202020.pdf">вот здесь</a>. Рекомендую почитать всем, кто участвует в регионе не первый раз и серьезно рассчитывает на высокий балл; а также если у вас возникли какие-то специфические вопросы (например, «можно ли разные задачи решать на разных языках программирования»).</p>\n\n<h1>Советы от <a href="/user/254947" onclick="window.goto(\'/user/254947\')();return false;"><span class="_client_components_UserName__name" style="color:#7b0000">Алексея Упирвицкого</span></a></h1>\n\n<p>(c) Алексей Упирвицкий, CC-BY-SA</p>\n\n<p>В этом тексте представлены мои личные идеи относительно регионального тура ВСОШ. Я основываюсь на своем опыте и опыте своих товарищей.</p>\n\n<p>Самым лучшим способом подготовки к региону будет прорешивание прошлогодних регионов и подготовка своей стратегии.\nТак как тур идет 5 часов, ближе к концу вы можете устать и быть куда менее продуктивными нежели в самом начале, и если вы не распределите время заранее, то можете что-то не успеть. Поэтому я предлагаю вам написать 2-3 тура и засечь, сколько времени у вас занимает та или иная задача. </p>\n\n<p>Например: <br>\nзадача А — 45 минут;<br>\nзадача В — 1.5 часа; <br>\nчто-то разумное в С — час;<br>\nполный перебор в Д — 20 минут.</p>\n\n<p>Имея такой приблизительный план, вы не будете терять время на туре, думая: что бы мне сейчас порешать. </p>\n\n<p>Вообще, в идеале стратегия должна выглядеть так:</p>\n\n<p>А — до часу. Если так происходит, что через час задача А не решена — нельзя отчаиваться и продолжать ее пихать. Нужно переключиться на задачу В и полностью погрузиться в работу над ней.</p>\n\n<p>В — еще час после А вы решаете задачу В. Записываете все свои мысли и пишете какое-нибудь решение. Пусть не на 100, но на 40-60 баллов оно должно быть. </p>\n\n<p>Теперь, когда прошло 2 часа от начала тура, я рекомендую оставить А и В и открыть D (конечно, нельзя оставлять задачу если вы прямо сейчас ее пишете или у вас есть абсолютно верная идея на очень много баллов).</p>\n\n<p>Наверное, большинство из вас удивится выбору задачи D, но это правильный выбор. Всегда в этой задаче есть подзадача на ~10 баллов, которая сдается полным перебором (вообще, я рекомендую потренироваться сдавать полный перебор заранее, это полезный навык — быстро и аккуратно написать его). Таким образом вы сможете избавиться от задачи D и отдохнуть от А и В. Возможно, это позволит взглянуть на них по-новому и придумать новое решение. </p>\n\n<p>Эти полчаса не думайте о других задачах. Да, это сложно, так как написание перебора зачастую не требует активной мыслительной деятельности, но вам нужен перерыв.</p>\n\n<p>Таким образом, прошло 2.5 часа от начала контеста, у вас сдана D на максимум который может набрать тупняк, и вы остаетесь с тремя задачами. Сейчас нужно посмотреть на А и В. Уделите каждой из них по полчаса. Скорее всего после перерыва вы сможете сгенерировать новые идеи. Прошло 3.5 часа, и нужно открывать задачу С. По моему мнению, задача С — это самое странное, что есть на регионе (но об этом позже), именно поэтому я рекомендую ее открывать последней. </p>\n\n<p>Дальше все зависит от задачи. В 2017-2018 году была задача \n<a href="/material/p113763" onclick="window.goto(\'/material/p113763\')();return false;">«Красота фейерверка»</a> и она была простой. Даже проще В, на мой взгляд (и многих других участников того года).\nНо с другой стороны, порой бывают очень сложные С. Поэтому важно быстро понять, сдавать ли ее на 100 или на частичные. Мой совет: первые  полчаса старайтесь придумать ее на 100, а если не получилось — полчаса сдавайте ее на частичные баллы. Так у вас останется полчаса, и идеальной будет разбалловка вида: 100 100 50± 20±\nЕсли она не такая, не надо отчаиваться, потому что получить идеальный результат сложнее, чем кажется.</p>\n\n<p>Теперь стоит сказать несколько слов про каждую позицию на контесте:\nЯ специально не буду рассматривать задачи с прошлого года. Почему — объясню позже.</p>\n<p>A — обычно простая задача. Очень часто формула, например: <a href="/material/p113757" onclick="window.goto(\'/material/p113757\')();return false;">«Улучшение успеваемости»</a> или <a href="/material/p113443" onclick="window.goto(\'/material/p113443\')();return false;">«Автоматизированное управление доставкой»</a></p>\n<p>В — конструктив/дп/бин-поиск не сложные темы. Просто нужно догадаться до решения. Очень часто помогает перебор всех известных вам алгоритмов, которые хоть как то могут сюда подойти.</p>\n<p>С — обычно что то очень идейное или структуры данных. Хорошим результатом будет сдать все подгруппы, не требующие мощных структур, и, может, еще одну с использованием неоптимальных структур. </p>\n<p>D — Что то очень сложное, что порой практически никто не сдает в стране. </p>\n\n<p>Почему я не касаюсь прошлого года? Потому что тур был очень сложным. Неоправдано сложным. По моему мнению, в этом году тур будет сильно проще. Например, как в 2016-17 или 2017-18 году. </p>\n\n<p>Мое мнение относительно тем по задачам: </p>\n<p>А — будет один конструктив и один бинпоиск</p>\n<p>В — думаю, что будет алгоритм на графах/конструктив/простые структуры данных. Например, дерево отрезков.</p>\n<p>С — в последние годы была подозрительная мода на интерактивные задачи, поэтому будьте готовы к ним. Будет забавно, если опять будет Декартово Дерево. Поговаривают про дп и его оптимизации. Но я больше думаю про что-то на графах/структурах данных. В задаче С всегда есть подвох. Она либо простая, либо сложная. Про нее не понятно, что можно дать, поэтому изворачиваются как могут.</p>\n<p>D — какая-то сложная, никому не известная тема, или старый добрый баян. Тут возможны оптимизации дп. Но если это так, то всем рекомендую оптимизацию buben вида: ну давайте переберем не все, а ±константу. Например, если в дп вам приходится пересчитывать значение через все предыдущие, но у вас есть подозрение, что вас не интересуют некоторые, смело пишите что-то в духе\n</p><pre><code>for (int i = 0; i &lt; n; ++i)\n    for (int j = i; j &gt;= max(0, i - buben); --j)\n</code></pre>\nВозможно, будут очень сложные строки.<p></p>\n\n<p>Вообще, есть такая тема как Сканлайн, и она может быть на любой позиции, потому что на нее можно накрутить практически что угодно.</p>\n\n<p>Также у каждого из вас есть тема, про которую вы уверены, что ее не будет, и потому не нужно ее учить. Поверьте моему опыту, именно она и будет. Так что повторите все, по чему у вас просадки. Сдайте пару прошлых регионов. Потренируйтесь писать перебор.</p>\n\n<p>Постарайтесь изучить корневую эвристику. Она позволяет делать полезные трюки и получать много баллов.</p>\n\n<p>Еще: подзадачи вам даны не только для того чтобы пихать, а для того чтобы тестировать! Что я имею ввиду: у вас есть идея на много баллов но почему то wa. Вы берёте и начинаете по частям код разбирать.</p>\n\n<p>Например есть подзадача на квадрат и есть на N log N.\nВот вы берёте и основную идею оставляете, а то что делает лог заменяете на простой алгоритм, работающий за линию.\nТак вы можете понять в какой части кода ошибка.</p>\n\n<p>Вообще не рекомендую сразу писать код на 100.\nЛучше выделить несколько ключевых идей и протестировать их так.\nДа, вы потратите время, но избавите себя от возможного дебага.</p>\n<p>Ещё иногда подзадачи могут натолкнуть на правильное решение. \nБерете простую подзадачу, которую знаете как решать, берете более сложную и начинаете думать, чем таким эти задачи отличаются, можно ли из решения простой подзадачи сделать решение сложной, или наоборот, сложную подзадачу свести к простой.</p>\n\n<p>Полезные статьи на codeforces (<i>это в первую очередь для уже реально крутых школьников, уровня эдак 5-6+ — П.К.</i>):<br>\n<a href="https://codeforces.com/blog/entry/44351">https://codeforces.com/blog/entry/44351</a><br>\n<a href="https://codeforces.com/blog/entry/63823">https://codeforces.com/blog/entry/63823</a><br>\n<a href="https://codeforces.com/blog/entry/45223">https://codeforces.com/blog/entry/45223</a><br>\n</p>\n\n<h1>Разбор районной олимпиады</h1>\n\n<p>Возможно, со временем я добавлю сюда разбор районной олимпиады.</p></div>', 'title': 'Про областную олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_10', 'order': 11, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_11', 'order': 12, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про Нижегородскую городскую олимпиаду им. В.Д. Лелюха</h1>\n<p>В феврале 2019 года (ориентировочно 8 февраля, но возможно дата будет изменена) состоится XVI Нижегородская городская олимпиада школьников по информатике им. В.Д. Лелюха. Я рекомендую подавать заявку всем школьникам моего курса, которые являются учениками школ города Нижнего Новгорода (не области!), и имеющим уровень как минимум 1В. Можете подать заявку и если у вас уровень ниже, но, возможно, задачи даже отбора вам покажутся сложными.</p>\n\n<p>Для участия в олимпиаде надо подать заявку. Информация про олимпиаду и порядок подачи заявок (приказ Департамента образования Администрации г. Н. Новгорода № 965 от 23.12.2019) уже направлен в школы города, поэтому ваши школы должны быть в курсе. Также приказ выставлен на <a href="http://olympiads.nnov.ru">сайте олимпиады</a> в разделе "Новости"; если до вашей школы он не дошел, то скачайте его с сайта олимпиады и покажите своим учителям или завучам.</p>\n\n<p>В принципе, подать заявку на вас может кто угодно — и ваша школа, и вы лично. Но не плодите заявки; если ваша школа сама подаст заявку на вас, то не дублируйте заявку. Если по каким-то причинам они не будут подавать заявку, или вы не уверены, подадут они или нет, то можете сами заполнить анкету по ссылке из приказа. В любом случае, даже если школа подает заявку за вас, все равно следите за <a href="http://olympiads.nnov.ru">сайтом олимпиады</a>, там будет появляться информация о рассмотрении заявок.</p>\n\n<p>Отбор на олимпиаду будет проводиться из числа заполнивших заявку по итогам районной и школьной олимпиад, также будет проведен дополнительный заочный отборочный тур 18 января. Подробная информация есть в приказе (см. на сайте олимпиады), а также информация будет разослана после заполнения заявок.</p>\n\n<p>На этой олимпиаде я председатель жюри, поэтому я не буду вам писать про нее столь подробно, как про другие олимпиады. Но изучите сайт олимпиады, посмотрите задания прошлых лет, чтобы понимать, чего ожидать. И прочитайте и применяйте те же рекомендации, которые я пишу по другим олимпиадам.</p>\n\n<p>На олимпиаду также будет приглашено несколько участников из области; их мы будем приглашать лично с учетом результатов областной олимпиады.</p>\n\n</div>', 'title': 'Про Нижегородскую городскую олимпиаду им. В.Д. Лелюха', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_12', 'order': 13, 'indent': 0, 'type': 'label', 'title': '', 'content': '<p><a href="https://codeforces.com/blog/entry/70187">Олимпиада Технокубок</a></p>\n<p><a href="https://olympiads.ru/zaoch/">Открытая олимпиада школьников по программированию ("заочка")</a> — очень известная и крупная олимпиада, заодно еще и поступательная. Советую участвовать, хотя задачи не самые простые.\n</p>\n\n\n<hr>\n\n<h2>Летняя компьютерная школа</h2>\n<p>\nЛетняя компьютерная школа (ЛКШ) — это очень круто, у нее только один недостаток: она платная (поездка стоит около 50 тыс. рублей).</p>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_13', 'order': 14, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><center><img src="https://lksh.ru/sis/scripts/logo.png" style="background:#000055;padding:10px;width:80%"></center>\n<h1>Летняя компьютерная школа — 2020</h1>\n\n<!--<p><b><font size=+1>NEW (29.03.2017):</font></b> <a href="https://docs.google.com/document/d/1Jc8JWvVeIMdTQGmqRgVMUFl6-xEvLOCGa43RwLP1QuE/pub">Советы по поступлению</a></p>-->\n\n<p><a href="http://lksh.ru">Летняя компьютерная школа (ЛКШ)</a> — это летняя школа для учащихся средних и старших классов, занимающихся программированием. ЛКШ проходит в две смены по три недели (в июле и в конце июля-августе, каждый школьник может поехать только в одну смену). Традиционным местом проведения школы является база отдыха "Берендеевы Поляны" в Костромской области, но последнее время смены нередко проводятся и в других местах.</p>\n\n<p>В ЛКШ приезжают школьники со всей России; преподавателями являются учителя школ и преподаватели вузов Москвы, Санкт-Петербурга и других городов, организаторы и члены жюри различных олимпиад, сильные студенты российских вузов. (Я многие годы ездил в ЛКШ преподавателем, правда, в этом году, скорее всего, не поеду.) В ЛКШ очень хорошая учебная программа, также очень хорошая внеучебная программа. От Нижегородской области (и от лицея 40) туда регулярно ездят несколько школьников (см., например, <a href="http://poldnev.ru/lksh/cities/Nizhny_Novgorod">здесь</a>). Более подробная информация про ЛКШ <a href="https://lksh.ru/sis/2019/aboutlksh.shtml">здесь</a> (это пока страничка прошлого года).</p>\n\n<p>На сайте пока никакой информации за этот год нет, но для общей справки вполне можете смотреть информацию прошлого года. Еще много информации в <a href="https://vk.com/sis">группе вКонтакте</a>.</p>\n\n<!--\n<p>В этом году июльская смена пройдет с 4 по 24 июля на базе отдыха «Берендеевы поляны» в Костромской области (это самое стандартное место для ЛКШ). Августовская смена <b>предварительно</b> пройдет в Эстонии в отеле «Laagna» с 31 июля по 20 августа. Вступительная работа будет опубликована ориентировочно 25 марта, выполнить её нужно будет до 22 апреля.</p> -->\n\n<p>Я <b>очень рекомендую</b> всем, кто может, и при этом имеет достаточный уровень программирования, туда поехать. А именно:</p>\n<ul>\n<li>Всем 8-классникам и младше, имеющим уровень как минимум 1Б, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем 9-классникам, имеющим уровень как минимум 1Г, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем вообще (кроме 11-классников, конечно), имеющим уровень как минимум 2Б, даже если у вас нет возможности поехать — все равно как минимум постараться поступить, если поступите, то будем думать, как вам поехать.</li>\n</ul>\n<p>Отбор в ЛКШ осуществляется по результатам выполнения вступительной работы, которую надо написать в марте-апреле.</p>\n\n<p>Еще раз: <b>ЛКШ — это очень и очень круто и полезно!</b> Поэтому всем, кто имеет уровень хоть сколько-то выше начального, имеет смысл туда поехать.</p>\n\n<p>Правда, есть проблема: участие в ЛКШ платное (ЛКШ проводится группой инициативных преподавателей и не имеет государственной поддержки), стоимость участия (3 недели: проживание, питание, занятия) в 2019 году была около 50000 рублей, в этом году будет, скорее всего, больше. Если вы можете оплатить эту сумму, то хорошо; иначе вы можете написать заявление на социальную скидку, и скорее всего она будет вам предоставлена за счет спонсорских средств ЛКШ (см. для примера  <a href="https://lksh.ru/sis/2019/zacisl/skidki.shtml">информацию о скидках 2019 года</a>).</p>\n\n<p>Школьники, расскажите про ЛКШ своим родителям! Если у ваших родителей есть какие-то вопросы, пусть звонят мне. <b>Если вы уже планируете лето, постарайтесь запланировать поездку в ЛКШ.</b> (Я специально говорю вам про ЛКШ настолько заранее, т.к. знаю, что многие планируют лето еще зимой.) Ближе к поступлению я тут напишу более подробную информацию. Если возникают какие-то вопросы, обращайтесь. См. также советы по поступлению в ЛКШ ниже.</p>\n\n<p>Сайт школы со всей информацией — <a href="http://lksh.ru">lksh.ru</a>.</p>\n\n<!-- <p><b><font color=red>NEW:</font></b> <a href="https://docs.google.com/document/d/e/2PACX-1vQkAIuVK7ZErO0mVYd8hVcYOKCP6m9r3dQ5VhzOkrfn6cNw0Aj3tZ2zkQFdN4Fw4v1f7CIsVmuMh-Rt/pub">Советы по поступлению в ЛКШ</a></p> -->\n\n<p>Ролик про ЛКШ разных лет (довольно старый уже; другие, тоже старые, видео есть на <a href="http://www.youtube.com/user/pakalinin">моем канале</a>):</p>\n\n<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/4nVl5MHeqIY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>', 'title': 'Информация про школу, читать всем!', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_14', 'order': 15, 'indent': 0, 'type': 'label', 'title': '', 'content': '<p><b>Я настоятельно рекомендую:</b></p>\n<ul>\n<li>Всем 8-классникам и младше, имеющим уровень как минимум 1Б, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем 9-классникам, имеющим уровень как минимум 1Г, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем вообще (кроме 11-классников, конечно), имеющим уровень как минимум 2Б, даже если у вас нет возможности поехать — все равно как минимум постараться поступить, если поступите, то будем думать, как вам поехать.</li>\n</ul>\n\n\n\n\n\n\n<h2>Архивы старых олимпиад</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-18043_0', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="https://www.dropbox.com/s/brq5dotrg4lmym2/raion_archive.pdf?dl=0">Архив прошлых районных олимпиад</a> (в тестирующей системе их скорее всего нигде нет)\n<hr>\n<a href="/material/reg">Областные олимпиады прошлых лет</a> (у нас в тестирующей засчитываются только полные баллы, но на реальной олимпиаде частичные решения тоже оцениваются)', 'path': []}], 'force': False, '_id': '0', 'order': 0, 'type': 'level', 'indent': 0, 'title': 'О курсе', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-16127_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 1</h2>', 'indent': 0}, {'_id': '1А', 'title': 'Уровень 1А', 'type': 'level'}, {'_id': 'module-15941_0t', 'title': '', 'type': 'label', 'content': 'Арифметические операции', 'indent': 20}, {'_id': 'module-15942_0t', 'title': '', 'type': 'label', 'content': 'Условный оператор', 'indent': 20}, {'_id': 'module-49287_0t', 'title': '', 'type': 'label', 'content': 'Как отлаживать программы', 'indent': 20}, {'_id': 'module-15943_0t', 'title': '', 'type': 'label', 'content': 'Циклы', 'indent': 20}, {'_id': '1Б', 'title': 'Уровень 1Б', 'type': 'level'}, {'_id': 'module-15945_0t', 'title': '', 'type': 'label', 'content': 'Массивы', 'indent': 20}, {'_id': 'module-15946_0t', 'title': '', 'type': 'label', 'content': 'Символы и строки', 'indent': 20}, {'_id': 'module-15947_0t', 'title': '', 'type': 'label', 'content': 'Вещественные числа', 'indent': 20}, {'_id': '1В', 'title': 'Уровень 1В', 'type': 'level'}, {'_id': 'module-21146_0t', 'title': '', 'type': 'label', 'content': 'Вещественные числа', 'indent': 20}, {'_id': 'module-15980_0t', 'title': '', 'type': 'label', 'content': 'Основы тестирования задач (без контеста)', 'indent': 20}, {'_id': 'module-16264_0t', 'title': '', 'type': 'label', 'content': 'Задачи', 'indent': 20}, {'_id': '1Г', 'title': 'Уровень 1Г', 'type': 'level'}], 'force': False, '_id': '1', 'order': 1, 'type': 'level', 'indent': 0, 'title': 'Уровень 1', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-15997_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 2</h2>', 'indent': 0}, {'_id': '2А', 'title': 'Уровень 2А', 'type': 'level'}, {'_id': 'module-15998_0t', 'title': '', 'type': 'label', 'content': '*Работа с файлами (без контеста)', 'indent': 20}, {'_id': 'module-16005_0t', 'title': '', 'type': 'label', 'content': '*Функции (без контеста)', 'indent': 20}, {'_id': 'module-16007_0t', 'title': '', 'type': 'label', 'content': 'НОД, алгоритм Евклида', 'indent': 20}, {'_id': 'module-16010_0t', 'title': '', 'type': 'label', 'content': '*Рекурсивный перебор', 'indent': 20}, {'_id': 'module-16018_0t', 'title': '', 'type': 'label', 'content': 'Квадратичные сортировки', 'indent': 20}, {'_id': 'module-25197_0t', 'title': '', 'type': 'label', 'content': 'Задачи "на технику"', 'indent': 20}, {'_id': '2Б', 'title': 'Уровень 2Б', 'type': 'level'}, {'_id': 'module-16027_0t', 'title': '', 'type': 'label', 'content': 'Сложность алгоритмов (без контеста)', 'indent': 20}, {'_id': 'module-16035_0t', 'title': '', 'type': 'label', 'content': 'Основы динамического программирования', 'indent': 20}, {'_id': 'module-16039_0t', 'title': '', 'type': 'label', 'content': 'Стек, дек, очередь', 'indent': 20}, {'_id': 'module-16042_0t', 'title': '', 'type': 'label', 'content': 'Простые числа и разложение на множители', 'indent': 20}, {'_id': 'module-25223_0t', 'title': '', 'type': 'label', 'content': 'Простая жадность', 'indent': 20}, {'_id': '2В', 'title': 'Уровень 2В', 'type': 'level'}], 'force': False, '_id': '2', 'order': 2, 'type': 'level', 'indent': 0, 'title': 'Уровень 2', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-16093_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 3</h2>', 'indent': 0}, {'_id': '3А', 'title': 'Уровень 3А', 'type': 'level'}, {'_id': 'module-16272_0t', 'title': '', 'type': 'label', 'content': 'Проcтые графы', 'indent': 20}, {'_id': 'module-16275_0t', 'title': '', 'type': 'label', 'content': 'Поиск в ширину', 'indent': 20}, {'_id': 'module-16279_0t', 'title': '', 'type': 'label', 'content': 'Бинарный поиск (поиск делением пополам)', 'indent': 20}, {'_id': '3Б', 'title': 'Уровень 3Б', 'type': 'level'}, {'_id': 'module-16305_0t', 'title': '', 'type': 'label', 'content': 'Системы счисления. Двоичная система счисления.', 'indent': 20}, {'_id': 'module-16343_0t', 'title': '', 'type': 'label', 'content': 'Два указателя', 'indent': 20}, {'_id': 'module-16369_0t', 'title': '', 'type': 'label', 'content': 'Основы поиска в глубину', 'indent': 20}, {'_id': 'module-16373_0t', 'title': '', 'type': 'label', 'content': 'Продвинутое тестирование задач (без контеста)', 'indent': 20}, {'_id': '3В', 'title': 'Уровень 3В', 'type': 'level'}], 'force': False, '_id': '3', 'order': 3, 'type': 'level', 'indent': 0, 'title': 'Уровень 3', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-16470_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 4</h2>', 'indent': 0}, {'_id': '4А', 'title': 'Уровень 4А', 'type': 'level'}, {'_id': 'module-16472_0t', 'title': '', 'type': 'label', 'content': 'Логарифмические сортировки', 'indent': 20}, {'_id': 'module-16577_0t', 'title': '', 'type': 'label', 'content': 'Динамическое программирование: баяны', 'indent': 20}, {'_id': 'module-16614_0t', 'title': '', 'type': 'label', 'content': 'Связные списки', 'indent': 20}, {'_id': 'module-16618_0t', 'title': '', 'type': 'label', 'content': 'Хранение графов списками смежности', 'indent': 20}, {'_id': '4Б', 'title': 'Уровень 4Б', 'type': 'level'}, {'_id': 'module-16682_0t', 'title': '', 'type': 'label', 'content': 'Алгоритм Дейкстры', 'indent': 20}, {'_id': 'module-16685_0t', 'title': '', 'type': 'label', 'content': 'Сортировка подсчетом', 'indent': 20}, {'_id': 'module-16786_0t', 'title': '', 'type': 'label', 'content': 'Длинная арифметика', 'indent': 20}, {'_id': 'module-16789_0t', 'title': '', 'type': 'label', 'content': 'Сортировка событий', 'indent': 20}, {'_id': '4В', 'title': 'Уровень 4В', 'type': 'level'}], 'force': False, '_id': '4', 'order': 4, 'type': 'level', 'indent': 0, 'title': 'Уровень 4', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-16885_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 5</h2>', 'indent': 0}, {'_id': '5А', 'title': 'Уровень 5А', 'type': 'level'}, {'_id': 'module-16887_0t', 'title': '', 'type': 'label', 'content': 'Тернарный (троичный) поиск', 'indent': 20}, {'_id': 'module-16952_0t', 'title': '', 'type': 'label', 'content': 'Задачи средней сложности на ДП', 'indent': 20}, {'_id': 'module-42872_0t', 'title': '', 'type': 'label', 'content': 'Хеширование', 'indent': 20}, {'_id': '5Б', 'title': 'Уровень 5Б', 'type': 'level'}, {'_id': 'module-17239_0t', 'title': '', 'type': 'label', 'content': 'Куча', 'indent': 20}, {'_id': 'module-17295_0t', 'title': '', 'type': 'label', 'content': 'Продвинутый алгоритм Дейкстры', 'indent': 20}, {'_id': 'module-19008_0t', 'title': '', 'type': 'label', 'content': 'Рекурсивный перебор', 'indent': 20}, {'_id': 'module-19010_0t', 'title': '', 'type': 'label', 'content': 'Применения сортировки', 'indent': 20}, {'_id': '5В', 'title': 'Уровень 5В', 'type': 'level'}], 'force': False, '_id': '5', 'order': 5, 'type': 'level', 'indent': 0, 'title': 'Уровень 5', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-19470_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 6</h2>', 'indent': 0}, {'_id': '6А', 'title': 'Уровень 6А', 'type': 'level'}, {'_id': 'module-19472_0t', 'title': '', 'type': 'label', 'content': 'Алгоритмы Флойда и Форда-Беллмана', 'indent': 20}, {'_id': 'module-19475_0t', 'title': '', 'type': 'label', 'content': 'Простые игры на графах', 'indent': 20}, {'_id': 'module-19478_0t', 'title': '', 'type': 'label', 'content': 'Поиск в ширину в 1-k и 0-k графах', 'indent': 20}, {'_id': '6Б', 'title': 'Уровень 6Б', 'type': 'level'}, {'_id': 'module-19481_0t', 'title': '', 'type': 'label', 'content': 'Жадные алгоритмы', 'indent': 20}, {'_id': 'module-19483_0t', 'title': '', 'type': 'label', 'content': 'Простая геометрия', 'indent': 20}, {'_id': '6В', 'title': 'Уровень 6В', 'type': 'level'}], 'force': False, '_id': '6', 'order': 6, 'type': 'level', 'indent': 0, 'title': 'Уровень 6', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-25508_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 7</h2>', 'indent': 0}, {'_id': '7А', 'title': 'Уровень 7А', 'type': 'level'}, {'_id': 'module-25510_0t', 'title': '', 'type': 'label', 'content': 'Сложные задачи на поиск в глубину', 'indent': 20}, {'_id': 'module-25513_0t', 'title': '', 'type': 'label', 'content': 'Алгоритм Кнута-Морриса-Пратта (КМП)', 'indent': 20}, {'_id': 'module-25515_0t', 'title': '', 'type': 'label', 'content': 'Z-функция', 'indent': 20}, {'_id': '7Б', 'title': 'Уровень 7Б', 'type': 'level'}, {'_id': 'module-25518_0t', 'title': '', 'type': 'label', 'content': 'Sqrt-декомпозиция, она же корневая эвристика', 'indent': 20}, {'_id': 'module-25520_0t', 'title': '', 'type': 'label', 'content': 'Дерево отрезков', 'indent': 20}, {'_id': 'module-25527_0t', 'title': '', 'type': 'label', 'content': 'Декартово дерево', 'indent': 20}, {'_id': '7В', 'title': 'Уровень 7В', 'type': 'level'}], 'force': False, '_id': '7', 'order': 7, 'type': 'level', 'indent': 0, 'title': 'Уровень 7', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-26191_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 8</h2>', 'indent': 0}, {'_id': '8А', 'title': 'Уровень 8А', 'type': 'level'}, {'_id': 'module-26193_0t', 'title': '', 'type': 'label', 'content': 'Системы непересекающихся множеств и минимальный остов', 'indent': 20}, {'_id': 'module-26195_0t', 'title': '', 'type': 'label', 'content': 'Паросочетания и связанные темы', 'indent': 20}, {'_id': 'module-26197_0t', 'title': '', 'type': 'label', 'content': 'Функция Гранди', 'indent': 20}, {'_id': '8Б', 'title': 'Уровень 8Б', 'type': 'level'}, {'_id': 'module-26200_0t', 'title': '', 'type': 'label', 'content': 'Сложные задачи на ДП', 'indent': 20}, {'_id': 'module-26202_0t', 'title': '', 'type': 'label', 'content': 'Декартово дерево по неявному ключу', 'indent': 20}, {'_id': 'module-26204_0t', 'title': '', 'type': 'label', 'content': 'Геометрия средней сложности', 'indent': 20}, {'_id': '8В', 'title': 'Уровень 8В', 'type': 'level'}], 'force': False, '_id': '8', 'order': 8, 'type': 'level', 'indent': 0, 'title': 'Уровень 8', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-35188_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 9</h2>', 'indent': 0}, {'_id': '9А', 'title': 'Уровень 9А', 'type': 'level'}, {'_id': 'module-35191_0t', 'title': '', 'type': 'label', 'content': 'Простые потоки', 'indent': 20}, {'_id': 'module-35194_0t', 'title': '', 'type': 'label', 'content': 'Дерево Фенвика', 'indent': 20}, {'_id': 'module-35698_0t', 'title': '', 'type': 'label', 'content': 'LCA', 'indent': 20}, {'_id': '9Б', 'title': 'Уровень 9Б', 'type': 'level'}, {'_id': 'module-35703_0t', 'title': '', 'type': 'label', 'content': 'Групповые операции на деревьях', 'indent': 20}, {'_id': 'module-35706_0t', 'title': '', 'type': 'label', 'content': 'Бор и алгоритм Ахо-Корасик', 'indent': 20}, {'_id': 'module-35708_0t', 'title': '', 'type': 'label', 'content': 'Многомерные деревья', 'indent': 20}, {'_id': '9В', 'title': 'Уровень 9В', 'type': 'level'}], 'force': False, '_id': '9', 'order': 9, 'type': 'level', 'indent': 0, 'title': 'Уровень 9', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'module-39719_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 10</h2>', 'indent': 0}, {'_id': '10А', 'title': 'Уровень 10А', 'type': 'level'}, {'_id': 'module-39721_0t', 'title': '', 'type': 'label', 'content': 'Продвинутая теория чисел, китайская теорема об остатках', 'indent': 20}, {'_id': 'module-39723_0t', 'title': '', 'type': 'label', 'content': 'Суффиксные структуры данных', 'indent': 20}, {'_id': 'module-39768_0t', 'title': '', 'type': 'label', 'content': 'Сложная геометрия', 'indent': 20}, {'_id': '10Б', 'title': 'Уровень 10Б', 'type': 'level'}, {'_id': 'module-39862_0t', 'title': '', 'type': 'label', 'content': 'Mincost-maxflow', 'indent': 20}, {'_id': 'module-39864_0t', 'title': '', 'type': 'label', 'content': 'Паросочетание максимального веста, венгерский алгоритм', 'indent': 20}, {'_id': 'module-39866_0t', 'title': '', 'type': 'label', 'content': 'Матрицы и их применение к ДП', 'indent': 20}, {'_id': '10В', 'title': 'Уровень 10В', 'type': 'level'}], 'force': False, '_id': '10', 'order': 10, 'type': 'level', 'indent': 0, 'title': 'Уровень 10', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'materials': [], 'force': False, '_id': 'reghead', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Региональные олимпиады</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}]}, {'force': False, '_id': 'reg2009', 'order': 2009, 'type': 'level', 'indent': 0, 'title': '2009', 'content': '', 'path': []}, {'force': False, '_id': 'reg2010', 'order': 2010, 'type': 'level', 'indent': 0, 'title': '2010', 'content': '', 'path': []}, {'force': False, '_id': 'reg2011', 'order': 2011, 'type': 'level', 'indent': 0, 'title': '2011', 'content': '', 'path': []}, {'force': False, '_id': 'reg2012', 'order': 2012, 'type': 'level', 'indent': 0, 'title': '2012', 'content': '', 'path': []}, {'force': False, '_id': 'reg2013', 'order': 2013, 'type': 'level', 'indent': 0, 'title': '2013', 'content': '', 'path': []}, {'force': False, '_id': 'reg2014', 'order': 2014, 'type': 'level', 'indent': 0, 'title': '2014', 'content': '', 'path': []}, {'force': False, '_id': 'reg2015', 'order': 2015, 'type': 'level', 'indent': 0, 'title': '2015', 'content': '', 'path': []}, {'force': False, '_id': 'reg2016', 'order': 2016, 'type': 'level', 'indent': 0, 'title': '2016', 'content': '', 'path': []}, {'force': False, '_id': 'reg2017', 'order': 2017, 'type': 'level', 'indent': 0, 'title': '2017', 'content': '', 'path': []}, {'force': False, '_id': 'reg2018', 'order': 2018, 'type': 'level', 'indent': 0, 'title': '2018', 'content': '', 'path': []}, {'force': False, '_id': 'reg2019', 'order': 2019, 'type': 'level', 'indent': 0, 'title': '2019', 'content': '', 'path': []}], 'force': False, '_id': 'reg', 'order': 100, 'type': 'level', 'indent': 0, 'title': 'Региональные олимпиады', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'materials': [], 'force': False, '_id': 'roihead', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Всероссийские олимпиады</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}]}, {'force': False, '_id': 'roi2009', 'order': 2009, 'type': 'level', 'indent': 0, 'title': '2009', 'content': '', 'path': []}, {'force': False, '_id': 'roi2010', 'order': 2010, 'type': 'level', 'indent': 0, 'title': '2010', 'content': '', 'path': []}, {'force': False, '_id': 'roi2011', 'order': 2011, 'type': 'level', 'indent': 0, 'title': '2011', 'content': '', 'path': []}, {'force': False, '_id': 'roi2012', 'order': 2012, 'type': 'level', 'indent': 0, 'title': '2012', 'content': '', 'path': []}, {'force': False, '_id': 'roi2013', 'order': 2013, 'type': 'level', 'indent': 0, 'title': '2013', 'content': '', 'path': []}, {'force': False, '_id': 'roi2014', 'order': 2014, 'type': 'level', 'indent': 0, 'title': '2014', 'content': '', 'path': []}, {'force': False, '_id': 'roi2015', 'order': 2015, 'type': 'level', 'indent': 0, 'title': '2015', 'content': '', 'path': []}, {'force': False, '_id': 'roi2016', 'order': 2016, 'type': 'level', 'indent': 0, 'title': '2016', 'content': '', 'path': []}, {'force': False, '_id': 'roi2017', 'order': 2017, 'type': 'level', 'indent': 0, 'title': '2017', 'content': '', 'path': []}, {'force': False, '_id': 'roi2018', 'order': 2018, 'type': 'level', 'indent': 0, 'title': '2018', 'content': '', 'path': []}, {'force': False, '_id': 'roi2019', 'order': 2019, 'type': 'level', 'indent': 0, 'title': '2019', 'content': '', 'path': []}], 'force': False, '_id': 'roi', 'order': 200, 'type': 'level', 'indent': 0, 'title': 'Всероссийские олимпиады', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}, {'materials': [{'_id': 'table:header', 'type': 'label', 'content': '<h1>Сводные таблицы</h1>'}, {'_id': 'tables:lic40', 'title': 'Лицей 40', 'type': 'level'}, {'_id': 'tables:lic87', 'title': 'Лицей 87', 'type': 'level'}, {'_id': 'tables:zaoch', 'title': 'Нижегородские школьники', 'type': 'level'}, {'_id': 'tables:vega', 'title': 'Вега', 'type': 'level'}, {'_id': 'tables:notnnov', 'title': 'Остальные школьники', 'type': 'level'}, {'_id': 'tables:stud', 'title': 'Студенты и старше', 'type': 'level'}], 'force': False, '_id': 'tables', 'type': 'level', 'title': 'Сводные таблицы', 'path': [{'_id': 'main', 'title': '/'}]}]
Converting material  {'materials': [{'materials': [], 'force': False, '_id': 'module-20927_0', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_1', 'order': 1, 'type': 'epigraph', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Надо думать головой!</h2>\n<p>Девиз нашего курса — «Надо думать головой!»</p>\n\n<p>Это обозначает, что все время при работе на спецкурсе вам надо думать. Вам нужно думать над тем, как решать те или иные задачи, как сделать много что еще. У вас не будет универсальных рецептов, которые позволят решить все задачи — наоборот, самые лучшие, самые интересные задачи — те, где от вас требуется что-то придумать.</p>\n\n<p>Кроме того, к любой получаемой информации, ко всему, что написано в учебниках, ко всему, что я вам говорю, что написано на страничку курса, относитесь всегда критически. Думайте, пытайтесь понять, почему это написано, почему вам советуют делать так, а не иначе. В учебниках, в том, что вам говорят другие люди, и тем более в моих материалах и советах легко могут быть ошибки, опечатки, наконец, вы, возможно, найдете более простые способы добиться того же — поэтому никогда не принимайте на веру то, что вы где-нибудь прочитали, всегда обдумывайте и перерабатывайте полученную информацию. Может так оказаться, что в одном месте вы прочитаете одну информацию, а в другом месте — диаметрально противоположную — подумайте, проверьте (см. ниже), и поймите, как делать лучше.</p>\n\n<p>Кроме того, не бойтесь экспериментировать! Если вы не уверены, можно ли в питоне/паскале/... написать ту или иную команду, отработает ли она так, как вы ожидаете — попробуйте: напишите и проверьте. Если вы точно не помните, как пишется какая-нибудь команда — попробуйте перебрать варианты, пока не получится. Если вы в разных местах прочитали совсем разную информацию о том, как что-то надо сделать — возьмите и проверьте, какой способ работает! Не бойтесь пробовать, не бойтесь экспериментировать — так вы научитесь намного большему, чем если просто будете строго следовать тому, что написано в каких-либо учебниках, что вам кто-то сказал.</p></div>', 'title': 'Надо думать головой!', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_2', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_3', 'order': 3, 'type': 'epigraph', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><div style="text-align:right;width:100%;padding-bottom:2ex;"><i>There are nine and sixty ways of constructing tribal lays,<br>\nAnd every single one of them is right!</i><br><br>\nRudyard Kipling. In the Neolithic Age<br><br><br>\nЕсть девять и шестьдесят способов писать песни племен<br>\nИ каждый из них без исключения верный!<br><br>\nРедьярд Киплинг. В эпоху Неолита</div>\n\n<p>У каждой задачи есть очень много решений, и многие из них — верные. Не следует ожидать, что у каждой задачи есть единственное правильное решение; бывают решения лучше, бывают решения хуже, но почти всегда есть два-три существенно разных решения, которые все весьма хороши, и из которых сложно выбрать одно лучшее. Будьте готовы к этому, будьте готовы видеть эти разные решения и разные подходы.</p>\n\n<p>В частности, если у вас есть ошибка в программе, то обычно есть много способов ее исправить. Поэтому не удивляйтесь, если вы меня спрашиваете, как исправить ошибку, а я вам предлагаю несколько вариантов исправления.</p></div>', 'title': 'There are nine and sixty ways of constructing tribal lays,\nAnd every single one of them is right!', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_4', 'order': 4, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Самая главная информация</h2>\n\n<div><a href="https://www.youtube.com/watch?v=kTC7z1NpOb4">\nВводная видеолекция про занятия на алгопроге (дублирует основную информацию ниже)</a></div>\n\n<div style="height:1ex;"></div>\n\n<div><b>Для начала</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_5', 'order': 5, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Общие вопросы (FAQ) по курсу</h2>\n<h3>Что это за курс?</h3>\n<p>Это курс по алгоритмическому программированию (фактически, по олимпиадным задачам). В первую очередь, он ориентирован на учеников лицея 40 Нижнего Новгорода, а также школьников Нижнего Новгорода и Нижегородской области, у которых в школе нет занятий по алгоритмическому программированию, или которых чем-то не устраивают такие занятия в их школе. Но при этом, если в этом курсе захотят участвовать школьники не из Нижегородской области, я ничего против иметь не буду.</p>\n\n<h3>Что за странный формат? Что за занятия в лицее 40 и в ННГУ?</h3>\n<p>В этом курсе можно заниматься полностью заочно — по многим темам материалы есть на сайте, и вы всегда можете написать вопрос мне. Кроме того, по материалам этого курса я веду очные занятия в лицее 40 (только для учеников лицея) и в ННГУ (для всех желающих). Но при этом у нас нет регулярных лекций по строгому расписанию, все школьники занимаются в своем темпе, поэтому можно ходить и в лицей, и в ННГУ, можно ходить не каждый раз. Поэтому это получается такой очно-заочный курс.</p>\n\n<h3>Чему тут учат?</h3>\n<p>Основное направление — это алгоритмическое программирование. Начиная с основ программирования, и далее в алгоритмы и структуры данных. Это то, что по-английски называется Computer Science. С существенным уклоном в сторону олимпиадного программирования (в первую очередь по линии Всероссийской олимпиады школьников), тем более что задачи на олимпиадах — это как раз задачи на алгоритмы и структуры данных.</p>\n\n<h3>Чему тут НЕ учат?</h3>\n<p>Мы не будем специально заниматься "техническими" вопросами:</p>\n<ul>\n<li>Созданием пользовательских интерфейсов, кнопочек, окошек и т.д.</li>\n<li>Программированием под конкретные платформы: созданием web-приложений, программированием под Android, iOS и т.п.</li>\n</ul>\n<p>Мы будем изучать алгоритмы, которые лежат в основе многих таких программ (мы не будем обсуждать, как сделать кнопку "сортировать по алфавиту", но будем обсуждать, как реализовать сортировку, когда список объектов для сортировки уже есть).</p>\n<p>Кроме того, мы не будем специально готовиться к ЕГЭ или поступлению в вузы. Тем не менее, задачи части C ЕГЭ по информатике — это фактически довольно простые олимпиадные задачи, поэтому если вы хорошо решаете олимпиадные задачи, то проблем с ЕГЭ у вас быть не должно.</p>\n\n<h3>Вы действительно будете учить?</h3>\n<p>И да, и нет. Формат заочного курса подразумевает, что существенную часть материала вы будете изучать сами. Я буду скорее направлять вас, советуя, где можно посмотреть тот или иной вопрос, на каких задачах отладить навыки, а также буду довольно активно комментировать ваши программы. Кроме того, вы всегда можете со мной связаться (контакты на главной странице курса) и задать любой вопрос.</p>\n\n<h3>Какой язык программирования?</h3>\n<p>Сложный вопрос, точнее вопрос с длинным ответом.</p>\n<p>Если вы только еще начинаете программировать, то я рекомендую использовать Python 3. Теоретические материалы для начинающих я буду подбирать именно по Python.</p>\n<p>Еще один популярный вариант — C++, но я настоятельно не рекомендую его выбирать, если вы только начинаете учиться программировать. Если же вы где-то уже научились неплохо писать на C++ (контрольный вопрос: какой тип данных вы используете для работы со строками и насколько это для вас сложно), то можете писать на C++. Теории по C++ на начальных уровнях нет, но если вы его где-то уже изучили, то она вам не нужна :) Если же вы неуверенно знаете темы уровня 1, то лучше учите питон по материалам на сайте.</p>\n<p>Довольно популярный вариант — Паскаль. Раньше я его рекомендовал, но в современном мире единственная причина учить паскаль — если вас в школе учат на паскале, вы уже неплохо его знаете, и не хотите распыляться на два языка. На самом деле, даже в этом случае я рекомендую вам изучить питон и заниматься в этом курсе на питоне, но в принципе, если хотите, то можете заниматься и на паскале. Теории по паскалю на сайте нет, но если вы его изучаете в школе и неплохо его знаете, то теория вам не нужна :) Если же вы неуверенно знаете темы уровня 1, то лучше учите питон по материалам на сайте.</p>\n<p>Но в целом я не настаиваю на том или ином выборе языка. Вы можете заниматься на любом языке из тех, которые поддерживается этим сайтом (только еще раз хорошо взвесьте все плюсы и минусы); правда, я сам лучше всего знаю паскаль, питон и c++, поэтому по другим языкам моя помощь вам будет ограничена . Ну и теории по другим языкам на сайте нет.</p>\n<p>Если у вас возникают вопросы, то свяжитесь со мной.</p>\n\n<h3>Что от меня требуется для занятий?</h3>\n<p>От вас требуется, в первую очередь, желание заниматься. Я не ваш школьный учитель, не ваш родитель, я не могу чего-то требовать от вас; ваше присутствие здесь — дело добровольное. Я не буду вас торопить, или ругать вас, если вы ничего не делаете неделями. Но при этом понимайте, что каких-либо результатов можно добиться только регулярными занятиями; если вы хотите конкретных цифр по тому, сколько времени надо выделить, то я бы считал, что как минимум два раза в неделю часа по 2-3 выделить надо, а лучше больше. (Для школьников, которые ходят ко мне на очные занятия, я рекомендую, в добавок в 2-3 часовому очному занятию, еще примерно столько же заниматься дома.) Но <b>следите за этим сами</b>, я не буду стоять у вас над душой. (Родителям и учителям: если вы хотите контролировать успехи ваших детей, см. отдельный документ по ссылке с главной страницы курса, и/или напишите мне.)</p>\n<p>Тот же принцип с моей стороны относится и к остальным вопросам: я лишь советую вам что-то, но не могу требовать. Если вы хотите выбрать определенный язык программирования вопреки моим рекомендациям — ну хорошо; и т.п.</p>\n<p>Но при этом учтите, что не только ваше участие здесь — дело добровольное, но и моя вам помощь — это тоже дело добровольное. Естественно, я с большей радостью буду помогать школьнику, который активно занимается, чем школьнику, который что-то пытается делать раз в месяц, и т.п.</p>\n\n<h3>А какие изначальные знания требуются? И каких классов могут быть школьники?</h3>\n<p>По программированию — от никаких и выше. Вообще, заочный формат позволяет реализовать почти индивидуальное обучение (т.е. я готов каждому школьнику выдавать личные задания), поэтому я готов принимать школьников, начиная от тех, кто ничего не умеет, и до школьников существенно более высокого уровня.</p>\n<p>Важными являются предварительные знания по математике. Опыт показывает, что чем сильнее математическая подготовка у школьника, тем он лучше занимается программированием. Поэтому если вы участвуете (пусть и на невысоком уровне) в математических олимпиадах — это вам плюс.</p>\n<p>Я ожидаю здесь видеть школьников от 7 и до 11 класса. Если школьник сильный (участвует в олимпиадах или конкурсах по математике, или как минимум весьма хорошо знает школьную программу), то можно и 5-6 классы. Для сильных школьников, чем раньше начать заниматься программированием, тем лучше.</p>\n\n<h3>Что надо сделать, чтобы начать заниматься?</h3>\n<p>Прочитайте документ "Инструкция для тех, кто здесь в первый раз" (ссылка на главной странице курса) и сделайте то, что там написано.</p>\n\n<h3>Когда можно начать заниматься? Когда "следующий набор"?</h3>\n<p>К курсу можно присоединится в любое время. Все равно занимающиеся школьники имеют довольно разный уровень подготовки, поэтому никакой единой программы типа "на этой неделе проходим то-то, на следующей то-то, а если вы пропустили или слишком поздно узнали о курсе, то ждите следующей группы или следующего года" нет.</p>\n<p>Единственное — во время праздников или летом у меня может быть ограничен доступ к интернету, поэтому я могу не так быстро отвечать на ваши письма, смотреть ваши решения и т.д.</p>\n<p>То же относится и к очным занятиям, можно присоединиться на любом занятии. Только проверьте, нет ли на главной странице курса объявления об отмене очередного занятия (например, из-за праздников); кроме того, летом занятий нет. На всякий случай можете мне заранее написать и уточнить, когда проходят занятия.</p>\n\n<h3><i>— И как думаешь, Василич? Будет от этой работы толк?</i></h3>\n<p><i>— А вот поработаешь, Петр Николаич, увидишь!</i><br>\n(Лев Успенский. Сопка «Камянистка», или торжество науки.)</p>\n<p>Конечно, я не гарантирую, что стоит начать заниматься, и вы сразу достигнете высоких результатов. Это зависит от многого, в том числе то того, что за пределами моего влияния — в первую очередь, математического образования, общей математической культуры, да и одаренности школьника; а также от трудолюбия и желания заниматься. Но думаю, что для большинства школьников, имеющих нужный склад мышления, эти занятия будут полезны.</p>\n\n<h3>А кто вообще вы такой?</h3>\n<p>Я — Петр Андреевич Калинин, к.ф.-м.н., старший разработчик компании Яндекс, выпускник ВШОПФ ННГУ. Я в свое время активно участвовал в различных олимпиадах: бронзовый призер международной олимпиады школьников по информатике (IOI) 2001 года, золотой призер IOI 2002 года; в составе команды ННГУ дважды участник финала чемпионата мира по командному программированию ACM (ACM ICPC). Я много лет езжу преподавателем в Летнюю компьютерную школу, крупнейшую российскую летнюю школу по алгоритмическому программированию; я постоянный член жюри Нижегородской городской олимпиады школьников по программированию (последние годы — председатель жюри). С 2017 по 2019 год я преподавал в Школе анализа данных Яндекса. Я ученик В.Д. Лелюха.</p>\n\n<p>В том или ином виде я учу школьников программированию с тех пор, как сам окончил школу в 2002 году (я ездил преподавателем в различные летние школы и т.п.); этот курс существует с 2013 года. Среди моих учеников — ряд участников и один победитель заключительного этапа Всероссийской олимпиады школьников по информатике (не считая моего брата Николая, в обучении которого я тоже принимал не последнее участие и который является абсолютным победителем заключительного этапа 2013 года и дважды — в 2013 и 2014 годах — золотым призером международной олимпиады школьников по информатике).</p>\n\n<p>Команды школьников под моим руководством регулярно участвуют в Нижегородской и Всероссийской командных олимпиада школьников по программированию. На большинстве прошедших к данному моменту Нижегородских командных олимпиадах абсолютное первое место занимала моя команда; на Всероссийской командной олимпиаде мои команды регулярно становятся призерами, нередко — медалистами, а два раза — занимали абсолютное первое место.</p>\n\n<p>Вы всегда можете связаться со мной, контактные данные указаны на главной странице курса.</p>\n\n<h3>А что за сайт informatics.mccme.ru?</h3>\n<p>Informatics.mccme.ru — это сайт дистанционной подготовки по информатике, организованный Московским центром непрерывного математического образования (МЦНМО) и Московским институтом открытого образования (МИОО); он очень удобен для организации курсов подобных этому, и, как вы можете видеть на главной странице сайта, реально широко используется, но в первую очередь для организации очных занятий. Я не имею непосредственного отношения к этому сайту (хотя и знаком с людьми, которые его создали и поддерживают).</p>\n\n<p>Этот курс строится на базе материалов с informatics и использует его в качестве тестирующей системы (а раньше вообще курс существовал только на informatics). Местами еще могли остаться ссылки на информатикс, если обнаруживаете такую, пишите мне.</p></div>', 'title': 'FAQ для школьников', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_6', 'order': 6, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_7', 'order': 7, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><div style="text-align:center;"><font size="+2">Занятия алгоритмическим программированием для студентов, выпускников вузов и вообще всех желающих</font></div>\n\n<h3>Что это за курс?</h3>\n<p>Это курс по алгоритмическому программированию (алгоритмы, структуры данных и т.д.)</p>\n\n<p>Он в первую очередь рассчитан на школьников и в качестве подготовки к школьным олимпиадами (и многие материалы в курсе написаны именно как для школьников), но также в курсе могут заочно заниматься (и реально занимаются) вообще все желающие: студенты, выпускники вузов и т.д. Занятия для нижегородских школьников бесплатные, для всех остальных — платные.</p>\n\n<p>Эта страничка — она как раз для студентов, выпускников и т.д., а не для школьников. Для школьников есть <a href="/material/module-20927_5" onclick="window.goto(\'/material/module-20927_5\')();return false;">отдельная страничка</a>.</p>\n\n<h3>Чему тут учат?</h3>\n<p>Основное направление — это алгоритмическое программирование. Начиная с основ программирования, и далее в алгоритмы и структуры данных. Это то, что по-английски называется Computer Science.</p>\n\n<h3>Чему тут НЕ учат?</h3>\n<p>Мы не занимаемся "техническими" вопросами:</p>\n<ul>\n<li>Созданием пользовательских интерфейсов, кнопочек, окошек и т.д.</li>\n<li>Программированием под конкретные платформы: созданием web-приложений, программированием под Android, iOS и т.п.</li>\n<li>Использованием различных фреймворков, библиотек и т.д.</li>\n</ul>\n<p>Мы будем изучать алгоритмы, которые лежат в основе многих таких программ (мы не будем обсуждать, как сделать кнопку "сортировать по алфавиту", но будем обсуждать, как реализовать сортировку, когда список объектов для сортировки уже есть).</p>\n\n<h3>Вы действительно будете учить?</h3>\n<p>И да, и нет. Формат заочного курса подразумевает, что существенную часть материала вы будете изучать сами. Я буду скорее направлять вас, советуя, где можно посмотреть тот или иной вопрос, на каких задачах отладить навыки, а также буду довольно активно комментировать ваши программы. Кроме того, вы всегда можете со мной связаться (контакты на главной странице курса) и задать любой вопрос.</p>\n\n<h3>Какой язык программирования?</h3>\n<p>Вообще говоря, какой хотите, из тех, что позволяют писать консольные приложения и поддерживаются этим сайтом. Это C++, Java, Python, C#, PHP, Ruby, Perl, Pascal, Basic, даже 1С. </p>\n\n<p>При этом, если вы еще не знаете никакого языка программирования, то я рекомендую Python. На страничке курса есть материалы для начинающих по питону. Если вы знаете какой-то из перечисленных в предыдущем абзаце языков, то можете использовать его; но вообще все продвинутые темы не зависят от языка.</p>\n\n<p>Лично я лучше всего знаю C++, питон и паскаль; по этим языкам я смогу вам достаточно подробно помогать. По другим языкам я не смогу вам подсказывать по различным тонкостям языка, хотя, как показывает опыт, для алгоритмов это не очень существенно.</p>\n\n<h3>А какие изначальные знания требуются?</h3>\n<p>По программированию — от никаких и выше. Вообще, заочный формат позволяет реализовать почти индивидуальное обучение (т.е. каждый участник курса занимается в своем ритме и режиме), поэтому я ожидаю здесь людей с широким спектром начальных знаний: от студентов младших курсов, только начинающих программировать, до уже профессиональных программистов, желающих улучшить свои знания в области алгоритмов.</p>\n\n<h3>Что надо сделать, чтобы начать заниматься?</h3>\n<ul>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (для этого вас попросят еще зарегистрироваться на сайте informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, где вы учитесь/работаете. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля".</li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты в разделе "О курсе" на главной странице курса.</li>\n<li>Дождитесь ответа и дальнейших инструкций от меня.\n</li>\n</ul>\n<p></p>\n\n<h3>Когда можно начать заниматься? Когда "следующий набор"?</h3>\n<p>К курсу можно присоединится в любое время. Все равно занимающиеся имеют довольно разный уровень подготовки, поэтому никакой единой программы типа "на этой неделе проходим то-то, на следующей то-то, а если вы пропустили или слишком поздно узнали о курсе, то ждите следующей группы или следующего года" нет.</p>\n<p>Единственное — во время праздников или летом у меня может быть ограничен доступ к интернету, поэтому я могу не так быстро отвечать на ваши письма, смотреть ваши решения и т.д.</p>\n\n<h3>Занятия только заочные?</h3>\n<p>Да, очных занятий для не-школьников нет. А если бы и были, то стоили бы намного дороже.</p>\n\n<h3>А кто вообще вы такой?</h3>\n<p>Я — Петр Андреевич Калинин, к.ф.-м.н., старший разработчик компании Яндекс, выпускник ВШОПФ ННГУ. Я в свое время активно участвовал в различных олимпиадах: бронзовый призер международной олимпиады школьников по информатике (IOI) 2001 года, золотой призер IOI 2002 года; в составе команды ННГУ дважды участник финала чемпионата мира по командному программированию ACM (ACM ICPC). С 2017 по 2019 год я преподавал в Школе анализа данных Яндекса. Я ученик В.Д. Лелюха.</p>\n\n<p>В том или ином виде я учу школьников программированию с тех пор, как сам окончил школу в 2002 году (я ездил преподавателем в различные летние школы и т.п.); этот курс существует с 2013 года. Среди моих учеников — ряд участников и один победитель заключительного этапа Всероссийской олимпиады школьников по информатике (не считая моего брата Николая, в обучении которого я тоже принимал не последнее участие и который является абсолютным победителем заключительного этапа 2013 года и дважды — в 2013 и 2014 годах — золотым призером международной олимпиады школьников по информатике).</p>\n\n<p>Команды школьников под моим руководством регулярно участвуют в Нижегородской и Всероссийской командных олимпиада школьников по программированию. На большинстве прошедших к данному моменту Нижегородских командных олимпиадах абсолютное первое место занимали мои команды; на Всероссийской командной олимпиаде мои команды регулярно становятся призерами, нередко — медалистами, а два раза — занимали абсолютное первое место.</p>\n\n<p>Вы всегда можете связаться со мной, контактные данные указаны на главной странице курса.</p>\n\n<h3>А что за сайт informatics.mccme.ru?</h3>\n<p>Informatics.mccme.ru — это сайт дистанционной подготовки по информатике, организованный Московским центром непрерывного математического образования (МЦНМО) и Московским институтом открытого образования (МИОО); он очень удобен для организации курсов подобных этому, и, как вы можете видеть на главной странице сайта, реально широко используется, но в первую очередь для организации очных занятий. Я не имею непосредственного отношения к этому сайту (хотя и знаком с людьми, которые его создали и поддерживают).</p>\n\n<p>Мой курс строится на базе материалов с informatics и использует его в качестве тестирующей системы (а раньше вообще курс существовал только на informatics). Местами еще могли остаться ссылки на информатикс, если обнаруживаете такую, пишите мне.</p></div>', 'title': 'FAQ для студентов и старше', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_8', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_9', 'order': 9, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Инструкция для тех, кто здесь в первый раз</h1>\n<h2>Для школьников</h2>\nЕсли вы хотите начать заниматься в этом курсе, то сделайте следующее:\n<ol>\n<li>Во-первых, можно просто придти на очное занятие (в ННГУ для всех желающих, в лицее 40 для лицеистов, информация о занятиях на страничке курса). Но можно начать (и продолжать) заниматься и дома, не дожидаясь очного занятия, можно и вообще на очные занятия не ходить. Все инструкции ниже идут как раз для случая, если вы хотите начать заниматься из дома.</li>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (вас попросят еще зарегистрироваться на informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, школу, класс, город. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля"; если вы участвовали в каких-либо олимпиадах по математике или программированию, укажите это. (Это не значит, что здесь будет какой-то отбор, я готов принять в курс всех желающих. Но я просто хочу заранее знать, какой у вас уже есть опыт.) </li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты разделе "О курсе".</li>\n<li>Далее:\n<ul>\n<li>Если вы — начинающий, т.е. не знаете никакой язык программирования на уровне, позволяющем вам уверенно писать простые программы, то начинайте с <a href="/material/1" onclick="window.goto(\'/material/1\')();return false;">уровня 1</a>. Там последовательно разбираются различные стороны языка программирования — начните их последовательно проходить. Вам надо будет выбрать, на каком языке программирования работать, я советую начинающим питон.</li>\n<li>Если вы какие-то программы писать умеете, но не очень уверенно, то выберите на уровнях <a href="/material/1%D0%90" onclick="window.goto(\'/material/1%D0%90\')();return false;">1А</a> или <a href="/material/1%D0%91" onclick="window.goto(\'/material/1%D0%91\')();return false;">1Б</a> первую тему, которую не очень уверенно знаете, и начинайте с нее.</li>\n<li>Если вы на выбранном вами языке программирования можете достаточно уверенно писать простые программы, то начните с темы "вещественные числа" на <a href="/material/1%D0%91" onclick="window.goto(\'/material/1%D0%91\')();return false;">уровне 1Б</a>, и после этого переходите к уровню 1В и далее. Вполне возможно, что эти задачи вам покажутся простыми, и вы их очень быстро решите, но, возможно, над некоторыми вам придется подумать, а заодно я посмотрю на ваш стиль программирования и на разного рода мелкие моменты, которые вы можете не знать, пусть даже и хорошо пишите программы. (Обратите внимание, что там не надо решать все задачи для перехода на следующие уровни.) Перед тем, как начинать решать задачи, прочитайте в разделе "О курсе" тексты "Работа с сайтом..." и "Начало работы с Free pascal" (если вы пишите на паскале). Многое вам там будет знакомо, но я уверен, что что-то найдете и новое.</li>\n<li>Если вы — уже очень сильно продолжающий, т.е. умеете уверенно писать простые задачи (и, скорее всего, вы уже участник региональных олимпиад), то напишите мне и ждите инструкций.</li>\n</ul>\n</li></ol>\n\n<h2>Для студентов и старше</h2>\n<ul>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (для этого вас попросят еще зарегистрироваться на сайте informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, где вы учитесь/работаете. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля".</li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты в разделе "О курсе" на главной странице курса.</li>\n<li>Дождитесь ответа и дальнейших инструкций от меня.\n</li>\n</ul></div>', 'title': '\nИнструкция для тех, кто здесь в первый раз (или "Что надо сделать, чтобы начать заниматься?")', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_10', 'order': 10, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>Про то, как тут заниматься</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_11', 'order': 11, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Работа с сайтом</h2>\n<p>Основное, что вы будете делать на наших занятиях — это решать задачи. Большинство задач будут требовать написания программы, которая считывает (с клавиатуры или из файла) некоторые данные, по ним вычисляет новые данные, и результат выводит на экран или сохраняет в файл.</p>\n<p>Написанную вами программу вы можете (и должны) отправить на проверку. Этот сайт предоставляет возможность автоматической проверки ваших программ — вы сразу (в течение максимум одной-двух минут) получаете результат проверки: работает ваша программа корректно или нет. Кроме того, я буду видеть все ваши попытки, которые вы отправляете на сайт, и смогу их комментировать, писать замечания и т.д., а вы сможете эти комментарии видеть и по ним улучшать свои программы.</p>\n\n<h3>Пример задачи</h3>\n<p>Зайдите на уровень 1А (внутри уровня 1). Там есть ссылка "Задачи на арифметические операции". Зайдите туда. Вы увидите список задач: "Дележ яблок - 1", "Дележ яблок - 2", и т.д., до "Разность времен". Это и есть набор задач (коротко говорят "контест"), которые вам предлагается прорешать для закрепления знаний по первой теме курса — арифметическим операциям. \n</p><p>Все названия задач — ссылки, по ним открывается собственно задача. Откройте задачу "Дележ яблок - 1". Вы видите ее условие: "N школьников делят K яблок поровну, неделящийся остаток остается в корзинке. Сколько яблок достанется каждому школьнику? Программа получает на вход числа N и K и должна вывести искомое количество яблок." Ниже идет пример: при вводе данных "3 14" программа должна вывести "4".</p>\n<p>Условие задачи четко описывает, что должна делать ваша программа: для любых значений N и K она должна вычислить и вывести ответ на задачу. В более серьезных задачах в условии всегда указываются ограничения на допустимые N и K, но в задачах для начинающих на этом сайте считается, что N и K "разумные" (в частности, помещаются в тип данных integer в паскале); в "разумность" в данном случае входит и то, что оба числа положительны.</p>\n<p>Пример нужен только для проверки того, что вы верно поняли условие, формат входных данных, и смогли проверить программу на простейшем тесте. Тем не менее, ваша программа должна работать не только на тесте из примера, но и на других допустимых тестах.</p>\n\n<h3>Написание решения</h3>\nДанная задача решается достаточно легко. Нам надо, конечно, завести две переменные, N и K, считать их с клавиатуры, и вывести неполное частное от деления K на N (обратите внимание, именно K на N, а не N на K!). Программа будет выглядеть так:\n<table>\n<tbody><tr><th>Паскаль</th><th>Питон</th></tr>\n<tr><td>\n<pre>{$mode delphi}\nvar n,k:integer;\nbegin\nread(n,k);\nwriteln(k div n);\nend.</pre>\n</td><td>\n<pre>n = int(input())\nk = int(input())\nprint(k // n)</pre>\n</td></tr></tbody></table>\n\nОбратите внимание на следующие особенности (в вашем учебнике может быть написано не так — надо делать так, как написано тут, а не в учебнике. Возможно, чего-то из описанного здесь вы не поймете — тогда просто пропускайте этот пункт). Часть из этих особенностей относятся только к паскалю, часть — к любому языку программирования.\n<ul>\n<li>(паскаль) Написано <code>{$mode delphi}</code>. Пока вы не знаете, какие разные режимы компилятора бывают, всегда пишите эту конструкцию. Потом, когда узнаете, сможете выбирать, какой режим компилятора вам нужен.</li>\n<li>(паскаль) Не используется конструкция <code>program ...;</code>. В современном программировании она не нужна вообще.</li>\n<li>(паскаль) Вся программа пишется маленькими буквами. Поскольку в Pascal все равно, использовать маленькие или заглавные буквы, то сейчас принято использовать маленькие.</li>\n<li>Мы не выводим никаких "приглашений" типа "введите N". В условии задачи четко написано, что именно наша программа должна выводить на экран, и там ничего не сказано про то, что надо выводить приглашения. Поэтому любой лишний вывод на экран будет рассмотрен как нарушение формата вывода.</li>\n<li>Нет никаких "проверок на дурака", например, нет проверки "а вдруг N=0?", или "а вдруг ввели не число?". Аналогично предыдущему, это в наших задачах не требуется. В более серьезных задачах в условии будут стоять ограничения на допустимые значения N, и никто не будет тестировать вашу программу с N, не удовлетворяющим этим ограничениям. В этой задаче считается, что N&gt;0 всегда.</li>\n<li>(паскаль) Мы не делаем <code>clrsrc;</code> в начале программы — это не требуется. И пользователь, и тестирующая система способны отличить вывод этой программы от того, что было выведено на экран раньше.</li>\n<li>Аналогично, мы не ставим в конце программы пустой <code>readln;</code> или <code>readkey;</code>, или <code>input()</code> в питоне, или <code>getch();</code> в c++ или другую задержку работы. Это тоже не требуется; информация, выведенная на экран, все равно сохраняется и ее все равно можно посмотреть.</li>\n<li>Мы посчитали и сразу вывели ответ, не сохраняя его в промежуточную переменную. Можно было сохранить:\n<pre>// паскаль\nans:=k div n;\nwriteln(ans);\n// питон\nans = k / n\nprint(ans)\n</pre>\nВ этой простой программе проще вывести сразу, но если выражение будет сложнее, то можно и сохранить.</li>\n</ul>\n<p>Сохраните эту программу в какой-нибудь файл. Запомните как имя файла, так и ту директорию (папку), куда вы сохранили файл (в free pascal она отображается в нижней части диалога сохранения файла).</p>\n\n<p>Теперь протестируйте программу. Запустите ее и повводите разные тесты.</p>\n\n<p>Введите для начала тест из примера: "3 14" и убедитесь, что она вывела 4.</p>\n\n<p>В этой задаче на каждый тест ответ однозначно определен (например, на пример из условия ответ может быть только 4). Бывают задачи, когда на каждый тест может быть несколько правильных вариантов ответа, в таких задачах в условии обычно написано "если есть несколько решений, выведите любое" или присутствует какая-нибудь подобная фраза. В таком случае ваша программа не обязана выдавать ответ, точно совпадающий с тем, что указан в примере — достаточно, чтобы он был одним из правильных. Аналогично, в дальнейшем, при тестировании вашей программы на сайте (см. ниже) по каждому тесту будет допускаться любой из правильный ответов.</p>\n\n<p>Придумайте еще несколько примеров к этой задаче. Постарайтесь, чтобы они были разнообразными: чтобы были разные N, K, и разные ответы. Например, введите "5 25" и проверьте, что ответ 5. Придумайте сами еще несколько примеров. Важно: прежде чем вводить каждый пример в программу, сначала в уме вычислите ответ, и только потом запустите программу и проверьте, что она вывела именно то, что вы и ожидали. Старайтесь всегда знать ответ на свой пример ДО запуска программы.</p>\n\n<p>Если программа написана правильно, то она правильно отработает на ваших тестах. Тогда ее можно сдавать на проверку на сайт (говорят "сдать/послать на проверку в тестирующую систему" или просто "сдать в систему").</p>\n\n<h3>Отправка на проверку</h3>\n<p>Вернитесь на страницу с условием задачи. Ниже условия есть раздел "Отправить решение" (он есть только если вы зарегистрированы на сайте и залогинены). Нажмите кнопку "Выбор файла" и выберите файл с вашим решением. Убедитесь, что вы выбираете файл .pas/.py (с исходным кодом), а не .o или .exe (уже скомпилированную программу)! Убедитесь, что в выпадающем списке рядом выбран правильный язык (в частности, если вы пишете на PascalABC, то надо его выбрать вручную), и нажмите кнопку "Отправить".</p>\n\n<p>Ваша программа отсылается на сервер, который ее компилирует и проверяет путем запуска на нескольких тестовых примерах. Эти тестовые примеры вам неизвестны, но в каждой конкретной задаче всегда одинаковы (т.е. если вы будете посылать несколько раз, то каждый раз тестовые примеры будут одни и те же). В данном случае тестирующая система запустит вашу программу несколько раз, каждый раз сымитирует ввод с клавиатуры значений N и K из очередного тестового примера, и проверит, что ваша программа выводит правильный ответ.</p>\n\n<p>Под формой для отправки находится таблица, перечисляющая все ваши попытки (также говорят "посылки") по этой задаче. Изначально там, конечно, никакой таблицу нет. После того, как вы отправили ваше решение, оно появится в этой таблице (через некоторое время — примерно через минуту). В колонке "Статус" отображается результат тестирования вашей программы. Сразу после того, как вы отправили программу, вы можете увидеть там "Компилирование" или "Тестирование", что обозначает, что ваша задача тестируется. Таблица обновляется автоматически, дождитесь, пока в колонке "Статус" не появится окончательный результат проверки.</p>\n\n<p>Основные результаты проверки, которые вы можете увидеть:\n</p><ul>\n<li>OK — ваша программа правильно прошла все тесты, ура!</li>\n<li>Ошибка компиляции — ваша программа не скомпилировалась</li>\n<li>Частичное решение — ваша программа прошла не все тесты (может быть, даже не прошла ни одного). Значит, ваша программа работает не совсем верно (или совсем неверно), постарайтесь найти ошибки.</li>\n<li>Бывают еще статусы "Зачтено" и "Проигнорировано", но они не ставятся автоматически, поэтому про них ниже.</li>\n</ul>\n\n<p>Справа в таблице есть колонка ссылок "Подробнее". Если вы нажмете на такую ссылку, то откроется окошко с подробной информацией о посылке. Во-первых, там будет полный код вашей программы, поэтому вы всегда сможете проверить, отправили ли вы именно то, что хотели; если вы решали задачи из школы, то придя домой, вы сможете посмотреть коды всех ваших программ, и т.д.</p>\n\n<p>Во-вторых, в открывшемся окне есть закладка "Протокол", где отображается протокол тестирования вашей программы. Если ваша программа не скомпилировалась (статус "Ошибка компиляции"), то там будет протокол компиляции: будут указаны ошибки, найденные в программе. Если же ваша программа скомпилировалась, то там будет протокол тестирования: по каждому тесту будет приведена информация о том, прошел этот тест (OK) или нет. В задаче "Дележ яблок - 1" всего 6 тестов, поэтому в таблице должно быть 6 строк. Если ваша посылка получила статус "ОК", то все 6 строк будут ОК; иначе какие-то тесты будут иметь другой статус (из названия статуса обычно понятно, что это значит).</p>\n\n<p>Таким образом, вы можете видеть, какие (по номерам) тесты у вас пройдены, а какие нет. Но вы не можете узнать, какой именно это тест (в нашей задаче — какие именно там N и K). Это сделано для того, чтобы вы учились сами тестировать свое решение и сами находить примеры, на которых оно не работает, а не рассматривали тестирующую систему как волшебный ящик, выдающий вам примеры, на которых ваша программа не работает. Поэтому если ваша программа не работает, то ищите сами примеры, на которых она ошибается. Если вы не можете их найти, то напишите мне, попробуем разобраться вместе. В крайнем случае у меня есть доступ ко всем тестовым данным, поэтому если я не смогу найти ошибку просто посмотрев код вашей программы, я смогу посмотреть, что там за тест, на котором ваша программа не работает.</p>\n\n<p>Но вообще, старайтесь проверять задачу до того, как ее отправлять в систему (и этому мы будем отдельно учиться). Рассматривайте неудачные попытки как конкретную неудачу, и старайтесь делать как можно меньше неудачных попыток. Вообще, на многих олимпиадах у вас будет только одна возможность сдать задачу, и если она не пройдет какие-то тесты, то возможности исправиться у вас уже не будет!</p>\n\n<h3>Засчитывание и игнорирование решений, комментарии к решению</h3>\n<p>Я буду просматривать все ваши решения: при наличии времени — все вообще посылки, в том числе и неуспешные, если же у меня времени будет мало, а посылок много — то только посылки со статусом ОК.</p>\n\n<p>В успешных посылках я буду просматривать ваш код на предмет следующего:\n</p><ul>\n<li>Во-первых, я буду смотреть, нет ли в коде каких-то ошибок, которые смогли миновать тесты тестирующей системы. Бывает так, что в коде какая-нибудь совсем неожиданная ошибка, и тестирующая система ее может пропустить (хотя тесты в тестирующей системе обычно подготовлены хорошо, и как правило все ошибки в коде проявляются при тестировании) — я буду смотреть, нет ли у вас таких ошибок.</li>\n<li>Также я буду смотреть, нет ли у меня каких-либо замечаний по коду, пусть и не являющихся ошибками, но являющихся общими пожеланиями. Например, может быть, что-то можно сделать проще, или что-то надо сделать по-другому, и т.д.</li>\n</ul>\n<p>Если к вашей программе у меня будут какие-либо замечания или комментарии, я их напишу, и вы сможете их увидеть. Во-первых, они появятся на сайте в правой колонке в разделе "Комментарии"; во-вторых, в каждой посылке, в окошке, открываемом по ссылке "подробнее", есть специальная закладка "комментарии". Соответственно, как только я прокомментирую вашу посылку, вы увидите комментарий. Обычно я стараюсь просматривать все посылки в течение суток, хотя иногда бывают и бОльшие задержки, до нескольких дней.</p>\n\n<p>Помимо собственно написания комментария, я по каждой вашей посылке принимаю решение — либо я принимаю это решение (пусть и с небольшими замечаниями), либо я потребую от вас это решение переписать с учетом моих замечаний. В первом случае я меняю статус посылки на "Зачтено" (т.е. вы будете видеть именно "Зачтено" вместо "ОК" в таблице с вашими посылками), во втором случае я меняю статус на "Проигнорировано". Соответственно, в первом случае просто примите к сведению замечания, которые я написал (а бывает так, что я и никаких замечаний не пишу), хотя можете и переписать решение, если хотите. Во втором случае обязательно перепишите решение с учетом этих замечаний.</p>\n\n<p>В сводной таблице решения "ОК" (т.е. которые я еще не посмотрел) отображаются с желтым фоном, решения "Зачтено" (т.е. которые я принял) — с зеленым фоном, проигнорированные решения не учитываются в общем количестве решенных вами задач, просто соответствующая задача в сводной таблице отображаются с красным фоном.</p>\n\n<p>Я буду стараться также писать комментарии по вашим неуспешным посылкам — указывать на ошибку или советовать, где ее поискать, и т.п. Я, конечно, не всегда буду писать их сразу как увижу вашу попытку, и не всегда буду полностью сообщать о найденной ошибке — ведь обычно вам полезно будет все-таки найти ошибку более-менее самостоятельно, я постараюсь вам давать наводящие советы (но, конечно, это зависит от ошибки). В общем, если вы пытались сделать задачу, но она не проходит тесты, то возможно в течение суток я вам напишу совет в комментарии к вашей посылке.</p>\n\n<p>Иногда я могу не успевать просмотреть все ваши неуспешные посылки, или не пишу комментарий по каким-то еще причинам. В таком случае, если вы хотите получить комментарий по какой-нибудь из них, просто напишите мне.</p>\n\n<h3>Хорошие решения</h3>\n<p>После того, как я засчитываю вам решение (ставлю статус "Зачтено"), у вас появляется доступ к "хорошим решения" по соответствующей задаче — на странице задачи, над формой для отправки решения, появляется ссылка на "хорошие решения".</p>\n\n<p>"Хорошие решения" — это несколько (до 5 штук) решений, которые сдавали другие ученики курса, и которые, на мой взгляд, написаны достаточно хорошо и могут считаться образцом решения этой задачи. Смотрите их, особенно по тем задачам, где я вам зачел решение с какими-либо комментариями (но вообще полезно смотреть "хорошие решения" и по всем зачтенным задачам вообще). Сравните "хорошие решения" с вашим решением, возможно, вы увидите, что что-то можно сделать проще, или вообще найдете другие полезные идеи.</p>\n\n<p>Я стараюсь в "хороших решениях" по возможности поддерживать баланс разных языков (т.е. как правило среди "хороших решений" есть решения на разных языках). Но смотрите и решения на вашем языке, и на других языках, даже которых вы не знаете — как правило, понять алгоритм можно даже на языках, которых вы вообще не знаете. С другой стороны, для вашего языка в "хороших решениях" вы можете найти и какие-нибудь интересные чисто языковые тонкости и приёмы.</p>\n\n<p>Кроме того, нередко в "хороших решениях" я показываю разные подходы к решению задачи, нередко там встречаются вообще разные алгоритмы. Если вы видите, что "хорошее решение" сильно отличается от вашего, полезно разобраться, как оно вообще работает.</p>\n\n<p>При этом понимайте, что на самом деле по многим задачам на сайте сданы уже сотни решений, и на самом деле "хороших" из них десятки, если не больше. Вы видите максимум пять из них, просто потому, что смотреть десятки более-менее одинаковых решений смысла нет. Вы увидите какие-то пять из них, которым повезло, что я их отметил как "хорошие", но это "везение" часто определяется случайностью, ну и указанными выше принципами про разнообразие языков и подходов. То есть вы видите не пять самых лучших решений, а пять случайных из числа достаточно хороших.</p>\n\n<p>Поэтому не надо считать, что если ваше личное решение не попало в "хорошие", то оно хуже "хороших". Оно может быть столь же хорошо, или даже чем-то лучше "хороших", просто ему не повезло. Если вы видите, что "хорошие" решения написаны столь же чисто и понятно, как ваше — значит, ваше тоже могло бы быть "хорошим". И наоборот, если ваше решение попало в "хорошие", это не обозначает, что оно намного лучше всех остальных :) По той же причине авторы "хороших решений" не подписаны.</p>\n\n<p>С другой стороны, если вы посмотрели "хорошие решения", и считаете, что ваше решение заметно лучше всех "хороших", напишите мне, может быть, я и ваше решение добавлю в "хорошие". (Хотя обычно я назначаю решение "хорошим" одновременно с тем, как я его засчитываю, поэтому если ваше решение действительно заметно лучше других хороших, как правило, я его сделаю "хорошим" еще до того, как вы сможете посмотреть "хорошие решения" :) .)</p>\n\n<h3>Сводная таблица</h3>\n<p>Все ваши посылки по нашим задачам отображаются в сводных таблицах, ссылки на которые есть в меню сайта. А именно, каждая клетка в основной части этой таблицы указывает статистику посылок от конкретного школьника по конкретной задаче. Если в клетке стоит знак "+", значит, задача сдана успешно ("ОК" или "Зачтено"), если "-" — значит, человек пытался сдавать задачу, но прошел не все тесты. Число после значка (если оно есть) указывает количество неуспешных попыток (если они есть). Например:\n</p><ul>\n<li>Пустая клетка обозначает, что задача не сдавалась вообще;</li>\n<li>"+" обозначает, что задача сдана с первой попытки;</li>\n<li>обозначения "-" не бывает;</li>\n<li>"+2" обозначает, что задача сдана с третьей попытки (две неуспешные попытки и потом успешная);</li>\n<li>"-2" обозначает, что по задаче были только две неуспешные попытки и всё.</li>\n</ul><p></p>\n\n<p>Фон ячейки обозначает статус задачи относительно вердиктов "Зачтено" и "Проигнорировано":\n</p><ul>\n<li>Желтый фон — статус "ОК", т.е. я еще не смотрел эту задачу;</li>\n<li>Зеленый фон — статус "Зачтено";</li>\n<li>Красный фон — статус "Проигнорировано", при этом сама проигнорированная попытка считается неуспешной.</li>\n</ul><p></p>\n\n<p>В последних двух колонках таблицы указывается общее количество решенных задач и общее количество неуспешных ("штрафных") попыток (учитываются только те задачи, по которым в итоге была получена правильная программа, проигнорированные попытки не учитываются). Таблица отсортирована по общему количеству решенных задач, а при равном числе решенных задач — по количеству штрафных попыток.</p>\n\n<p>Еще у таблицы есть следующая особенность: в ней появляются только школьники, которые удовлетворяют сразу двум требованиям: во-первых, я их должен активировать их учетную запись, во-вторых, у школьника должна быть хотя бы одна попытка сдачи задачи. Поэтому если вы еще ничего не пытались сдавать, не удивляйтесь, что вас нет в таблице. Если же вы уже пытались что-то сдавать, а в таблице вас нет, то напишите мне — возможно, я забыл вас активировать.</p>\n\n<p>Аналогично, наборы задач (контесты) появляются в сводной таблице только когда хотя бы кто-нибудь отправит какое-нибудь решение по какой-нибудь задаче этого контеста.</p>\n\n<h3>Терминология</h3>\nВыше я уже ввел некоторую специфическую терминологию, которая используется в олимпиадном программировании, на всякий случай повторю ее тут:\n<ul>\n<li>Контест — любой набор задач, каким-то образом сгруппированный и выделенный от остальных. В пределах контеста задачи обычно занумерованы (1, 2, 3, ... или A, B, C, ... и т.п.) Это может быть отдельный тур олимпиады, или набор задач к какому-нибудь занятию или на какую-нибудь тему, и т.д. В рамках наших занятий "контестом" мы называем набор задач, доступных по каждой отдельной ссылке с главной страницы курса; слева от таких ссылок обычно значок, похожий на изображение клавиатуры. Например, "Задачи на арифметические операции" — это отдельный контест.</li>\n<li>Посылка (синонимы: попытка, сабмит) — отдельная ваша попытка сдать задачу в тестирующую систему; также программа, которую вы сдали в этой попытке.</li>\n<li>Штрафная попытка (обычно в контексте сводного рейтинга) — попытка, которая не прошла все тесты.</li>\n<li>Тест — это отдельный тестовый пример, подготовленный авторами задачи, чтобы на нем проверять ваши программы. Обычно по каждой задаче автор задачи подготавливает от 5 до 60 тестов, и программы, которые вы сдаете на проверку, проверяются по очереди на всех этих тестах. Чтобы попытка считалась успешной, надо, чтобы программа прошла все тесты, т.е. на все тесты дала правильный ответ. (На других олимпиадах могут быть другие правила.)</li>\n</ul></div>', 'title': '\nРабота с сайтом, отправка решений и просмотр моих комментариев', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_12', 'order': 12, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_13', 'order': 13, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><p>Я буду просматривать, по возможности, все ваши решения, и комментировать их тем или иным образом. Тем решениям, которые я просмотрю, я буду присваивать новый статус: \n</p><ul>\n<li>"Зачтено" — задача написана более-менее нормально, ура. На страничке просмотра кода вашей посылки (по ссылке "Подробнее") под кодом вы можете увидеть мои комментарии. Если там комментария нет, значит, задача решена весьма хорошо. Если есть комментарий, то он обычно указывает, что можно улучшить.</li>\n<li>"Проигнорировано" — мне что-то весьма не понравилось в вашем коде. На страничке просмотра кода вашей посылки (по ссылке "Подробнее") под кодом вы увидите мои комментарии, объясняющие, что именно мне не понравилось. Исправьте это и пересдайте решение.</li></ul><p></p>\n\n<p>Если вы не понимаете комментарий, спросите, я объясню подробнее.</p>\n\n<p>Посылки со статусом "Зачтено" отмечаются в таблице зеленым.</p>\n\n<p>Посылки со статусом "Проигнорировано" отмечаются в таблице синим.</p>\n\n<p>Не относитесь к "игнорам" как к издевательству над вами. Я постараюсь игнорить только те программы, которые можно довольно существенно улучшить (например, существенно сократив количество кода). Помните, что ваша цель — не только написать программу, которая пройдет все тесты, но и вообще научиться программировать. Фактически, "Проигнорировано" я ставлю тогда, когда считаю, что комментарий, который я пишу к вашей посылке, настолько важен, что вам обязательно его стоит прочитать; "игнор" — это такой способ обратить ваше внимание на комментарий.</p>\n\n<p>То, что вы сумели, пусть и не самым оптимальным образом, написать программу и сдать ее — это очень круто, но еще круче будет, если вы узнаете и поймете, как то же самое можно сделать еще проще. Считайте, что в большинстве задач написать программу, чтобы она прошла все тесты — это, грубо говоря, 70% успеха, но получить по ней "Зачтено" — это оставшиеся 30%.</p>\n\n<p>Все комментарии (в том числе и к зачтенным посылкам, и даже к неуспешным) вы также можете просмотреть в правой колонка не сайте.</p></div>', 'title': '\nПро засчитывание и игнорирование решений', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_14', 'order': 14, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_15', 'order': 15, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>О системе уровней</h1>\n<p>Весь материал в нашем курсе распределен по уровням, от самого простого до очень сложного. Уровни нумеруются последовательными числами (1, 2, 3, ...), в пределах уровня также введены подуровни, нумеруемые буквами (в уровне 1 — подуровни 1А, 1Б, 1В и 1Г, и т.п.)</p>\n\n<p>Большинство уровней имееют следующую структуру: подуровни А и Б содержат новый материал, а подуровни В и Г (последний есть не всегда) — дополнительные задачи повышенной сложности на закрепление этого материала. Иногда в уровнях В и Г могут быть особенно сложные задачи на материал существенно более ранних уровней (например, в уровне 5В может оказаться сложная задача на материал уровня 3). Иногда в уровнях В и Г выделены контесты по отдельным темам, иногда дополнительные задачи в этих уровнях идут в случайном порядке.</p>\n\n<p>Я предполагаю, что вы будете проходить подуровни последовательно, переходя к новому подуровню как правило тогда, когда вы "прошли" предыдущий подуровень. Исключение: если вы прошли какую-то тему в подуровне А или Б, и видите в подуровне В или Г контест продвинутых задач на эту же тему, то можете его порешать.</p>\n\n<p>Требования к "прохождению" каждого подуровня указаны под его заголовком. Как правило, для подуровней А и Б требуется прорешать все задачи, для уровней В и Г требуется прорешать часть (половину или треть) задач. Тем не менее это не обозначает, что оставшиеся задачи уровней В и Г решать не надо. Я рекомендую, если вы прорешали необходимый минимум задач уровней В и Г, переходить на следующий уровень, чтобы побыстрее приступить к изучению новой теории. Но при этом возвращайтесь регулярно к недорешенным задачам предыдущих уровней. Примерно можно оценивать так: когда вы переходите на уровень 4А, у вас должна быть решена половина задач уровня 3В, 3/4 задач уровня 2В и примерно 7/8 задач уровней 1В и 1Г. Аналогично, когда вы переходите на уровень 5А, у вас должна быть решена половина задач уровня 4В, а также 3/4 задач уровня 3В, 7/8 задач уровня 2В и почти все (за редким исключением особенно неприятных задач) задачи уровней 1В и 1Г. Аналогично для других уровней.</p>\n\n<p>Обратите внимание, что в уровнях В и Г задачи далеко не всегда упорядочены по сложности. Поэтому решайте их в том порядке, в каком вам удобнее!</p>\n\n</div>', 'title': '\nПро систему уровней', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_16', 'order': 16, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_17', 'order': 17, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про очные занятия для школьников</h1>\n<h2>Общая информация</h2>\n\n<p>Для школьников в течение учебного года проходят очные занятия — в лицее 40 по средам и в ННГУ им. Лобачевского по воскресеньям. На занятия в лицее 40 можно ходить только ученикам лицея 40, на занятия в ННГУ можно ходить вообще всем желающим школьникам (школьникам из Нижнего Новгорода и области, в том числе ученикам лицея 40, а также школьникам из других регионов, если вы занимаетесь у меня на курсе и по каким-то причинам оказались в Нижнем).</p>\n\n<p>На очные занятия можно приходить <b>только тем, кто решил хотя бы одну задачу в курсе</b>. Исключение — специальные занятия, про которые на сайте явно написано, что можно приходить новичкам (как правило, это второе занятие каждого семестра). Если вы опоздали на такое занятие, вы должны начать заниматься заочно; после того, как решите хотя бы одну задачу, можете приходить на очные занятия.</p>\n\n<p>В ННГУ занятия проходят <b>по воскресеньям, в 2 корпусе (пр. Гагарина, 23, к. 2), в аудиториях 110 и 114</b>. Я обычно бываю в ННГУ с 14.00 до 17.00. В это время параллельно проходят два занятия: с 14.00 до 17.00 для старших уровней (у кого уровень 3 и выше, также можно по желанию тем, у кого уровень 2В), и с 15.00 до 16.30 для начинающих. При этом начинающие тоже могут приходить раньше и оставаться до 17.00, просто до 15.00 до после 16.30 я буду больше времени уделять старшим.\n\nНа занятия в ННГУ действует обязательная запись, см. ниже. Кроме того, <b>берите с собой паспорт или свидетельство о рождении</b>, его может спросить охрана (хотя вроде никогда не спрашивают, но теоретически могут спросить). Если охранники вас не пускают, звоните мне.</p>\n\n<p>В лицее 40 занятия проходят <b>по средам в КЦ</b>. Я обычно бываю в лицее с 14.30 до 17.00, иногда чуть позже. Аналогично, можно приходить и уходить в любое время, но см. ниже про нехватку компьютеров. Если вы хотите получить зачем за спецкурс, смотрите отдельные <a href="/material/in20946" onclick="window.goto(\'/material/in20946\')();return false;">правила</a>.</p>\n\n<h2>Формат занятий</h2>\n\n<p>Очные занятия у нас проходят полностью в формате практики. У нас нет каких-либо общих лекций, я не рассказываю на занятиях новую теорию «для всех» (за исключением отдельных, специально анонсированных, занятий). Вы приходите, садитесь за компьютер, заходите на алгопрог, и продолжаете заниматься с того места, где остановились в прошлый раз — решаете задачи и/или читаете теорию. Самостоятельно. Я время от времени прохожу по классам, смотрю, кто что решает, могу что-то помогать, советовать, объяснять, но в основном вы занимаетесь самостоятельно.</p>\n\n<p>То есть вы занимаетесь так же, как если бы вы занимались из дома. Единственное отличие очных занятий от занятий из дома состоит в том, что на очных занятиях присутствую я, и вы всегда можете меня спросить о чем-либо, и как правило я достаточно быстро отвечу. (Правда, учтите, что на очных занятиях помимо вас обычно еще присутствует пара десятков школьников, у которых тоже есть свои вопросы :) ).</p>\n\n<p>Если вы на занятии добрались до новой теории — скажите мне. Возможно, я вам ее расскажу. Но, возможно, я отправлю вас читать теорию на сайте.</p>\n\n<p>В частности, поэтому расписание занятий у нас нестрогое. Вы можете опоздать на занятие, можете уйти раньше, можете пропустить часть занятий, можете, наоборот, ходить на два занятия — всё на ваше усмотрение. Конечно, чем больше вы занимаетесь, тем лучше у вас, наверное, будут результаты, но я не требую какого-то строгого посещения занятий.</p>\n\n<p><b>Занятия в ННГУ для старших уровней</b> немного отличаются по формату: мы решаем разные старые контесты, а потом обсуждаем задачи.</p>\n\n<h2>Про регистрацию на занятия и компьютеры</h2>\n\n<p>Как правило, особенно в первой половине учебного года, и особенно в ННГУ, на занятия приходят больше школьников, чем есть компьютеров. Поэтому на занятия в ННГУ надо регистрироваться, чтобы всем точно хватило компьютеров. На сайте есть <a href="/checkins">специальный раздел</a>, где надо регистрироваться на очередное занятие, там же есть подробные правила. Регистрироваться надо каждую неделю заново.</p>\n\n<p>На занятия в лицей 40 регистрации нет. Занятие в лицее 40 официально начинается в 14.30; как правило, к этому моменту свободные компьютеры еще есть. Если вы опоздали, не обижайтесь, если вам не хватило компьютеров. С другой стороны, как правило, уже в районе 15.30 компьютеры начинают освобождаться (далеко не все школьники сидят до конца занятия), поэтому если вам не хватило компьютера, можете просто подождать (например, поделав домашние задания по другим предметам).</p>\n\n<p>Универсальный способ избежать пробему нехватки компьютеров — приносить свой ноутбук. Но <a href="/material/module-16024_1" onclick="window.goto(\'/material/module-16024_1\')();return false;">см. отдельные правила про это</a>.</p></div>', 'title': '\nПро очные занятия для школьников', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_18', 'order': 18, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>Про оплату</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'pay', 'order': 19, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix">\n<h1>Стоимость и порядок оплаты занятий</h1>\n\n<h2>Для школьников из Нижегородской области</h2>\n<p>Для нижегородских школьников <b>занятия бесплатны</b>, и в обозримом будущем останутся бесплатными (т.к. мне проведение занятий оплачивает лицей 40 и ННГУ).</p>\n\n<p>Формально вы считаетесь нижегородским школьников, если учитесь в школе, находящейся в Нижегородской области, и имеете теоретическую возможность, пройдя школьный и муниципальный этапы, участвовать в Нижегородской областной олимпиаде школьников по информатике.</p>\n\n<p>Если у меня возникнут подозрения, являетесь ли вы нижегородским школьников или нет, я могу попросить вас как-то это подтвердить.</p>\n\n<p>Прочитайте, пожалуйста, отдельный текст <a href="/material/module-20927_21" onclick="window.goto(\'/material/module-20927_21\')();return false;">про бесплатность занятий для нижегородских школьников</a>.</p>\n\n<p>Вы также можете поддержать занятия, переведя мне любую сумму денег на карту Тинькофф-банка номер 5536 9137 7443 1460. Например, для перевода вы можете воспользоваться <a href="https://www.tinkoff.ru/cardtocard/">сервисом перевода с карты на карту Тинькофф-банка</a>, там по идее должно быть без комиссии, или любым другим сервисом по переводу денег с карты на карту.</p>\n\n<p><b>При этом, пожалуйста, никак не указывайте, кто именно переводит деньги, и не сообщайте мне, что вы их перевели — я не хочу знать, кто из школьников мне переводит деньги, а кто нет.</b></p>\n\n<h2>Для всех остальных</h2>\n\n<p>Занятия для всех остальных (не-нижегородских школьников, а также не-школьников) платные. Точнее, собственно все материалы в курсе бесплатные. Они же есть на сайте informatics.mccme.ru в <a href="http://informatics.mccme.ru/course/view.php?id=1135">соответствующем разделе</a>, вы можете бесплатно заниматься там. Я беру деньги за то, что я добавлю вас в сводные таблицы, буду просматривать и комментировать ваши решения, отвечать на ваши вопросы (заочно) и т.д.</p>\n\n<p>Стоимость занятий определяется следующим образом:</p>\n\n<table class="table table-striped table-condensed table-hover">\n<tbody><tr><td>Младше 9 класса</td><td>500 рублей в месяц</td></tr>\n<tr><td>9 класс</td><td>1000 рублей в месяц</td></tr>\n<tr><td>10 класс</td><td>1500 рублей в месяц</td></tr>\n<tr><td>11 класс</td><td>1500 рублей в месяц</td></tr>\n<tr><td>Не школьники (студенты и старше)</td><td>1500 рублей в месяц</td></tr>\n</tbody></table>\n\n<p>Для новых учащихся первая неделя занятий в курсе бесплатна.</p>\n\n<h3>Дополнительные правила</h3>\n<p>Стоимость занятий для школьников фиксируется на тот момент, когда я активировал вам аккаунт в конкретном учебном году, и до конца учебного года; если в дальнейшем я буду поднимать стоимость занятий, то вы продолжите заниматься по старой цене (до конца учебного года, а если будете заниматься успешно, то и на следующий год и т.д.).</p>\n\n<p>Для студентов стоимость занятий фиксируется на момент первой оплаты и пожизненно.</p>\n\n<p>Для нижегородских школьников, занимавшихся в моем курсе более-менее успешно (условно говоря, набравших рейтинг 200 или выше, но может обсуждаться индивидуально), действует пожизненная скидка 50% на занятия после того, как они закончат школу.</p>\n\n<p>Границей учебного года (для определения "успешно занимающихся школьников", а также для "перевода" в следующий класс или в статус студентов) считается 1 июля.</p>\n\n<h3>Подтверждение</h3>\n\n<p>Если вы — не-нижегородский школьник младше 11 класса (т.е. стоимость занятий для вас ниже, чем для студентов), то вам надо подвердить это. Проще всего — прислать мне ссылку на какую-нибудь официальную страничку в интернете, где указаны ваши имя, фамилия, класс и школа. Например, это могут быть результаты какой-нибудь олимпиады, конкурса или т.п.; это может быть какая-нибудь новость на сайте вашей школы и т.д. Возможно, я еще попрошу ссылку на ваш профиль в социальных сетях. Альтернативный вариант для российских школьников — вы можете взять в школе справку о том, что вы учитесь, написать на ней ваш логин на алгопроге и прислать мне фотографию. Возможны и другие варианты подтверждения — напишите мне, как вы можете подтвердить ваш класс.</p>\n\n<p>Если вы не можете подтвердить свое право на сниженную стоимость занятий, вы можете заниматься по студенческой стоимости.</p>\n\n<h3>Скидки для успешных школьников</h3>\n\n<p>Для школьников существует дополнительная акция: если вы успешно занимались в курсе, и остаетесь школьником на следующий год, то на следующий год для вас сохраняется та же стоимость обучения, которая была и в этом году. Школьник считается успешно занимавшимся, если за год он решил минимум 70 задач, не считая задач уровней 1А и 1Б.</p>\n\n<p>Например, если 8-классник успешно занимался в курсе в течение года, то когда он перейдет в 9 класс, он продолжит заниматься по той же цене. Если он и в 9 классе будет успешно заниматься, то и в 10 классе он будет заниматься по той же цене, и т.д. Если, к примеру, в 10 классе он не будет успешно заниматься, то в 11 классе стоимость занятий для него сбросится на ту стоимость, которая будет установлена для 11 классов в соответствующем году.</p>\n\n<h2>Оплата</h2>\n<p>\nОплатить занятия можно картой <a href="/payment" onclick="window.goto(\'/payment\')();return false;">на сайте</a>.</p>\n\n<h2>Возможен ли возврат денег?</h2>\n<p>Стоимость не зависит от того, насколько вы активны в курсе (если вы решаете много, то я буду на вас тратить больше времени, чем если вы решаете мало, а вы платите одну и ту же сумму). Поэтому довольно странно возвращать деньги, если вы не делали ничего. Поэтому политика такая:</p>\n<ul>\n<li>Если вы по объективным непредвиденным причинам не могли заниматься в курсе более 5 дней подряд (сломали руку и т.п.), то я вам верну деньги за весь период, когда вы не могли заниматься. Предсказуемые вещи типа поездок, сессии и т.п. сюда не считаются.</li>\n<li>Если вы по каким бы то ни было причинам не занимались более 10 дней подряд, то я вам верну половину денег за этот период.</li>\n<li>Если вы заранее предупреждаете меня о том, что не сможете заниматься более 10 дней подряд, то я могу вернуть вам деньги за этот период.</li>\n<li>Конечно, если я по каким-то причинам не мог проверять ваши решения и отвечать на ваши письма в течение более чем 5 дней подряд, то я вам верну деньги за весь этот период.</li>\n</ul>\n</div>', 'title': 'Стоимость и порядок оплаты занятий', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_20', 'order': 20, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div><a href="/payment" onclick="window.goto(\'/payment\')();return false;">Оплатить занятия</a></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_21', 'order': 21, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h3>Занятия и правда бесплатные?</h3>\n<p>Да, занятия для школьников из Нижегородской области бесплатные. (Для студентов и всех остальных занятия платные, можете не читать этот текст.) </p>\n\n<h3>Но есть какие-то требования или условия?</h3>\n<p>Я, естественно, хочу от вас чего-то попросить за то, что я с вами занимаюсь. А именно, если эти занятия вам действительно полезны, и вы собираетесь применять полученные знания на какой-нибудь олимпиаде, конкурсе или подобном мероприятии, то я прошу вас указывать меня как вашего учителя, или преподавателя кружка и т.п. Особенно это касается, конечно, ситуации, если вы будете участвовать в олимпиадах высокого уровня (ну, начиная с городской/областной).</p>\n\n<h3>Но ведь я занимаюсь и где-то еще...</h3>\n<p>Конечно. Я поэтому прошу вас сначала понять, насколько этот курс вам полезен по сравнению с другими занятиями. Если подавляющую часть своих знаний вы получили где-то еще (на уроках в школе, на другом кружке или спецкурсе, от родителей и т.п.), и ваш результат на олимпиаде будет в первую очередь результатом других занятий — то, конечно, меня не надо указывать. Если вы получали важные знания как здесь, так и на других занятиях — значит, укажите и меня, и другого преподавателя. На многих олимпиадах можно указать нескольких преподавателей, или можно отдельно указать школьного учителя и преподавателя кружка, и т.п. Если же вы все знания получили только здесь, а другие занятия вам практически не помогли — я буду благодарен, если вы укажете только меня.</p>\n\n<h3>Но школа будет против указывать кого-то постороннего...</h3>\n<p>Попробуйте объяснить вашему учителю или завучу ситуацию. Объясните, что ваши результаты будут во многом определяться именно тем, что вы занимались на этом курсе (а если это не так, и вам эти занятия не помогли, — то, см. предыдущий вопрос, и не надо меня указывать); что если бы вы здесь не занимались, то ваш результат был бы хуже. Может быть, попросите ваших родителей помочь объяснить. В крайнем случае напишите мне, я могу связаться с некоторыми школами города. Или дайте учителю или завучу мой телефон, пусть позвонят.</p>\n\n<h3>Но заявку подает школа, я не могу на нее повлиять...</h3>\n<p>На многих олимпиадах на регистрации перед началом олимпиады вы можете проверить, кто у вас указан как учитель, и исправить. Кроме того, если вы прошли на олимпиаду сравнительно высокого уровня, то можете заранее подойти к вашему учителю или завучу и попросить указать меня в заявке на следующую олимпиаду.</p>\n\n<h3>А как вас указывать?</h3>\nВ большинстве случаев достаточно указать фамилию, имя и отчество — Калинин Петр Андреевич. Если это какой-то очень официальный текст (титульный лист какого-нибудь доклада и т.п.), то можете добавить «к.ф.-м.н.» (что значит кандидат физико-математических наук), но лучше сначала уточните у кого-нибудь или у меня. Если надо указать должность и место работы, пишите «старший разработчик, Яндекс». Если надо указать мой телефон, он есть на главной страничке курса. Если надо что-то еще, то свяжитесь со мной.\n\n<h3>А еще?</h3>\n<p>Вторая вещь, о которой я вас попрошу — если вам эти занятия оказались полезными, и у вас есть друзья или знакомые, которые являются достаточно умными школьниками, хорошо знают математику, участвуют в олимпиадах, или просто интересуются программированием — расскажите им про эти занятия.</p>\n</div>', 'title': '\nО бесплатности занятий для нижегородских школьников', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_22', 'order': 22, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>И еще немного...</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_23', 'order': 23, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Для учителей и родителей</h2>\n<p>Я про это уже написал в FAQ, но на всякий случай повторю здесь. Я рассматриваю занятия ваших детей здесь как добровольные, и не собираюсь от них требовать чего-либо, заставлять и т.д. Если школьник не хочет заниматься, или не может себя заставить — я не буду от него ничего требовать. У меня банально нет никакого канала влияния на него.</p>\n\n<p>Но вы можете влиять на школьника, поэтому, если вы хотите, чтобы от занятий был какой-то результат, то следите за тем, как ваш школьник занимается. На главной странице курса есть "сводная таблица", там можно отслеживать прогресс каждого школьника. Школьник также может показать вам, какие задачи он пытался сдавать, каков был результат проверки и т.д. На главной страничке курса есть также "Таблица по неделям кто что решал", в ней указывается, кто достиг какого уровня, а также по неделям кто сколько задач решил. Цвет ячейки в "таблице уровней" обозначает, насколько хороший результат показал школьник на очередной неделе: ярко-зеленый — очень хорошо, светло-зеленый — средненько, белый — вообще ничего даже не пытался. (Таблица обновляется вручную.) Наконец, вы всегда можете связаться со мной.</p>\n\n<p>Отдельное обращение к учителям: часто бывает так, что сильным школьникам на школьных уроках информатики просто скучно. Если ваш школьник занимается по этому курсу, разрешите ему во время урока решать задачи, читать теорию этого курса! И, конечно, если у вас есть сильные ученики — расскажите им об этом курсе!</p>\n\n<p>И еще одно замечание. Пожалуйста, прочитайте раздел <a href="/material/module-20927_21" onclick="window.goto(\'/material/module-20927_21\')();return false;">"О бесплатности занятий"</a>. А именно, если ваши школьники благодаря моим занятиям будут достигать хороших результатов, то постарайтесь сделать так, чтобы я был указан их учителем/преподавателем на тех олимпиадах и подобных мероприятиях, где они будут применять полученные здесь знания.</p></div>', 'title': 'Для учителей и родителей', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_24', 'order': 24, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_25', 'order': 25, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Про самостоятельность</h2>\n\n<p>Отдельно хочу вас написать про вашу самостоятельность. Я ожидаю, что при работе в курсе (независимо от того, работаете вы в заочном курсе, на занятиях в ННГУ или в лицее 40) вы будете проявлять способность к достаточно самостоятельной работе. В заочном курсе самостоятельность подразумевается сама собой, но и в при очных занятиях я хочу, чтобы вы не просто тупо писали то, что я вам рассказал, но и могли думать сами.</p>\n\n<p>Это обозначает, во-первых, не будут сам вас торопить или заставлять решать задачи. Хотите — решайте, не хотите — ну и не решайте, мне же проще — меньше проверять. Я не буду стоять у вас над душой и что-то с вас требовать. (Хотя, если вы учитесь в лицее 40 и хотите получить зачет, то к вам отдельные требования.)</p>\n\n<p>Во-вторых, не ожидайте, что на занятиях или в теоретических материалах на сайте будет отражено <i>абсолютно всё</i>, что может вам потребоваться для решения задач. Вполне возможно, что в каких-нибудь задачах вы обнаружите, что требуется что-то, что мы "не проходили". Не страшно. Вы всегда можете меня спросить, а лучше — сначала исследовать вопрос самостоятельно (в вашей любимой книжке, или в интернете), а если не получится, то спросить меня. Я вас не съем за такие вопросы, наоборот, я буду очень рад, если вы увидите, что в какой-то задаче требуется что-то дополнительное, и сможете четко спросить, что именно вам требуется.</p>\n\n<p>В-третьих, если вы чего-то не поняли на занятии, в моем комментарии к вашему решению, в теоретических материалах или где еще; или если вы не понимаете, почему не работает ваша программа, то просто подойдите ко мне и спросите (или напишите мне). Не ожидайте, что я вам все очень подробно объясню с первого раза или что я вам буду писать сверхподробные комментарии к решениям. Я объясняю и пишу как раз с расчетом что, если вы что-то не поняли, то вы переспросите.</p></div>', 'title': '\nПро самостоятельность', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_26', 'order': 26, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_27', 'order': 27, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Рекомендуемая литература</h2>\n<h3>Для начинающих — для изучения языка</h3>\n<h4>Питон</h4>\n<p>По питону, как ни странно, книжек не очень много, и вот именно учебных, направленных на школьников, я пока не видел (но я еще поищу). Поэтому, если хотите, можете купить какую-нибудь книжку, которая вам понравится.</p>\n\n<p>Но зато по питону есть очень много ресурсов в интернете; если вы будете задавать поиск по конкретным вопросам, то для питона вы получите адекватный ответ намного более вероятно, чем для паскаля. Поэтому я далеко не уверен, что вам надо покупать бумажную книжку по питону, лучше используйте интернет.</p>\n\n<p>В частности, очень рекомендую вам сайт <a href="http://pythontutor.ru/">http://pythontutor.ru/</a>. Там достаточно адекватная теория, и очень удобный визуальный отладчик питона.</p>\n<h4>Паскаль</h4>\n<p>Здесь приведен список книг, которые можно использовать для изучения языка программирования Pascal. При этом имейте в виду, что большинство из них описывает среду Turbo Pascal (или Borland Pascal, что то же самое); она является весьма устаревшей и в некоторых деталях отличается от среды Free Pascal, которую мы изучаем. Кроме того, во многих книжках есть разного рода устаревшие подходы к написанию программ. </p>\n<p>Большинство из этих книг можно скачать из интернета, или купить; в частности, ряд книг я видел недавно в магазине Дирижабль на Б. Покровской.</p>\n<p>В принципе, можно учиться и по другим книгам, не указанным здесь. Главное — чтобы это был именно учебник по основам языка программирования Pascal (Delphi скорее всего не подойдет). Прежде чем выбирать книгу, посмотрите, как в ней излагается простейший материал. Мне не понравились книги, которые сначала определяют "алфавит языка" и прочие заумные понятия, и только потом приступают к изучению языка; я считаю, что лучше начать изучение языка на простых примерах и только потом переходить к общим вещам. Если найдете книгу, которая вам понравится, скажите мне, чтобы я ее добавил сюда.</p>\n<p>При этом я не читал подробно ни одну из этих книг, я только поверхностно их просмотрел. Поэтому если у вас будут какие-либо комментарии по ним, то тоже скажите мне.</p>\n<ul>\n<li><b>Ушаков Д. М., Юркова Т. А. Паскаль для школьников</b> — мне очень понравилась; эта книга, пожалуй, ближе всего к тому, как я хочу строить обучение языку.</li>\n<li><b>Деревенец О. В. Песни о Паскале </b> (свободна распространяема с сайта <a href="http://oleg-derevenets.narod.ru/">http://oleg-derevenets.narod.ru/</a>) — очень необычный стиль изложения, возможно, понравится школьникам. Очень подробно и хорошо рассказывают про среду Free Pascal. Правда, порядок изучения тем весьма отличается от запланированного мной, но тем не менее, книга весьма неплохая.</li>\n<li><b>Кашаев С. М., Шерстнева Л. В. Паскаль для школьников. Подготовка к ЕГЭ</b> — довольно неплохой подробный учебник.</li>\n<li><b>Андреева Е. В. Программирование — это так просто, программирование — это так сложно</b>. Елена Владимировна Андреева (в отличие от авторов всех остальных учебников) — очень известный в олимпиадной информатике учитель, подготовившая многих сильных олимпиадников, многократный член жюри заключительного этапа Всероссийской олимпиады школьников. Эта книга довольно популярна в обучении олимпиадному программированию, вы можете встретить ссылки на нее во многих разных местах. Тем не менее, книга написана с точки зрения «формального» подхода, когда внимание уделяется в первую очередь полноте и строгости изложения, а не понятности и количеству примеров. Поэтому мне кажется, что она подходит скорее как справочник, или как дополнение к материалу, который я рассказываю на занятиях.\n</li><li><b>Культин Н. Б. Turbo pascal в задачах и примерах</b> — фактически только примеры, без теории.</li>\n<li><b>Павловская Т. А. Паскаль. Программирование на языке высокого уровня. Практикум</b> — не очень много теории, довольно много примеров.</li>\n<li><b>Рапаков Г. Г., Ржеуцкая С. Ю. Turbo Pascal для студентов и школьников</b> — более-менее обычный учебник, ничего особенного, на самом деле мне даже не очень понравился.</li>\n<li><b>Семакин И. Г., Шестаков А. П. Основы программирования</b> — более-менее обычный учебник, ничего особенного, на самом деле мне даже не очень понравился.</li>\n</ul>\n\n<p>Кроме того, следующие книги я видел, но они мне весьма не понравились. Я не рекомендую вам их использовать, хотя, возможно, кому-то они покажутся проще. Если сочтете, что какая-то книга тут находится незаслуженно, тоже напишите мне — на самом деле, я смотрел весьма поверхностно.</p>\n<ul>\n<li><b>Кетков Ю. Л., Кетков А. Ю. Свободное программное обеспечение. FREE PASCAL для студентов и школьников</b></li>\n<li><b>Фаронов В. В. Turbo Pascal 7.0. Учебный курс</b></li>\n</ul>\n\n<p>Наконец, непосредственно на этом сайте есть много теоретического материала — надо зайти на главную страницу сайта и далее следовать по ссылкам на разные темы или на разные курсы. К сожалению, качество материала здесь очень и очень сильно варьируется, от довольно плохого до довольно хорошего.</p>\n\n<h3>Для продолжающих — для изучения алгоритмов</h3>\n<p>К сожалению, нет хороших полноценных учебников по алгоритмам. Те книги, которые я указываю ниже, считаются довольно хорошими книгами, но покрывают материалы нашего курса далеко не полностью и/или зачастую содержат много дополнительной или не всегда нужной информации. Я стараюсь на страничке курса давать ссылки на полезные материалы по разным темам; также я всегда готов вам рассказывать нужные темы на занятиях. Соответственно, я предполагаю, что изучать нужные темы вы будете именно по материалам, на которые есть ссылки со странички курса, и/или по моим рассказам, а литература, указанная ниже — скорее вспомогательные книги.</p>\n\n<ul>\n<li><b>Т. Кормен, Ч. Лейзерсон, Р. Ривест «Алгоритмы. Построение и анализ»</b> (во втором издании к авторам присоединился еще К. Штайн). Самая популярная книга по алгоритмам, книга, которую должен знать каждый уважающий себя крутой программист. Довольно хорошая, но довольно продвинутая (вряд ли ее стоит читать школьникам ниже 3-4 уровня), и местами чересчур теоретизирована (рассчитана скорее на студентов, а не на школьников).</li>\n<li><b>А. Шень. Программирование: теоремы и задачи</b> (свободно доступна с сайта <a href="http://www.mccme.ru/free-books/">http://www.mccme.ru/free-books/</a>). Тоже довольно известная книга, и написанная в расчете на в том числе школьников, хотя на мой взгляд дает местами лишний или чересчур глубокий материала, а часть материала, наоборот, можно было бы изложить более детально. Но все равно весьма рекомендую.</li>\n<li><b>Д. Кнут. Искусство программирования.</b>. (В ранних изданиях русского перевода — Искусство программирования для ЭВМ.) Классическая и очень-очень известная монография, но содержит очень много информации, которую тяжело фильтровать на более и менее важную, очень тяжело читается, и чувствуется, что первое издание было почти 50 лет назад (!) (проблема скорее не в устаревании материала, а в устаревании способа подачи, например, примеры даются на ассемблерно-подобном языке, а не на языке высокого уровня или псевдокоде).</li>\n</ul></div>', 'title': '\nРекомендуемая литература', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_28', 'order': 28, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div><a href="https://docs.google.com/document/d/1YrAWXEK4ak9lE07Sx8C7vLZ0kgJav86IouaNU91GNGM/pub">\nПримерный план уровней</a></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_29', 'order': 29, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Формулы расчета рейтинга и т.д.</h1>\n<p>В сводных таблицах показывается рейтинг, активность, рейтинг на codeforces, взвешенное изменение рейтинга на codeforces и взвешенное количество контестов на codeforces.</p>\n\n<h2>Рейтинг</h2>\n<p>(Кому интересно, конкретный код расчета рейтинга и активности есть <a href="https://github.com/petr-kalinin/algoprog/blob/master/server/calculations/calculateRatingEtc.coffee">вот здесь</a>.)</p>\n\n<p>Рейтинг определяется просто набором решенных задач. А именно, каждая задача стоит некоторое фиксированное количество баллов рейтинга, определяемое уровнем этой задачи.</p>\n\n<p>Задача уровня 1А стоит $2.5$ балла рейтинга. Задача уровня 2А стоит $2.5^2$ баллов рейтинга. Задача уровня 3А стоит $2.5^3$ баллов рейтинга, и т.д. Задача уровня $N$А стоит $2.5^N$ баллов рейтинга.</p>\n\n<p>Задачи промежуточных уровней стоят промежуточное число баллов. А именно, задача уровня $N$Б стоит $2.5^{N+0.25}$ баллов рейтинга, уровня $N$В — $2.5^{N+0.5}$, уровня $N$Г — $2.5^{N+0.75}$ баллов.</p>\n\n<p>Задачи с региональных олимпиад считаются как задачи с уровня 3А. Если одна и та же задача есть на нескольких уровнях, то учитывается только самый высокий уровень этой задачи.</p>\n\n<p>При выводе рейтинга в таблицы он округляется до целых, но при подсчете все считается вещественными числами.</p>\n\n<p>Табличка стоимости (округленная до двух знаков после запятой):</p>\n<pre>          А        Б        В        Г\n1      2.50     3.14     3.95     4.97 \n2      6.25     7.86     9.88 \n3     15.62    19.65    24.71 \n4     39.06    49.12    61.76 \n5     97.66   122.80   154.41 \n6    244.14   306.99   386.02 \n7    610.35   767.48   965.05 \n8   1525.88  1918.69  2412.63 \n9   3814.70  4796.73  6031.57 \n10  9536.74 11991.82 15078.91 \n</pre>\n\n<h3>Идеология</h3>\n<p>Баллы за задачу растут очень быстро, специально для того, чтобы на высоких уровнях было не так важно, что вы решали на младших уровнях. Например, если вы уже на уровне 5, то, скорее всего, задачи уровня 1 не представляют для вас вообще никакой сложности. Поэтому не важно, сколько вы решили на уровне 1. И это получается за счет того, что задачи уровня 5 стоят намного больше, чем задачи уровня 1.</p>\n\n<h2>Активность</h2>\n<p>(Конкретный код расчета — по той же ссылке)</p>\n\n<p>Активность — показатель того, насколько активно вы решали задачи последнее время. Каждая задача, которую вы когда-либо решали, дает свой вклад в активность. У каждой задачи есть "базовые" баллы активности — это квадратный корень из номера уровня. (У всех задач уровня 1 "базовый" балл равен 1, у каждой задачи уровня 2 базовый балл равен 1.4, и т.д.) Этот базовый балл умножается на $0.55^{t/\\tau}$, где $t$ — время, прошедшее с того момента, как вы сдали эту задачу, а $\\strut\\tau$ равно 1 неделе. Например, если вы сдали задачу только что, то базовый балл учитывается полностью. Если вы сдали задачу ровно сутки назад, то базовый балл умножается на $0.55^{1/7}\\approx 0.92$. Если вы сдали задачу ровно две недели назад, то базовый балл умножается на $0.55^2\\approx0.3$. Если вы сдали задачу 8 недель назад, то базовый балл умножается на $0.55^8\\approx0.0083$, т.е. эта задача уже почти не учитывается.</p>\n\n<p>Суммарное значение активности по всем задачам делится на 0.45, в результате получается эдакое среднее число "задач" в неделю.</p>\n\n<p>Получается, что на самом деле учитываются только недавно сданные задачи, а те, которые вы решали давно, не учитываются. Но при этом падение этой "учитываемости" плавное. Если вы перестанете решать задачи, то ваша активность будет постепенно падать со временем (хотя и никогда не станет ровно нулем). В таблицах активность выводится округленной до одного знака после запятой, но на самом деле активность — настоящее вещественное число.</p>\n\n<p>В ряде сводных таблиц сначала указываются школьники, активность которых больше 0.1, и только потом все остальные.</p>\n\n<h2>Цвет</h2>\n<p>Имена школьников в таблицах рисуются цветом, определяемым их рейтингом и активностью. А именно, активность определяет яркость цвета (от почти черного до насыщенного), а рейтинг определяет оттенок (от фиолетового через все цвета радуги до красного). Например, школьник с рейтингом 1 и активностью 10 будет иметь ярко-фиолетовый цвет, школьник с рейтингом 1 и активностью 0.1 будет иметь темно-фиолетовый цвет, школьник с рейтингом примерно 1500 и активностью 10 будет иметь ярко-зеленый цвет, а с активностью 0.1 — темно-зеленый цвет; красный цвет соответствует рейтингу примерно 160000.</p>\n\n<p>Конкретная формула: в <a href="https://ru.wikipedia.org/wiki/HSV_(%D1%86%D0%B2%D0%B5%D1%82%D0%BE%D0%B2%D0%B0%D1%8F_%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C)">модели HSV</a> цвет участника имеет следующие компоненты:</p>\n$h = 11/12 \\cdot (1 - log(r+1) / log(R + 1))$<br>\n$v = 0.3 + 0.7 \\cdot log(a+1) / log(A + 1)$<br>\n$s = 1$<br>\n<p>здесь $r$ и $a$ — рейтинг и активность, $R$ — "максимальный рейтинг" (те самые примерно 160000, точнее — рейтинг, который получит человек, на каждом уровне решивший по 10 задач, возможно, я буду подправлять константу в будущем), $A=7$.</p>\n\n<p>Еще есть мелкие поправки на краях возможных интервалов значений. Код, кому интересно, <a href="https://github.com/petr-kalinin/algoprog/blob/master/client/components/UserName.coffee">здесь</a>.</p>\n\n<h2>Параметры codeforces</h2>\n<p><a href="https://github.com/petr-kalinin/algoprog/blob/master/server/calculations/calculateCfRating.coffee">Код</a></p>\n\n<p>Рейтинг на CF берется прямо с CF, обновляется раз в сутки.</p>\n\n<p>Взвешенное количество контестов вычисляется так: каждый написанный вами контест дает вклад, равный $0.5^{t/\\tau}$, где $t$ — время, прошедшее с написания контеста, а $\\tau$ равно 4 неделям. Все такие вклады суммируются. Т.е. только что написанный контест дает вклад 1, контест, написанный 4 недели назад — 0.5, и т.д.</p>\n\n<p>Взвешенное изменение рейтинга вычисляется так: каждый написанный вами контест дает вклад, равный $\\delta\\cdot0.5^{t/\\tau}$, где $\\delta$ — изменение рейтинга в этом контесте, $t$ — время, прошедшее с написания контеста, а $\\tau$ равно 4 неделям. При этом самый первый в жизни написанный контест не учитывается, т.к. там изменение рейтинга — это бессмысленная вещь.</p></div>', 'title': '\nФормулы расчета рейтинга, активности и т.д.', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_30', 'order': 30, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_31', 'order': 31, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про ачивки</h1>\n<p>На алгопроге каждый пользователь может заработать ачивки. Ачивки выдаются за разные вещи, в первую очередь за успешные занятия на алгопроге, а также за участие в различных олимпиадах. Заработанные пользователем ачивки показываются в его профиле, также три наиболее «крутые» ачивки показываются рядом с именем пользователя в сводных таблицах и т.д.</p>\n\n<p>Полный список доступных ачивок можно посмотреть <a href="/achieves">здесь</a>, а также в виде исходного кода <a href="https://github.com/petr-kalinin/algoprog/blob/master/client/lib/achieves.coffee">здесь</a>.</p>\n\n<p>Часть ачивок выдается автоматически, часть ачивок (в основном за олимпиады) я устанавливаю вручную. Если вы считаете, что у вас должна быть какая-то ачивка, а у вас ее нет, то напишите мне. Особенно это касается школьников из-за пределов Нижегородской области — я не всегда могу отслеживать все ваши олимпиады, поэтому пишите мне про свои олимпиады сами.</p></div>', 'title': ' \nПро ачивки', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_32', 'order': 32, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_33', 'order': 33, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про дополнительные лекции</h1>\n\n<p>Я планирую время от времени по воскресеньям на занятии в ННГУ проводить дополнительные лекции на разные темы, не связанные напрямую с алгопрогом и вообще с алгоритмами — но которые серьезный программист по идее должен знать.</p>\n\n<p>Эти лекции совершенно не нужны для занятий на алгопроге, да и по бóльшей части для олимпиад тоже (хотя отчасти и будут полезны, особенно про командную строку). Но они очень полезны для вашего кругозора.</p><p>\n\n</p><p>Цель таких лекций — дать вам общее представление о той или иной теме. Я не буду ставить целью чтобы вы сразу научились чему-то новому, я буду ставить целью чтобы вы узнали о существовании чего-то нового и поняли, что надо искать и про что читать в интернете, чтобы с этим разобраться. </p>\n\n<p>Лекции будут проходить в среднем раз в две недели по воскресеньям в ННГУ в аудитории 114 в 15.00, и длиться примерно 30-60 минут. На них можно приходить и тем, кто зарегистрировался на занятие в 14.00, и тем, кто зарегистрировался на занятие в 15.30, и тем, кто не регистрировался на занятия вообще.</p>\n\n<p>Предварительный список тем (я готов принимать от вас запросы на какие-либо еще темы):</p><p>\n\n</p><ul>\n<li><b>6 октября</b>: Командная строка</li>\n<li><b>27 октября</b>: Far manager</li>\n<li><b>16 февраля</b>: Системы контроля версий</li>\n<li>TeX и LaTeX</li>\n<li>...</li>\n</ul>\n\n<p>Запрошенные темы (не обещаю, что расскажу, но подумаю):</p>\n\n<ul>\n<li>Нейронные сети и их обучение</li>\n<li>Компиляторы, интерпретаторы, ассемблер и т.д.</li>\n<li>История языков программирования</li>\n</ul></div>', 'title': ' \nПро дополнительные лекции по воскресеньям', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_34', 'order': 34, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_35', 'order': 35, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>О лицензии на материалы этого сайта</h2>\n<h3>Исходный код сайта</h3>\nИсходный код собственно сайта algoprog.ru написан мною (Петром Калининым) и распространяется по лицензии <a href="http://www.gnu.org/licenses/agpl">GNU Affero General Public License</a>. Скачать исходный код можно с сайта <a href="http://github.com/petr-kalinin/algoprog">github.com/petr-kalinin/algoprog</a>.\n\n<h3>Теоретические материалы</h3>\n<p>На этом сайте есть различные теоретические материалы с разной степенью понятности с точки зрения лицензии.</p>\n<p>Материалы, в которых лицензия указана явно, распространяются по указанной в них лицензии.</p>\n<p>Материалы, размещенные на других сайтах, на которые с сайта algoprog.ru проставлена только ссылка, распространяются по лицензии, определяемой указанным сайтом.</p>\n<p>Материалы, в которых лицензия явно не указана, но автором которых являюсь я (это большинство материалов, размещенных непосредственно на сайте algoprog.ru), распространяются по лицензии <a href="http://creativecommons.org/licenses/by-sa/4.0/">Creative Commons Attribution-ShareAlike (CC BY-SA) 4.0</a>.</p>\n<p>Если вы не уверены, какая лицензия распространяется на конкретный материал, спросите меня.</p>\n\n<h3>Условия задач</h3>\n<p>Условия задач взяты с сайта <a href="http://informatics.mccme.ru">informatics.mccme.ru</a>, где они в большинстве случаев собраны с различных олимпиад. Условия лицензии на них не ясны.</p>\n</div>', 'title': '\nО лицензии на материалы сайта', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_36', 'order': 36, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_37', 'order': 37, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Франшиза</h1>\n\n<p>Если вы уже учите кого-нибудь (школьников, студентов и т.д.) программированию, и хотите использовать алгопрог или его материалы в своих занятиях...</p>\n\n<p>...или если вы хотите начать учить кого-нибудь на базе алгопрога или с использованием его материалов...</p>\n\n<p>...или если вы хотите использовать движок алгопрога в своих занятиях, наполнив его своими материалами</p>\n\n<p>то этот текст для вас.</p>\n\n<h2>Материалы</h2>\n\n<p>Если вам нужен не функционал алгопрога, а только <i>материалы</i> — теоретические материалы, видеолекции, задачи и т.д. — то они доступны в том или ином виде свободно. Теоретические материалы, автором которых являюсь я, как правило, распространяются под той или иной свободной лицензией, вы можете их использовать. Она обычно указана в самом материале, если там лицензия не указана, то спросите меня. Материалы, автором которых являюсь не я, взяты с других сайтов, вы обычно тоже можете их использовать. Задачи взяты с сайта <a href="http://informatics.mccme.ru">informatics.mccme.ru</a>, этот сайт специально создан для проведения различных курсов по программированию, вы можете формировать свои курсы из доступных там задач и т.д. В частности, вообще все содержимое алгопрога есть на информатиксе: <a href="https://informatics.msk.ru/course/view.php?id=1135">informatics.msk.ru/course/view.php?id=1135</a> — собственно, весь алгопрог вырос из этого моего курса на информатиксе.</p>\n\n<h2>Движок</h2>\n\n<p>Сам движок алгопрога также <a href="https://github.com/petr-kalinin/algoprog">свободно доступен</a>, вы можете поднять собственный инстанс алгопрога и делать там что угодно. (Хотя, конечно, это не так просто, и я вряд ли буду вам помогать.)</p>\n\n<h2>Отдельный инстанс</h2>\n\n<p>Я могу поднять отдельный инстанс алгопрога для ваших учеников, с вашими материалами и задачами. Это требует отдельного обсуждения, но в принципе это возможно. Это будет платно, конкретная стоимость будет зависеть от необходимой работы по поддержке инстанса, необходимых доработок, и ожидаемого количества учеников. В качестве грубой предварительной оценки, если не требуется серьезных доработок, и ожидается 20-50 учеников, то стоимость отдельного инстанса будет составлять 500-1000 рублей с ученика в месяц.</p>\n\n<h2>Занятия прямо на алгопроге по материалам алгопрога</h2>\n\n<p>Если вы хотите заниматься именно на алгопроге, то есть следующие варианты. Во-первых, ваши ученики может зарегистрироваться на алгопроге и заниматься как независимые ученики. С моей точки зрения это будут просто дополнительные ученики на алгопроге, вы сможете организовывать занятия, помогать ученикам и т.д., но у вас не появится никаких дополнительных возможностей на алгопроге (вы не сможете просматривать решения учеников и т.д.). Ваши ученики занимаются независимо, для них стоимость занятий будет, естественно, определяться <a href="/pay">по общим правилам</a>, с вас я, естественно, денег брать не буду (и вообще могу про вас и не знать :) ).</p>\n\n<p>Если вы хотите иметь дополнительные возможности — просматривать решения учеников, комментировать их, засчитывать/игнорировать, иметь отдельные сводные таблицы, то напишите мне. Это все (равно как и другие запросы с вашей стороны) вполне реально, но требует отдельного обсуждения. В качестве <b>базовых</b> вариантов есть следующие:</p>\n<ul>\n<li>Ваши ученики занимаются на алгопроге на равных правах с остальными, я их проверяю, комментирую, засчитываю/игнорирую их решения — и плюс вы можете делать то же самое; для ваших учеников будут отдельные таблички и т.д. <b>Как правило</b>, стоимость таких занятий для ваших учеников будет такая же, как если бы они занимались независимо. (Т.е. никакой дополнительной оплаты за дополнительный функционал нет, но и скидок нет.)</li>\n<li>Я никак не взаимодействую с вашими учениками — не смотрю их решения, не засчитываю/игнорирую. Все это делаете, если хотите, вы. <b>Как правило</b>, стоимость таких занятий для ваших учеников будет в два раза меньше, чем если бы они занимались независимо.</li>\n</ul>\n<p>В обоих вариантах выше существенны слова «базовые» (варианты) и «как правило». Это обозначает, что, с одной стороны, это не публичная оферта — в конкретной ситуации возможны другие условия и другие цены; с другой стороны, возможны также и другие варианты по функционалу и по нашему с вами взаимодействию. Пишите, поговорим :)</p>\n\n<p>В частности, если для ваших учеников занятия обычно бесплатные, то оба варианта выше будут, как правило, бесплатными.</p>\n\n</div>', 'title': '\nО франшизе', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_38', 'order': 38, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>«Стажировка» на алгопроге</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_39', 'order': 39, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>«Стажировка» на алгопроге</h1>\n<p>Что летом делают большинство нормальных студентов-программистов? Стажируются в IT-компаниях. Школьников обычно на такие стажировки не зовут, да и участвовать школьникам в стажировках обычно сложно.</p>\n\n<p>Поэтому я подумал, чем алгопрог хуже IT-компаний? И решил организовать возможность некоего аналога стажировок на алгопроге. А именно, если вы хотите, то можете поучаствовать в развитии самой платформы алгопрога. Если вы всегда хотели добавить на алгопрог какую-нибудь фичу, то вы сможете этим заняться. Или у меня для вас есть список вещей, которые я давно хочу сделать на алгопроге, но все не успеваю, и вы можете заняться ими.</p>\n\n<p>Это, конечно, будет довольно сильно отличаться от обычных задач, которые вы решаете на алгопроге. Вам придется разбираться в довольно объемном уже существующем (и очень грязном) коде алгопрога, вам придется разбираться в наверняка незнакомом языке программирования (Coffeescript, но не бойтесь — он несложный и поначалу весьма похож на питон), вам придется разбираться со множеством технологий, с которыми вы возможно еще не работали (git, MongoDB, node.js, React, немного Redux), вам придется разбираться с HTML и браузерным Javascript, вам придется много гуглить и читать, причем скорее всего по-английски (ну или через переводчик) — но я верю, что если вы абсолютно уверенно решаете как минимум задачи уровней 1А и 1Б, и не боитесь самостоятельно разбираться с возникающими проблемами, то вы вполне можете и со всем этим разобраться.</p>\n\n<p>Исходный код алгопрога вот: <a href="https://github.com/petr-kalinin/algoprog">https://github.com/petr-kalinin/algoprog</a>. Список доделок, которыми вы можете заняться, вот: <a href="https://github.com/petr-kalinin/algoprog/issues">https://github.com/petr-kalinin/algoprog/issues</a>, или вы можете обсудить со мной и предложить что-то свое.</p>\n\n<p>В отличие от классических стажировок, я не буду требовать от вас какой-то регулярности в работе (ну собственно как и с обычными задачами на алгопроге), и не буду вам платить денег :) — но обещаю, что буду вникать в то, что вы делаете, и помогать. А вы внесете свой вклад в развитие алгопрога, и получите много нового разнообразного опыта.</p>\n\n<p>Кроме того, в отличие от классических стажировок, я не смогу вам уделять столько внимания, сколько обычно уделяет руководитель стажеру в IT-компаниях. Вам придется очень во многом разбираться самостоятельно, я буду скорее направлять ваши действия, а не давать конкретные детальные указания. Будьте к этому готовы.</p>\n\n<p>В общем, если вы хотите в этом поучаствовать, пишите. Распространяется на всех, кто занимается на алгопроге (не обязательно школьников) и имеет уровень минимум 1В. Пока только лето (с апреля по август включительно).</p></div>', 'title': '«Стажировка» на алгопроге', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Очные занятия</h2>\n<font size="+1"><a href="/material/module-20927_17" onclick="window.goto(\'/material/module-20927_17\')();return false;">Подробная информация</a></font><br>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_1', 'order': 2, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про свои ноутбуки</h1>\n<p>Иногда бывает, что на занятиях не хватает компьютеров (особенно в начале учебного года). Поэтому вы <b>можете приносить свои ноутбуки</b>, но на следующих условиях:</p>\n<ol>\n<li>Вы сами несете ответственность за свой ноутбук. Я не готов решать какие-либо проблемы, связанные с ноутбуком, начиная от отсутствующей зарядки или отсутствующего интернета (см. ниже), поломки его вами или другими школьниками, и до даже его пропажи (хотя и надеюсь, что такого не будет). Если вы и ваши родители не уверены, стоит ли вам брать с собой ноутбук — не берите.</li>\n<li>Обеспечивайте доступ в интернет на своем ноутбуке самостоятельно. Проще всего — имейте с собой usb-модем или научитесь раздавать доступ в интернет со своего телефона. Убедитесь, что у вас достаточно трафика для работы, или заранее подключите пакет трафика (я думаю, если вы собираетесь только работать на informatics, то сотни мегабайт будет более чем достаточно). Лучше проверьте заранее, что все работает. Вы можете также объединиться, чтобы в группе друзей один человек раздавал интернет на всех, но договаривайтесь об этом самостоятельно и заранее, а также читайте следующие пункты.</li>\n<li>Убедитесь, что у вас на ноутбуке нет вирусов и других программ, которые могут захотеть скачать большое количество данных из интернета; вирусы еще могут подписать вас на какие-нибудь платные мобильные рассылки. (Многие программы с функцией автообновления могут расходовать много трафика без предупреждения). Если вы используете интернет друга, или предоставляете свой интернет друзьям, то риск скачивания большого объема данных тем более возрастает. (В частности, именно поэтому я сам не раздаю интернет со своего телефона.)</li>\n<li>Имейте с собой все нужные зарядки (для ноутбука и для телефона, хотя телефон проще подключать к ноутбуку). Имейте также с собой <b>удлинитель</b> метра на 3 как минимум, а то и на 5 метров, т.к. в наших аудиториях у многих столов или нет розеток, или их мало.</li>\n<li>Заранее установите требуемые для работы программы — среду программирования и/или среды разработки, какие вы используете; для команд также убедитесь, что у вас установлено всё, что требуется для всей вашей команды.</li>\n<li>Для команд нет большого смысла приносить более 1 ноутбука на команду.</li>\n</ol></div>', 'title': 'Про свои ноутбуки на занятиях', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_2', 'order': 3, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Лицей 40</h3>\n<p><b>Только для учеников лицея 40</b></p>\n<p>Занятия проходят по средам в 14:30 КЦ.</p>\n<ul>\n<li>Новичкам (кто не ходил ни разу и не решал задач заочно) <b>прежде чем приходить на занятие, необходимо зарегистрироваться на сайте и решить хотя бы одну задачу</b>. Исключение — занятие 25 сентября, туда можно приходить всем новичкам вообще.</li>\n<li>Те, кто уже был хотя бы один раз, или решил в курсе хотя бы одну задачу заочно, могут приходить каждую среду.</li>\n</ul>\n<a href="/material/in20946" onclick="window.goto(\'/material/in20946\')();return false;">Правила получения зачета</a>\n<h3>ННГУ</h3>\n<p><b>Только для школьников</b>\n</p><p>Занятия проходят по воскресеньям в ННГУ ил. Лобачевского (пр. Гагарина, 23), корп. 2, ауд. 110 и 114.</p>\n<p><b>Берите с собой паспорт или свидетельство о рождении.</b> Если вас не пускает охрана, звоните мне.</p>\n<ul>\n<li>Проходит два занятия: с 14.00 до 15.30 и с 15.30 до 17.00.</li>\n<!--<li>Занятие проходит с 14.00 до 16.00.</li>-->\n<li>Новичкам (кто не ходил ни разу и не решал задач заочно) <b>прежде чем приходить на занятие, необходимо зарегистрироваться на сайте и решить хотя бы одну задачу</b>. Исключение — занятие 22 сентября, туда можно приходить всем новичкам вообще.</li>\n<li>Те, кто уже был хотя бы один раз, или решил в курсе хотя бы одну задачу заочно, могут приходить каждое воскресенье на любое из двух занятий.</li>\n<li>Чтобы вам точно хватило компьютеров, <b><a href="/checkins" onclick="window.goto(\'/checkins\')();return false;">зарегистрируйтесь на занятие</a></b>. Без регистрации приходить можно, но если компьютеров хватать не будет, то преимущество будет у тех, кто записался. Каждую неделю надо регистрироваться заново.</li>\n<li>Регистрироваться на два занятия нельзя, но те, кто записались на 14.00, могут остаться на второе занятие, если будут места. Те, кто со своими ноутбуками, тоже могут приходить на оба занятия.</li>\n</ul>\n<hr>\n\n<div class="algoprog-contacts">\n<h2>Контакты</h2>\nПетр Андреевич Калинин\n<ul>\n<li>e-mail: petr@kalinin.nnov.ru</li>\n<li><a href="http://vk.com/petr.kalinin">http://vk.com/petr.kalinin</a>*</li>\n<li>+7(910)794-32-07**</li>\n<li>Телеграм: +7(910)794-32-07</li>\n</ul>\n<b>Телеграм:</b>\n<ul>\n<li><a href="https://t.me/algoprog_news">Канал с важными объявлениями</a>, в первую очередь про очные занятия. Рекомендую всем подписаться. (Если ссылка на t.me заблокирована, просто в телеграмме поищите канал «algoprog_news».)</li>\n<!--<li><a href="https://t.me/joinchat/CDV8hRTLsYl_pplIhhLZzw">Телеграм-чат для общих вопросов и разного флуда</a></li>-->\n</ul>\n<p>Мои контактные данные можно свободно распространять по любым вопросам, связанным с работой курса или с олимпиадным программированием в Нижегородской области вообще.</p>\n<p><b>Если у вас есть какие-то проблемы с работой в курсе, какие-то вопросы и т.п., сразу пишите мне!</b></p>\n<p>* Политика добавления в друзья во вКонтакте: я не возражаю, если вы добавите меня в друзья, но я буду добавлять только тех, кто уже давно и успешно занимается.</p>\n<p>** Пожалуйста, звоните по телефону только в экстренных случаях. Если ваш вопрос не очень срочный и может подождать несколько часов, напишите мне любым указанным выше способом — во вКонтакте, в Телеграм или на email.</p>\n</div>\n<hr>\n\n<h2>Полезные ссылки</h2>\n<font size="+1"><a href="https://www.dropbox.com/s/1n5g6w6hkryqwcw/Free%20Pascal%202.6.4%20-%20installer%20.exe?dl=0">Ссылка на установщик Free Pascal</a></font>\n<hr>\n<font size="+1">Установщики питона: <a href="https://www.python.org/ftp/python/3.5.2/python-3.5.2.exe">сам Python</a> и <a href="http://wingware.com/pub/wingide-101/5.1.12/wingide-101-5.1.12-1.exe">Wing IDE 101</a></font>\n<hr>\n<font size="+1">\n<a href="http://petr-kalinin.github.io/keyb/">Клавиатурный тренажер</a> на скорость набора программистского текста. </font> Ориентировочные результаты: 150 символов/минуту — довольно неплохо, 200 символов/минуту — очень круто. <a href="/material/in20938" onclick="window.goto(\'/material/in20938\')();return false;">Подробнее</a>.\n\n<hr class="algoprog-main-page-separator">\n\n<h2>Текущие олимпиады и т.п.</h2>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_3', 'order': 4, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>О школьной олимпиаде</h1>\n<font color="red">Эта информация касается школьной олимпиады в Нижегородской области. В других регионах могут быть отличия.</font>\n<h3>Краткое содержание того, что ниже</h3>\n<ul>\n<li>В школьной олимпиаде стоит участвовать как минимум всем, у кого уровень 1В и выше</li>\n<li>Участвовать надо по задачам за 9-11 класс, даже если вы в младших классах</li>\n<li>Заранее выясните, где и когда будет олимпиада, и попросите вам дать возможность писать на том языке, на котором вы хотите.</li>\n<li>На самой олимпиаде:</li>\n<ul>\n<li>Тщательно тестируйте свои задачи, жюри будет проверять их только после олимпиады и второй попытки у вас не будет!</li>\n<li>Неполные решения также оцениваются</li>\n<li>Прочитайте все задачи сразу, не тратьте всё время на одну задачу.</li>\n<li>Регулярно сохраняйте решения</li>\n<li>Не бойтесь задач, самые сложные обычно примерно соответствуют уровню 1Г-2А, и не обязательно решать всё, чтобы пройти дальше.</li>\n<li>Если что-то забыли, ищите обходные пути</li>\n<li>Ищите закономерности</li>\n<li>Применяйте здравый смысл</li>\n</ul>\n<li>Как только узнаете свой результат, скажите его мне</li>\n<li><font color="red">(Только нижегородцы) По любым вопросам, а особенно если что-то идет не так, сразу и в любое время звоните мне!</font></li>\n</ul>\n<h3>О чем речь?</h3>\n<p>Школьная олимпиада по информатике в Нижнем Новгороде состоится, видимо, в конце сентября — начале октября; сроки могут быть разными в разных районах. Уточните сроки заранее в своей школе. (Школьники не из Нижнего Новгорода — тоже уточняйте у себя в школе).</p>\n<p><b>Говорят, что в некоторых школах олимпиада будет аж 19 сентября! Это очень рано, конечно. Но это обозначает, что обязательно поторопитесь и выясните всё заранее!</b></p>\n<p>Школьная олимпиада — это первый этап в системе Всероссийской олимпиады школьников. Победители школьной проходят на районную олимпиаду, с районной — на областную и далее на собственно всероссийскую и международную, поэтому это — самая важная последовательность олимпиад в году, и школьная олимпиада является "входом" в нее. Не пропустите.</p>\n\n<h3>Кому стоит участвовать?</h3>\n<p>Я очень рекомендую участвовать всем, кто на момент олимпиады будут иметь уровень 1В и выше (независимо от класса). Если у вас на момент олимпиады еще не будет уровня 1В, но вы хотите, то можете тоже участвовать — хотя, возможно, задачи вам покажутся несколько сложными. Я думаю, что уровня 1В, скорее всего, будет достаточно, чтобы пройти на районную олимпиаду.</p>\n<p>Если вы в прошлом году участвовали в олимпиадах и стали призером (или победителем) районной или областной олимпиады, то школьную олимпиаду в этом году можете пропустить — вы проходите автоматом на ту олимпиаду, на которой стали призером год назад. (К городской олимпиаде из В.Д.Лелюха это не относится, она не входит в систему Всероссийской олимпиады школьников.)</p>\n\n<h3>Что надо сделать, чтобы участвовать?</h3>\n<p>Заранее, как можно раньше, подойдите к своему учителю информатики и скажите ей, что вы хотите участвовать. Ближе к дате олимпиады вам, наверное, скажут, где и когда именно она будет проходить; если не сказали, то еще раз подойдите к учителю и уточните. Пожалуйста, контролируйте сами, что вы все знаете про олимпиаду — я не могу связаться с каждой школой и сказать, чтобы вас не забыли. (В лицее 40 я передам список школьников уровня 1В и выше учителям, чтобы они про вас не забыли. Если вы хотите участвовать, но имеете уровень ниже 1В, то сообщите мне об этом заранее, я вас тоже включу в список.)</p>\n<p>Если вы младше 9 класса, то обязательно скажите, что вы хотите писать задачи за 9 класс (см. про это подробнее ниже). (В лицее 40 я сам это проконтролирую.) Младше 9 класса могут быть очень странные задачи, очень странная организация и т.д. — ни в коем случае не соглашайтесь участвовать по задачам младше 9 класса, даже если вы сами намного младше :)</p>\n<p>Заранее уточните, на каком языке программирования вы сможете писать. Постарайтесь уговорить учителей, чтобы вам дали написать вашем любимом языке, будь то Free Pascal, и PascalABC или Python или что угодно еще; если нужно, предложите, что вы сами установите нужные программы (компиляторы, среди разработки) на компьютер(ы), на которых будет олимпиада. (В лицее 40 я постараюсь заранее это все обсудить, но на всякий случай можете и сами уточить.)</p>\n<p>Если возникают какие-то проблемы, обязательно пишите или даже звоните мне (только нижегородцы)! Я не уверен, что смогу чем-то помочь, но вдруг. Не тяните с проблемами до последнего.</p>\n\n<h3>Как проходит олимпиада</h3>\n<p>Олимпиады по информатике, по крайней мере низших уровней (школьная, районная) проходят в следующем формате. Вам предлагается несколько (обычно от 2 до 5) задач, по каждой задаче вам надо написать программу. Задачи имеют такой же формат, как у нас на этом сайте: вводятся какие-то данные, надо вывести ответ. Как и у нас, гарантируется, что входные данные соответствуют ограничениям, указанным в условиях. В общем, все весьма похоже на то, как вы решаете задачи на сайте.</p>\n\n<p>Но есть важное отличие — на сайте результат проверки задачи сообщается вам сразу же, и вы можете сдавать одну и ту же задачу несколько раз. На олимпиаде ваши задачи будут проверяться только после тура, и у вас уже <b>не будет возможности исправить никакие ошибки</b>. Поэтому тщательно проверяйте свои решения, про это еще см. ниже.</p>\n\n<p>Олимпиада длится ограниченное время (скорее всего, два урока, но уточните заранее), поэтому внимательно контролируйте время. Не зависайте над одной задачей; если что-то не получается, то подумайте, может быть, стоит переключиться на другую задачу?</p>\n\n<p>В частности, <b>прочитайте все условия всех задач сразу в начале тура,</b> до того, как начнете что-либо программировать. От нашего жюри можно ожидать, что они разместят задачи по возрастанию сложности, но этого может и не быть (не говоря уж о том, что ваше восприятие сложности может отличаться от того, как это воспринимает жюри). Поэтому сначала прочитайте задачи, убедитесь, что вы их понимаете, а потом уже начинайте решать — причем с тех, которые выглядят проще. Ни в коем случае не должно быть такого, что "я все время решал первую задачу, а остальные даже не прочитал или даже не подумал над ними".</p>\n\n<p>Еще одно отличие от сдачи задач на сайте — на олимпиаде у вас будут оцениваться также и неполные решения. По каждой задаче будет подготовлено несколько тестов, и за каждый тест вы будете получать определенное количество баллов. Поэтому если у вас не получается придумать решение, которое будет работать всегда — напишите хотя бы решение, которое будет работать иногда. Постарайтесь, чтобы по каждой задаче у вас было хоть что-то сделано, чтобы у вас <b>не было нулевых баллов ни по одной задаче.</b></p>\n\n<p>В конце тура полезно еще раз проверить, что у вас все работает так, как вы ожидаете. Выделите в конце минут пять-десять, чтобы вернуться ко всем задачам и проверить, что они работают хотя бы на тесте из условия.</p>\n\n<p>В конце олимпиады вы должны сдать свои программы (исходные тексты) на проверку. На олимпиадах начального уровня обычно это делается следующим образом: вы просто оставляете их на вашем компьютере в указанном вам каталоге, откуда их потом заберут на проверку; иногда проверка осуществляется сразу после тура, даже в вашем присутствии. Заранее или в начале тура убедитесь, что вы понимаете, где вы должны оставить свои решения или как еще их вы должны сдать на проверку; если не понимаете, то спросите учителей.</p>\n\n<p>Сохраняйте решения! Во время олимпиады может произойти что угодно — отключиться свет, перезагрузиться компьютер и т.п. Если у вас из-за этого пропадет несохраненное решение, то это будут полностью ваши проблемы. Вообще, полезно привыкнуть сохранять свое решение каждые 10-20 секунд.</p>\n\n<p>Не теряйте свои решения! Если даже вы думаете, что ваше решение неправильное и его надо переписать — не удаляйте его, просто пишите в новом файле (ну или скопируйте старое решение куда-то про запас).</p>\n\n<p>Имейте в виду, что вам не обязательно решать всё. Чтобы пройти на районную олимпиаду, часто достаточно набрать половину баллов, поэтому не бойтесь, если у вас не получается решить самую сложную задачу (или две самых сложных, если задач много). (Но все равно постарайтесь по ним хоть что-то написать.) Для 11-классников порог прохода на район может быть выше.</p>\n\n<h3>О задачах за разные классы</h3>\n<p>Так исторически сложилось (и на то есть ряд дополнительных причин), что на олимпиадах по информатике набор задач общий для всех классов. Итоги потом подводятся по классам по отдельности, но задачи общие. (Иногда бывают исключения, но довольно редко.)</p>\n<p>При этом формально может быть сказано, что олимпиада проходит только для определенных классов, как правило — для 9-11 классов. Но это вовсе не значит, что младшеклассники не могут в ней участвовать — даже если вы младше 9 класса, вполне можете писать за 9 класс.</p>\n<p>Но помимо этого, я иногда слышал, что в некоторых школах бывают какие-то отдельные задачи для более младших (например, 7-8 классов). Это довольно странно; в лицее 40 я никогда про такое не слышал. Возможно, это инициатива отдельных школ или районов. В любом случае, это не то: по этим задачам вы в лучшем случае пройдете на район и дальше никуда, в худшем случае вам скажут, что "района по вашим классам не бывает" (знаю реальный такой случай). Задачи на этих олимпиадах могут иметь мало общего с тем, что мы тут проходим, организация может быть хуже (например, вам могут предложить писать программу на бумажке (!)) — в общем, если вы младше 9 класса, убедитесь, что вы выступаете за 9 класс и пишите по тем же задачам, что и 9-классники. Для этого может быть полезно заранее сказать, что вы хотите участвовать за 9-й класс. Не бойтесь этого; как я уже писал, если у вас уровень 1В или выше, то вам эти задачи будут по силам. И даже если вы решите их плохо, все равно вы получите ценный опыт, который вам пригодится через год.</p>\n\n<h3>О результатах</h3>\n<p>Как только будут известны ваши результаты, сообщите их мне. Результаты — это общее число набранных баллов (а хорошо бы и распределение баллов по задачам) и проходите вы на район или нет. Про район иногда сообщают сразу, иногда не сразу — если вы пока знаете только баллы, то сообщите мне только баллы, потом как будет известно про район, сообщите мне.</p>\n\n<h3>Какие будут задачи?</h3>\n<p>Сложно предсказать, да и в интернете задачи прошлых найти сложно (но можете попробовать, только ищите обязательно задачи и вашего района города или области — в разных районах задачи могут быть очень разными). Спросите в школе, у них наверное есть архивы прошлых лет.\n\n</p><h3>Какие знания могут потребоваться?</h3>\n<p>Вообще, я думаю, что знаний уровней 1А-1Б (т.е. основ языка), вместе со здравым смыслом, скорее всего будет достаточно, чтобы набрать половину баллов и пройти на район (для 11-классников может потребоваться чуть больше). Уровни 1В и 1Г очень полезны в том плане, что они содержат нестандартные задачи как раз типа тех, что будут на олимпиаде. Кроме того, в ряде задач могут потребоваться следующие знания:</p>\n\n<h4>int64</h4>\nВ паскале есть очень полезный тип данных, про который вы, возможно, не знаете. Это <code>int64</code> — 64-битное целое число. Он может хранить числа от (примерно) -2<sup>63</sup> до 2<sup>63</sup>; это примерно от -9e18 до 9e18. Он полезен, если значения, которые вам нужны в вашей программе, не влезают в integer.\n<pre>var a:int64;\nbegin\na:=1000000000;\na:=a*1000000000;\nwriteln(a); // выведет 1000000000000000000\nend.\n</pre>\n\n<h4>Тестирование задач</h4>\n<p>Очень важная вещь на олимпиаде — аккуратно протестировать задачи. На эту тему я недавно написал <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">длинный текст</a> (ссылка на него также есть в уровне 1В). Прочитайте его и следуйте его рекомендациям. Конечно, вам пока не обязательно использовать совсем уж продвинутые вещи типа стресс-тестирования или assert\'ов, но практически весь остальной текст вам будет полезен. Не жалейте времени на аккуратное тестирование.</p>\n\n<p>Полезно хотя бы немного отработать навык тестирования до олимпиады. Постарайтесь порешать несколько задач из еще не решенных вами с учетом рекомендаций по тестированию.</p>\n\n<h4>Работа с файлами</h4>\n<p>Ниже — про паскаль; про работу с файлами в питоне см. текст на уровне 2А.</p>\n<p>На школьной олимпиаде, вполне возможно, вам придется вводить данные не с клавиатуры, а из указанного в условии задачи файла, и аналогично выводить данные не на экран, а в файл. В паскале это делается это так: вы заводите переменную специального типа <code>text</code>, а потом командами <code>assign</code> и <code>reset/rewrite</code> "открываете" файл на чтение/запись соответственно. Далее в командах <code>read/readln</code> и <code>write/writeln</code> <i>первым</i> аргументом указываете файл (переменную), откуда читать или куда выводить. После работы с файлом "закрываете" его командой <code>close</code>. При этом тогда ваша программа <b>не должна ничего вообще</b> читать с клавиатуры! Т.е. по нажатию Ctrl-F9 черное окошко должно мелькать на мгновение, после чего должно возвращаться синее окошко паскаля.</p>\n\n<p>Пример кода, который читает из файла <code>input.txt</code> два числа и выводит в файл <code>output.txt</code> их сумму:</p>\n<pre>var f,g:text;\n    a,b:integer;\nbegin\nassign(f,\'input.txt\');reset(f); // "открыли" файл input.txt для чтения\nread(f,a,b); // из файла f прочитали числа a и b\nclose(f); // "закрыли" файл\nassign(g,\'output.txt\');rewrite(g); // "открыли" файл output.txt для записи\nwriteln(g,a+b); // вывели сумму чисел в файл g\nclose(g); // "закрыли" файл\nend.\n</pre>\n\n<p>Как тестировать такую программу? В оболочке паскаля вы можете открыть несколько окон (через меню File - Open). В одном набираете программу (и сохраняете файл как <code>чтонибудь.pas</code>), в другом редактируете входной файл (и сохраняете как требуется по условию), в третьем открываете выходной файл.</p>\n\n<p>Переключаться между окнами можно, нажав Alt-0 — будет окошко со списком всех открытых файлов. Можно также заметь в правом верхнем углу каждого окошка цифру (1, 2, 3 и т.д.) и переключаться в это окошко, нажав Alt-1, Alt-2 и т.п. Я, например, предпочитаю иметь в окошке "1" исходный текст программы, в окошке "2" входной файл, в окошке "3" выходной файл. Я не советую вам иметь много открытых окон — оставляйте открытыми только те окна, которые нужны для текущей задачи. Когда переключаетесь на новую задачу, закрывайте все окна от старой задачи и открывайте окна для новой задачи.</p>\n\n<p>Соответственно, теперь вводите тест в окошко с входным файлом, не забываете его сохранить (!), и запускаете программу. Если в одном из окон у вас открыт выходной файл, то после запуска программы паскаль вам будет выводить диалоговое окно вида "File output.txt has changed on disk. Reload?" ("Файл output.txt изменился на диске. Перезагрузить?"; точный английский текст я не помню.) Нажмите "yes" — и в окошке с выходным файлом его содержимое автоматически обновится.</p>\n\n<p>Тестировать программу так даже удобнее, чем при вводе с клавиатуры: если вы отлаживаете программу на конкретном тесте, то вам не надо его вводить заново при каждом запуске.</p>\n\n<p>Обязательно попробуйте работать с файлами <b>до олимпиады</b>!. Если на олимпиаде у вас не получается быстро наладить работу с файлами, то лучше попросите разрешения работать по старинке — с клавиатуры и на экран. Не теряйте время на то, чтобы разобраться с файлами на олимпиаде!</p>\n\n<h4>Алгоритмы</h4>\n<p>В основном большинство задач на школьной олимпиаде вряд ли будут требовать специальных знаний, особенных алгоритмов. Задачи, скорее всего, будут требовать только аккуратного размышления и аккуратной реализации; ничего такого, что мы с вами не проходили, не потребуется. Возможно, придется пописать что-то на бумажке, сделать какое-то моделирование и т.п. Все будет довольно похоже на задачи уровней 1В и 1Г. </p>\n\n<p>В наиболее сложных задачах, возможно, потребуются алгоритмы, обсуждаемые в уровнях 2А и 2Б — в первую очередь НОД, сортировки, простые числа и разложения на множители, может быть ДП. Если у вас уже решено хотя бы задач 10-15 уровней 1В/1Г, можете переключиться на эти темы на уровне 2, но не тратьте много времени — лучше порешайте еще задач с уровней 1В/1Г и научитесь тестировать задачи. Конечно, если у вас уже много задач уровней 1В/1Г решено и вы уже находитесь на уровне 2, то изучите эти темы.</p>\n\n<h4>Сложность алгоритмов</h4>\n<p>Важной вещью может оказаться определение того, насколько долго работает придуманный вами алгоритм на больших входных данных. Это обязательно стоит проверить, в идеале — еще до написания программы. Для этого существует понятие <i>сложности алгоритма</i>, про нее можно почитать <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/02_complexity.pdf">тут</a> (в первую очередь читайте часть 1; самое главное — в абзаце, который на стыке страниц 2 и 3, про 100 миллионов действий).\n\n</p><h4>Используйте компьютер по полной</h4>\n<p>Помните, что вы можете на компьютере не только писать программы-решения задач. Если вы, например, думаете над задачей, и вам стало важно узнать, чему равно 163*634, то не надо умножать числа в столбик. Воспользуйтесь калькулятором на компьютере или напишите отдельную программу из одного writeln/print. Если у вас в задаче описан какой-то процесс (есть N бактерий, они размножаются по каким-нибудь правилам, или что-нибудь подобное), не бойтесь написать отдельную программу, которая промоделирует этот процесс, выведет что вам надо, чтобы вы могли поискать какие-нибудь закономерности. И так далее. Не бойтесь писать вспомогательные программы.</p>\n\n<h4>Ищите закономерности</h4>\n<p>Наше жюри иногда любит давать задачи, в которых легко находится та или иная закономерность. Если вы не можете решить какую-то задачу для всех входных данных, то решите ее на бумажке для маленьких входных данных (или, с учетом предыдущего пункта — напишите простую программу, которая решит задачу для маленьких и средних входных данных), и посмотрите на ответы и решения глазами: вдруг вы найдете какую-нибудь закономерность.</p>\n\n<h4>Знакомые задачи</h4>\n<p>Авторы задач школьной олимпиады не очень изобретательны и нередко у них появляются задачи, которые вы уже знаете или которые очень похожи на что-то, что вы уже решали. (Например, год назад то ли на школьной, то ли на районной олимпиаде была задача "Автобусы" из наших "Продвинутых задач на условный оператор". Я не думаю, что авторы задач пользовались этим сайтом, скорее всего они сами независимо придумали эту задачу.) Не удивляйтесь, но решите-таки.</p>\n\n<h4>Если чего-то не знаете, ищите обходные пути</h4>\n<p>Если вы понимаете, что в задаче требуется что-то, чего вы не помните, не знаете, "не проходили" — попробуйте придумать обходной путь — как сделать то же самое, пусть сложнее, но с использованием тех вещей, которые вы знаете. Или как вообще решить задачу по-другому, не используя это знание вообще. Например, если вы не помните, какая функция переводит число в строку — подумайте, как написать такую функцию самостоятельно (подсказка: по аналогии со всякими задачами про цифры с уровня 1А). Или подумайте, а может быть, вам и не надо переводить число в строку вообще? Если вы поняли, что вам нужна сортировка, но вы не знаете, как ее делать — попробуйте или придумать, или придумать, как решать задачу без сортировки. Зачастую это получится. И так далее.</p>\n\n<h4>Здравый смысл</h4>\n<p>Ну и главное. Применяйте здравый смысл. Думайте головой, постоянно думайте над тем, что вы делаете, и помните, что <b>ваша цель на олимпиаде — как можно лучше выступить по сумме заданий.</b></p>\n\n<p>В частности, тут я написал много рекомендаций, дал ссылки на много текстов. Если вы их все прочитаете и поймете — хорошо. Но если вы успели прочитать не все, или не во всем разобрались — не так страшно. Если вы чего-то не поняли, не применяйте это на олимпиаде (ну или точнее, подумайте, не сможете ли вы на олимпиаде быстро допонимать). Не суетитесь и не переживайте, а спокойно решайте задачи.</p></div>', 'title': 'Про школьную олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_4', 'order': 5, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_5', 'order': 6, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про командную олимпиаду</h1>\n<p><b>Это относится только к нижегородским школьникам. В других регионах свои отборочные олимпиады, и я не буду собирать команды из школьников других регионов. Тем не менее, если вы не из Нижегородской области, у вас нет команды, и вы хотите поучаствовать вместе с другими школьниками, занимающимися на моем курсе, можете мне написать, я может быть стыкую вас с другими такими желающими (если такие "другие желающие" будут).</b></p>\n\n<p>В ноябре в в Нижегородском техническом университете (политехе) состоится <a href="http://www.nnstuicpc.ru">Командная олимпиада школьников Нижегородской области по программированию</a>, она же — отбор на <a href="http://neerc.ifmo.ru/school/russia-team/index.html">Всероссийскую командную олимпиаду школьников по программированию (ВКОШП)</a>. Участвуют команды из трех человек, подробные правила будут в информационном письме на сайте нижегородской олимпиады и на сайте ВКОШПа, они несколько отличаются от классических школьных олимпиад (пока на сайте нижегородской олимпиады еще ничего нет). Также подробные правила я могу рассказать желающим.</p>\n\n<p>Желающие могут участвовать, а именно:</p><p>\n</p><ol>\n<li>Из достаточно сильных школьников (примерно уровень 2В и выше), которые занимаются в моем курсе, я составлю команды. Я сам свяжусь с соответствующими школьниками в ближайшее время, или вы можете написать мне.</li>\n<li>Остальные могут составить команды сами. Сообщите мне на всякий случай, что вы хотите участвовать, возможно, я найду для вас команду, но в общем случае я не готов администрировать ваши команды (подавать заявку и т.п.). Тем не менее, во-первых, если в вашей школе есть много желающих участвовать, то можете подать заявку от школы (договориться с вашим учителем информатики и т.п.); во-вторых, если вы сами соберетесь в какую-нибудь сборную команду, даже из разных школ, то можете подавать заявку полностью самостоятельно. Я считаю, что вам может иметь смысл участвовать, если вы уже уровень 1В или выше, но, конечно, самостоятельно вы вольны подавать заявку как хотите.</li>\n</ol>\n\n<p>Уровень задач на олимпиаде, я думаю, стоит ожидать такой: будет одна-две простых задачи уровня школьной олимпиады (уровня 1Б), будет большая группа задач средней сложности — примерно от уровня районной до уровня областной олимпиады (примерно сложности 1В-3В), и будет одна-две очень сложные задачи. При этом, как всегда, не следует думать, что надо решать все задачи: думаю, основная борьба будет на уровне, где решены примерно половина задач. На сайте командной олимпиады вы можете посмотреть примеры задач прошлых лет (правда, если вы хотите участвовать в тренировках — см. ниже — то особенно не вникайте в задачи прошлых лет — мы как-нибудь напишем по ним тренировку).</p>\n\n<p>Несколько лучших команд с нижегородской олимпиады проходят на Всероссийскую командную олимпиаду школьников по программированию (ВКОШП). Сразу предупреждаю: во-первых, в области есть сильные команды, поэтому самостоятельно собранным командам будет довольно сложно пройти на ВКШОП. Во-вторых, если вы и пройдете на ВКОШП, то возможно поездку на ВКОШП вам никто не оплатит — возможно, надо будет ехать за свой счет или самим искать финансирование (говорить со школой и т.п.) (К моим командам — тех, у кого есть высокий шанс пройти на ВКОШП, я об этом предупрежу. Остальные, если вдруг пройдете, то будем думать.) (Возможно, финансирование все-таки найдем.)</p>\n\n<p>Но участвовать имеет смысл и даже без цели прохода на ВКОШП. Во-первых, это интересно и весело, во-вторых, дипломы и (небольшие) призы получат не только те команды, которые пройдут на ВКОШП.</p>\n\n<p>По воскресеньям параллельно с обычными занятиями скорее всего будут командные тренировки к командной олимпиаде. Тренировки длиннее по времени, чем обычные занятия (4-6 часов), время может быть сдвинуто относительно основных занятий — следите за объявлениями на страничке курса. Командам из п. 1 выше я настоятельно рекомендую участвовать (и я напишу в личку); если будут желающие участвовать из самостоятельно-собранных команд, то напишите мне.</p></div>', 'title': 'Про командную олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_6', 'order': 7, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_7', 'order': 8, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про районную/городскую олимпиаду</h1>\n<p><font color="red">Эта информация касается Нижегородской области. В других регионах могут быть отличия.</font></p>\n\n<p>Районная олимпиада, она же городская в ряде городов области (формально "муниципальный этап Всероссийской олимпиады школьников") пройдет, по текущей информации, <b>12 декабря</b>. Участие в ней принимают те, кто хорошо написал школьную олимпиаду. Критериев прохода со школьной на районную я точно не знаю, уточняйте у своих учителей. Кроме того, в олимпиаде принимают участие призеры и победители районной олимпиады прошлого года, даже если они не участвовали в школьной олимпиаде этого года.</p>\n\n<p>Участники районной олимпиады, хорошо ее написавшие, проходят на областную. Механизм здесь примерно следующий: все районы пишут по одним и тем же задачам. Все результаты сводятся в сводную таблица по всем районам области. В этой таблице проводят границу, и все школьники, набравшие больше определенного количества баллов, проходят на область. Это пороговое количество баллов определяется тем, чтобы на область прошло столько школьников, сколько область может принять; по разным классам порог разный.</p>\n\n<p>Чего стоит ожидать на районной олимпиаде? Примерно того же, что и на школьной (см. <a href="/material/module-16024_3" onclick="window.goto(\'/material/module-16024_3\')();return false;">соответствующий текст</a>), возможно, задачи будут сложнее. На страничке курса давно висит ссылка на <a href="https://www.dropbox.com/s/brq5dotrg4lmym2/raion_archive.pdf?dl=0">архив прошлогодних районных олимпиад</a>, посмотрите задачи там, очень рекомендую над ними подумать. Я не думаю, что будут требоваться какие-то более продвинутые знания, но прочитайте текст про школьную олимпиаду еще раз и учитывайте то, что там написано. На районной олимпиаде более вероятно, чем на школьной, что потребуются алгоритмы уровня 2-3. По опыту прошлых лет, может быть одна реально сложная задача. (Но в ее практически никто не решает.)</p>\n\n<p>Ближе к делу (8 декабря в ННГУ и 4 декабря в лицее 40) я проведу отдельное занятие, посвященное подготовке к районной олимпиаде.</p>\n\n<p>С позапозапрошлого года задачи районной олимпиады составляет другое жюри, поэтому задачи в этом году могут быть не похожими на те, что были четыре года назад и более. Обратите особое внимание на задачи за последние три года.</p>\n\n<p>Обязательно убедитесь заранее (спросите учителей в школе, чтобы они спросили организаторов районной олимпиады), что вам предоставят нужное ПО (нужный Питон, или Паскаль, или c++ с нужной средой и т.д.). Если есть какие-то проблемы, звоните, но это очень хорошо бы сделать заранее.</p>\n\n<p>Последние два года районная олимпиада проходила в системе Яндекс.Контест, скорее всего и в этом году будет так же. Тогда вы сможете в течение тура отправлять решения на проверку в тестирующую систему и узнавать результаты. Скорее всего, по каждой задаче будет выбрано ваше лучшее решение (набирающее больше всего баллов), и именно этот результат и будет вашим результатом по задаче. Я не знаю, будут ли в этом году штрафы за неверные попытки, постараюсь узнать ближе к делу, в прошлом году не было. </p>\n\n<p>Количество отправок решений на проверку скорее всего будет ограничено, оно будет указано в тестирующей системе. В прошлом году в качестве примера было приведено ограничение в 100 попыток, что на самом деле очень много и фактически эквивалентно бесконечному количеству попыток (вряд ли кто из вас реально израсходует 100 попыток), но в реальности может оказаться меньше.</p>\n\n<p>Это обозначает, что все будет довольно похоже на то, как вы работаете на сайте (только, в отличие от сайта, частичные решения тоже оцениваются). Если у вас программа не прошла тесты, вы можете ее пересдать. Поэтому, в частности, если за неудачные попытки нет штрафов, то не обязательно поначалу тщательно тестировать простые задачи — потестируйте немного, отправьте решение на проверку и, если оно набирает полный балл, то забудьте про эту задачу. Вот в противоположном случае тестируйте внимательнее.</p>\n\n<p>Возможно, будут еще какие-то неожиданности и отличия, будьте к ним готовы. По идее вам должны заранее объявить полные правила, хотя по факту это бывает редко. Но можете заранее спросить в школе, нет ли у них данных о том, как будет проводиться олимпиада; я со своей стороны попробую это тоже выяснить.</p>\n\n<p>Если же у вас в районе внезапно проводят олимпиаду не в Яндекс.Контесте, то требуйте Я.Контест и/или срочно звоните мне. Если у вас будут проводить по старинке, с ручным тестированием, то вы сразу оказываетесь в заведомо проигрышном положении по сравнению с другими районами — в других районах участники будут узнавать результаты в течение тура и смогут исправлять решения, а у вас — нет. Поэтому требуйте Яндекс.Контест и отстаивайте свои права.</p>\n\n<p>Важный момент — не полагайтесь на Яндекс.Контест. Будьте готовы в случае чего сдавать решения по старинке в конце тура. В частности, не теряйте свои решения! Если вы отправили решение в Контест, не удаляйте его у себя, и уж тем более не начинайте решать другую задачу в том же файле. Контест может заглючить, может потерять ваши решения, и т.д. — если и вы их тоже потеряете, все будет совсем плохо. А если решения останутся у вас на компьютере, вы хотя бы сможете потом что-то поапеллировать.</p>\n</div>', 'title': 'Про районную/городскую олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_8', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'reg_about', 'order': 10, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix">\n\n<h1>Про областную олимпиаду</h1>\n\n<p><i>(C) Петр Калинин, 2015-20. Этот текст можно свободно распространять на условиях лицензии Creative Commons Attribution-ShareAlike 2.0 (CC-BY-SA). Пожалуйста, при ссылках на этот текст используйте адрес <a href="/material/reg_about" onclick="window.goto(\'/material/reg_about\')();return false;">algoprog.ru/material/reg_about</a></i>\n\n</p><p><font color="red">Часть информации касается только Нижегородской области, часть относится ко всем регионам.</font></p>\n\n<p>Областная олимпиада по информатике (формально — региональный этап Всероссийской олимпиады) пройдет в два тура 16 и 18 января в ННГУ им. Лобачевского.</p>\n\n<h2>Отбор на область</h2>\n\n<p>Отбор на нее осуществляется следующим образом. Решения районной (она же городская в ряде городов области — Дзержинске, Арзамасе и т.д.) олимпиады сводятся по каждому классу в единую таблицу, и в этой таблице проводится граница: для каждого класса выбирается проходной балл, и все, кто набрал столько баллов или больше, проходит на область. Кроме того, вне зависимости от результатов районной олимпиады, на областную проходят призеры прошлогодней областной олимпиады.</p>\n\n<p>В этом году проходные баллы — 200 баллов по каждому классу. На <a href="http://imc.codnn.ru/vserossijskaya-olimpiada-shkolnikov/">сайте ЦОДа</a> есть итоговые результаты и списки участников областной олимпиады (где нужен пароль к архиву — пароль "2019"); в <a href="https://docs.google.com/spreadsheets/d/1Li__hzA7ZjyBR1y-2Nej0tW8TEesP-IG6gbYaPJk81s/edit#gid=0">отдельном гуглодоке</a> я свел результаты из Я.Контеста с результатами с сайта ЦОДа.</p>\n\n<h2>Формат областной олимпиады</h2>\n<p>Ну, во-первых, областная олимпиада — это фактически первая серьезная олимпиада для многих из вас. Школьная и районная олимпиады — это скорее игрушки, как по тому, какие задачи предлагаются, так и по организации вообще и по сложности прохода на следующий этап. Сильные школьники должны проходить на область "на классе", т.е. абсолютно уверенно, не прилагая особенных усилий, чисто за счет уже давно имеющихся навыков. Областная же олимпиада — это совсем другое, там и задачи ощутимо более сложные, и организация лучше. Областная олимпиада проходит в одно и то же время по одним и тем же задачам по всей России, так что это фактически крупнейшая олимпиада по информатике в России.</p>\n\n<p>Областная олимпиада проходит в два тура по пять часов каждый. На каждом туре вам, скорее всего, будут предложены 4 задачи. Примеры прошлогодних задач вы можете посмотреть и попробовать посдавать на этом сайте, ссылка есть в конце раздела "О курсе", в разделе "Архивы старых олимпиад". Но сначала прочитайте до конца этот текст.</p>\n\n<p>Вообще, если раньше вы в областных олимпиадах не участвовали, то я рекомендую вам в зимние каникулы найти свободные пять часов и сесть и порешать какой-нибудь тур с одной из олимпиад последних лет, представляя, что вы реально сидите на олимпиаде. Еще лучше сделать это пару раз. Во-первых, если вы ни разу раньше не писали пятичасовые туры, это вам будет полезно как минимум с точки зрения понимания того, насколько вам сложно просто думать над задачами 5 часов подряд. Во-вторых, вы поймете примерно, чего вы можете ожидать на области.</p>\n\n<h2>Языки программирования</h2>\n<p>Набор языков программирования будет определяться жюри. Почти наверняка будут Free Pascal и C++ (Visual Studio, по идее должен быть минимум C++11). Скорее всего будут C# и Python. Будет ли Pascal ABC, я не знаю. Обычно жюри старается вкючить разумный набор языков, но и вы со своей стороны можете попросить школу официально заявить вам нужный язык и проверить, что он будет. С другой стороны, вроде последние годы серьезных проблем с языками на области не было.</p>\n\n<p>(Вообще, по поводу общения с жюри в целом — я, конечно, могу что-то написать в жюри, и жюри зачастую прислушивается ко мне, но надо понимать, что я не являюсь официальным представителем вас, вашей школы и т.д., поэтому жюри может и полностью проигнорировать мой вопрос. Поэтому помимо того, что я могу общаться с жюри неофициально, вы лично, а также ваши родители и ваша школа могут общаться с жюри официально, и в случае каких-то серьезных проблем это может быть полезно.)</p>\n\n<h2>Система оценивания</h2>\n<p>До 2014<sup>1</sup> года включительно областная олимпиада оценивалась очень похоже на  школьную: вы пять часов писали задачи, после чего жюри брало ваши решения и проверяло на заранее подготовленных тестах; при этом каждый тест оценивался отдельно. В процессе этой проверки вы уже ничего не могли исправить в своих решениях.</p>\n\n<p><sup>1</sup> Областная олимпиада всегда проводится после Нового года, поэтому здесь и ниже, говоря «олимпиада 2014 года», я имею в виду олимпиаду 2013-14 уч. года, и аналогично про другие годы.</p>\n\n<p>С 2015 года введена новая система — так называемая система с подзадачами и фидбеком (обратной связью). Она работает примерно следующим образом.</p>\n\n<h4>Подзадачи</h4>\n\n<p>Во-первых, в каждой задаче выделяются <i>подзадачи</i> — вариации той же задачи, как правило, с меньшими ограничениями или с дополнительными условиями. Например, если в основной задаче сказано $1\\leq N\\leq 10000$, $1\\leq K \\leq 10$, и еще задан массив $a$, а в задаче идет речь про то, что надо как-то ходить направо и налево, то подзадачи могут быть, например, такими:</p>\n<ul>\n<li>Подзадача 1: $N\\leq 100$ и $K=1$;</li>\n<li>Подзадача 2: $N\\leq 100$, но $K&gt;1$;</li>\n<li>Подзадача 3: $K=1$, но $N&gt;100$;</li>\n<li>Подзадача 4: все элементы массива $a$ одинаковы;</li>\n<li>Подзадача 5: в оптимальном решении никогда не надо ходить налево;</li>\n<li>Подзадача 6: никаких дополнительных ограничений нет.</li>\n</ul>\n<p>В каждой подзадаче все не указанные явно ограничения подразумеваются взятыми из основной задачи, например, в четвертой подзадаче подразумевается, что $N\\leq 10000$, $K\\leq 10$ и нет никаких дополнительных условий по тому, как выглядит ответ.</p>\n\n<p>Таким образом, подзадачи — это упрощенные варианты основной задачи. Как правило, для каждой подзадачи существует свой алгоритм решения, который проще, чем алгоритм, решающий полную задачу. Поэтому, если вы можете написать решение полной задачи, то пишите его (почти всегда у задачи есть естественное "полное" решение, которое автоматически решает и подзадачи, поэтому если вы можете без проблем его написать, то напишите, и не думайте про подзадачи), а если нет, то пишите решения подзадач.</p>\n\n<p>При этом подзадачи оцениваются хитро. В некоторых подзадачах, как и раньше, каждый тест оценивается независимо: за каждый тест начисляется несколько баллов, и чем больше вы тестов прошли, тем больше у вас баллов. Но в некоторых подзадачах (обычно в более простых) баллы начисляются по принципу "всё или ничего", т.е. вы получаете не ноль баллов за эту подзадачу <b>только если у вас прошли все тесты этой подзадачи</b>. Т.е. если вы прошли все тесты этой подзадачи, вы получаете полный балл за нее, иначе вы получаете ноль баллов за эту подзадачу. Собственно сами подзадачи обычно оцениваются независимо, но бывает даже так, что очередная подзадача оценивается только если в предыдущих подзадачах все тесты пройдены. Правила оценивания каждой подзадачи указаны в условиях; посмотрите примеры задач прошлых лет, чтобы понять, как это.</p>\n\n<p>Это обозначает, что вам как правило нет смысла писать "какие-то" решения. Вы должны написать решение, которое как минимум абсолютно корректно решает как минимум простые подзадачи. Навыки тестирования задач становятся очень важны; если вы все еще не читали <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">мой текст</a> про это, то прочитайте.</p>\n\n<h4>Фидбек</h4>\n\n<p>Но, чтобы компенсировать увеличение сложности от введения подзадач, также вводится так называемый фидбек. А именно, <b>в течение тура вы можете отправлять ваши решения на проверку</b>. Решения будут проверяться на всех финальных тестах, и после проверки вы можете попросить, чтобы вам сообщили результат этой проверки. Скорее всего, у вас на компьютере будет стоять клиент тестирующей системы нашего жюри, вы через этот клиент будете отправлять решения, и в нем же будет какая-нибудь кнопочка типа "узнать результат этого решения". Соответственно, узнав результат, вы можете дальше планировать свою работу.</p>\n\n<p>Бывают три варианта того, что вам сообщают в качестве результата, и это зависит не только от задачи, но и от подзадачи. В каких-то подзадачах вам могут сообщать информацию по каждому тесту, прошел он или нет (или даже если не прошел, то почему — неправильный ответ, превышение предела времени и т.п. — всё очень похоже на то, что вы видите на этом сайте на закладке "результаты"). В других подзадачах вам могут только сообщать полный балл за эту подзадачу. В третьих подзадачах — первый непройденный тест и вердикт на нем (как на командных олимпиадах). Что именно вам сообщают, обычно указывается в условии.</p>\n\n<p>При этом может быть установлено ограничение на количество посылок вида, например, «по каждой задаче за весь тур вы можете сделать не более 50 попыток», или что-то подобное. Тогда, после того, как у вас кончились эти 50 попыток, вы, видимо, больше не можете решать эту задачу.</p>\n\n<h4>Итоговая оценка</h4>\n\n<p>Итоговая оценка за каждую задачу — это максимальный балл из всех отправленных вами решений. Итоговый суммарный результат, конечно, есть сумма баллов по всем задачам.</p>\n\n<p>Тут важны два момента. Во-первых, учитываются только <i>отправленные</i> в систему решения, а не просто сохраненные вами в вашем рабочем каталоге. Во-вторых, если одно из ваших решений набирает баллы только по одной подзадаче, а второе — только по второй, но вы не сдали решения, которое набирало бы баллы по обеим подзадачам, то вы получите баллы только за одну подзадачу (от того решения, которое набирает больше баллов). Аналогично если одно решение проходит только два теста из некоторой подзадачи, в которой все тесты оцениваются независимо, а другое решение проходит только два других теста, то вы не получите суммарного балла.</p>\n\n<h4>Тесты из условия</h4>\n<p>Раньше присутстввало требование, что ваше решение <b>обязано проходить все тесты из условия</b>, даже если эти тесты не попадают под ограничения той подзадачи, на которую вы нацелились. Например, в примере подзадач, приведенном выше, если в условии есть тест с $K=2$, то, даже если вы придумали только решение для $K=1$ и рассчитываете только на баллы за соответствующую подзадачу, то все равно от вас могут потребовать, чтобы вы прошли тест из условия с $K=2$. Если хотя бы один тест из условия не пройден, то вы получаете ноль баллов за это решение.</p>\n\n<p>В этом году в официальных требованиях про это ничего не написано. Но я не буду удивлен, если в тестирующей системе это будет, поэтому будьте к этому готовы.</p>\n\n<p>В таком случае обязательно убедитесь, что вы умеете проходить все тесты из условия. Если надо, то добавьте соответствующий <code>if</code>, и просто напишите <code>writeln</code> с тем ответом, который указан в условии. Типа того:\n</p><pre>// пусть в условии есть следующие тесты:\n// n=3, k=1, решается основным алгоритмом\n// n=3, k=2, ответ 42\n// n=5, k=2, ответ 137\nread(n,k);\nif k=2 then begin\n    if n=3 then writeln(42)\n    else writeln(137);\n    halt;\nend;\n// дальше решение для k=1\n</pre>\n<p>В условии обычно не так много тестов, и не так уж и сложно написать ряд <code>if</code>\'ов, которые будут все эти тесты различать.</p>\n\n<h4>Явный if</h4>\n<p>Вот выше я уже написал, что тесты из условия можно отличать, написав явный <code>if</code> и <code>writeln</code>. Ничего в этом зазорного нет. Аналогично вы можете писать явный <code>if</code> для различения подзадач. Если вы придумали одно решение для $K=1$ и еще одно решение для случая, когда все элементы массива $a$ равны, то не стесняйтесь написать в программе <code>if</code>, отличающий эти два случая, и запускать разные алгоритмы в зависимости от теста — именно так, если у вас есть решения двух подзадач, вы их можете объединить в одно решение.</p>\n\n<p>Кстати, еще важный момент — если ваша программа видит, что ей попался тест, который не попадает ни под одну подзадачу из тех, для которых у вас есть решение, то не надо сразу вылетать. Хуже не будет, если вы для этого теста запустите решение какой-нибудь подзадачи, вдруг тест-другой так и пройдут.</p>\n\n<h2>Особенности задач</h2>\n<p>Задачи на областной олимпиаде могут быть сильно варьирующимися по сложности. Как правило, самая простая задача будет действительно простой, не требующей ничего знать, примерно уровня 1В. Самая же сложная будет очень сложной, может требовать хитрых знаний, может быть даже уровня эдак 11-го; вообще, год из года только несколько человек по всей России на областных набирают полный балл (800).</p>\n\n<p>Обычно задачи в туре устроены так: первая задача самая простая. Она обычно не требует ничего знать; вы ее должны решать на полный балл. Вторая задача чуть посложнее. Ее тоже хорошо бы решить на полный балл, но это получается не всегда. Третья обычно довольно сложная, но для самых крутых из вас она вполне должна быть по силам. Четвертая же задача обычно очень сложная, почти наверняка никто в области не решит обе четвертых задачи.</p>\n\n<p>Но бывает по-разному. То, что написано в предыдущем абзаце — это наиболее распространенная схема, см, например, первый тур 2014 года как один из самых ярких примеров таких сильно распределенных по сложности задач. Но бывает и так (и последние годы все чаще и чаще), что распределение задач по сложности намного менее выражено. Вполне может первая задача оказаться не самой простой, а последняя вполне посильной; вполне может вторая задача оказаться сравнимой по сложности или даже проще первой. Тем не менее обычно задачи все-таки идут более-менее в порядке возрастания сложности.</p>\n\n<p>Но всегда помните, что в каждой задаче есть подзадачи! Как правило, даже в самых сложных задачах первые подзадачи очень простые; часто в них достаточно перебрать все возможные решения парой вложенных <code>for</code>\'ов или т.п.; в крайнем случае написать рекурсивный перебор или какой-нибудь простой алгоритм. Поэтому обязательно решайте не только первые задачи туров, но и последние (пишите в них простые подзадачи)! Обязательно постарайтесь, чтобы <b>по каждой задаче у вас было ненулевое количество баллов!</b></p>\n\n<p>Вообще, на самом деле, как показывает опыт, вполне реально в каждом туре набрать хотя бы 200 баллов, поэтому и постарайтесь это сделать. В идеале надо решать полностью первые две задачи каждого тура, но, даже если не получилось, то недостающие до 200 баллы можно набрать в более сложных задачах. 400 баллов в сумме за два тура — это вполне достойный результат. (Конечно, это общая рекомендация; ясно, что сильные школьники должны набирать больше, а для не очень сильных и 200-300 в сумме будет хорошо. Но тем не менее баллов 150 в каждом туре обычно можно набрать вообще не думая, поэтому 200 за тур — это хорошая цель для большинства из вас.)</p>\n\n<p>Для сравнения, баллы прохождения на собственно Всероссийскую олимпиаду обычно примерно такие: по 9 классам — 450-580, по 10 классам — 500-600, по 11 классам 550-650. Проход на Россию — это очень и очень хороший результат. (Ну, для всех, кроме тех, кто на Россию уже ездил :) )</p>\n\n<p>Возможно, будет ввод из файла, хотя скорее всего будет будет только ввод с клавиатуры.</p>\n\n<h2>Про языки программирования</h2>\n\n<p>Про питон: на питоне вы, возможно, не сможете в принципе решить отдельные задачи на полный балл (возможно, не сможете решить вторую, а может быть, даже первую) — потому что решение не будет успевать по времени. (Но это не обозначает, что любые проблемы в задаче надо списывать на то, что это питон. Имейте в виду то, что на питоне может не успевать по времени; полезно оценить сложность алгоритма и прикинуть, успел ли бы такой алгоритм на C++; но если вы придумали явно неоптимальный алгоритм, то надо все-таки придумать нормальный алгоритм.) Но эту невозможность решить задачи на полный балл вы можете компенсировать тем, что на питоне вы можете заметно быстрее и легче писать небольшие подзадачи в сложных задачах, да и первую задачу вы возможно напишите быстрее, чем ваши друзья, пишущие на C++. С другой стороны, если вы хотите иметь хороший результат на областной олимпиаде, то, конечно, надо бы уже знать C++ (но если вы хотите иметь хороший результат, то наверное вы уже минимум на 3 уровне, а тогда про C++ вы уже читали).</p>\n\n<p>Если же вы знаете и C++, и питон, то, конечно, по каждой задаче выбирайте, на каком языке лучше писать.</p>\n\n<p>Паскаль по производительности сравним с C++, поэтому там проблем со временем работы быть не должно.</p>\n\n<h2>Тактика поведения на туре</h2>\n<p>Во-первых, все мои рекомендации из <a href="/material/module-15955_1" onclick="window.goto(\'/material/module-15955_1\')();return false;">текста про школьную олимпиаду</a> справедливы. Прочитайте все условия сразу, еще до того, как что-то программировать. Контролируйте время, не зависайте над одной задачей надолго. Как я уже писал выше и как писал в тексте про школьную олимпиаду, старайтесь, чтобы по всем задачам у вас был не ноль. Сохраняйте решения, чтобы, если у вас зависнет компьютер или выключится электричество, решения не пропали; вообще, полезно привыкнуть нажимать "сохранить" (F2 или Ctrl-S в разных средах программирования) каждые минуту-другую.</p>\n\n<p>Обязательно внимательно сравнивать ответ с примером. Один раз был случай, когда участник выводил два числа на двух разных строках, а в задаче требовалось вывести два числа на одной строке — и тестирующая система нашего местного жюри отказывалась засчитывать это решение (хотя это и не соответствовало требованиям центрального всероссийского жюри). Конечно, это вина жюри, но школьнику от этого было не сильно легче (после тура мы отапеллировали эти баллы, но время на туре было все равно потрачено). Поэтому если вы видите, что ваша программа выводит не совсем то, что в примере, тщательно перепроверьте, правда ли, что ваше решение правильное.</p>\n\n<p>Но наличие фидбека и четко выделенных подзадач вносит свои ньюансы в тактику. Во-первых, если вы видите, что задача простая, то напишите ее, сдайте, убедитесь, что у вас 100 баллов, и забудьте про нее вообще. Более конкретно: если вы считаете, что какая-то задача простая, если вы думаете, что там особенно негде ошибиться, то напишите ее, слегка потестируйте, не тестируйте подробно (!) и сдайте. Если у вас 100, то забудьте про нее. Если же нет, то начинайте тестировать. Не тратьте время на простые задачи, если вы можете сразу проверить, работают они или нет. (Если есть ограничение на количество попыток по задаче, то сказанное выше справедливо, если у вас еще было немного попыток по задаче. В таком случае помните про ограничение количества попыток по задаче; чем меньше у вас остается попыток, тем тщательнее тестируйте и аккуратнее расходуйте попытки.)</p>\n\n<p>В более сложных задачах часто бывает полезно написать первую подзадачу, если она простая и пишется недолго. А именно, подумайте над сложной задачей. Если сразу ничего, что могло бы решить задачу полностью, в голову не приходит, то попробуйте придумать решение к первой подзадаче. Если получилось придумать простое решение, то напишите его и сдайте — у вас уже станет не ноль баллов, и заодно вы будете уверены, что вы понимаете задачу верно. Наконец, простое решение потом можно использовать для стресс-тестов. Но это только для не самых простых задач; в простых задачах не тратьте время на подзадачи, если вы можете написать полностью задачу!</p>\n\n<p>Наоборот, если вы написали "полное" решение, оно на ваших тестах работает, но у жюри упорно набирает мало баллов, то можно написать простое решение первой подзадачи, отправить его, убедиться, что уж оно-то верное, и дальше написать стресс-тестирование. Очень полезно заранее научиться стресс-тестированию (см. еще раз <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">текст про тестирование задач</a>)!</p>\n\n<p>Контролируйте время до конца тура. Если вы придумали сложное решение, которое может решить сложную задачу полностью, но видите, что вы рискуете не успеть его дописать (и помните, что вам наверняка придется его отлаживать и тестировать! — вряд ли оно сразу 100 наберет), то может быть проще прерваться и написать простое решение по той же задаче, чтобы уж гарантированно иметь не ноль.</p>\n\n<p>Если есть ограничение на количество попыток по задаче, то контролируйте количество оставшихся попыток. 50 попыток — это реально много и в подавляющем большинстве случаев достаточно, но если вы будете их активно расходовать, то они могут внезапно кончиться. Вообще, по всем задачам, кроме самых сложных, думаю, реально использовать не больше 5 попыток за тур.</p>\n\n<p>Конечно, даже если самую простую подзадачу вы уже решили, это не значит, что надо сразу бросаться на полное решение — все вышеописанные соображения применимы, но к следующим подзадачам. Если не получается придумать или написать полное решение, то напишите решение к еще одной подзадаче, объедините с написанным ранее и сдайте. Помните, что подзадачи сделаны не просто так, каждая подзадача имеет какое-то более простое решение.</p>\n\n<p>Не теряйте решения! Вообще, постарайтесь сохранять все свои решения, которые вы отправляете в систему и которые там набирают какие-то баллы. Будет очень неприятно, если вы решили простую подзадачу, потом стали писать общий алгоритм, он в результате не заработал даже для простой подзадачи, а решения простой подзадачи у вас уже нет. Конечно, правило оценки лучшего решения вас частично от этого спасает, но лучше подстрахуйтесь. Еще хуже если вы решили первую подзадачу, начали писать вторую подзадачу, она у вас даже заработала, но при этом сломалось решение первой. Вам бы объединить два решения, но для этого надо иметь решение первой подзадачи.</p>\n\n<p>В частности, не полагайтесь на то, что вы сможете скачать решение из тестирующей системы! Система может заглючить, может потерять ваши решения, и т.д. — если и вы их тоже потеряете, все будет совсем плохо. А если решения останутся у вас на компьютере, то, на худой конец, вы сможете их использовать для апелляции.</p>\n\n<p>Вообще, я бы считал, что у успешного участника должны быть примерно следующие "вехи" во времени (конечно, это "средняя температура по больнице", т.е. варьироваться может очень и очень сильно, но тем не менее) (время везде от начала тура):</p>\n<ul>\n<li>0:10: прочитаны все задачи;</li>\n<li>0:45-1:00: есть 100 по одной из задач;</li>\n<li>2:00-2:30: есть 100 по двум задачам или в крайнем случае 100+60;</li>\n<li>3:30: написаны простые подзадачи в двух сложных задачах, соответственно есть 100+100+30+20 или в крайнем случае 100+60+30+20;</li>\n<li>оставшееся время добиваем недорешанные задачи.</li>\n</ul>\n<p>Еще раз: это очень среднее, и это "идеал" для такого "среднего", и это из предположения, что задачи сильно распределены по сложности. Но это очень грубый ориентир.</p>\n\n<p>Да, все написанное про подзадачи выше подразумевает, что у каждой задачи есть естественное правильное решение, автоматически решающее и все подзадачи тоже; в таком случае вы теоретически можете решить задачу полностью, не думая про подзадачи вообще; так обычно и бывает. Но я не исключаю, что могут быть и задачи, где подзадачи различны настолько, что даже в самом простом и правильном решении удобнее их рассматривать отдельно.</p>\n\n<h2>Особенности C++</h2>\n<p>Если вы пишите на C++, то есть ряд особенностей, которые вам полезно и даже необходимо знать.</p>\n<h4>Быстрый ввод-вывод</h4>\n<p>Стандартный ввод/вывод через <code>iostream</code> (т.е. с использованием <code>cin</code>/<code>cout</code>) по умолчанию работает медленно на больших данных. Если вам надо ввести, допустим, 100000 чисел, то с использованием <code>cin</code> вы наверняка получите time limit; аналогично если вам надо выводить много данных. Это связано с двумя проблемами.</p>\n\n<p>Во-первых, медленно работает <code>endl</code> (для тех, кто понимает — вывод в <code>cout</code> буферизуется, но <code>endl</code> каждый раз сбрасывает буфер, реально выводя данные на диск, а реальный доступ к диску работает медленно). Поэтому не используйте <code>endl</code> вообще, используйте <code>\'\\n\'</code>.</p>\n\n<p>Во-вторых, есть еще проблема синхронизации с <code>stdio</code> (не буду сейчас подробнее писать, что это значит). Чтобы эту проблему побороть, есть три способа:</p>\n<ul>\n<li>Работать с файлами, а не с клавиатурой/экраном (если это будет допустимо на олимпиаде). У <code>fstream</code> таких проблем со скоростью работы нет.</li>\n<li>Использовать для ввода/вывода конструкции из <code>stdio.h</code> (<code>scanf</code> и <code>printf</code>), а не из <code>iostream</code>.</li>\n<li>Написать в самом начале программы две магические строчки (их надо выучить наизусть): \n<pre>std::ios_base::sync_with_stdio(false);\nstd::cin.tie(nullptr);\n</pre></li></ul>\n\n<p>Лично я вам рекомендую использовать первый или последний вариант.</p>\n\n<p>Еще раз: есть <b>две</b> проблемы: одна с <code>endl</code>, другая с синхронизацией stdio и iostream. Одна решается тем, что вы не используете <code>endl</code>, другая — вот одним из трех описанных выше способов. Вам надо решить <b>обе</b> проблемы, т.е. и не использовать <code>endl</code>, и как-то разобраться с синхронизацией. Типичная ошибка — написать в начале программы этот страшный код с <code>sync_with_stdio</code>, но выводить все равно через <code>endl</code>. Получите time limit exceeded все равно.\n\n</p><h4>Установка стека в Visual Studio</h4>\n<p>В популярных компиляторах C++ по умолчанию установлен очень маленький размер стека. Если в вашей программе глубокая рекурсия (например, если вы пишете поиск в глубину), то программа может упасть.</p>\n\n<p>В GCC попросить большой размер стека из самой программы невозможно, это должно настраивать жюри при настройке компиляции. На нормальных олимпиадах жюри прописывает большой размер стека в настройки компиляции, будет ли это на нашей области — я не знаю.</p>\n\n<p>Но в Visual Studio можно установить необходимый размер стека прямо из программы примерно следующей конструкцией (проверьте заранее!): <code>#pragma comment(linker, "/STACK:32000000")</code>, здесь число — это необходимый вам размер стека в байтах (в этом примере 32 миллиона байт, т.е. примерно 32 Мб). Размер стека можете посчитать в уме исходя из вашей программы, а можете и подобрать опытным путем — 32-64 Мб обычно достаточно. Учитывайте еще, конечно, ограничение по памяти.</p>\n\n<p>Поэтому если жюри на олимпиаде нормально настроит стек в gcc (это должно быть видно в строках компиляции gcc в памятке участника), то сдавайте под gcc. Иначе если ваше решение под gcc не влезает в стек, то добавьте эту магическую строку и сдавайте под Visual Studio.</p>\n\n<h2>Про надежность тестирующих систем</h2>\n<p>Возможно, на турах будет использоваться тестирующая система нашего жюри, но скорее всего будет Яндекс.Контест (как последние несколько лет и на области, и на районе), возможно, какая-то еще из известных тестирующих систем. С любой системой возможны различные проблемы, например, тестирующая система нашего жюри может неправильно оценивать корректность решений (см. выше пример с выводом в одной строке или на разных строках), а Яндекс.Контест печально известен тем, что регулярно не справляется с нагрузкой на первом туре и тестирует решения по несколько часов (!); на втором туре все обычно работает нормально. Правда, в прошлом году вроде с этим уже не было проблем, надеюсь, что и в этом не будет. Я не знаю, какая система будет в этом году, и будут ли в ней проблемы и какие, поэтому если что-то идет не так, то думайте головой и действуйте по обстоятельствам. Например, если ваши решения тестируются долго — не паникуйте, а просто переключайтесь на другие задачи, ну и тщательнеее сами тестируйте те решения, которые вы отправляете на проверку.</p>\n\n<h2>Дополнительные замечания</h2>\n<h4>Не пугайтесь!</h4>\n<p>Год из года регулярно многие школьники на областной олимпиаде показывают результат хуже, чем от них можно было ожидать. Возможно, многие пугаются непривычной системы задач, системы тестирования и т.д. Так вот, не пугайтесь. Вы вполне способны показать весьма неплохой результат.</p>\n\n<h4>Ищите обходные решения проблем</h4>\n<p>Если у вас что-то не получается, вы не помните, как что-то сделать в вашем языке программирования и т.п. — подумайте, как эту проблему можно обойти. Если вы не помните простого способа что-то сделать, то, может быть, есть более сложный? Если у вас не работает какой-то код, может быть, можно написать как-то по-другому, пусть и сложнее, но надежнее? И т.д.</p>\n\n<h4>Неполадки на туре</h4>\n<p>Если у вас на туре что-то из оборудования работает не так, как вы хотите, сразу же спрашивайте жюри! Если, например, не работает клавиатура, или если программа не запускается с очень непонятными сообщениями об ошибках, то сразу зовите жюри! У нас в ННГУ часто бывает так, что антивирус мешает нормальной работе (например, удаляя exe-шник сразу после его создания, или очень задерживая запуск программы — вы в ННГУ на занятиях иногда это наблюдали, на занятиях это еще не так страшно, но на олимпиаде — ненормально) — сразу зовите жюри и просите отключить антивирус. Если жюри решает вашу проблему долго, требуйте компенсации времени.</p>\n\n<h4>Не уходите без баллов</h4>\n<p>По идее, после каждого тура у вас будет обед в столовой университета, потом разбор задач и объявление итогов тура. Я очень вам рекомендую дождаться объявления итогов. Последнее время обычно жюри раздает каждому участнику бумажки с его баллами — вот получите эту бумажку, чтобы проверить, что все подсчитано верно. У нашего жюри регулярно случаются проблемы с подсчетом баллов, поэтому лучше дождитесь и проверьте, что все соответствует вашим ожиданиям. Конечно, вы по идее должны знать свои баллы за счет фидбека, но лучше все-таки дождитесь бумажки.</p>\n\n<p>Я буду на олимпиаде на втором туре как перед туром, так и после тура и на закрытии; и постараюсь также подъехать когда-нибудь в день первого тура (или на открытие, или после тура, или и тогда и тогда). Если окажется, что вам неправильно посчитали баллы, то мы с вами можем пойти и поругаться. Но если вы уйдете раньше и не получите бумажку с результатами, то я сам за вас ругаться не пойду; как минимум, вы намного лучше меня знаете, чего вы ожидали.</p>\n\n<h4>Укажите меня своим преподавателем</h4>\n<p>Как я где-то уже писал, <b>пожалуйста, укажите меня своим преподавателем</b>, если наши занятия были для вас достаточно полезными. А именно, попросите школу указать меня преподавателем в заявке. На регистрации на олимпиаду перед первым туром обычно можно проверить, кто у вас указан и, если хотите, наверное можно будет исправить.</p>\n\n<h4>Прочитайте этот текст еще раз перед олимпиадой</h4>\n<p>Я могу вспомнить что-то и добавить в этот текст новую информацию. Поэтому прочитайте его перед олимпиадой еще раз.</p>\n\n<h4>Местное жюри и вариации</h4>\n<p>Все написанное выше написано по мотивам официальных правил областной олимпиады. К сожалению, наше местное жюри не всегда понимает эти правила до конца. (Правила, равно как и условия задач и тесты, составляются централизованно на всю Россию.) Например, в 2015 году они не хотели обеспечивать фидбек. Поэтому будьте готовы к каким-нибудь вариациям (например, они могут сказать, что финально будет оцениваться только то решение, которое вы оставите у себя в рабочем каталоге, а не то, которое вы сдавали). Мое мнение — пока эти вариации не сильно вам портят жизнь, не стоит ругаться с жюри; если же это что-то серьезное, то будем ругаться.</p>\n\n<p>Например, если они хотят, чтобы вы оставляли свое решение в рабочем каталоге — ну так сохраните свое лучшее решение и оставьте, не так уж это и сложно, так и вам и мне и жюри спокойнее. Конечно, если в итоге вы сохраните по ошибке не то решение и потеряете баллы из-за того, то будем ругаться, но лучше до этого не доводить. Если же жюри что-то глобальное сделает не так (например, отменит фидбек), то я буду ругаться сразу.</p>\n\n<p>Полные официальные Требования к проведению регионального этапа, которые обязательны к соблюдению во всех регионах, можно почитать <a href="http://vserosolymp.rudn.ru/mm/mpp/files/tr20/Информатика%20-%20Требования%20к%20проведению%20регионального%20этапа%202020.pdf">вот здесь</a>. Рекомендую почитать всем, кто участвует в регионе не первый раз и серьезно рассчитывает на высокий балл; а также если у вас возникли какие-то специфические вопросы (например, «можно ли разные задачи решать на разных языках программирования»).</p>\n\n<h1>Советы от <a href="/user/254947" onclick="window.goto(\'/user/254947\')();return false;"><span class="_client_components_UserName__name" style="color:#7b0000">Алексея Упирвицкого</span></a></h1>\n\n<p>(c) Алексей Упирвицкий, CC-BY-SA</p>\n\n<p>В этом тексте представлены мои личные идеи относительно регионального тура ВСОШ. Я основываюсь на своем опыте и опыте своих товарищей.</p>\n\n<p>Самым лучшим способом подготовки к региону будет прорешивание прошлогодних регионов и подготовка своей стратегии.\nТак как тур идет 5 часов, ближе к концу вы можете устать и быть куда менее продуктивными нежели в самом начале, и если вы не распределите время заранее, то можете что-то не успеть. Поэтому я предлагаю вам написать 2-3 тура и засечь, сколько времени у вас занимает та или иная задача. </p>\n\n<p>Например: <br>\nзадача А — 45 минут;<br>\nзадача В — 1.5 часа; <br>\nчто-то разумное в С — час;<br>\nполный перебор в Д — 20 минут.</p>\n\n<p>Имея такой приблизительный план, вы не будете терять время на туре, думая: что бы мне сейчас порешать. </p>\n\n<p>Вообще, в идеале стратегия должна выглядеть так:</p>\n\n<p>А — до часу. Если так происходит, что через час задача А не решена — нельзя отчаиваться и продолжать ее пихать. Нужно переключиться на задачу В и полностью погрузиться в работу над ней.</p>\n\n<p>В — еще час после А вы решаете задачу В. Записываете все свои мысли и пишете какое-нибудь решение. Пусть не на 100, но на 40-60 баллов оно должно быть. </p>\n\n<p>Теперь, когда прошло 2 часа от начала тура, я рекомендую оставить А и В и открыть D (конечно, нельзя оставлять задачу если вы прямо сейчас ее пишете или у вас есть абсолютно верная идея на очень много баллов).</p>\n\n<p>Наверное, большинство из вас удивится выбору задачи D, но это правильный выбор. Всегда в этой задаче есть подзадача на ~10 баллов, которая сдается полным перебором (вообще, я рекомендую потренироваться сдавать полный перебор заранее, это полезный навык — быстро и аккуратно написать его). Таким образом вы сможете избавиться от задачи D и отдохнуть от А и В. Возможно, это позволит взглянуть на них по-новому и придумать новое решение. </p>\n\n<p>Эти полчаса не думайте о других задачах. Да, это сложно, так как написание перебора зачастую не требует активной мыслительной деятельности, но вам нужен перерыв.</p>\n\n<p>Таким образом, прошло 2.5 часа от начала контеста, у вас сдана D на максимум который может набрать тупняк, и вы остаетесь с тремя задачами. Сейчас нужно посмотреть на А и В. Уделите каждой из них по полчаса. Скорее всего после перерыва вы сможете сгенерировать новые идеи. Прошло 3.5 часа, и нужно открывать задачу С. По моему мнению, задача С — это самое странное, что есть на регионе (но об этом позже), именно поэтому я рекомендую ее открывать последней. </p>\n\n<p>Дальше все зависит от задачи. В 2017-2018 году была задача \n<a href="/material/p113763" onclick="window.goto(\'/material/p113763\')();return false;">«Красота фейерверка»</a> и она была простой. Даже проще В, на мой взгляд (и многих других участников того года).\nНо с другой стороны, порой бывают очень сложные С. Поэтому важно быстро понять, сдавать ли ее на 100 или на частичные. Мой совет: первые  полчаса старайтесь придумать ее на 100, а если не получилось — полчаса сдавайте ее на частичные баллы. Так у вас останется полчаса, и идеальной будет разбалловка вида: 100 100 50± 20±\nЕсли она не такая, не надо отчаиваться, потому что получить идеальный результат сложнее, чем кажется.</p>\n\n<p>Теперь стоит сказать несколько слов про каждую позицию на контесте:\nЯ специально не буду рассматривать задачи с прошлого года. Почему — объясню позже.</p>\n<p>A — обычно простая задача. Очень часто формула, например: <a href="/material/p113757" onclick="window.goto(\'/material/p113757\')();return false;">«Улучшение успеваемости»</a> или <a href="/material/p113443" onclick="window.goto(\'/material/p113443\')();return false;">«Автоматизированное управление доставкой»</a></p>\n<p>В — конструктив/дп/бин-поиск не сложные темы. Просто нужно догадаться до решения. Очень часто помогает перебор всех известных вам алгоритмов, которые хоть как то могут сюда подойти.</p>\n<p>С — обычно что то очень идейное или структуры данных. Хорошим результатом будет сдать все подгруппы, не требующие мощных структур, и, может, еще одну с использованием неоптимальных структур. </p>\n<p>D — Что то очень сложное, что порой практически никто не сдает в стране. </p>\n\n<p>Почему я не касаюсь прошлого года? Потому что тур был очень сложным. Неоправдано сложным. По моему мнению, в этом году тур будет сильно проще. Например, как в 2016-17 или 2017-18 году. </p>\n\n<p>Мое мнение относительно тем по задачам: </p>\n<p>А — будет один конструктив и один бинпоиск</p>\n<p>В — думаю, что будет алгоритм на графах/конструктив/простые структуры данных. Например, дерево отрезков.</p>\n<p>С — в последние годы была подозрительная мода на интерактивные задачи, поэтому будьте готовы к ним. Будет забавно, если опять будет Декартово Дерево. Поговаривают про дп и его оптимизации. Но я больше думаю про что-то на графах/структурах данных. В задаче С всегда есть подвох. Она либо простая, либо сложная. Про нее не понятно, что можно дать, поэтому изворачиваются как могут.</p>\n<p>D — какая-то сложная, никому не известная тема, или старый добрый баян. Тут возможны оптимизации дп. Но если это так, то всем рекомендую оптимизацию buben вида: ну давайте переберем не все, а ±константу. Например, если в дп вам приходится пересчитывать значение через все предыдущие, но у вас есть подозрение, что вас не интересуют некоторые, смело пишите что-то в духе\n</p><pre><code>for (int i = 0; i &lt; n; ++i)\n    for (int j = i; j &gt;= max(0, i - buben); --j)\n</code></pre>\nВозможно, будут очень сложные строки.<p></p>\n\n<p>Вообще, есть такая тема как Сканлайн, и она может быть на любой позиции, потому что на нее можно накрутить практически что угодно.</p>\n\n<p>Также у каждого из вас есть тема, про которую вы уверены, что ее не будет, и потому не нужно ее учить. Поверьте моему опыту, именно она и будет. Так что повторите все, по чему у вас просадки. Сдайте пару прошлых регионов. Потренируйтесь писать перебор.</p>\n\n<p>Постарайтесь изучить корневую эвристику. Она позволяет делать полезные трюки и получать много баллов.</p>\n\n<p>Еще: подзадачи вам даны не только для того чтобы пихать, а для того чтобы тестировать! Что я имею ввиду: у вас есть идея на много баллов но почему то wa. Вы берёте и начинаете по частям код разбирать.</p>\n\n<p>Например есть подзадача на квадрат и есть на N log N.\nВот вы берёте и основную идею оставляете, а то что делает лог заменяете на простой алгоритм, работающий за линию.\nТак вы можете понять в какой части кода ошибка.</p>\n\n<p>Вообще не рекомендую сразу писать код на 100.\nЛучше выделить несколько ключевых идей и протестировать их так.\nДа, вы потратите время, но избавите себя от возможного дебага.</p>\n<p>Ещё иногда подзадачи могут натолкнуть на правильное решение. \nБерете простую подзадачу, которую знаете как решать, берете более сложную и начинаете думать, чем таким эти задачи отличаются, можно ли из решения простой подзадачи сделать решение сложной, или наоборот, сложную подзадачу свести к простой.</p>\n\n<p>Полезные статьи на codeforces (<i>это в первую очередь для уже реально крутых школьников, уровня эдак 5-6+ — П.К.</i>):<br>\n<a href="https://codeforces.com/blog/entry/44351">https://codeforces.com/blog/entry/44351</a><br>\n<a href="https://codeforces.com/blog/entry/63823">https://codeforces.com/blog/entry/63823</a><br>\n<a href="https://codeforces.com/blog/entry/45223">https://codeforces.com/blog/entry/45223</a><br>\n</p>\n\n<h1>Разбор районной олимпиады</h1>\n\n<p>Возможно, со временем я добавлю сюда разбор районной олимпиады.</p></div>', 'title': 'Про областную олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_10', 'order': 11, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_11', 'order': 12, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про Нижегородскую городскую олимпиаду им. В.Д. Лелюха</h1>\n<p>В феврале 2019 года (ориентировочно 8 февраля, но возможно дата будет изменена) состоится XVI Нижегородская городская олимпиада школьников по информатике им. В.Д. Лелюха. Я рекомендую подавать заявку всем школьникам моего курса, которые являются учениками школ города Нижнего Новгорода (не области!), и имеющим уровень как минимум 1В. Можете подать заявку и если у вас уровень ниже, но, возможно, задачи даже отбора вам покажутся сложными.</p>\n\n<p>Для участия в олимпиаде надо подать заявку. Информация про олимпиаду и порядок подачи заявок (приказ Департамента образования Администрации г. Н. Новгорода № 965 от 23.12.2019) уже направлен в школы города, поэтому ваши школы должны быть в курсе. Также приказ выставлен на <a href="http://olympiads.nnov.ru">сайте олимпиады</a> в разделе "Новости"; если до вашей школы он не дошел, то скачайте его с сайта олимпиады и покажите своим учителям или завучам.</p>\n\n<p>В принципе, подать заявку на вас может кто угодно — и ваша школа, и вы лично. Но не плодите заявки; если ваша школа сама подаст заявку на вас, то не дублируйте заявку. Если по каким-то причинам они не будут подавать заявку, или вы не уверены, подадут они или нет, то можете сами заполнить анкету по ссылке из приказа. В любом случае, даже если школа подает заявку за вас, все равно следите за <a href="http://olympiads.nnov.ru">сайтом олимпиады</a>, там будет появляться информация о рассмотрении заявок.</p>\n\n<p>Отбор на олимпиаду будет проводиться из числа заполнивших заявку по итогам районной и школьной олимпиад, также будет проведен дополнительный заочный отборочный тур 18 января. Подробная информация есть в приказе (см. на сайте олимпиады), а также информация будет разослана после заполнения заявок.</p>\n\n<p>На этой олимпиаде я председатель жюри, поэтому я не буду вам писать про нее столь подробно, как про другие олимпиады. Но изучите сайт олимпиады, посмотрите задания прошлых лет, чтобы понимать, чего ожидать. И прочитайте и применяйте те же рекомендации, которые я пишу по другим олимпиадам.</p>\n\n<p>На олимпиаду также будет приглашено несколько участников из области; их мы будем приглашать лично с учетом результатов областной олимпиады.</p>\n\n</div>', 'title': 'Про Нижегородскую городскую олимпиаду им. В.Д. Лелюха', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_12', 'order': 13, 'indent': 0, 'type': 'label', 'title': '', 'content': '<p><a href="https://codeforces.com/blog/entry/70187">Олимпиада Технокубок</a></p>\n<p><a href="https://olympiads.ru/zaoch/">Открытая олимпиада школьников по программированию ("заочка")</a> — очень известная и крупная олимпиада, заодно еще и поступательная. Советую участвовать, хотя задачи не самые простые.\n</p>\n\n\n<hr>\n\n<h2>Летняя компьютерная школа</h2>\n<p>\nЛетняя компьютерная школа (ЛКШ) — это очень круто, у нее только один недостаток: она платная (поездка стоит около 50 тыс. рублей).</p>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_13', 'order': 14, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><center><img src="https://lksh.ru/sis/scripts/logo.png" style="background:#000055;padding:10px;width:80%"></center>\n<h1>Летняя компьютерная школа — 2020</h1>\n\n<!--<p><b><font size=+1>NEW (29.03.2017):</font></b> <a href="https://docs.google.com/document/d/1Jc8JWvVeIMdTQGmqRgVMUFl6-xEvLOCGa43RwLP1QuE/pub">Советы по поступлению</a></p>-->\n\n<p><a href="http://lksh.ru">Летняя компьютерная школа (ЛКШ)</a> — это летняя школа для учащихся средних и старших классов, занимающихся программированием. ЛКШ проходит в две смены по три недели (в июле и в конце июля-августе, каждый школьник может поехать только в одну смену). Традиционным местом проведения школы является база отдыха "Берендеевы Поляны" в Костромской области, но последнее время смены нередко проводятся и в других местах.</p>\n\n<p>В ЛКШ приезжают школьники со всей России; преподавателями являются учителя школ и преподаватели вузов Москвы, Санкт-Петербурга и других городов, организаторы и члены жюри различных олимпиад, сильные студенты российских вузов. (Я многие годы ездил в ЛКШ преподавателем, правда, в этом году, скорее всего, не поеду.) В ЛКШ очень хорошая учебная программа, также очень хорошая внеучебная программа. От Нижегородской области (и от лицея 40) туда регулярно ездят несколько школьников (см., например, <a href="http://poldnev.ru/lksh/cities/Nizhny_Novgorod">здесь</a>). Более подробная информация про ЛКШ <a href="https://lksh.ru/sis/2019/aboutlksh.shtml">здесь</a> (это пока страничка прошлого года).</p>\n\n<p>На сайте пока никакой информации за этот год нет, но для общей справки вполне можете смотреть информацию прошлого года. Еще много информации в <a href="https://vk.com/sis">группе вКонтакте</a>.</p>\n\n<!--\n<p>В этом году июльская смена пройдет с 4 по 24 июля на базе отдыха «Берендеевы поляны» в Костромской области (это самое стандартное место для ЛКШ). Августовская смена <b>предварительно</b> пройдет в Эстонии в отеле «Laagna» с 31 июля по 20 августа. Вступительная работа будет опубликована ориентировочно 25 марта, выполнить её нужно будет до 22 апреля.</p> -->\n\n<p>Я <b>очень рекомендую</b> всем, кто может, и при этом имеет достаточный уровень программирования, туда поехать. А именно:</p>\n<ul>\n<li>Всем 8-классникам и младше, имеющим уровень как минимум 1Б, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем 9-классникам, имеющим уровень как минимум 1Г, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем вообще (кроме 11-классников, конечно), имеющим уровень как минимум 2Б, даже если у вас нет возможности поехать — все равно как минимум постараться поступить, если поступите, то будем думать, как вам поехать.</li>\n</ul>\n<p>Отбор в ЛКШ осуществляется по результатам выполнения вступительной работы, которую надо написать в марте-апреле.</p>\n\n<p>Еще раз: <b>ЛКШ — это очень и очень круто и полезно!</b> Поэтому всем, кто имеет уровень хоть сколько-то выше начального, имеет смысл туда поехать.</p>\n\n<p>Правда, есть проблема: участие в ЛКШ платное (ЛКШ проводится группой инициативных преподавателей и не имеет государственной поддержки), стоимость участия (3 недели: проживание, питание, занятия) в 2019 году была около 50000 рублей, в этом году будет, скорее всего, больше. Если вы можете оплатить эту сумму, то хорошо; иначе вы можете написать заявление на социальную скидку, и скорее всего она будет вам предоставлена за счет спонсорских средств ЛКШ (см. для примера  <a href="https://lksh.ru/sis/2019/zacisl/skidki.shtml">информацию о скидках 2019 года</a>).</p>\n\n<p>Школьники, расскажите про ЛКШ своим родителям! Если у ваших родителей есть какие-то вопросы, пусть звонят мне. <b>Если вы уже планируете лето, постарайтесь запланировать поездку в ЛКШ.</b> (Я специально говорю вам про ЛКШ настолько заранее, т.к. знаю, что многие планируют лето еще зимой.) Ближе к поступлению я тут напишу более подробную информацию. Если возникают какие-то вопросы, обращайтесь. См. также советы по поступлению в ЛКШ ниже.</p>\n\n<p>Сайт школы со всей информацией — <a href="http://lksh.ru">lksh.ru</a>.</p>\n\n<!-- <p><b><font color=red>NEW:</font></b> <a href="https://docs.google.com/document/d/e/2PACX-1vQkAIuVK7ZErO0mVYd8hVcYOKCP6m9r3dQ5VhzOkrfn6cNw0Aj3tZ2zkQFdN4Fw4v1f7CIsVmuMh-Rt/pub">Советы по поступлению в ЛКШ</a></p> -->\n\n<p>Ролик про ЛКШ разных лет (довольно старый уже; другие, тоже старые, видео есть на <a href="http://www.youtube.com/user/pakalinin">моем канале</a>):</p>\n\n<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/4nVl5MHeqIY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>', 'title': 'Информация про школу, читать всем!', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_14', 'order': 15, 'indent': 0, 'type': 'label', 'title': '', 'content': '<p><b>Я настоятельно рекомендую:</b></p>\n<ul>\n<li>Всем 8-классникам и младше, имеющим уровень как минимум 1Б, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем 9-классникам, имеющим уровень как минимум 1Г, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем вообще (кроме 11-классников, конечно), имеющим уровень как минимум 2Б, даже если у вас нет возможности поехать — все равно как минимум постараться поступить, если поступите, то будем думать, как вам поехать.</li>\n</ul>\n\n\n\n\n\n\n<h2>Архивы старых олимпиад</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-18043_0', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="https://www.dropbox.com/s/brq5dotrg4lmym2/raion_archive.pdf?dl=0">Архив прошлых районных олимпиад</a> (в тестирующей системе их скорее всего нигде нет)\n<hr>\n<a href="/material/reg">Областные олимпиады прошлых лет</a> (у нас в тестирующей засчитываются только полные баллы, но на реальной олимпиаде частичные решения тоже оцениваются)', 'path': []}], 'force': False, '_id': '0', 'order': 0, 'type': 'level', 'indent': 0, 'title': 'О курсе', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}
Converting material  {'materials': [{'_id': 'module-16127_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 1</h2>', 'indent': 0}, {'_id': '1А', 'title': 'Уровень 1А', 'type': 'level'}, {'_id': 'module-15941_0t', 'title': '', 'type': 'label', 'content': 'Арифметические операции', 'indent': 20}, {'_id': 'module-15942_0t', 'title': '', 'type': 'label', 'content': 'Условный оператор', 'indent': 20}, {'_id': 'module-49287_0t', 'title': '', 'type': 'label', 'content': 'Как отлаживать программы', 'indent': 20}, {'_id': 'module-15943_0t', 'title': '', 'type': 'label', 'content': 'Циклы', 'indent': 20}, {'_id': '1Б', 'title': 'Уровень 1Б', 'type': 'level'}, {'_id': 'module-15945_0t', 'title': '', 'type': 'label', 'content': 'Массивы', 'indent': 20}, {'_id': 'module-15946_0t', 'title': '', 'type': 'label', 'content': 'Символы и строки', 'indent': 20}, {'_id': 'module-15947_0t', 'title': '', 'type': 'label', 'content': 'Вещественные числа', 'indent': 20}, {'_id': '1В', 'title': 'Уровень 1В', 'type': 'level'}, {'_id': 'module-21146_0t', 'title': '', 'type': 'label', 'content': 'Вещественные числа', 'indent': 20}, {'_id': 'module-15980_0t', 'title': '', 'type': 'label', 'content': 'Основы тестирования задач (без контеста)', 'indent': 20}, {'_id': 'module-16264_0t', 'title': '', 'type': 'label', 'content': 'Задачи', 'indent': 20}, {'_id': '1Г', 'title': 'Уровень 1Г', 'type': 'level'}], 'force': False, '_id': '1', 'order': 1, 'type': 'level', 'indent': 0, 'title': 'Уровень 1', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}
Converting material  {'materials': [{'_id': 'module-15997_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 2</h2>', 'indent': 0}, {'_id': '2А', 'title': 'Уровень 2А', 'type': 'level'}, {'_id': 'module-15998_0t', 'title': '', 'type': 'label', 'content': '*Работа с файлами (без контеста)', 'indent': 20}, {'_id': 'module-16005_0t', 'title': '', 'type': 'label', 'content': '*Функции (без контеста)', 'indent': 20}, {'_id': 'module-16007_0t', 'title': '', 'type': 'label', 'content': 'НОД, алгоритм Евклида', 'indent': 20}, {'_id': 'module-16010_0t', 'title': '', 'type': 'label', 'content': '*Рекурсивный перебор', 'indent': 20}, {'_id': 'module-16018_0t', 'title': '', 'type': 'label', 'content': 'Квадратичные сортировки', 'indent': 20}, {'_id': 'module-25197_0t', 'title': '', 'type': 'label', 'content': 'Задачи "на технику"', 'indent': 20}, {'_id': '2Б', 'title': 'Уровень 2Б', 'type': 'level'}, {'_id': 'module-16027_0t', 'title': '', 'type': 'label', 'content': 'Сложность алгоритмов (без контеста)', 'indent': 20}, {'_id': 'module-16035_0t', 'title': '', 'type': 'label', 'content': 'Основы динамического программирования', 'indent': 20}, {'_id': 'module-16039_0t', 'title': '', 'type': 'label', 'content': 'Стек, дек, очередь', 'indent': 20}, {'_id': 'module-16042_0t', 'title': '', 'type': 'label', 'content': 'Простые числа и разложение на множители', 'indent': 20}, {'_id': 'module-25223_0t', 'title': '', 'type': 'label', 'content': 'Простая жадность', 'indent': 20}, {'_id': '2В', 'title': 'Уровень 2В', 'type': 'level'}], 'force': False, '_id': '2', 'order': 2, 'type': 'level', 'indent': 0, 'title': 'Уровень 2', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}
Converting material  {'materials': [{'_id': 'module-16093_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 3</h2>', 'indent': 0}, {'_id': '3А', 'title': 'Уровень 3А', 'type': 'level'}, {'_id': 'module-16272_0t', 'title': '', 'type': 'label', 'content': 'Проcтые графы', 'indent': 20}, {'_id': 'module-16275_0t', 'title': '', 'type': 'label', 'content': 'Поиск в ширину', 'indent': 20}, {'_id': 'module-16279_0t', 'title': '', 'type': 'label', 'content': 'Бинарный поиск (поиск делением пополам)', 'indent': 20}, {'_id': '3Б', 'title': 'Уровень 3Б', 'type': 'level'}, {'_id': 'module-16305_0t', 'title': '', 'type': 'label', 'content': 'Системы счисления. Двоичная система счисления.', 'indent': 20}, {'_id': 'module-16343_0t', 'title': '', 'type': 'label', 'content': 'Два указателя', 'indent': 20}, {'_id': 'module-16369_0t', 'title': '', 'type': 'label', 'content': 'Основы поиска в глубину', 'indent': 20}, {'_id': 'module-16373_0t', 'title': '', 'type': 'label', 'content': 'Продвинутое тестирование задач (без контеста)', 'indent': 20}, {'_id': '3В', 'title': 'Уровень 3В', 'type': 'level'}], 'force': False, '_id': '3', 'order': 3, 'type': 'level', 'indent': 0, 'title': 'Уровень 3', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}
Converting material  {'materials': [{'_id': 'module-16470_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 4</h2>', 'indent': 0}, {'_id': '4А', 'title': 'Уровень 4А', 'type': 'level'}, {'_id': 'module-16472_0t', 'title': '', 'type': 'label', 'content': 'Логарифмические сортировки', 'indent': 20}, {'_id': 'module-16577_0t', 'title': '', 'type': 'label', 'content': 'Динамическое программирование: баяны', 'indent': 20}, {'_id': 'module-16614_0t', 'title': '', 'type': 'label', 'content': 'Связные списки', 'indent': 20}, {'_id': 'module-16618_0t', 'title': '', 'type': 'label', 'content': 'Хранение графов списками смежности', 'indent': 20}, {'_id': '4Б', 'title': 'Уровень 4Б', 'type': 'level'}, {'_id': 'module-16682_0t', 'title': '', 'type': 'label', 'content': 'Алгоритм Дейкстры', 'indent': 20}, {'_id': 'module-16685_0t', 'title': '', 'type': 'label', 'content': 'Сортировка подсчетом', 'indent': 20}, {'_id': 'module-16786_0t', 'title': '', 'type': 'label', 'content': 'Длинная арифметика', 'indent': 20}, {'_id': 'module-16789_0t', 'title': '', 'type': 'label', 'content': 'Сортировка событий', 'indent': 20}, {'_id': '4В', 'title': 'Уровень 4В', 'type': 'level'}], 'force': False, '_id': '4', 'order': 4, 'type': 'level', 'indent': 0, 'title': 'Уровень 4', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}
Converting material  {'materials': [{'_id': 'module-16885_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 5</h2>', 'indent': 0}, {'_id': '5А', 'title': 'Уровень 5А', 'type': 'level'}, {'_id': 'module-16887_0t', 'title': '', 'type': 'label', 'content': 'Тернарный (троичный) поиск', 'indent': 20}, {'_id': 'module-16952_0t', 'title': '', 'type': 'label', 'content': 'Задачи средней сложности на ДП', 'indent': 20}, {'_id': 'module-42872_0t', 'title': '', 'type': 'label', 'content': 'Хеширование', 'indent': 20}, {'_id': '5Б', 'title': 'Уровень 5Б', 'type': 'level'}, {'_id': 'module-17239_0t', 'title': '', 'type': 'label', 'content': 'Куча', 'indent': 20}, {'_id': 'module-17295_0t', 'title': '', 'type': 'label', 'content': 'Продвинутый алгоритм Дейкстры', 'indent': 20}, {'_id': 'module-19008_0t', 'title': '', 'type': 'label', 'content': 'Рекурсивный перебор', 'indent': 20}, {'_id': 'module-19010_0t', 'title': '', 'type': 'label', 'content': 'Применения сортировки', 'indent': 20}, {'_id': '5В', 'title': 'Уровень 5В', 'type': 'level'}], 'force': False, '_id': '5', 'order': 5, 'type': 'level', 'indent': 0, 'title': 'Уровень 5', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}
Converting material  {'materials': [{'_id': 'module-19470_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 6</h2>', 'indent': 0}, {'_id': '6А', 'title': 'Уровень 6А', 'type': 'level'}, {'_id': 'module-19472_0t', 'title': '', 'type': 'label', 'content': 'Алгоритмы Флойда и Форда-Беллмана', 'indent': 20}, {'_id': 'module-19475_0t', 'title': '', 'type': 'label', 'content': 'Простые игры на графах', 'indent': 20}, {'_id': 'module-19478_0t', 'title': '', 'type': 'label', 'content': 'Поиск в ширину в 1-k и 0-k графах', 'indent': 20}, {'_id': '6Б', 'title': 'Уровень 6Б', 'type': 'level'}, {'_id': 'module-19481_0t', 'title': '', 'type': 'label', 'content': 'Жадные алгоритмы', 'indent': 20}, {'_id': 'module-19483_0t', 'title': '', 'type': 'label', 'content': 'Простая геометрия', 'indent': 20}, {'_id': '6В', 'title': 'Уровень 6В', 'type': 'level'}], 'force': False, '_id': '6', 'order': 6, 'type': 'level', 'indent': 0, 'title': 'Уровень 6', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}
Converting material  {'materials': [{'_id': 'module-25508_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 7</h2>', 'indent': 0}, {'_id': '7А', 'title': 'Уровень 7А', 'type': 'level'}, {'_id': 'module-25510_0t', 'title': '', 'type': 'label', 'content': 'Сложные задачи на поиск в глубину', 'indent': 20}, {'_id': 'module-25513_0t', 'title': '', 'type': 'label', 'content': 'Алгоритм Кнута-Морриса-Пратта (КМП)', 'indent': 20}, {'_id': 'module-25515_0t', 'title': '', 'type': 'label', 'content': 'Z-функция', 'indent': 20}, {'_id': '7Б', 'title': 'Уровень 7Б', 'type': 'level'}, {'_id': 'module-25518_0t', 'title': '', 'type': 'label', 'content': 'Sqrt-декомпозиция, она же корневая эвристика', 'indent': 20}, {'_id': 'module-25520_0t', 'title': '', 'type': 'label', 'content': 'Дерево отрезков', 'indent': 20}, {'_id': 'module-25527_0t', 'title': '', 'type': 'label', 'content': 'Декартово дерево', 'indent': 20}, {'_id': '7В', 'title': 'Уровень 7В', 'type': 'level'}], 'force': False, '_id': '7', 'order': 7, 'type': 'level', 'indent': 0, 'title': 'Уровень 7', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}
Converting material  {'materials': [{'_id': 'module-26191_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 8</h2>', 'indent': 0}, {'_id': '8А', 'title': 'Уровень 8А', 'type': 'level'}, {'_id': 'module-26193_0t', 'title': '', 'type': 'label', 'content': 'Системы непересекающихся множеств и минимальный остов', 'indent': 20}, {'_id': 'module-26195_0t', 'title': '', 'type': 'label', 'content': 'Паросочетания и связанные темы', 'indent': 20}, {'_id': 'module-26197_0t', 'title': '', 'type': 'label', 'content': 'Функция Гранди', 'indent': 20}, {'_id': '8Б', 'title': 'Уровень 8Б', 'type': 'level'}, {'_id': 'module-26200_0t', 'title': '', 'type': 'label', 'content': 'Сложные задачи на ДП', 'indent': 20}, {'_id': 'module-26202_0t', 'title': '', 'type': 'label', 'content': 'Декартово дерево по неявному ключу', 'indent': 20}, {'_id': 'module-26204_0t', 'title': '', 'type': 'label', 'content': 'Геометрия средней сложности', 'indent': 20}, {'_id': '8В', 'title': 'Уровень 8В', 'type': 'level'}], 'force': False, '_id': '8', 'order': 8, 'type': 'level', 'indent': 0, 'title': 'Уровень 8', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}
Converting material  {'materials': [{'_id': 'module-35188_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 9</h2>', 'indent': 0}, {'_id': '9А', 'title': 'Уровень 9А', 'type': 'level'}, {'_id': 'module-35191_0t', 'title': '', 'type': 'label', 'content': 'Простые потоки', 'indent': 20}, {'_id': 'module-35194_0t', 'title': '', 'type': 'label', 'content': 'Дерево Фенвика', 'indent': 20}, {'_id': 'module-35698_0t', 'title': '', 'type': 'label', 'content': 'LCA', 'indent': 20}, {'_id': '9Б', 'title': 'Уровень 9Б', 'type': 'level'}, {'_id': 'module-35703_0t', 'title': '', 'type': 'label', 'content': 'Групповые операции на деревьях', 'indent': 20}, {'_id': 'module-35706_0t', 'title': '', 'type': 'label', 'content': 'Бор и алгоритм Ахо-Корасик', 'indent': 20}, {'_id': 'module-35708_0t', 'title': '', 'type': 'label', 'content': 'Многомерные деревья', 'indent': 20}, {'_id': '9В', 'title': 'Уровень 9В', 'type': 'level'}], 'force': False, '_id': '9', 'order': 9, 'type': 'level', 'indent': 0, 'title': 'Уровень 9', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}
Converting material  {'materials': [{'_id': 'module-39719_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 10</h2>', 'indent': 0}, {'_id': '10А', 'title': 'Уровень 10А', 'type': 'level'}, {'_id': 'module-39721_0t', 'title': '', 'type': 'label', 'content': 'Продвинутая теория чисел, китайская теорема об остатках', 'indent': 20}, {'_id': 'module-39723_0t', 'title': '', 'type': 'label', 'content': 'Суффиксные структуры данных', 'indent': 20}, {'_id': 'module-39768_0t', 'title': '', 'type': 'label', 'content': 'Сложная геометрия', 'indent': 20}, {'_id': '10Б', 'title': 'Уровень 10Б', 'type': 'level'}, {'_id': 'module-39862_0t', 'title': '', 'type': 'label', 'content': 'Mincost-maxflow', 'indent': 20}, {'_id': 'module-39864_0t', 'title': '', 'type': 'label', 'content': 'Паросочетание максимального веста, венгерский алгоритм', 'indent': 20}, {'_id': 'module-39866_0t', 'title': '', 'type': 'label', 'content': 'Матрицы и их применение к ДП', 'indent': 20}, {'_id': '10В', 'title': 'Уровень 10В', 'type': 'level'}], 'force': False, '_id': '10', 'order': 10, 'type': 'level', 'indent': 0, 'title': 'Уровень 10', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}
Converting material  {'materials': [{'materials': [], 'force': False, '_id': 'reghead', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Региональные олимпиады</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}]}, {'force': False, '_id': 'reg2009', 'order': 2009, 'type': 'level', 'indent': 0, 'title': '2009', 'content': '', 'path': []}, {'force': False, '_id': 'reg2010', 'order': 2010, 'type': 'level', 'indent': 0, 'title': '2010', 'content': '', 'path': []}, {'force': False, '_id': 'reg2011', 'order': 2011, 'type': 'level', 'indent': 0, 'title': '2011', 'content': '', 'path': []}, {'force': False, '_id': 'reg2012', 'order': 2012, 'type': 'level', 'indent': 0, 'title': '2012', 'content': '', 'path': []}, {'force': False, '_id': 'reg2013', 'order': 2013, 'type': 'level', 'indent': 0, 'title': '2013', 'content': '', 'path': []}, {'force': False, '_id': 'reg2014', 'order': 2014, 'type': 'level', 'indent': 0, 'title': '2014', 'content': '', 'path': []}, {'force': False, '_id': 'reg2015', 'order': 2015, 'type': 'level', 'indent': 0, 'title': '2015', 'content': '', 'path': []}, {'force': False, '_id': 'reg2016', 'order': 2016, 'type': 'level', 'indent': 0, 'title': '2016', 'content': '', 'path': []}, {'force': False, '_id': 'reg2017', 'order': 2017, 'type': 'level', 'indent': 0, 'title': '2017', 'content': '', 'path': []}, {'force': False, '_id': 'reg2018', 'order': 2018, 'type': 'level', 'indent': 0, 'title': '2018', 'content': '', 'path': []}, {'force': False, '_id': 'reg2019', 'order': 2019, 'type': 'level', 'indent': 0, 'title': '2019', 'content': '', 'path': []}], 'force': False, '_id': 'reg', 'order': 100, 'type': 'level', 'indent': 0, 'title': 'Региональные олимпиады', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}
Converting material  {'materials': [{'materials': [], 'force': False, '_id': 'roihead', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Всероссийские олимпиады</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}]}, {'force': False, '_id': 'roi2009', 'order': 2009, 'type': 'level', 'indent': 0, 'title': '2009', 'content': '', 'path': []}, {'force': False, '_id': 'roi2010', 'order': 2010, 'type': 'level', 'indent': 0, 'title': '2010', 'content': '', 'path': []}, {'force': False, '_id': 'roi2011', 'order': 2011, 'type': 'level', 'indent': 0, 'title': '2011', 'content': '', 'path': []}, {'force': False, '_id': 'roi2012', 'order': 2012, 'type': 'level', 'indent': 0, 'title': '2012', 'content': '', 'path': []}, {'force': False, '_id': 'roi2013', 'order': 2013, 'type': 'level', 'indent': 0, 'title': '2013', 'content': '', 'path': []}, {'force': False, '_id': 'roi2014', 'order': 2014, 'type': 'level', 'indent': 0, 'title': '2014', 'content': '', 'path': []}, {'force': False, '_id': 'roi2015', 'order': 2015, 'type': 'level', 'indent': 0, 'title': '2015', 'content': '', 'path': []}, {'force': False, '_id': 'roi2016', 'order': 2016, 'type': 'level', 'indent': 0, 'title': '2016', 'content': '', 'path': []}, {'force': False, '_id': 'roi2017', 'order': 2017, 'type': 'level', 'indent': 0, 'title': '2017', 'content': '', 'path': []}, {'force': False, '_id': 'roi2018', 'order': 2018, 'type': 'level', 'indent': 0, 'title': '2018', 'content': '', 'path': []}, {'force': False, '_id': 'roi2019', 'order': 2019, 'type': 'level', 'indent': 0, 'title': '2019', 'content': '', 'path': []}], 'force': False, '_id': 'roi', 'order': 200, 'type': 'level', 'indent': 0, 'title': 'Всероссийские олимпиады', 'content': '', 'path': [{'_id': 'main', 'title': '/'}]}
Converting material  {'materials': [{'_id': 'table:header', 'type': 'label', 'content': '<h1>Сводные таблицы</h1>'}, {'_id': 'tables:lic40', 'title': 'Лицей 40', 'type': 'level'}, {'_id': 'tables:lic87', 'title': 'Лицей 87', 'type': 'level'}, {'_id': 'tables:zaoch', 'title': 'Нижегородские школьники', 'type': 'level'}, {'_id': 'tables:vega', 'title': 'Вега', 'type': 'level'}, {'_id': 'tables:notnnov', 'title': 'Остальные школьники', 'type': 'level'}, {'_id': 'tables:stud', 'title': 'Студенты и старше', 'type': 'level'}], 'force': False, '_id': 'tables', 'type': 'level', 'title': 'Сводные таблицы', 'path': [{'_id': 'main', 'title': '/'}]}
Result= [{'materials': [], 'force': False, '_id': 'module-20927_0', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_1', 'order': 1, 'type': 'epigraph', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Надо думать головой!</h2>\n<p>Девиз нашего курса — «Надо думать головой!»</p>\n\n<p>Это обозначает, что все время при работе на спецкурсе вам надо думать. Вам нужно думать над тем, как решать те или иные задачи, как сделать много что еще. У вас не будет универсальных рецептов, которые позволят решить все задачи — наоборот, самые лучшие, самые интересные задачи — те, где от вас требуется что-то придумать.</p>\n\n<p>Кроме того, к любой получаемой информации, ко всему, что написано в учебниках, ко всему, что я вам говорю, что написано на страничку курса, относитесь всегда критически. Думайте, пытайтесь понять, почему это написано, почему вам советуют делать так, а не иначе. В учебниках, в том, что вам говорят другие люди, и тем более в моих материалах и советах легко могут быть ошибки, опечатки, наконец, вы, возможно, найдете более простые способы добиться того же — поэтому никогда не принимайте на веру то, что вы где-нибудь прочитали, всегда обдумывайте и перерабатывайте полученную информацию. Может так оказаться, что в одном месте вы прочитаете одну информацию, а в другом месте — диаметрально противоположную — подумайте, проверьте (см. ниже), и поймите, как делать лучше.</p>\n\n<p>Кроме того, не бойтесь экспериментировать! Если вы не уверены, можно ли в питоне/паскале/... написать ту или иную команду, отработает ли она так, как вы ожидаете — попробуйте: напишите и проверьте. Если вы точно не помните, как пишется какая-нибудь команда — попробуйте перебрать варианты, пока не получится. Если вы в разных местах прочитали совсем разную информацию о том, как что-то надо сделать — возьмите и проверьте, какой способ работает! Не бойтесь пробовать, не бойтесь экспериментировать — так вы научитесь намного большему, чем если просто будете строго следовать тому, что написано в каких-либо учебниках, что вам кто-то сказал.</p></div>', 'title': 'Надо думать головой!', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_2', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_3', 'order': 3, 'type': 'epigraph', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><div style="text-align:right;width:100%;padding-bottom:2ex;"><i>There are nine and sixty ways of constructing tribal lays,<br>\nAnd every single one of them is right!</i><br><br>\nRudyard Kipling. In the Neolithic Age<br><br><br>\nЕсть девять и шестьдесят способов писать песни племен<br>\nИ каждый из них без исключения верный!<br><br>\nРедьярд Киплинг. В эпоху Неолита</div>\n\n<p>У каждой задачи есть очень много решений, и многие из них — верные. Не следует ожидать, что у каждой задачи есть единственное правильное решение; бывают решения лучше, бывают решения хуже, но почти всегда есть два-три существенно разных решения, которые все весьма хороши, и из которых сложно выбрать одно лучшее. Будьте готовы к этому, будьте готовы видеть эти разные решения и разные подходы.</p>\n\n<p>В частности, если у вас есть ошибка в программе, то обычно есть много способов ее исправить. Поэтому не удивляйтесь, если вы меня спрашиваете, как исправить ошибку, а я вам предлагаю несколько вариантов исправления.</p></div>', 'title': 'There are nine and sixty ways of constructing tribal lays,\nAnd every single one of them is right!', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_4', 'order': 4, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Самая главная информация</h2>\n\n<div><a href="https://www.youtube.com/watch?v=kTC7z1NpOb4">\nВводная видеолекция про занятия на алгопроге (дублирует основную информацию ниже)</a></div>\n\n<div style="height:1ex;"></div>\n\n<div><b>Для начала</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_5', 'order': 5, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Общие вопросы (FAQ) по курсу</h2>\n<h3>Что это за курс?</h3>\n<p>Это курс по алгоритмическому программированию (фактически, по олимпиадным задачам). В первую очередь, он ориентирован на учеников лицея 40 Нижнего Новгорода, а также школьников Нижнего Новгорода и Нижегородской области, у которых в школе нет занятий по алгоритмическому программированию, или которых чем-то не устраивают такие занятия в их школе. Но при этом, если в этом курсе захотят участвовать школьники не из Нижегородской области, я ничего против иметь не буду.</p>\n\n<h3>Что за странный формат? Что за занятия в лицее 40 и в ННГУ?</h3>\n<p>В этом курсе можно заниматься полностью заочно — по многим темам материалы есть на сайте, и вы всегда можете написать вопрос мне. Кроме того, по материалам этого курса я веду очные занятия в лицее 40 (только для учеников лицея) и в ННГУ (для всех желающих). Но при этом у нас нет регулярных лекций по строгому расписанию, все школьники занимаются в своем темпе, поэтому можно ходить и в лицей, и в ННГУ, можно ходить не каждый раз. Поэтому это получается такой очно-заочный курс.</p>\n\n<h3>Чему тут учат?</h3>\n<p>Основное направление — это алгоритмическое программирование. Начиная с основ программирования, и далее в алгоритмы и структуры данных. Это то, что по-английски называется Computer Science. С существенным уклоном в сторону олимпиадного программирования (в первую очередь по линии Всероссийской олимпиады школьников), тем более что задачи на олимпиадах — это как раз задачи на алгоритмы и структуры данных.</p>\n\n<h3>Чему тут НЕ учат?</h3>\n<p>Мы не будем специально заниматься "техническими" вопросами:</p>\n<ul>\n<li>Созданием пользовательских интерфейсов, кнопочек, окошек и т.д.</li>\n<li>Программированием под конкретные платформы: созданием web-приложений, программированием под Android, iOS и т.п.</li>\n</ul>\n<p>Мы будем изучать алгоритмы, которые лежат в основе многих таких программ (мы не будем обсуждать, как сделать кнопку "сортировать по алфавиту", но будем обсуждать, как реализовать сортировку, когда список объектов для сортировки уже есть).</p>\n<p>Кроме того, мы не будем специально готовиться к ЕГЭ или поступлению в вузы. Тем не менее, задачи части C ЕГЭ по информатике — это фактически довольно простые олимпиадные задачи, поэтому если вы хорошо решаете олимпиадные задачи, то проблем с ЕГЭ у вас быть не должно.</p>\n\n<h3>Вы действительно будете учить?</h3>\n<p>И да, и нет. Формат заочного курса подразумевает, что существенную часть материала вы будете изучать сами. Я буду скорее направлять вас, советуя, где можно посмотреть тот или иной вопрос, на каких задачах отладить навыки, а также буду довольно активно комментировать ваши программы. Кроме того, вы всегда можете со мной связаться (контакты на главной странице курса) и задать любой вопрос.</p>\n\n<h3>Какой язык программирования?</h3>\n<p>Сложный вопрос, точнее вопрос с длинным ответом.</p>\n<p>Если вы только еще начинаете программировать, то я рекомендую использовать Python 3. Теоретические материалы для начинающих я буду подбирать именно по Python.</p>\n<p>Еще один популярный вариант — C++, но я настоятельно не рекомендую его выбирать, если вы только начинаете учиться программировать. Если же вы где-то уже научились неплохо писать на C++ (контрольный вопрос: какой тип данных вы используете для работы со строками и насколько это для вас сложно), то можете писать на C++. Теории по C++ на начальных уровнях нет, но если вы его где-то уже изучили, то она вам не нужна :) Если же вы неуверенно знаете темы уровня 1, то лучше учите питон по материалам на сайте.</p>\n<p>Довольно популярный вариант — Паскаль. Раньше я его рекомендовал, но в современном мире единственная причина учить паскаль — если вас в школе учат на паскале, вы уже неплохо его знаете, и не хотите распыляться на два языка. На самом деле, даже в этом случае я рекомендую вам изучить питон и заниматься в этом курсе на питоне, но в принципе, если хотите, то можете заниматься и на паскале. Теории по паскалю на сайте нет, но если вы его изучаете в школе и неплохо его знаете, то теория вам не нужна :) Если же вы неуверенно знаете темы уровня 1, то лучше учите питон по материалам на сайте.</p>\n<p>Но в целом я не настаиваю на том или ином выборе языка. Вы можете заниматься на любом языке из тех, которые поддерживается этим сайтом (только еще раз хорошо взвесьте все плюсы и минусы); правда, я сам лучше всего знаю паскаль, питон и c++, поэтому по другим языкам моя помощь вам будет ограничена . Ну и теории по другим языкам на сайте нет.</p>\n<p>Если у вас возникают вопросы, то свяжитесь со мной.</p>\n\n<h3>Что от меня требуется для занятий?</h3>\n<p>От вас требуется, в первую очередь, желание заниматься. Я не ваш школьный учитель, не ваш родитель, я не могу чего-то требовать от вас; ваше присутствие здесь — дело добровольное. Я не буду вас торопить, или ругать вас, если вы ничего не делаете неделями. Но при этом понимайте, что каких-либо результатов можно добиться только регулярными занятиями; если вы хотите конкретных цифр по тому, сколько времени надо выделить, то я бы считал, что как минимум два раза в неделю часа по 2-3 выделить надо, а лучше больше. (Для школьников, которые ходят ко мне на очные занятия, я рекомендую, в добавок в 2-3 часовому очному занятию, еще примерно столько же заниматься дома.) Но <b>следите за этим сами</b>, я не буду стоять у вас над душой. (Родителям и учителям: если вы хотите контролировать успехи ваших детей, см. отдельный документ по ссылке с главной страницы курса, и/или напишите мне.)</p>\n<p>Тот же принцип с моей стороны относится и к остальным вопросам: я лишь советую вам что-то, но не могу требовать. Если вы хотите выбрать определенный язык программирования вопреки моим рекомендациям — ну хорошо; и т.п.</p>\n<p>Но при этом учтите, что не только ваше участие здесь — дело добровольное, но и моя вам помощь — это тоже дело добровольное. Естественно, я с большей радостью буду помогать школьнику, который активно занимается, чем школьнику, который что-то пытается делать раз в месяц, и т.п.</p>\n\n<h3>А какие изначальные знания требуются? И каких классов могут быть школьники?</h3>\n<p>По программированию — от никаких и выше. Вообще, заочный формат позволяет реализовать почти индивидуальное обучение (т.е. я готов каждому школьнику выдавать личные задания), поэтому я готов принимать школьников, начиная от тех, кто ничего не умеет, и до школьников существенно более высокого уровня.</p>\n<p>Важными являются предварительные знания по математике. Опыт показывает, что чем сильнее математическая подготовка у школьника, тем он лучше занимается программированием. Поэтому если вы участвуете (пусть и на невысоком уровне) в математических олимпиадах — это вам плюс.</p>\n<p>Я ожидаю здесь видеть школьников от 7 и до 11 класса. Если школьник сильный (участвует в олимпиадах или конкурсах по математике, или как минимум весьма хорошо знает школьную программу), то можно и 5-6 классы. Для сильных школьников, чем раньше начать заниматься программированием, тем лучше.</p>\n\n<h3>Что надо сделать, чтобы начать заниматься?</h3>\n<p>Прочитайте документ "Инструкция для тех, кто здесь в первый раз" (ссылка на главной странице курса) и сделайте то, что там написано.</p>\n\n<h3>Когда можно начать заниматься? Когда "следующий набор"?</h3>\n<p>К курсу можно присоединится в любое время. Все равно занимающиеся школьники имеют довольно разный уровень подготовки, поэтому никакой единой программы типа "на этой неделе проходим то-то, на следующей то-то, а если вы пропустили или слишком поздно узнали о курсе, то ждите следующей группы или следующего года" нет.</p>\n<p>Единственное — во время праздников или летом у меня может быть ограничен доступ к интернету, поэтому я могу не так быстро отвечать на ваши письма, смотреть ваши решения и т.д.</p>\n<p>То же относится и к очным занятиям, можно присоединиться на любом занятии. Только проверьте, нет ли на главной странице курса объявления об отмене очередного занятия (например, из-за праздников); кроме того, летом занятий нет. На всякий случай можете мне заранее написать и уточнить, когда проходят занятия.</p>\n\n<h3><i>— И как думаешь, Василич? Будет от этой работы толк?</i></h3>\n<p><i>— А вот поработаешь, Петр Николаич, увидишь!</i><br>\n(Лев Успенский. Сопка «Камянистка», или торжество науки.)</p>\n<p>Конечно, я не гарантирую, что стоит начать заниматься, и вы сразу достигнете высоких результатов. Это зависит от многого, в том числе то того, что за пределами моего влияния — в первую очередь, математического образования, общей математической культуры, да и одаренности школьника; а также от трудолюбия и желания заниматься. Но думаю, что для большинства школьников, имеющих нужный склад мышления, эти занятия будут полезны.</p>\n\n<h3>А кто вообще вы такой?</h3>\n<p>Я — Петр Андреевич Калинин, к.ф.-м.н., старший разработчик компании Яндекс, выпускник ВШОПФ ННГУ. Я в свое время активно участвовал в различных олимпиадах: бронзовый призер международной олимпиады школьников по информатике (IOI) 2001 года, золотой призер IOI 2002 года; в составе команды ННГУ дважды участник финала чемпионата мира по командному программированию ACM (ACM ICPC). Я много лет езжу преподавателем в Летнюю компьютерную школу, крупнейшую российскую летнюю школу по алгоритмическому программированию; я постоянный член жюри Нижегородской городской олимпиады школьников по программированию (последние годы — председатель жюри). С 2017 по 2019 год я преподавал в Школе анализа данных Яндекса. Я ученик В.Д. Лелюха.</p>\n\n<p>В том или ином виде я учу школьников программированию с тех пор, как сам окончил школу в 2002 году (я ездил преподавателем в различные летние школы и т.п.); этот курс существует с 2013 года. Среди моих учеников — ряд участников и один победитель заключительного этапа Всероссийской олимпиады школьников по информатике (не считая моего брата Николая, в обучении которого я тоже принимал не последнее участие и который является абсолютным победителем заключительного этапа 2013 года и дважды — в 2013 и 2014 годах — золотым призером международной олимпиады школьников по информатике).</p>\n\n<p>Команды школьников под моим руководством регулярно участвуют в Нижегородской и Всероссийской командных олимпиада школьников по программированию. На большинстве прошедших к данному моменту Нижегородских командных олимпиадах абсолютное первое место занимала моя команда; на Всероссийской командной олимпиаде мои команды регулярно становятся призерами, нередко — медалистами, а два раза — занимали абсолютное первое место.</p>\n\n<p>Вы всегда можете связаться со мной, контактные данные указаны на главной странице курса.</p>\n\n<h3>А что за сайт informatics.mccme.ru?</h3>\n<p>Informatics.mccme.ru — это сайт дистанционной подготовки по информатике, организованный Московским центром непрерывного математического образования (МЦНМО) и Московским институтом открытого образования (МИОО); он очень удобен для организации курсов подобных этому, и, как вы можете видеть на главной странице сайта, реально широко используется, но в первую очередь для организации очных занятий. Я не имею непосредственного отношения к этому сайту (хотя и знаком с людьми, которые его создали и поддерживают).</p>\n\n<p>Этот курс строится на базе материалов с informatics и использует его в качестве тестирующей системы (а раньше вообще курс существовал только на informatics). Местами еще могли остаться ссылки на информатикс, если обнаруживаете такую, пишите мне.</p></div>', 'title': 'FAQ для школьников', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_6', 'order': 6, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_7', 'order': 7, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><div style="text-align:center;"><font size="+2">Занятия алгоритмическим программированием для студентов, выпускников вузов и вообще всех желающих</font></div>\n\n<h3>Что это за курс?</h3>\n<p>Это курс по алгоритмическому программированию (алгоритмы, структуры данных и т.д.)</p>\n\n<p>Он в первую очередь рассчитан на школьников и в качестве подготовки к школьным олимпиадами (и многие материалы в курсе написаны именно как для школьников), но также в курсе могут заочно заниматься (и реально занимаются) вообще все желающие: студенты, выпускники вузов и т.д. Занятия для нижегородских школьников бесплатные, для всех остальных — платные.</p>\n\n<p>Эта страничка — она как раз для студентов, выпускников и т.д., а не для школьников. Для школьников есть <a href="/material/module-20927_5" onclick="window.goto(\'/material/module-20927_5\')();return false;">отдельная страничка</a>.</p>\n\n<h3>Чему тут учат?</h3>\n<p>Основное направление — это алгоритмическое программирование. Начиная с основ программирования, и далее в алгоритмы и структуры данных. Это то, что по-английски называется Computer Science.</p>\n\n<h3>Чему тут НЕ учат?</h3>\n<p>Мы не занимаемся "техническими" вопросами:</p>\n<ul>\n<li>Созданием пользовательских интерфейсов, кнопочек, окошек и т.д.</li>\n<li>Программированием под конкретные платформы: созданием web-приложений, программированием под Android, iOS и т.п.</li>\n<li>Использованием различных фреймворков, библиотек и т.д.</li>\n</ul>\n<p>Мы будем изучать алгоритмы, которые лежат в основе многих таких программ (мы не будем обсуждать, как сделать кнопку "сортировать по алфавиту", но будем обсуждать, как реализовать сортировку, когда список объектов для сортировки уже есть).</p>\n\n<h3>Вы действительно будете учить?</h3>\n<p>И да, и нет. Формат заочного курса подразумевает, что существенную часть материала вы будете изучать сами. Я буду скорее направлять вас, советуя, где можно посмотреть тот или иной вопрос, на каких задачах отладить навыки, а также буду довольно активно комментировать ваши программы. Кроме того, вы всегда можете со мной связаться (контакты на главной странице курса) и задать любой вопрос.</p>\n\n<h3>Какой язык программирования?</h3>\n<p>Вообще говоря, какой хотите, из тех, что позволяют писать консольные приложения и поддерживаются этим сайтом. Это C++, Java, Python, C#, PHP, Ruby, Perl, Pascal, Basic, даже 1С. </p>\n\n<p>При этом, если вы еще не знаете никакого языка программирования, то я рекомендую Python. На страничке курса есть материалы для начинающих по питону. Если вы знаете какой-то из перечисленных в предыдущем абзаце языков, то можете использовать его; но вообще все продвинутые темы не зависят от языка.</p>\n\n<p>Лично я лучше всего знаю C++, питон и паскаль; по этим языкам я смогу вам достаточно подробно помогать. По другим языкам я не смогу вам подсказывать по различным тонкостям языка, хотя, как показывает опыт, для алгоритмов это не очень существенно.</p>\n\n<h3>А какие изначальные знания требуются?</h3>\n<p>По программированию — от никаких и выше. Вообще, заочный формат позволяет реализовать почти индивидуальное обучение (т.е. каждый участник курса занимается в своем ритме и режиме), поэтому я ожидаю здесь людей с широким спектром начальных знаний: от студентов младших курсов, только начинающих программировать, до уже профессиональных программистов, желающих улучшить свои знания в области алгоритмов.</p>\n\n<h3>Что надо сделать, чтобы начать заниматься?</h3>\n<ul>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (для этого вас попросят еще зарегистрироваться на сайте informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, где вы учитесь/работаете. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля".</li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты в разделе "О курсе" на главной странице курса.</li>\n<li>Дождитесь ответа и дальнейших инструкций от меня.\n</li>\n</ul>\n<p></p>\n\n<h3>Когда можно начать заниматься? Когда "следующий набор"?</h3>\n<p>К курсу можно присоединится в любое время. Все равно занимающиеся имеют довольно разный уровень подготовки, поэтому никакой единой программы типа "на этой неделе проходим то-то, на следующей то-то, а если вы пропустили или слишком поздно узнали о курсе, то ждите следующей группы или следующего года" нет.</p>\n<p>Единственное — во время праздников или летом у меня может быть ограничен доступ к интернету, поэтому я могу не так быстро отвечать на ваши письма, смотреть ваши решения и т.д.</p>\n\n<h3>Занятия только заочные?</h3>\n<p>Да, очных занятий для не-школьников нет. А если бы и были, то стоили бы намного дороже.</p>\n\n<h3>А кто вообще вы такой?</h3>\n<p>Я — Петр Андреевич Калинин, к.ф.-м.н., старший разработчик компании Яндекс, выпускник ВШОПФ ННГУ. Я в свое время активно участвовал в различных олимпиадах: бронзовый призер международной олимпиады школьников по информатике (IOI) 2001 года, золотой призер IOI 2002 года; в составе команды ННГУ дважды участник финала чемпионата мира по командному программированию ACM (ACM ICPC). С 2017 по 2019 год я преподавал в Школе анализа данных Яндекса. Я ученик В.Д. Лелюха.</p>\n\n<p>В том или ином виде я учу школьников программированию с тех пор, как сам окончил школу в 2002 году (я ездил преподавателем в различные летние школы и т.п.); этот курс существует с 2013 года. Среди моих учеников — ряд участников и один победитель заключительного этапа Всероссийской олимпиады школьников по информатике (не считая моего брата Николая, в обучении которого я тоже принимал не последнее участие и который является абсолютным победителем заключительного этапа 2013 года и дважды — в 2013 и 2014 годах — золотым призером международной олимпиады школьников по информатике).</p>\n\n<p>Команды школьников под моим руководством регулярно участвуют в Нижегородской и Всероссийской командных олимпиада школьников по программированию. На большинстве прошедших к данному моменту Нижегородских командных олимпиадах абсолютное первое место занимали мои команды; на Всероссийской командной олимпиаде мои команды регулярно становятся призерами, нередко — медалистами, а два раза — занимали абсолютное первое место.</p>\n\n<p>Вы всегда можете связаться со мной, контактные данные указаны на главной странице курса.</p>\n\n<h3>А что за сайт informatics.mccme.ru?</h3>\n<p>Informatics.mccme.ru — это сайт дистанционной подготовки по информатике, организованный Московским центром непрерывного математического образования (МЦНМО) и Московским институтом открытого образования (МИОО); он очень удобен для организации курсов подобных этому, и, как вы можете видеть на главной странице сайта, реально широко используется, но в первую очередь для организации очных занятий. Я не имею непосредственного отношения к этому сайту (хотя и знаком с людьми, которые его создали и поддерживают).</p>\n\n<p>Мой курс строится на базе материалов с informatics и использует его в качестве тестирующей системы (а раньше вообще курс существовал только на informatics). Местами еще могли остаться ссылки на информатикс, если обнаруживаете такую, пишите мне.</p></div>', 'title': 'FAQ для студентов и старше', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_8', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_9', 'order': 9, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Инструкция для тех, кто здесь в первый раз</h1>\n<h2>Для школьников</h2>\nЕсли вы хотите начать заниматься в этом курсе, то сделайте следующее:\n<ol>\n<li>Во-первых, можно просто придти на очное занятие (в ННГУ для всех желающих, в лицее 40 для лицеистов, информация о занятиях на страничке курса). Но можно начать (и продолжать) заниматься и дома, не дожидаясь очного занятия, можно и вообще на очные занятия не ходить. Все инструкции ниже идут как раз для случая, если вы хотите начать заниматься из дома.</li>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (вас попросят еще зарегистрироваться на informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, школу, класс, город. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля"; если вы участвовали в каких-либо олимпиадах по математике или программированию, укажите это. (Это не значит, что здесь будет какой-то отбор, я готов принять в курс всех желающих. Но я просто хочу заранее знать, какой у вас уже есть опыт.) </li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты разделе "О курсе".</li>\n<li>Далее:\n<ul>\n<li>Если вы — начинающий, т.е. не знаете никакой язык программирования на уровне, позволяющем вам уверенно писать простые программы, то начинайте с <a href="/material/1" onclick="window.goto(\'/material/1\')();return false;">уровня 1</a>. Там последовательно разбираются различные стороны языка программирования — начните их последовательно проходить. Вам надо будет выбрать, на каком языке программирования работать, я советую начинающим питон.</li>\n<li>Если вы какие-то программы писать умеете, но не очень уверенно, то выберите на уровнях <a href="/material/1%D0%90" onclick="window.goto(\'/material/1%D0%90\')();return false;">1А</a> или <a href="/material/1%D0%91" onclick="window.goto(\'/material/1%D0%91\')();return false;">1Б</a> первую тему, которую не очень уверенно знаете, и начинайте с нее.</li>\n<li>Если вы на выбранном вами языке программирования можете достаточно уверенно писать простые программы, то начните с темы "вещественные числа" на <a href="/material/1%D0%91" onclick="window.goto(\'/material/1%D0%91\')();return false;">уровне 1Б</a>, и после этого переходите к уровню 1В и далее. Вполне возможно, что эти задачи вам покажутся простыми, и вы их очень быстро решите, но, возможно, над некоторыми вам придется подумать, а заодно я посмотрю на ваш стиль программирования и на разного рода мелкие моменты, которые вы можете не знать, пусть даже и хорошо пишите программы. (Обратите внимание, что там не надо решать все задачи для перехода на следующие уровни.) Перед тем, как начинать решать задачи, прочитайте в разделе "О курсе" тексты "Работа с сайтом..." и "Начало работы с Free pascal" (если вы пишите на паскале). Многое вам там будет знакомо, но я уверен, что что-то найдете и новое.</li>\n<li>Если вы — уже очень сильно продолжающий, т.е. умеете уверенно писать простые задачи (и, скорее всего, вы уже участник региональных олимпиад), то напишите мне и ждите инструкций.</li>\n</ul>\n</li></ol>\n\n<h2>Для студентов и старше</h2>\n<ul>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (для этого вас попросят еще зарегистрироваться на сайте informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, где вы учитесь/работаете. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля".</li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты в разделе "О курсе" на главной странице курса.</li>\n<li>Дождитесь ответа и дальнейших инструкций от меня.\n</li>\n</ul></div>', 'title': '\nИнструкция для тех, кто здесь в первый раз (или "Что надо сделать, чтобы начать заниматься?")', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_10', 'order': 10, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>Про то, как тут заниматься</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_11', 'order': 11, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Работа с сайтом</h2>\n<p>Основное, что вы будете делать на наших занятиях — это решать задачи. Большинство задач будут требовать написания программы, которая считывает (с клавиатуры или из файла) некоторые данные, по ним вычисляет новые данные, и результат выводит на экран или сохраняет в файл.</p>\n<p>Написанную вами программу вы можете (и должны) отправить на проверку. Этот сайт предоставляет возможность автоматической проверки ваших программ — вы сразу (в течение максимум одной-двух минут) получаете результат проверки: работает ваша программа корректно или нет. Кроме того, я буду видеть все ваши попытки, которые вы отправляете на сайт, и смогу их комментировать, писать замечания и т.д., а вы сможете эти комментарии видеть и по ним улучшать свои программы.</p>\n\n<h3>Пример задачи</h3>\n<p>Зайдите на уровень 1А (внутри уровня 1). Там есть ссылка "Задачи на арифметические операции". Зайдите туда. Вы увидите список задач: "Дележ яблок - 1", "Дележ яблок - 2", и т.д., до "Разность времен". Это и есть набор задач (коротко говорят "контест"), которые вам предлагается прорешать для закрепления знаний по первой теме курса — арифметическим операциям. \n</p><p>Все названия задач — ссылки, по ним открывается собственно задача. Откройте задачу "Дележ яблок - 1". Вы видите ее условие: "N школьников делят K яблок поровну, неделящийся остаток остается в корзинке. Сколько яблок достанется каждому школьнику? Программа получает на вход числа N и K и должна вывести искомое количество яблок." Ниже идет пример: при вводе данных "3 14" программа должна вывести "4".</p>\n<p>Условие задачи четко описывает, что должна делать ваша программа: для любых значений N и K она должна вычислить и вывести ответ на задачу. В более серьезных задачах в условии всегда указываются ограничения на допустимые N и K, но в задачах для начинающих на этом сайте считается, что N и K "разумные" (в частности, помещаются в тип данных integer в паскале); в "разумность" в данном случае входит и то, что оба числа положительны.</p>\n<p>Пример нужен только для проверки того, что вы верно поняли условие, формат входных данных, и смогли проверить программу на простейшем тесте. Тем не менее, ваша программа должна работать не только на тесте из примера, но и на других допустимых тестах.</p>\n\n<h3>Написание решения</h3>\nДанная задача решается достаточно легко. Нам надо, конечно, завести две переменные, N и K, считать их с клавиатуры, и вывести неполное частное от деления K на N (обратите внимание, именно K на N, а не N на K!). Программа будет выглядеть так:\n<table>\n<tbody><tr><th>Паскаль</th><th>Питон</th></tr>\n<tr><td>\n<pre>{$mode delphi}\nvar n,k:integer;\nbegin\nread(n,k);\nwriteln(k div n);\nend.</pre>\n</td><td>\n<pre>n = int(input())\nk = int(input())\nprint(k // n)</pre>\n</td></tr></tbody></table>\n\nОбратите внимание на следующие особенности (в вашем учебнике может быть написано не так — надо делать так, как написано тут, а не в учебнике. Возможно, чего-то из описанного здесь вы не поймете — тогда просто пропускайте этот пункт). Часть из этих особенностей относятся только к паскалю, часть — к любому языку программирования.\n<ul>\n<li>(паскаль) Написано <code>{$mode delphi}</code>. Пока вы не знаете, какие разные режимы компилятора бывают, всегда пишите эту конструкцию. Потом, когда узнаете, сможете выбирать, какой режим компилятора вам нужен.</li>\n<li>(паскаль) Не используется конструкция <code>program ...;</code>. В современном программировании она не нужна вообще.</li>\n<li>(паскаль) Вся программа пишется маленькими буквами. Поскольку в Pascal все равно, использовать маленькие или заглавные буквы, то сейчас принято использовать маленькие.</li>\n<li>Мы не выводим никаких "приглашений" типа "введите N". В условии задачи четко написано, что именно наша программа должна выводить на экран, и там ничего не сказано про то, что надо выводить приглашения. Поэтому любой лишний вывод на экран будет рассмотрен как нарушение формата вывода.</li>\n<li>Нет никаких "проверок на дурака", например, нет проверки "а вдруг N=0?", или "а вдруг ввели не число?". Аналогично предыдущему, это в наших задачах не требуется. В более серьезных задачах в условии будут стоять ограничения на допустимые значения N, и никто не будет тестировать вашу программу с N, не удовлетворяющим этим ограничениям. В этой задаче считается, что N&gt;0 всегда.</li>\n<li>(паскаль) Мы не делаем <code>clrsrc;</code> в начале программы — это не требуется. И пользователь, и тестирующая система способны отличить вывод этой программы от того, что было выведено на экран раньше.</li>\n<li>Аналогично, мы не ставим в конце программы пустой <code>readln;</code> или <code>readkey;</code>, или <code>input()</code> в питоне, или <code>getch();</code> в c++ или другую задержку работы. Это тоже не требуется; информация, выведенная на экран, все равно сохраняется и ее все равно можно посмотреть.</li>\n<li>Мы посчитали и сразу вывели ответ, не сохраняя его в промежуточную переменную. Можно было сохранить:\n<pre>// паскаль\nans:=k div n;\nwriteln(ans);\n// питон\nans = k / n\nprint(ans)\n</pre>\nВ этой простой программе проще вывести сразу, но если выражение будет сложнее, то можно и сохранить.</li>\n</ul>\n<p>Сохраните эту программу в какой-нибудь файл. Запомните как имя файла, так и ту директорию (папку), куда вы сохранили файл (в free pascal она отображается в нижней части диалога сохранения файла).</p>\n\n<p>Теперь протестируйте программу. Запустите ее и повводите разные тесты.</p>\n\n<p>Введите для начала тест из примера: "3 14" и убедитесь, что она вывела 4.</p>\n\n<p>В этой задаче на каждый тест ответ однозначно определен (например, на пример из условия ответ может быть только 4). Бывают задачи, когда на каждый тест может быть несколько правильных вариантов ответа, в таких задачах в условии обычно написано "если есть несколько решений, выведите любое" или присутствует какая-нибудь подобная фраза. В таком случае ваша программа не обязана выдавать ответ, точно совпадающий с тем, что указан в примере — достаточно, чтобы он был одним из правильных. Аналогично, в дальнейшем, при тестировании вашей программы на сайте (см. ниже) по каждому тесту будет допускаться любой из правильный ответов.</p>\n\n<p>Придумайте еще несколько примеров к этой задаче. Постарайтесь, чтобы они были разнообразными: чтобы были разные N, K, и разные ответы. Например, введите "5 25" и проверьте, что ответ 5. Придумайте сами еще несколько примеров. Важно: прежде чем вводить каждый пример в программу, сначала в уме вычислите ответ, и только потом запустите программу и проверьте, что она вывела именно то, что вы и ожидали. Старайтесь всегда знать ответ на свой пример ДО запуска программы.</p>\n\n<p>Если программа написана правильно, то она правильно отработает на ваших тестах. Тогда ее можно сдавать на проверку на сайт (говорят "сдать/послать на проверку в тестирующую систему" или просто "сдать в систему").</p>\n\n<h3>Отправка на проверку</h3>\n<p>Вернитесь на страницу с условием задачи. Ниже условия есть раздел "Отправить решение" (он есть только если вы зарегистрированы на сайте и залогинены). Нажмите кнопку "Выбор файла" и выберите файл с вашим решением. Убедитесь, что вы выбираете файл .pas/.py (с исходным кодом), а не .o или .exe (уже скомпилированную программу)! Убедитесь, что в выпадающем списке рядом выбран правильный язык (в частности, если вы пишете на PascalABC, то надо его выбрать вручную), и нажмите кнопку "Отправить".</p>\n\n<p>Ваша программа отсылается на сервер, который ее компилирует и проверяет путем запуска на нескольких тестовых примерах. Эти тестовые примеры вам неизвестны, но в каждой конкретной задаче всегда одинаковы (т.е. если вы будете посылать несколько раз, то каждый раз тестовые примеры будут одни и те же). В данном случае тестирующая система запустит вашу программу несколько раз, каждый раз сымитирует ввод с клавиатуры значений N и K из очередного тестового примера, и проверит, что ваша программа выводит правильный ответ.</p>\n\n<p>Под формой для отправки находится таблица, перечисляющая все ваши попытки (также говорят "посылки") по этой задаче. Изначально там, конечно, никакой таблицу нет. После того, как вы отправили ваше решение, оно появится в этой таблице (через некоторое время — примерно через минуту). В колонке "Статус" отображается результат тестирования вашей программы. Сразу после того, как вы отправили программу, вы можете увидеть там "Компилирование" или "Тестирование", что обозначает, что ваша задача тестируется. Таблица обновляется автоматически, дождитесь, пока в колонке "Статус" не появится окончательный результат проверки.</p>\n\n<p>Основные результаты проверки, которые вы можете увидеть:\n</p><ul>\n<li>OK — ваша программа правильно прошла все тесты, ура!</li>\n<li>Ошибка компиляции — ваша программа не скомпилировалась</li>\n<li>Частичное решение — ваша программа прошла не все тесты (может быть, даже не прошла ни одного). Значит, ваша программа работает не совсем верно (или совсем неверно), постарайтесь найти ошибки.</li>\n<li>Бывают еще статусы "Зачтено" и "Проигнорировано", но они не ставятся автоматически, поэтому про них ниже.</li>\n</ul>\n\n<p>Справа в таблице есть колонка ссылок "Подробнее". Если вы нажмете на такую ссылку, то откроется окошко с подробной информацией о посылке. Во-первых, там будет полный код вашей программы, поэтому вы всегда сможете проверить, отправили ли вы именно то, что хотели; если вы решали задачи из школы, то придя домой, вы сможете посмотреть коды всех ваших программ, и т.д.</p>\n\n<p>Во-вторых, в открывшемся окне есть закладка "Протокол", где отображается протокол тестирования вашей программы. Если ваша программа не скомпилировалась (статус "Ошибка компиляции"), то там будет протокол компиляции: будут указаны ошибки, найденные в программе. Если же ваша программа скомпилировалась, то там будет протокол тестирования: по каждому тесту будет приведена информация о том, прошел этот тест (OK) или нет. В задаче "Дележ яблок - 1" всего 6 тестов, поэтому в таблице должно быть 6 строк. Если ваша посылка получила статус "ОК", то все 6 строк будут ОК; иначе какие-то тесты будут иметь другой статус (из названия статуса обычно понятно, что это значит).</p>\n\n<p>Таким образом, вы можете видеть, какие (по номерам) тесты у вас пройдены, а какие нет. Но вы не можете узнать, какой именно это тест (в нашей задаче — какие именно там N и K). Это сделано для того, чтобы вы учились сами тестировать свое решение и сами находить примеры, на которых оно не работает, а не рассматривали тестирующую систему как волшебный ящик, выдающий вам примеры, на которых ваша программа не работает. Поэтому если ваша программа не работает, то ищите сами примеры, на которых она ошибается. Если вы не можете их найти, то напишите мне, попробуем разобраться вместе. В крайнем случае у меня есть доступ ко всем тестовым данным, поэтому если я не смогу найти ошибку просто посмотрев код вашей программы, я смогу посмотреть, что там за тест, на котором ваша программа не работает.</p>\n\n<p>Но вообще, старайтесь проверять задачу до того, как ее отправлять в систему (и этому мы будем отдельно учиться). Рассматривайте неудачные попытки как конкретную неудачу, и старайтесь делать как можно меньше неудачных попыток. Вообще, на многих олимпиадах у вас будет только одна возможность сдать задачу, и если она не пройдет какие-то тесты, то возможности исправиться у вас уже не будет!</p>\n\n<h3>Засчитывание и игнорирование решений, комментарии к решению</h3>\n<p>Я буду просматривать все ваши решения: при наличии времени — все вообще посылки, в том числе и неуспешные, если же у меня времени будет мало, а посылок много — то только посылки со статусом ОК.</p>\n\n<p>В успешных посылках я буду просматривать ваш код на предмет следующего:\n</p><ul>\n<li>Во-первых, я буду смотреть, нет ли в коде каких-то ошибок, которые смогли миновать тесты тестирующей системы. Бывает так, что в коде какая-нибудь совсем неожиданная ошибка, и тестирующая система ее может пропустить (хотя тесты в тестирующей системе обычно подготовлены хорошо, и как правило все ошибки в коде проявляются при тестировании) — я буду смотреть, нет ли у вас таких ошибок.</li>\n<li>Также я буду смотреть, нет ли у меня каких-либо замечаний по коду, пусть и не являющихся ошибками, но являющихся общими пожеланиями. Например, может быть, что-то можно сделать проще, или что-то надо сделать по-другому, и т.д.</li>\n</ul>\n<p>Если к вашей программе у меня будут какие-либо замечания или комментарии, я их напишу, и вы сможете их увидеть. Во-первых, они появятся на сайте в правой колонке в разделе "Комментарии"; во-вторых, в каждой посылке, в окошке, открываемом по ссылке "подробнее", есть специальная закладка "комментарии". Соответственно, как только я прокомментирую вашу посылку, вы увидите комментарий. Обычно я стараюсь просматривать все посылки в течение суток, хотя иногда бывают и бОльшие задержки, до нескольких дней.</p>\n\n<p>Помимо собственно написания комментария, я по каждой вашей посылке принимаю решение — либо я принимаю это решение (пусть и с небольшими замечаниями), либо я потребую от вас это решение переписать с учетом моих замечаний. В первом случае я меняю статус посылки на "Зачтено" (т.е. вы будете видеть именно "Зачтено" вместо "ОК" в таблице с вашими посылками), во втором случае я меняю статус на "Проигнорировано". Соответственно, в первом случае просто примите к сведению замечания, которые я написал (а бывает так, что я и никаких замечаний не пишу), хотя можете и переписать решение, если хотите. Во втором случае обязательно перепишите решение с учетом этих замечаний.</p>\n\n<p>В сводной таблице решения "ОК" (т.е. которые я еще не посмотрел) отображаются с желтым фоном, решения "Зачтено" (т.е. которые я принял) — с зеленым фоном, проигнорированные решения не учитываются в общем количестве решенных вами задач, просто соответствующая задача в сводной таблице отображаются с красным фоном.</p>\n\n<p>Я буду стараться также писать комментарии по вашим неуспешным посылкам — указывать на ошибку или советовать, где ее поискать, и т.п. Я, конечно, не всегда буду писать их сразу как увижу вашу попытку, и не всегда буду полностью сообщать о найденной ошибке — ведь обычно вам полезно будет все-таки найти ошибку более-менее самостоятельно, я постараюсь вам давать наводящие советы (но, конечно, это зависит от ошибки). В общем, если вы пытались сделать задачу, но она не проходит тесты, то возможно в течение суток я вам напишу совет в комментарии к вашей посылке.</p>\n\n<p>Иногда я могу не успевать просмотреть все ваши неуспешные посылки, или не пишу комментарий по каким-то еще причинам. В таком случае, если вы хотите получить комментарий по какой-нибудь из них, просто напишите мне.</p>\n\n<h3>Хорошие решения</h3>\n<p>После того, как я засчитываю вам решение (ставлю статус "Зачтено"), у вас появляется доступ к "хорошим решения" по соответствующей задаче — на странице задачи, над формой для отправки решения, появляется ссылка на "хорошие решения".</p>\n\n<p>"Хорошие решения" — это несколько (до 5 штук) решений, которые сдавали другие ученики курса, и которые, на мой взгляд, написаны достаточно хорошо и могут считаться образцом решения этой задачи. Смотрите их, особенно по тем задачам, где я вам зачел решение с какими-либо комментариями (но вообще полезно смотреть "хорошие решения" и по всем зачтенным задачам вообще). Сравните "хорошие решения" с вашим решением, возможно, вы увидите, что что-то можно сделать проще, или вообще найдете другие полезные идеи.</p>\n\n<p>Я стараюсь в "хороших решениях" по возможности поддерживать баланс разных языков (т.е. как правило среди "хороших решений" есть решения на разных языках). Но смотрите и решения на вашем языке, и на других языках, даже которых вы не знаете — как правило, понять алгоритм можно даже на языках, которых вы вообще не знаете. С другой стороны, для вашего языка в "хороших решениях" вы можете найти и какие-нибудь интересные чисто языковые тонкости и приёмы.</p>\n\n<p>Кроме того, нередко в "хороших решениях" я показываю разные подходы к решению задачи, нередко там встречаются вообще разные алгоритмы. Если вы видите, что "хорошее решение" сильно отличается от вашего, полезно разобраться, как оно вообще работает.</p>\n\n<p>При этом понимайте, что на самом деле по многим задачам на сайте сданы уже сотни решений, и на самом деле "хороших" из них десятки, если не больше. Вы видите максимум пять из них, просто потому, что смотреть десятки более-менее одинаковых решений смысла нет. Вы увидите какие-то пять из них, которым повезло, что я их отметил как "хорошие", но это "везение" часто определяется случайностью, ну и указанными выше принципами про разнообразие языков и подходов. То есть вы видите не пять самых лучших решений, а пять случайных из числа достаточно хороших.</p>\n\n<p>Поэтому не надо считать, что если ваше личное решение не попало в "хорошие", то оно хуже "хороших". Оно может быть столь же хорошо, или даже чем-то лучше "хороших", просто ему не повезло. Если вы видите, что "хорошие" решения написаны столь же чисто и понятно, как ваше — значит, ваше тоже могло бы быть "хорошим". И наоборот, если ваше решение попало в "хорошие", это не обозначает, что оно намного лучше всех остальных :) По той же причине авторы "хороших решений" не подписаны.</p>\n\n<p>С другой стороны, если вы посмотрели "хорошие решения", и считаете, что ваше решение заметно лучше всех "хороших", напишите мне, может быть, я и ваше решение добавлю в "хорошие". (Хотя обычно я назначаю решение "хорошим" одновременно с тем, как я его засчитываю, поэтому если ваше решение действительно заметно лучше других хороших, как правило, я его сделаю "хорошим" еще до того, как вы сможете посмотреть "хорошие решения" :) .)</p>\n\n<h3>Сводная таблица</h3>\n<p>Все ваши посылки по нашим задачам отображаются в сводных таблицах, ссылки на которые есть в меню сайта. А именно, каждая клетка в основной части этой таблицы указывает статистику посылок от конкретного школьника по конкретной задаче. Если в клетке стоит знак "+", значит, задача сдана успешно ("ОК" или "Зачтено"), если "-" — значит, человек пытался сдавать задачу, но прошел не все тесты. Число после значка (если оно есть) указывает количество неуспешных попыток (если они есть). Например:\n</p><ul>\n<li>Пустая клетка обозначает, что задача не сдавалась вообще;</li>\n<li>"+" обозначает, что задача сдана с первой попытки;</li>\n<li>обозначения "-" не бывает;</li>\n<li>"+2" обозначает, что задача сдана с третьей попытки (две неуспешные попытки и потом успешная);</li>\n<li>"-2" обозначает, что по задаче были только две неуспешные попытки и всё.</li>\n</ul><p></p>\n\n<p>Фон ячейки обозначает статус задачи относительно вердиктов "Зачтено" и "Проигнорировано":\n</p><ul>\n<li>Желтый фон — статус "ОК", т.е. я еще не смотрел эту задачу;</li>\n<li>Зеленый фон — статус "Зачтено";</li>\n<li>Красный фон — статус "Проигнорировано", при этом сама проигнорированная попытка считается неуспешной.</li>\n</ul><p></p>\n\n<p>В последних двух колонках таблицы указывается общее количество решенных задач и общее количество неуспешных ("штрафных") попыток (учитываются только те задачи, по которым в итоге была получена правильная программа, проигнорированные попытки не учитываются). Таблица отсортирована по общему количеству решенных задач, а при равном числе решенных задач — по количеству штрафных попыток.</p>\n\n<p>Еще у таблицы есть следующая особенность: в ней появляются только школьники, которые удовлетворяют сразу двум требованиям: во-первых, я их должен активировать их учетную запись, во-вторых, у школьника должна быть хотя бы одна попытка сдачи задачи. Поэтому если вы еще ничего не пытались сдавать, не удивляйтесь, что вас нет в таблице. Если же вы уже пытались что-то сдавать, а в таблице вас нет, то напишите мне — возможно, я забыл вас активировать.</p>\n\n<p>Аналогично, наборы задач (контесты) появляются в сводной таблице только когда хотя бы кто-нибудь отправит какое-нибудь решение по какой-нибудь задаче этого контеста.</p>\n\n<h3>Терминология</h3>\nВыше я уже ввел некоторую специфическую терминологию, которая используется в олимпиадном программировании, на всякий случай повторю ее тут:\n<ul>\n<li>Контест — любой набор задач, каким-то образом сгруппированный и выделенный от остальных. В пределах контеста задачи обычно занумерованы (1, 2, 3, ... или A, B, C, ... и т.п.) Это может быть отдельный тур олимпиады, или набор задач к какому-нибудь занятию или на какую-нибудь тему, и т.д. В рамках наших занятий "контестом" мы называем набор задач, доступных по каждой отдельной ссылке с главной страницы курса; слева от таких ссылок обычно значок, похожий на изображение клавиатуры. Например, "Задачи на арифметические операции" — это отдельный контест.</li>\n<li>Посылка (синонимы: попытка, сабмит) — отдельная ваша попытка сдать задачу в тестирующую систему; также программа, которую вы сдали в этой попытке.</li>\n<li>Штрафная попытка (обычно в контексте сводного рейтинга) — попытка, которая не прошла все тесты.</li>\n<li>Тест — это отдельный тестовый пример, подготовленный авторами задачи, чтобы на нем проверять ваши программы. Обычно по каждой задаче автор задачи подготавливает от 5 до 60 тестов, и программы, которые вы сдаете на проверку, проверяются по очереди на всех этих тестах. Чтобы попытка считалась успешной, надо, чтобы программа прошла все тесты, т.е. на все тесты дала правильный ответ. (На других олимпиадах могут быть другие правила.)</li>\n</ul></div>', 'title': '\nРабота с сайтом, отправка решений и просмотр моих комментариев', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_12', 'order': 12, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_13', 'order': 13, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><p>Я буду просматривать, по возможности, все ваши решения, и комментировать их тем или иным образом. Тем решениям, которые я просмотрю, я буду присваивать новый статус: \n</p><ul>\n<li>"Зачтено" — задача написана более-менее нормально, ура. На страничке просмотра кода вашей посылки (по ссылке "Подробнее") под кодом вы можете увидеть мои комментарии. Если там комментария нет, значит, задача решена весьма хорошо. Если есть комментарий, то он обычно указывает, что можно улучшить.</li>\n<li>"Проигнорировано" — мне что-то весьма не понравилось в вашем коде. На страничке просмотра кода вашей посылки (по ссылке "Подробнее") под кодом вы увидите мои комментарии, объясняющие, что именно мне не понравилось. Исправьте это и пересдайте решение.</li></ul><p></p>\n\n<p>Если вы не понимаете комментарий, спросите, я объясню подробнее.</p>\n\n<p>Посылки со статусом "Зачтено" отмечаются в таблице зеленым.</p>\n\n<p>Посылки со статусом "Проигнорировано" отмечаются в таблице синим.</p>\n\n<p>Не относитесь к "игнорам" как к издевательству над вами. Я постараюсь игнорить только те программы, которые можно довольно существенно улучшить (например, существенно сократив количество кода). Помните, что ваша цель — не только написать программу, которая пройдет все тесты, но и вообще научиться программировать. Фактически, "Проигнорировано" я ставлю тогда, когда считаю, что комментарий, который я пишу к вашей посылке, настолько важен, что вам обязательно его стоит прочитать; "игнор" — это такой способ обратить ваше внимание на комментарий.</p>\n\n<p>То, что вы сумели, пусть и не самым оптимальным образом, написать программу и сдать ее — это очень круто, но еще круче будет, если вы узнаете и поймете, как то же самое можно сделать еще проще. Считайте, что в большинстве задач написать программу, чтобы она прошла все тесты — это, грубо говоря, 70% успеха, но получить по ней "Зачтено" — это оставшиеся 30%.</p>\n\n<p>Все комментарии (в том числе и к зачтенным посылкам, и даже к неуспешным) вы также можете просмотреть в правой колонка не сайте.</p></div>', 'title': '\nПро засчитывание и игнорирование решений', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_14', 'order': 14, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_15', 'order': 15, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>О системе уровней</h1>\n<p>Весь материал в нашем курсе распределен по уровням, от самого простого до очень сложного. Уровни нумеруются последовательными числами (1, 2, 3, ...), в пределах уровня также введены подуровни, нумеруемые буквами (в уровне 1 — подуровни 1А, 1Б, 1В и 1Г, и т.п.)</p>\n\n<p>Большинство уровней имееют следующую структуру: подуровни А и Б содержат новый материал, а подуровни В и Г (последний есть не всегда) — дополнительные задачи повышенной сложности на закрепление этого материала. Иногда в уровнях В и Г могут быть особенно сложные задачи на материал существенно более ранних уровней (например, в уровне 5В может оказаться сложная задача на материал уровня 3). Иногда в уровнях В и Г выделены контесты по отдельным темам, иногда дополнительные задачи в этих уровнях идут в случайном порядке.</p>\n\n<p>Я предполагаю, что вы будете проходить подуровни последовательно, переходя к новому подуровню как правило тогда, когда вы "прошли" предыдущий подуровень. Исключение: если вы прошли какую-то тему в подуровне А или Б, и видите в подуровне В или Г контест продвинутых задач на эту же тему, то можете его порешать.</p>\n\n<p>Требования к "прохождению" каждого подуровня указаны под его заголовком. Как правило, для подуровней А и Б требуется прорешать все задачи, для уровней В и Г требуется прорешать часть (половину или треть) задач. Тем не менее это не обозначает, что оставшиеся задачи уровней В и Г решать не надо. Я рекомендую, если вы прорешали необходимый минимум задач уровней В и Г, переходить на следующий уровень, чтобы побыстрее приступить к изучению новой теории. Но при этом возвращайтесь регулярно к недорешенным задачам предыдущих уровней. Примерно можно оценивать так: когда вы переходите на уровень 4А, у вас должна быть решена половина задач уровня 3В, 3/4 задач уровня 2В и примерно 7/8 задач уровней 1В и 1Г. Аналогично, когда вы переходите на уровень 5А, у вас должна быть решена половина задач уровня 4В, а также 3/4 задач уровня 3В, 7/8 задач уровня 2В и почти все (за редким исключением особенно неприятных задач) задачи уровней 1В и 1Г. Аналогично для других уровней.</p>\n\n<p>Обратите внимание, что в уровнях В и Г задачи далеко не всегда упорядочены по сложности. Поэтому решайте их в том порядке, в каком вам удобнее!</p>\n\n</div>', 'title': '\nПро систему уровней', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_16', 'order': 16, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_17', 'order': 17, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про очные занятия для школьников</h1>\n<h2>Общая информация</h2>\n\n<p>Для школьников в течение учебного года проходят очные занятия — в лицее 40 по средам и в ННГУ им. Лобачевского по воскресеньям. На занятия в лицее 40 можно ходить только ученикам лицея 40, на занятия в ННГУ можно ходить вообще всем желающим школьникам (школьникам из Нижнего Новгорода и области, в том числе ученикам лицея 40, а также школьникам из других регионов, если вы занимаетесь у меня на курсе и по каким-то причинам оказались в Нижнем).</p>\n\n<p>На очные занятия можно приходить <b>только тем, кто решил хотя бы одну задачу в курсе</b>. Исключение — специальные занятия, про которые на сайте явно написано, что можно приходить новичкам (как правило, это второе занятие каждого семестра). Если вы опоздали на такое занятие, вы должны начать заниматься заочно; после того, как решите хотя бы одну задачу, можете приходить на очные занятия.</p>\n\n<p>В ННГУ занятия проходят <b>по воскресеньям, в 2 корпусе (пр. Гагарина, 23, к. 2), в аудиториях 110 и 114</b>. Я обычно бываю в ННГУ с 14.00 до 17.00. В это время параллельно проходят два занятия: с 14.00 до 17.00 для старших уровней (у кого уровень 3 и выше, также можно по желанию тем, у кого уровень 2В), и с 15.00 до 16.30 для начинающих. При этом начинающие тоже могут приходить раньше и оставаться до 17.00, просто до 15.00 до после 16.30 я буду больше времени уделять старшим.\n\nНа занятия в ННГУ действует обязательная запись, см. ниже. Кроме того, <b>берите с собой паспорт или свидетельство о рождении</b>, его может спросить охрана (хотя вроде никогда не спрашивают, но теоретически могут спросить). Если охранники вас не пускают, звоните мне.</p>\n\n<p>В лицее 40 занятия проходят <b>по средам в КЦ</b>. Я обычно бываю в лицее с 14.30 до 17.00, иногда чуть позже. Аналогично, можно приходить и уходить в любое время, но см. ниже про нехватку компьютеров. Если вы хотите получить зачем за спецкурс, смотрите отдельные <a href="/material/in20946" onclick="window.goto(\'/material/in20946\')();return false;">правила</a>.</p>\n\n<h2>Формат занятий</h2>\n\n<p>Очные занятия у нас проходят полностью в формате практики. У нас нет каких-либо общих лекций, я не рассказываю на занятиях новую теорию «для всех» (за исключением отдельных, специально анонсированных, занятий). Вы приходите, садитесь за компьютер, заходите на алгопрог, и продолжаете заниматься с того места, где остановились в прошлый раз — решаете задачи и/или читаете теорию. Самостоятельно. Я время от времени прохожу по классам, смотрю, кто что решает, могу что-то помогать, советовать, объяснять, но в основном вы занимаетесь самостоятельно.</p>\n\n<p>То есть вы занимаетесь так же, как если бы вы занимались из дома. Единственное отличие очных занятий от занятий из дома состоит в том, что на очных занятиях присутствую я, и вы всегда можете меня спросить о чем-либо, и как правило я достаточно быстро отвечу. (Правда, учтите, что на очных занятиях помимо вас обычно еще присутствует пара десятков школьников, у которых тоже есть свои вопросы :) ).</p>\n\n<p>Если вы на занятии добрались до новой теории — скажите мне. Возможно, я вам ее расскажу. Но, возможно, я отправлю вас читать теорию на сайте.</p>\n\n<p>В частности, поэтому расписание занятий у нас нестрогое. Вы можете опоздать на занятие, можете уйти раньше, можете пропустить часть занятий, можете, наоборот, ходить на два занятия — всё на ваше усмотрение. Конечно, чем больше вы занимаетесь, тем лучше у вас, наверное, будут результаты, но я не требую какого-то строгого посещения занятий.</p>\n\n<p><b>Занятия в ННГУ для старших уровней</b> немного отличаются по формату: мы решаем разные старые контесты, а потом обсуждаем задачи.</p>\n\n<h2>Про регистрацию на занятия и компьютеры</h2>\n\n<p>Как правило, особенно в первой половине учебного года, и особенно в ННГУ, на занятия приходят больше школьников, чем есть компьютеров. Поэтому на занятия в ННГУ надо регистрироваться, чтобы всем точно хватило компьютеров. На сайте есть <a href="/checkins">специальный раздел</a>, где надо регистрироваться на очередное занятие, там же есть подробные правила. Регистрироваться надо каждую неделю заново.</p>\n\n<p>На занятия в лицей 40 регистрации нет. Занятие в лицее 40 официально начинается в 14.30; как правило, к этому моменту свободные компьютеры еще есть. Если вы опоздали, не обижайтесь, если вам не хватило компьютеров. С другой стороны, как правило, уже в районе 15.30 компьютеры начинают освобождаться (далеко не все школьники сидят до конца занятия), поэтому если вам не хватило компьютера, можете просто подождать (например, поделав домашние задания по другим предметам).</p>\n\n<p>Универсальный способ избежать пробему нехватки компьютеров — приносить свой ноутбук. Но <a href="/material/module-16024_1" onclick="window.goto(\'/material/module-16024_1\')();return false;">см. отдельные правила про это</a>.</p></div>', 'title': '\nПро очные занятия для школьников', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_18', 'order': 18, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>Про оплату</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'pay', 'order': 19, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix">\n<h1>Стоимость и порядок оплаты занятий</h1>\n\n<h2>Для школьников из Нижегородской области</h2>\n<p>Для нижегородских школьников <b>занятия бесплатны</b>, и в обозримом будущем останутся бесплатными (т.к. мне проведение занятий оплачивает лицей 40 и ННГУ).</p>\n\n<p>Формально вы считаетесь нижегородским школьников, если учитесь в школе, находящейся в Нижегородской области, и имеете теоретическую возможность, пройдя школьный и муниципальный этапы, участвовать в Нижегородской областной олимпиаде школьников по информатике.</p>\n\n<p>Если у меня возникнут подозрения, являетесь ли вы нижегородским школьников или нет, я могу попросить вас как-то это подтвердить.</p>\n\n<p>Прочитайте, пожалуйста, отдельный текст <a href="/material/module-20927_21" onclick="window.goto(\'/material/module-20927_21\')();return false;">про бесплатность занятий для нижегородских школьников</a>.</p>\n\n<p>Вы также можете поддержать занятия, переведя мне любую сумму денег на карту Тинькофф-банка номер 5536 9137 7443 1460. Например, для перевода вы можете воспользоваться <a href="https://www.tinkoff.ru/cardtocard/">сервисом перевода с карты на карту Тинькофф-банка</a>, там по идее должно быть без комиссии, или любым другим сервисом по переводу денег с карты на карту.</p>\n\n<p><b>При этом, пожалуйста, никак не указывайте, кто именно переводит деньги, и не сообщайте мне, что вы их перевели — я не хочу знать, кто из школьников мне переводит деньги, а кто нет.</b></p>\n\n<h2>Для всех остальных</h2>\n\n<p>Занятия для всех остальных (не-нижегородских школьников, а также не-школьников) платные. Точнее, собственно все материалы в курсе бесплатные. Они же есть на сайте informatics.mccme.ru в <a href="http://informatics.mccme.ru/course/view.php?id=1135">соответствующем разделе</a>, вы можете бесплатно заниматься там. Я беру деньги за то, что я добавлю вас в сводные таблицы, буду просматривать и комментировать ваши решения, отвечать на ваши вопросы (заочно) и т.д.</p>\n\n<p>Стоимость занятий определяется следующим образом:</p>\n\n<table class="table table-striped table-condensed table-hover">\n<tbody><tr><td>Младше 9 класса</td><td>500 рублей в месяц</td></tr>\n<tr><td>9 класс</td><td>1000 рублей в месяц</td></tr>\n<tr><td>10 класс</td><td>1500 рублей в месяц</td></tr>\n<tr><td>11 класс</td><td>1500 рублей в месяц</td></tr>\n<tr><td>Не школьники (студенты и старше)</td><td>1500 рублей в месяц</td></tr>\n</tbody></table>\n\n<p>Для новых учащихся первая неделя занятий в курсе бесплатна.</p>\n\n<h3>Дополнительные правила</h3>\n<p>Стоимость занятий для школьников фиксируется на тот момент, когда я активировал вам аккаунт в конкретном учебном году, и до конца учебного года; если в дальнейшем я буду поднимать стоимость занятий, то вы продолжите заниматься по старой цене (до конца учебного года, а если будете заниматься успешно, то и на следующий год и т.д.).</p>\n\n<p>Для студентов стоимость занятий фиксируется на момент первой оплаты и пожизненно.</p>\n\n<p>Для нижегородских школьников, занимавшихся в моем курсе более-менее успешно (условно говоря, набравших рейтинг 200 или выше, но может обсуждаться индивидуально), действует пожизненная скидка 50% на занятия после того, как они закончат школу.</p>\n\n<p>Границей учебного года (для определения "успешно занимающихся школьников", а также для "перевода" в следующий класс или в статус студентов) считается 1 июля.</p>\n\n<h3>Подтверждение</h3>\n\n<p>Если вы — не-нижегородский школьник младше 11 класса (т.е. стоимость занятий для вас ниже, чем для студентов), то вам надо подвердить это. Проще всего — прислать мне ссылку на какую-нибудь официальную страничку в интернете, где указаны ваши имя, фамилия, класс и школа. Например, это могут быть результаты какой-нибудь олимпиады, конкурса или т.п.; это может быть какая-нибудь новость на сайте вашей школы и т.д. Возможно, я еще попрошу ссылку на ваш профиль в социальных сетях. Альтернативный вариант для российских школьников — вы можете взять в школе справку о том, что вы учитесь, написать на ней ваш логин на алгопроге и прислать мне фотографию. Возможны и другие варианты подтверждения — напишите мне, как вы можете подтвердить ваш класс.</p>\n\n<p>Если вы не можете подтвердить свое право на сниженную стоимость занятий, вы можете заниматься по студенческой стоимости.</p>\n\n<h3>Скидки для успешных школьников</h3>\n\n<p>Для школьников существует дополнительная акция: если вы успешно занимались в курсе, и остаетесь школьником на следующий год, то на следующий год для вас сохраняется та же стоимость обучения, которая была и в этом году. Школьник считается успешно занимавшимся, если за год он решил минимум 70 задач, не считая задач уровней 1А и 1Б.</p>\n\n<p>Например, если 8-классник успешно занимался в курсе в течение года, то когда он перейдет в 9 класс, он продолжит заниматься по той же цене. Если он и в 9 классе будет успешно заниматься, то и в 10 классе он будет заниматься по той же цене, и т.д. Если, к примеру, в 10 классе он не будет успешно заниматься, то в 11 классе стоимость занятий для него сбросится на ту стоимость, которая будет установлена для 11 классов в соответствующем году.</p>\n\n<h2>Оплата</h2>\n<p>\nОплатить занятия можно картой <a href="/payment" onclick="window.goto(\'/payment\')();return false;">на сайте</a>.</p>\n\n<h2>Возможен ли возврат денег?</h2>\n<p>Стоимость не зависит от того, насколько вы активны в курсе (если вы решаете много, то я буду на вас тратить больше времени, чем если вы решаете мало, а вы платите одну и ту же сумму). Поэтому довольно странно возвращать деньги, если вы не делали ничего. Поэтому политика такая:</p>\n<ul>\n<li>Если вы по объективным непредвиденным причинам не могли заниматься в курсе более 5 дней подряд (сломали руку и т.п.), то я вам верну деньги за весь период, когда вы не могли заниматься. Предсказуемые вещи типа поездок, сессии и т.п. сюда не считаются.</li>\n<li>Если вы по каким бы то ни было причинам не занимались более 10 дней подряд, то я вам верну половину денег за этот период.</li>\n<li>Если вы заранее предупреждаете меня о том, что не сможете заниматься более 10 дней подряд, то я могу вернуть вам деньги за этот период.</li>\n<li>Конечно, если я по каким-то причинам не мог проверять ваши решения и отвечать на ваши письма в течение более чем 5 дней подряд, то я вам верну деньги за весь этот период.</li>\n</ul>\n</div>', 'title': 'Стоимость и порядок оплаты занятий', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_20', 'order': 20, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div><a href="/payment" onclick="window.goto(\'/payment\')();return false;">Оплатить занятия</a></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_21', 'order': 21, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h3>Занятия и правда бесплатные?</h3>\n<p>Да, занятия для школьников из Нижегородской области бесплатные. (Для студентов и всех остальных занятия платные, можете не читать этот текст.) </p>\n\n<h3>Но есть какие-то требования или условия?</h3>\n<p>Я, естественно, хочу от вас чего-то попросить за то, что я с вами занимаюсь. А именно, если эти занятия вам действительно полезны, и вы собираетесь применять полученные знания на какой-нибудь олимпиаде, конкурсе или подобном мероприятии, то я прошу вас указывать меня как вашего учителя, или преподавателя кружка и т.п. Особенно это касается, конечно, ситуации, если вы будете участвовать в олимпиадах высокого уровня (ну, начиная с городской/областной).</p>\n\n<h3>Но ведь я занимаюсь и где-то еще...</h3>\n<p>Конечно. Я поэтому прошу вас сначала понять, насколько этот курс вам полезен по сравнению с другими занятиями. Если подавляющую часть своих знаний вы получили где-то еще (на уроках в школе, на другом кружке или спецкурсе, от родителей и т.п.), и ваш результат на олимпиаде будет в первую очередь результатом других занятий — то, конечно, меня не надо указывать. Если вы получали важные знания как здесь, так и на других занятиях — значит, укажите и меня, и другого преподавателя. На многих олимпиадах можно указать нескольких преподавателей, или можно отдельно указать школьного учителя и преподавателя кружка, и т.п. Если же вы все знания получили только здесь, а другие занятия вам практически не помогли — я буду благодарен, если вы укажете только меня.</p>\n\n<h3>Но школа будет против указывать кого-то постороннего...</h3>\n<p>Попробуйте объяснить вашему учителю или завучу ситуацию. Объясните, что ваши результаты будут во многом определяться именно тем, что вы занимались на этом курсе (а если это не так, и вам эти занятия не помогли, — то, см. предыдущий вопрос, и не надо меня указывать); что если бы вы здесь не занимались, то ваш результат был бы хуже. Может быть, попросите ваших родителей помочь объяснить. В крайнем случае напишите мне, я могу связаться с некоторыми школами города. Или дайте учителю или завучу мой телефон, пусть позвонят.</p>\n\n<h3>Но заявку подает школа, я не могу на нее повлиять...</h3>\n<p>На многих олимпиадах на регистрации перед началом олимпиады вы можете проверить, кто у вас указан как учитель, и исправить. Кроме того, если вы прошли на олимпиаду сравнительно высокого уровня, то можете заранее подойти к вашему учителю или завучу и попросить указать меня в заявке на следующую олимпиаду.</p>\n\n<h3>А как вас указывать?</h3>\nВ большинстве случаев достаточно указать фамилию, имя и отчество — Калинин Петр Андреевич. Если это какой-то очень официальный текст (титульный лист какого-нибудь доклада и т.п.), то можете добавить «к.ф.-м.н.» (что значит кандидат физико-математических наук), но лучше сначала уточните у кого-нибудь или у меня. Если надо указать должность и место работы, пишите «старший разработчик, Яндекс». Если надо указать мой телефон, он есть на главной страничке курса. Если надо что-то еще, то свяжитесь со мной.\n\n<h3>А еще?</h3>\n<p>Вторая вещь, о которой я вас попрошу — если вам эти занятия оказались полезными, и у вас есть друзья или знакомые, которые являются достаточно умными школьниками, хорошо знают математику, участвуют в олимпиадах, или просто интересуются программированием — расскажите им про эти занятия.</p>\n</div>', 'title': '\nО бесплатности занятий для нижегородских школьников', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_22', 'order': 22, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>И еще немного...</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_23', 'order': 23, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Для учителей и родителей</h2>\n<p>Я про это уже написал в FAQ, но на всякий случай повторю здесь. Я рассматриваю занятия ваших детей здесь как добровольные, и не собираюсь от них требовать чего-либо, заставлять и т.д. Если школьник не хочет заниматься, или не может себя заставить — я не буду от него ничего требовать. У меня банально нет никакого канала влияния на него.</p>\n\n<p>Но вы можете влиять на школьника, поэтому, если вы хотите, чтобы от занятий был какой-то результат, то следите за тем, как ваш школьник занимается. На главной странице курса есть "сводная таблица", там можно отслеживать прогресс каждого школьника. Школьник также может показать вам, какие задачи он пытался сдавать, каков был результат проверки и т.д. На главной страничке курса есть также "Таблица по неделям кто что решал", в ней указывается, кто достиг какого уровня, а также по неделям кто сколько задач решил. Цвет ячейки в "таблице уровней" обозначает, насколько хороший результат показал школьник на очередной неделе: ярко-зеленый — очень хорошо, светло-зеленый — средненько, белый — вообще ничего даже не пытался. (Таблица обновляется вручную.) Наконец, вы всегда можете связаться со мной.</p>\n\n<p>Отдельное обращение к учителям: часто бывает так, что сильным школьникам на школьных уроках информатики просто скучно. Если ваш школьник занимается по этому курсу, разрешите ему во время урока решать задачи, читать теорию этого курса! И, конечно, если у вас есть сильные ученики — расскажите им об этом курсе!</p>\n\n<p>И еще одно замечание. Пожалуйста, прочитайте раздел <a href="/material/module-20927_21" onclick="window.goto(\'/material/module-20927_21\')();return false;">"О бесплатности занятий"</a>. А именно, если ваши школьники благодаря моим занятиям будут достигать хороших результатов, то постарайтесь сделать так, чтобы я был указан их учителем/преподавателем на тех олимпиадах и подобных мероприятиях, где они будут применять полученные здесь знания.</p></div>', 'title': 'Для учителей и родителей', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_24', 'order': 24, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_25', 'order': 25, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Про самостоятельность</h2>\n\n<p>Отдельно хочу вас написать про вашу самостоятельность. Я ожидаю, что при работе в курсе (независимо от того, работаете вы в заочном курсе, на занятиях в ННГУ или в лицее 40) вы будете проявлять способность к достаточно самостоятельной работе. В заочном курсе самостоятельность подразумевается сама собой, но и в при очных занятиях я хочу, чтобы вы не просто тупо писали то, что я вам рассказал, но и могли думать сами.</p>\n\n<p>Это обозначает, во-первых, не будут сам вас торопить или заставлять решать задачи. Хотите — решайте, не хотите — ну и не решайте, мне же проще — меньше проверять. Я не буду стоять у вас над душой и что-то с вас требовать. (Хотя, если вы учитесь в лицее 40 и хотите получить зачет, то к вам отдельные требования.)</p>\n\n<p>Во-вторых, не ожидайте, что на занятиях или в теоретических материалах на сайте будет отражено <i>абсолютно всё</i>, что может вам потребоваться для решения задач. Вполне возможно, что в каких-нибудь задачах вы обнаружите, что требуется что-то, что мы "не проходили". Не страшно. Вы всегда можете меня спросить, а лучше — сначала исследовать вопрос самостоятельно (в вашей любимой книжке, или в интернете), а если не получится, то спросить меня. Я вас не съем за такие вопросы, наоборот, я буду очень рад, если вы увидите, что в какой-то задаче требуется что-то дополнительное, и сможете четко спросить, что именно вам требуется.</p>\n\n<p>В-третьих, если вы чего-то не поняли на занятии, в моем комментарии к вашему решению, в теоретических материалах или где еще; или если вы не понимаете, почему не работает ваша программа, то просто подойдите ко мне и спросите (или напишите мне). Не ожидайте, что я вам все очень подробно объясню с первого раза или что я вам буду писать сверхподробные комментарии к решениям. Я объясняю и пишу как раз с расчетом что, если вы что-то не поняли, то вы переспросите.</p></div>', 'title': '\nПро самостоятельность', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_26', 'order': 26, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_27', 'order': 27, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Рекомендуемая литература</h2>\n<h3>Для начинающих — для изучения языка</h3>\n<h4>Питон</h4>\n<p>По питону, как ни странно, книжек не очень много, и вот именно учебных, направленных на школьников, я пока не видел (но я еще поищу). Поэтому, если хотите, можете купить какую-нибудь книжку, которая вам понравится.</p>\n\n<p>Но зато по питону есть очень много ресурсов в интернете; если вы будете задавать поиск по конкретным вопросам, то для питона вы получите адекватный ответ намного более вероятно, чем для паскаля. Поэтому я далеко не уверен, что вам надо покупать бумажную книжку по питону, лучше используйте интернет.</p>\n\n<p>В частности, очень рекомендую вам сайт <a href="http://pythontutor.ru/">http://pythontutor.ru/</a>. Там достаточно адекватная теория, и очень удобный визуальный отладчик питона.</p>\n<h4>Паскаль</h4>\n<p>Здесь приведен список книг, которые можно использовать для изучения языка программирования Pascal. При этом имейте в виду, что большинство из них описывает среду Turbo Pascal (или Borland Pascal, что то же самое); она является весьма устаревшей и в некоторых деталях отличается от среды Free Pascal, которую мы изучаем. Кроме того, во многих книжках есть разного рода устаревшие подходы к написанию программ. </p>\n<p>Большинство из этих книг можно скачать из интернета, или купить; в частности, ряд книг я видел недавно в магазине Дирижабль на Б. Покровской.</p>\n<p>В принципе, можно учиться и по другим книгам, не указанным здесь. Главное — чтобы это был именно учебник по основам языка программирования Pascal (Delphi скорее всего не подойдет). Прежде чем выбирать книгу, посмотрите, как в ней излагается простейший материал. Мне не понравились книги, которые сначала определяют "алфавит языка" и прочие заумные понятия, и только потом приступают к изучению языка; я считаю, что лучше начать изучение языка на простых примерах и только потом переходить к общим вещам. Если найдете книгу, которая вам понравится, скажите мне, чтобы я ее добавил сюда.</p>\n<p>При этом я не читал подробно ни одну из этих книг, я только поверхностно их просмотрел. Поэтому если у вас будут какие-либо комментарии по ним, то тоже скажите мне.</p>\n<ul>\n<li><b>Ушаков Д. М., Юркова Т. А. Паскаль для школьников</b> — мне очень понравилась; эта книга, пожалуй, ближе всего к тому, как я хочу строить обучение языку.</li>\n<li><b>Деревенец О. В. Песни о Паскале </b> (свободна распространяема с сайта <a href="http://oleg-derevenets.narod.ru/">http://oleg-derevenets.narod.ru/</a>) — очень необычный стиль изложения, возможно, понравится школьникам. Очень подробно и хорошо рассказывают про среду Free Pascal. Правда, порядок изучения тем весьма отличается от запланированного мной, но тем не менее, книга весьма неплохая.</li>\n<li><b>Кашаев С. М., Шерстнева Л. В. Паскаль для школьников. Подготовка к ЕГЭ</b> — довольно неплохой подробный учебник.</li>\n<li><b>Андреева Е. В. Программирование — это так просто, программирование — это так сложно</b>. Елена Владимировна Андреева (в отличие от авторов всех остальных учебников) — очень известный в олимпиадной информатике учитель, подготовившая многих сильных олимпиадников, многократный член жюри заключительного этапа Всероссийской олимпиады школьников. Эта книга довольно популярна в обучении олимпиадному программированию, вы можете встретить ссылки на нее во многих разных местах. Тем не менее, книга написана с точки зрения «формального» подхода, когда внимание уделяется в первую очередь полноте и строгости изложения, а не понятности и количеству примеров. Поэтому мне кажется, что она подходит скорее как справочник, или как дополнение к материалу, который я рассказываю на занятиях.\n</li><li><b>Культин Н. Б. Turbo pascal в задачах и примерах</b> — фактически только примеры, без теории.</li>\n<li><b>Павловская Т. А. Паскаль. Программирование на языке высокого уровня. Практикум</b> — не очень много теории, довольно много примеров.</li>\n<li><b>Рапаков Г. Г., Ржеуцкая С. Ю. Turbo Pascal для студентов и школьников</b> — более-менее обычный учебник, ничего особенного, на самом деле мне даже не очень понравился.</li>\n<li><b>Семакин И. Г., Шестаков А. П. Основы программирования</b> — более-менее обычный учебник, ничего особенного, на самом деле мне даже не очень понравился.</li>\n</ul>\n\n<p>Кроме того, следующие книги я видел, но они мне весьма не понравились. Я не рекомендую вам их использовать, хотя, возможно, кому-то они покажутся проще. Если сочтете, что какая-то книга тут находится незаслуженно, тоже напишите мне — на самом деле, я смотрел весьма поверхностно.</p>\n<ul>\n<li><b>Кетков Ю. Л., Кетков А. Ю. Свободное программное обеспечение. FREE PASCAL для студентов и школьников</b></li>\n<li><b>Фаронов В. В. Turbo Pascal 7.0. Учебный курс</b></li>\n</ul>\n\n<p>Наконец, непосредственно на этом сайте есть много теоретического материала — надо зайти на главную страницу сайта и далее следовать по ссылкам на разные темы или на разные курсы. К сожалению, качество материала здесь очень и очень сильно варьируется, от довольно плохого до довольно хорошего.</p>\n\n<h3>Для продолжающих — для изучения алгоритмов</h3>\n<p>К сожалению, нет хороших полноценных учебников по алгоритмам. Те книги, которые я указываю ниже, считаются довольно хорошими книгами, но покрывают материалы нашего курса далеко не полностью и/или зачастую содержат много дополнительной или не всегда нужной информации. Я стараюсь на страничке курса давать ссылки на полезные материалы по разным темам; также я всегда готов вам рассказывать нужные темы на занятиях. Соответственно, я предполагаю, что изучать нужные темы вы будете именно по материалам, на которые есть ссылки со странички курса, и/или по моим рассказам, а литература, указанная ниже — скорее вспомогательные книги.</p>\n\n<ul>\n<li><b>Т. Кормен, Ч. Лейзерсон, Р. Ривест «Алгоритмы. Построение и анализ»</b> (во втором издании к авторам присоединился еще К. Штайн). Самая популярная книга по алгоритмам, книга, которую должен знать каждый уважающий себя крутой программист. Довольно хорошая, но довольно продвинутая (вряд ли ее стоит читать школьникам ниже 3-4 уровня), и местами чересчур теоретизирована (рассчитана скорее на студентов, а не на школьников).</li>\n<li><b>А. Шень. Программирование: теоремы и задачи</b> (свободно доступна с сайта <a href="http://www.mccme.ru/free-books/">http://www.mccme.ru/free-books/</a>). Тоже довольно известная книга, и написанная в расчете на в том числе школьников, хотя на мой взгляд дает местами лишний или чересчур глубокий материала, а часть материала, наоборот, можно было бы изложить более детально. Но все равно весьма рекомендую.</li>\n<li><b>Д. Кнут. Искусство программирования.</b>. (В ранних изданиях русского перевода — Искусство программирования для ЭВМ.) Классическая и очень-очень известная монография, но содержит очень много информации, которую тяжело фильтровать на более и менее важную, очень тяжело читается, и чувствуется, что первое издание было почти 50 лет назад (!) (проблема скорее не в устаревании материала, а в устаревании способа подачи, например, примеры даются на ассемблерно-подобном языке, а не на языке высокого уровня или псевдокоде).</li>\n</ul></div>', 'title': '\nРекомендуемая литература', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_28', 'order': 28, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div><a href="https://docs.google.com/document/d/1YrAWXEK4ak9lE07Sx8C7vLZ0kgJav86IouaNU91GNGM/pub">\nПримерный план уровней</a></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_29', 'order': 29, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Формулы расчета рейтинга и т.д.</h1>\n<p>В сводных таблицах показывается рейтинг, активность, рейтинг на codeforces, взвешенное изменение рейтинга на codeforces и взвешенное количество контестов на codeforces.</p>\n\n<h2>Рейтинг</h2>\n<p>(Кому интересно, конкретный код расчета рейтинга и активности есть <a href="https://github.com/petr-kalinin/algoprog/blob/master/server/calculations/calculateRatingEtc.coffee">вот здесь</a>.)</p>\n\n<p>Рейтинг определяется просто набором решенных задач. А именно, каждая задача стоит некоторое фиксированное количество баллов рейтинга, определяемое уровнем этой задачи.</p>\n\n<p>Задача уровня 1А стоит $2.5$ балла рейтинга. Задача уровня 2А стоит $2.5^2$ баллов рейтинга. Задача уровня 3А стоит $2.5^3$ баллов рейтинга, и т.д. Задача уровня $N$А стоит $2.5^N$ баллов рейтинга.</p>\n\n<p>Задачи промежуточных уровней стоят промежуточное число баллов. А именно, задача уровня $N$Б стоит $2.5^{N+0.25}$ баллов рейтинга, уровня $N$В — $2.5^{N+0.5}$, уровня $N$Г — $2.5^{N+0.75}$ баллов.</p>\n\n<p>Задачи с региональных олимпиад считаются как задачи с уровня 3А. Если одна и та же задача есть на нескольких уровнях, то учитывается только самый высокий уровень этой задачи.</p>\n\n<p>При выводе рейтинга в таблицы он округляется до целых, но при подсчете все считается вещественными числами.</p>\n\n<p>Табличка стоимости (округленная до двух знаков после запятой):</p>\n<pre>          А        Б        В        Г\n1      2.50     3.14     3.95     4.97 \n2      6.25     7.86     9.88 \n3     15.62    19.65    24.71 \n4     39.06    49.12    61.76 \n5     97.66   122.80   154.41 \n6    244.14   306.99   386.02 \n7    610.35   767.48   965.05 \n8   1525.88  1918.69  2412.63 \n9   3814.70  4796.73  6031.57 \n10  9536.74 11991.82 15078.91 \n</pre>\n\n<h3>Идеология</h3>\n<p>Баллы за задачу растут очень быстро, специально для того, чтобы на высоких уровнях было не так важно, что вы решали на младших уровнях. Например, если вы уже на уровне 5, то, скорее всего, задачи уровня 1 не представляют для вас вообще никакой сложности. Поэтому не важно, сколько вы решили на уровне 1. И это получается за счет того, что задачи уровня 5 стоят намного больше, чем задачи уровня 1.</p>\n\n<h2>Активность</h2>\n<p>(Конкретный код расчета — по той же ссылке)</p>\n\n<p>Активность — показатель того, насколько активно вы решали задачи последнее время. Каждая задача, которую вы когда-либо решали, дает свой вклад в активность. У каждой задачи есть "базовые" баллы активности — это квадратный корень из номера уровня. (У всех задач уровня 1 "базовый" балл равен 1, у каждой задачи уровня 2 базовый балл равен 1.4, и т.д.) Этот базовый балл умножается на $0.55^{t/\\tau}$, где $t$ — время, прошедшее с того момента, как вы сдали эту задачу, а $\\strut\\tau$ равно 1 неделе. Например, если вы сдали задачу только что, то базовый балл учитывается полностью. Если вы сдали задачу ровно сутки назад, то базовый балл умножается на $0.55^{1/7}\\approx 0.92$. Если вы сдали задачу ровно две недели назад, то базовый балл умножается на $0.55^2\\approx0.3$. Если вы сдали задачу 8 недель назад, то базовый балл умножается на $0.55^8\\approx0.0083$, т.е. эта задача уже почти не учитывается.</p>\n\n<p>Суммарное значение активности по всем задачам делится на 0.45, в результате получается эдакое среднее число "задач" в неделю.</p>\n\n<p>Получается, что на самом деле учитываются только недавно сданные задачи, а те, которые вы решали давно, не учитываются. Но при этом падение этой "учитываемости" плавное. Если вы перестанете решать задачи, то ваша активность будет постепенно падать со временем (хотя и никогда не станет ровно нулем). В таблицах активность выводится округленной до одного знака после запятой, но на самом деле активность — настоящее вещественное число.</p>\n\n<p>В ряде сводных таблиц сначала указываются школьники, активность которых больше 0.1, и только потом все остальные.</p>\n\n<h2>Цвет</h2>\n<p>Имена школьников в таблицах рисуются цветом, определяемым их рейтингом и активностью. А именно, активность определяет яркость цвета (от почти черного до насыщенного), а рейтинг определяет оттенок (от фиолетового через все цвета радуги до красного). Например, школьник с рейтингом 1 и активностью 10 будет иметь ярко-фиолетовый цвет, школьник с рейтингом 1 и активностью 0.1 будет иметь темно-фиолетовый цвет, школьник с рейтингом примерно 1500 и активностью 10 будет иметь ярко-зеленый цвет, а с активностью 0.1 — темно-зеленый цвет; красный цвет соответствует рейтингу примерно 160000.</p>\n\n<p>Конкретная формула: в <a href="https://ru.wikipedia.org/wiki/HSV_(%D1%86%D0%B2%D0%B5%D1%82%D0%BE%D0%B2%D0%B0%D1%8F_%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C)">модели HSV</a> цвет участника имеет следующие компоненты:</p>\n$h = 11/12 \\cdot (1 - log(r+1) / log(R + 1))$<br>\n$v = 0.3 + 0.7 \\cdot log(a+1) / log(A + 1)$<br>\n$s = 1$<br>\n<p>здесь $r$ и $a$ — рейтинг и активность, $R$ — "максимальный рейтинг" (те самые примерно 160000, точнее — рейтинг, который получит человек, на каждом уровне решивший по 10 задач, возможно, я буду подправлять константу в будущем), $A=7$.</p>\n\n<p>Еще есть мелкие поправки на краях возможных интервалов значений. Код, кому интересно, <a href="https://github.com/petr-kalinin/algoprog/blob/master/client/components/UserName.coffee">здесь</a>.</p>\n\n<h2>Параметры codeforces</h2>\n<p><a href="https://github.com/petr-kalinin/algoprog/blob/master/server/calculations/calculateCfRating.coffee">Код</a></p>\n\n<p>Рейтинг на CF берется прямо с CF, обновляется раз в сутки.</p>\n\n<p>Взвешенное количество контестов вычисляется так: каждый написанный вами контест дает вклад, равный $0.5^{t/\\tau}$, где $t$ — время, прошедшее с написания контеста, а $\\tau$ равно 4 неделям. Все такие вклады суммируются. Т.е. только что написанный контест дает вклад 1, контест, написанный 4 недели назад — 0.5, и т.д.</p>\n\n<p>Взвешенное изменение рейтинга вычисляется так: каждый написанный вами контест дает вклад, равный $\\delta\\cdot0.5^{t/\\tau}$, где $\\delta$ — изменение рейтинга в этом контесте, $t$ — время, прошедшее с написания контеста, а $\\tau$ равно 4 неделям. При этом самый первый в жизни написанный контест не учитывается, т.к. там изменение рейтинга — это бессмысленная вещь.</p></div>', 'title': '\nФормулы расчета рейтинга, активности и т.д.', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_30', 'order': 30, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_31', 'order': 31, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про ачивки</h1>\n<p>На алгопроге каждый пользователь может заработать ачивки. Ачивки выдаются за разные вещи, в первую очередь за успешные занятия на алгопроге, а также за участие в различных олимпиадах. Заработанные пользователем ачивки показываются в его профиле, также три наиболее «крутые» ачивки показываются рядом с именем пользователя в сводных таблицах и т.д.</p>\n\n<p>Полный список доступных ачивок можно посмотреть <a href="/achieves">здесь</a>, а также в виде исходного кода <a href="https://github.com/petr-kalinin/algoprog/blob/master/client/lib/achieves.coffee">здесь</a>.</p>\n\n<p>Часть ачивок выдается автоматически, часть ачивок (в основном за олимпиады) я устанавливаю вручную. Если вы считаете, что у вас должна быть какая-то ачивка, а у вас ее нет, то напишите мне. Особенно это касается школьников из-за пределов Нижегородской области — я не всегда могу отслеживать все ваши олимпиады, поэтому пишите мне про свои олимпиады сами.</p></div>', 'title': ' \nПро ачивки', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_32', 'order': 32, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_33', 'order': 33, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про дополнительные лекции</h1>\n\n<p>Я планирую время от времени по воскресеньям на занятии в ННГУ проводить дополнительные лекции на разные темы, не связанные напрямую с алгопрогом и вообще с алгоритмами — но которые серьезный программист по идее должен знать.</p>\n\n<p>Эти лекции совершенно не нужны для занятий на алгопроге, да и по бóльшей части для олимпиад тоже (хотя отчасти и будут полезны, особенно про командную строку). Но они очень полезны для вашего кругозора.</p><p>\n\n</p><p>Цель таких лекций — дать вам общее представление о той или иной теме. Я не буду ставить целью чтобы вы сразу научились чему-то новому, я буду ставить целью чтобы вы узнали о существовании чего-то нового и поняли, что надо искать и про что читать в интернете, чтобы с этим разобраться. </p>\n\n<p>Лекции будут проходить в среднем раз в две недели по воскресеньям в ННГУ в аудитории 114 в 15.00, и длиться примерно 30-60 минут. На них можно приходить и тем, кто зарегистрировался на занятие в 14.00, и тем, кто зарегистрировался на занятие в 15.30, и тем, кто не регистрировался на занятия вообще.</p>\n\n<p>Предварительный список тем (я готов принимать от вас запросы на какие-либо еще темы):</p><p>\n\n</p><ul>\n<li><b>6 октября</b>: Командная строка</li>\n<li><b>27 октября</b>: Far manager</li>\n<li><b>16 февраля</b>: Системы контроля версий</li>\n<li>TeX и LaTeX</li>\n<li>...</li>\n</ul>\n\n<p>Запрошенные темы (не обещаю, что расскажу, но подумаю):</p>\n\n<ul>\n<li>Нейронные сети и их обучение</li>\n<li>Компиляторы, интерпретаторы, ассемблер и т.д.</li>\n<li>История языков программирования</li>\n</ul></div>', 'title': ' \nПро дополнительные лекции по воскресеньям', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_34', 'order': 34, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_35', 'order': 35, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>О лицензии на материалы этого сайта</h2>\n<h3>Исходный код сайта</h3>\nИсходный код собственно сайта algoprog.ru написан мною (Петром Калининым) и распространяется по лицензии <a href="http://www.gnu.org/licenses/agpl">GNU Affero General Public License</a>. Скачать исходный код можно с сайта <a href="http://github.com/petr-kalinin/algoprog">github.com/petr-kalinin/algoprog</a>.\n\n<h3>Теоретические материалы</h3>\n<p>На этом сайте есть различные теоретические материалы с разной степенью понятности с точки зрения лицензии.</p>\n<p>Материалы, в которых лицензия указана явно, распространяются по указанной в них лицензии.</p>\n<p>Материалы, размещенные на других сайтах, на которые с сайта algoprog.ru проставлена только ссылка, распространяются по лицензии, определяемой указанным сайтом.</p>\n<p>Материалы, в которых лицензия явно не указана, но автором которых являюсь я (это большинство материалов, размещенных непосредственно на сайте algoprog.ru), распространяются по лицензии <a href="http://creativecommons.org/licenses/by-sa/4.0/">Creative Commons Attribution-ShareAlike (CC BY-SA) 4.0</a>.</p>\n<p>Если вы не уверены, какая лицензия распространяется на конкретный материал, спросите меня.</p>\n\n<h3>Условия задач</h3>\n<p>Условия задач взяты с сайта <a href="http://informatics.mccme.ru">informatics.mccme.ru</a>, где они в большинстве случаев собраны с различных олимпиад. Условия лицензии на них не ясны.</p>\n</div>', 'title': '\nО лицензии на материалы сайта', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_36', 'order': 36, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_37', 'order': 37, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Франшиза</h1>\n\n<p>Если вы уже учите кого-нибудь (школьников, студентов и т.д.) программированию, и хотите использовать алгопрог или его материалы в своих занятиях...</p>\n\n<p>...или если вы хотите начать учить кого-нибудь на базе алгопрога или с использованием его материалов...</p>\n\n<p>...или если вы хотите использовать движок алгопрога в своих занятиях, наполнив его своими материалами</p>\n\n<p>то этот текст для вас.</p>\n\n<h2>Материалы</h2>\n\n<p>Если вам нужен не функционал алгопрога, а только <i>материалы</i> — теоретические материалы, видеолекции, задачи и т.д. — то они доступны в том или ином виде свободно. Теоретические материалы, автором которых являюсь я, как правило, распространяются под той или иной свободной лицензией, вы можете их использовать. Она обычно указана в самом материале, если там лицензия не указана, то спросите меня. Материалы, автором которых являюсь не я, взяты с других сайтов, вы обычно тоже можете их использовать. Задачи взяты с сайта <a href="http://informatics.mccme.ru">informatics.mccme.ru</a>, этот сайт специально создан для проведения различных курсов по программированию, вы можете формировать свои курсы из доступных там задач и т.д. В частности, вообще все содержимое алгопрога есть на информатиксе: <a href="https://informatics.msk.ru/course/view.php?id=1135">informatics.msk.ru/course/view.php?id=1135</a> — собственно, весь алгопрог вырос из этого моего курса на информатиксе.</p>\n\n<h2>Движок</h2>\n\n<p>Сам движок алгопрога также <a href="https://github.com/petr-kalinin/algoprog">свободно доступен</a>, вы можете поднять собственный инстанс алгопрога и делать там что угодно. (Хотя, конечно, это не так просто, и я вряд ли буду вам помогать.)</p>\n\n<h2>Отдельный инстанс</h2>\n\n<p>Я могу поднять отдельный инстанс алгопрога для ваших учеников, с вашими материалами и задачами. Это требует отдельного обсуждения, но в принципе это возможно. Это будет платно, конкретная стоимость будет зависеть от необходимой работы по поддержке инстанса, необходимых доработок, и ожидаемого количества учеников. В качестве грубой предварительной оценки, если не требуется серьезных доработок, и ожидается 20-50 учеников, то стоимость отдельного инстанса будет составлять 500-1000 рублей с ученика в месяц.</p>\n\n<h2>Занятия прямо на алгопроге по материалам алгопрога</h2>\n\n<p>Если вы хотите заниматься именно на алгопроге, то есть следующие варианты. Во-первых, ваши ученики может зарегистрироваться на алгопроге и заниматься как независимые ученики. С моей точки зрения это будут просто дополнительные ученики на алгопроге, вы сможете организовывать занятия, помогать ученикам и т.д., но у вас не появится никаких дополнительных возможностей на алгопроге (вы не сможете просматривать решения учеников и т.д.). Ваши ученики занимаются независимо, для них стоимость занятий будет, естественно, определяться <a href="/pay">по общим правилам</a>, с вас я, естественно, денег брать не буду (и вообще могу про вас и не знать :) ).</p>\n\n<p>Если вы хотите иметь дополнительные возможности — просматривать решения учеников, комментировать их, засчитывать/игнорировать, иметь отдельные сводные таблицы, то напишите мне. Это все (равно как и другие запросы с вашей стороны) вполне реально, но требует отдельного обсуждения. В качестве <b>базовых</b> вариантов есть следующие:</p>\n<ul>\n<li>Ваши ученики занимаются на алгопроге на равных правах с остальными, я их проверяю, комментирую, засчитываю/игнорирую их решения — и плюс вы можете делать то же самое; для ваших учеников будут отдельные таблички и т.д. <b>Как правило</b>, стоимость таких занятий для ваших учеников будет такая же, как если бы они занимались независимо. (Т.е. никакой дополнительной оплаты за дополнительный функционал нет, но и скидок нет.)</li>\n<li>Я никак не взаимодействую с вашими учениками — не смотрю их решения, не засчитываю/игнорирую. Все это делаете, если хотите, вы. <b>Как правило</b>, стоимость таких занятий для ваших учеников будет в два раза меньше, чем если бы они занимались независимо.</li>\n</ul>\n<p>В обоих вариантах выше существенны слова «базовые» (варианты) и «как правило». Это обозначает, что, с одной стороны, это не публичная оферта — в конкретной ситуации возможны другие условия и другие цены; с другой стороны, возможны также и другие варианты по функционалу и по нашему с вами взаимодействию. Пишите, поговорим :)</p>\n\n<p>В частности, если для ваших учеников занятия обычно бесплатные, то оба варианта выше будут, как правило, бесплатными.</p>\n\n</div>', 'title': '\nО франшизе', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_38', 'order': 38, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>«Стажировка» на алгопроге</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_39', 'order': 39, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>«Стажировка» на алгопроге</h1>\n<p>Что летом делают большинство нормальных студентов-программистов? Стажируются в IT-компаниях. Школьников обычно на такие стажировки не зовут, да и участвовать школьникам в стажировках обычно сложно.</p>\n\n<p>Поэтому я подумал, чем алгопрог хуже IT-компаний? И решил организовать возможность некоего аналога стажировок на алгопроге. А именно, если вы хотите, то можете поучаствовать в развитии самой платформы алгопрога. Если вы всегда хотели добавить на алгопрог какую-нибудь фичу, то вы сможете этим заняться. Или у меня для вас есть список вещей, которые я давно хочу сделать на алгопроге, но все не успеваю, и вы можете заняться ими.</p>\n\n<p>Это, конечно, будет довольно сильно отличаться от обычных задач, которые вы решаете на алгопроге. Вам придется разбираться в довольно объемном уже существующем (и очень грязном) коде алгопрога, вам придется разбираться в наверняка незнакомом языке программирования (Coffeescript, но не бойтесь — он несложный и поначалу весьма похож на питон), вам придется разбираться со множеством технологий, с которыми вы возможно еще не работали (git, MongoDB, node.js, React, немного Redux), вам придется разбираться с HTML и браузерным Javascript, вам придется много гуглить и читать, причем скорее всего по-английски (ну или через переводчик) — но я верю, что если вы абсолютно уверенно решаете как минимум задачи уровней 1А и 1Б, и не боитесь самостоятельно разбираться с возникающими проблемами, то вы вполне можете и со всем этим разобраться.</p>\n\n<p>Исходный код алгопрога вот: <a href="https://github.com/petr-kalinin/algoprog">https://github.com/petr-kalinin/algoprog</a>. Список доделок, которыми вы можете заняться, вот: <a href="https://github.com/petr-kalinin/algoprog/issues">https://github.com/petr-kalinin/algoprog/issues</a>, или вы можете обсудить со мной и предложить что-то свое.</p>\n\n<p>В отличие от классических стажировок, я не буду требовать от вас какой-то регулярности в работе (ну собственно как и с обычными задачами на алгопроге), и не буду вам платить денег :) — но обещаю, что буду вникать в то, что вы делаете, и помогать. А вы внесете свой вклад в развитие алгопрога, и получите много нового разнообразного опыта.</p>\n\n<p>Кроме того, в отличие от классических стажировок, я не смогу вам уделять столько внимания, сколько обычно уделяет руководитель стажеру в IT-компаниях. Вам придется очень во многом разбираться самостоятельно, я буду скорее направлять ваши действия, а не давать конкретные детальные указания. Будьте к этому готовы.</p>\n\n<p>В общем, если вы хотите в этом поучаствовать, пишите. Распространяется на всех, кто занимается на алгопроге (не обязательно школьников) и имеет уровень минимум 1В. Пока только лето (с апреля по август включительно).</p></div>', 'title': '«Стажировка» на алгопроге', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Очные занятия</h2>\n<font size="+1"><a href="/material/module-20927_17" onclick="window.goto(\'/material/module-20927_17\')();return false;">Подробная информация</a></font><br>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_1', 'order': 2, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про свои ноутбуки</h1>\n<p>Иногда бывает, что на занятиях не хватает компьютеров (особенно в начале учебного года). Поэтому вы <b>можете приносить свои ноутбуки</b>, но на следующих условиях:</p>\n<ol>\n<li>Вы сами несете ответственность за свой ноутбук. Я не готов решать какие-либо проблемы, связанные с ноутбуком, начиная от отсутствующей зарядки или отсутствующего интернета (см. ниже), поломки его вами или другими школьниками, и до даже его пропажи (хотя и надеюсь, что такого не будет). Если вы и ваши родители не уверены, стоит ли вам брать с собой ноутбук — не берите.</li>\n<li>Обеспечивайте доступ в интернет на своем ноутбуке самостоятельно. Проще всего — имейте с собой usb-модем или научитесь раздавать доступ в интернет со своего телефона. Убедитесь, что у вас достаточно трафика для работы, или заранее подключите пакет трафика (я думаю, если вы собираетесь только работать на informatics, то сотни мегабайт будет более чем достаточно). Лучше проверьте заранее, что все работает. Вы можете также объединиться, чтобы в группе друзей один человек раздавал интернет на всех, но договаривайтесь об этом самостоятельно и заранее, а также читайте следующие пункты.</li>\n<li>Убедитесь, что у вас на ноутбуке нет вирусов и других программ, которые могут захотеть скачать большое количество данных из интернета; вирусы еще могут подписать вас на какие-нибудь платные мобильные рассылки. (Многие программы с функцией автообновления могут расходовать много трафика без предупреждения). Если вы используете интернет друга, или предоставляете свой интернет друзьям, то риск скачивания большого объема данных тем более возрастает. (В частности, именно поэтому я сам не раздаю интернет со своего телефона.)</li>\n<li>Имейте с собой все нужные зарядки (для ноутбука и для телефона, хотя телефон проще подключать к ноутбуку). Имейте также с собой <b>удлинитель</b> метра на 3 как минимум, а то и на 5 метров, т.к. в наших аудиториях у многих столов или нет розеток, или их мало.</li>\n<li>Заранее установите требуемые для работы программы — среду программирования и/или среды разработки, какие вы используете; для команд также убедитесь, что у вас установлено всё, что требуется для всей вашей команды.</li>\n<li>Для команд нет большого смысла приносить более 1 ноутбука на команду.</li>\n</ol></div>', 'title': 'Про свои ноутбуки на занятиях', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_2', 'order': 3, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Лицей 40</h3>\n<p><b>Только для учеников лицея 40</b></p>\n<p>Занятия проходят по средам в 14:30 КЦ.</p>\n<ul>\n<li>Новичкам (кто не ходил ни разу и не решал задач заочно) <b>прежде чем приходить на занятие, необходимо зарегистрироваться на сайте и решить хотя бы одну задачу</b>. Исключение — занятие 25 сентября, туда можно приходить всем новичкам вообще.</li>\n<li>Те, кто уже был хотя бы один раз, или решил в курсе хотя бы одну задачу заочно, могут приходить каждую среду.</li>\n</ul>\n<a href="/material/in20946" onclick="window.goto(\'/material/in20946\')();return false;">Правила получения зачета</a>\n<h3>ННГУ</h3>\n<p><b>Только для школьников</b>\n</p><p>Занятия проходят по воскресеньям в ННГУ ил. Лобачевского (пр. Гагарина, 23), корп. 2, ауд. 110 и 114.</p>\n<p><b>Берите с собой паспорт или свидетельство о рождении.</b> Если вас не пускает охрана, звоните мне.</p>\n<ul>\n<li>Проходит два занятия: с 14.00 до 15.30 и с 15.30 до 17.00.</li>\n<!--<li>Занятие проходит с 14.00 до 16.00.</li>-->\n<li>Новичкам (кто не ходил ни разу и не решал задач заочно) <b>прежде чем приходить на занятие, необходимо зарегистрироваться на сайте и решить хотя бы одну задачу</b>. Исключение — занятие 22 сентября, туда можно приходить всем новичкам вообще.</li>\n<li>Те, кто уже был хотя бы один раз, или решил в курсе хотя бы одну задачу заочно, могут приходить каждое воскресенье на любое из двух занятий.</li>\n<li>Чтобы вам точно хватило компьютеров, <b><a href="/checkins" onclick="window.goto(\'/checkins\')();return false;">зарегистрируйтесь на занятие</a></b>. Без регистрации приходить можно, но если компьютеров хватать не будет, то преимущество будет у тех, кто записался. Каждую неделю надо регистрироваться заново.</li>\n<li>Регистрироваться на два занятия нельзя, но те, кто записались на 14.00, могут остаться на второе занятие, если будут места. Те, кто со своими ноутбуками, тоже могут приходить на оба занятия.</li>\n</ul>\n<hr>\n\n<div class="algoprog-contacts">\n<h2>Контакты</h2>\nПетр Андреевич Калинин\n<ul>\n<li>e-mail: petr@kalinin.nnov.ru</li>\n<li><a href="http://vk.com/petr.kalinin">http://vk.com/petr.kalinin</a>*</li>\n<li>+7(910)794-32-07**</li>\n<li>Телеграм: +7(910)794-32-07</li>\n</ul>\n<b>Телеграм:</b>\n<ul>\n<li><a href="https://t.me/algoprog_news">Канал с важными объявлениями</a>, в первую очередь про очные занятия. Рекомендую всем подписаться. (Если ссылка на t.me заблокирована, просто в телеграмме поищите канал «algoprog_news».)</li>\n<!--<li><a href="https://t.me/joinchat/CDV8hRTLsYl_pplIhhLZzw">Телеграм-чат для общих вопросов и разного флуда</a></li>-->\n</ul>\n<p>Мои контактные данные можно свободно распространять по любым вопросам, связанным с работой курса или с олимпиадным программированием в Нижегородской области вообще.</p>\n<p><b>Если у вас есть какие-то проблемы с работой в курсе, какие-то вопросы и т.п., сразу пишите мне!</b></p>\n<p>* Политика добавления в друзья во вКонтакте: я не возражаю, если вы добавите меня в друзья, но я буду добавлять только тех, кто уже давно и успешно занимается.</p>\n<p>** Пожалуйста, звоните по телефону только в экстренных случаях. Если ваш вопрос не очень срочный и может подождать несколько часов, напишите мне любым указанным выше способом — во вКонтакте, в Телеграм или на email.</p>\n</div>\n<hr>\n\n<h2>Полезные ссылки</h2>\n<font size="+1"><a href="https://www.dropbox.com/s/1n5g6w6hkryqwcw/Free%20Pascal%202.6.4%20-%20installer%20.exe?dl=0">Ссылка на установщик Free Pascal</a></font>\n<hr>\n<font size="+1">Установщики питона: <a href="https://www.python.org/ftp/python/3.5.2/python-3.5.2.exe">сам Python</a> и <a href="http://wingware.com/pub/wingide-101/5.1.12/wingide-101-5.1.12-1.exe">Wing IDE 101</a></font>\n<hr>\n<font size="+1">\n<a href="http://petr-kalinin.github.io/keyb/">Клавиатурный тренажер</a> на скорость набора программистского текста. </font> Ориентировочные результаты: 150 символов/минуту — довольно неплохо, 200 символов/минуту — очень круто. <a href="/material/in20938" onclick="window.goto(\'/material/in20938\')();return false;">Подробнее</a>.\n\n<hr class="algoprog-main-page-separator">\n\n<h2>Текущие олимпиады и т.п.</h2>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_3', 'order': 4, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>О школьной олимпиаде</h1>\n<font color="red">Эта информация касается школьной олимпиады в Нижегородской области. В других регионах могут быть отличия.</font>\n<h3>Краткое содержание того, что ниже</h3>\n<ul>\n<li>В школьной олимпиаде стоит участвовать как минимум всем, у кого уровень 1В и выше</li>\n<li>Участвовать надо по задачам за 9-11 класс, даже если вы в младших классах</li>\n<li>Заранее выясните, где и когда будет олимпиада, и попросите вам дать возможность писать на том языке, на котором вы хотите.</li>\n<li>На самой олимпиаде:</li>\n<ul>\n<li>Тщательно тестируйте свои задачи, жюри будет проверять их только после олимпиады и второй попытки у вас не будет!</li>\n<li>Неполные решения также оцениваются</li>\n<li>Прочитайте все задачи сразу, не тратьте всё время на одну задачу.</li>\n<li>Регулярно сохраняйте решения</li>\n<li>Не бойтесь задач, самые сложные обычно примерно соответствуют уровню 1Г-2А, и не обязательно решать всё, чтобы пройти дальше.</li>\n<li>Если что-то забыли, ищите обходные пути</li>\n<li>Ищите закономерности</li>\n<li>Применяйте здравый смысл</li>\n</ul>\n<li>Как только узнаете свой результат, скажите его мне</li>\n<li><font color="red">(Только нижегородцы) По любым вопросам, а особенно если что-то идет не так, сразу и в любое время звоните мне!</font></li>\n</ul>\n<h3>О чем речь?</h3>\n<p>Школьная олимпиада по информатике в Нижнем Новгороде состоится, видимо, в конце сентября — начале октября; сроки могут быть разными в разных районах. Уточните сроки заранее в своей школе. (Школьники не из Нижнего Новгорода — тоже уточняйте у себя в школе).</p>\n<p><b>Говорят, что в некоторых школах олимпиада будет аж 19 сентября! Это очень рано, конечно. Но это обозначает, что обязательно поторопитесь и выясните всё заранее!</b></p>\n<p>Школьная олимпиада — это первый этап в системе Всероссийской олимпиады школьников. Победители школьной проходят на районную олимпиаду, с районной — на областную и далее на собственно всероссийскую и международную, поэтому это — самая важная последовательность олимпиад в году, и школьная олимпиада является "входом" в нее. Не пропустите.</p>\n\n<h3>Кому стоит участвовать?</h3>\n<p>Я очень рекомендую участвовать всем, кто на момент олимпиады будут иметь уровень 1В и выше (независимо от класса). Если у вас на момент олимпиады еще не будет уровня 1В, но вы хотите, то можете тоже участвовать — хотя, возможно, задачи вам покажутся несколько сложными. Я думаю, что уровня 1В, скорее всего, будет достаточно, чтобы пройти на районную олимпиаду.</p>\n<p>Если вы в прошлом году участвовали в олимпиадах и стали призером (или победителем) районной или областной олимпиады, то школьную олимпиаду в этом году можете пропустить — вы проходите автоматом на ту олимпиаду, на которой стали призером год назад. (К городской олимпиаде из В.Д.Лелюха это не относится, она не входит в систему Всероссийской олимпиады школьников.)</p>\n\n<h3>Что надо сделать, чтобы участвовать?</h3>\n<p>Заранее, как можно раньше, подойдите к своему учителю информатики и скажите ей, что вы хотите участвовать. Ближе к дате олимпиады вам, наверное, скажут, где и когда именно она будет проходить; если не сказали, то еще раз подойдите к учителю и уточните. Пожалуйста, контролируйте сами, что вы все знаете про олимпиаду — я не могу связаться с каждой школой и сказать, чтобы вас не забыли. (В лицее 40 я передам список школьников уровня 1В и выше учителям, чтобы они про вас не забыли. Если вы хотите участвовать, но имеете уровень ниже 1В, то сообщите мне об этом заранее, я вас тоже включу в список.)</p>\n<p>Если вы младше 9 класса, то обязательно скажите, что вы хотите писать задачи за 9 класс (см. про это подробнее ниже). (В лицее 40 я сам это проконтролирую.) Младше 9 класса могут быть очень странные задачи, очень странная организация и т.д. — ни в коем случае не соглашайтесь участвовать по задачам младше 9 класса, даже если вы сами намного младше :)</p>\n<p>Заранее уточните, на каком языке программирования вы сможете писать. Постарайтесь уговорить учителей, чтобы вам дали написать вашем любимом языке, будь то Free Pascal, и PascalABC или Python или что угодно еще; если нужно, предложите, что вы сами установите нужные программы (компиляторы, среди разработки) на компьютер(ы), на которых будет олимпиада. (В лицее 40 я постараюсь заранее это все обсудить, но на всякий случай можете и сами уточить.)</p>\n<p>Если возникают какие-то проблемы, обязательно пишите или даже звоните мне (только нижегородцы)! Я не уверен, что смогу чем-то помочь, но вдруг. Не тяните с проблемами до последнего.</p>\n\n<h3>Как проходит олимпиада</h3>\n<p>Олимпиады по информатике, по крайней мере низших уровней (школьная, районная) проходят в следующем формате. Вам предлагается несколько (обычно от 2 до 5) задач, по каждой задаче вам надо написать программу. Задачи имеют такой же формат, как у нас на этом сайте: вводятся какие-то данные, надо вывести ответ. Как и у нас, гарантируется, что входные данные соответствуют ограничениям, указанным в условиях. В общем, все весьма похоже на то, как вы решаете задачи на сайте.</p>\n\n<p>Но есть важное отличие — на сайте результат проверки задачи сообщается вам сразу же, и вы можете сдавать одну и ту же задачу несколько раз. На олимпиаде ваши задачи будут проверяться только после тура, и у вас уже <b>не будет возможности исправить никакие ошибки</b>. Поэтому тщательно проверяйте свои решения, про это еще см. ниже.</p>\n\n<p>Олимпиада длится ограниченное время (скорее всего, два урока, но уточните заранее), поэтому внимательно контролируйте время. Не зависайте над одной задачей; если что-то не получается, то подумайте, может быть, стоит переключиться на другую задачу?</p>\n\n<p>В частности, <b>прочитайте все условия всех задач сразу в начале тура,</b> до того, как начнете что-либо программировать. От нашего жюри можно ожидать, что они разместят задачи по возрастанию сложности, но этого может и не быть (не говоря уж о том, что ваше восприятие сложности может отличаться от того, как это воспринимает жюри). Поэтому сначала прочитайте задачи, убедитесь, что вы их понимаете, а потом уже начинайте решать — причем с тех, которые выглядят проще. Ни в коем случае не должно быть такого, что "я все время решал первую задачу, а остальные даже не прочитал или даже не подумал над ними".</p>\n\n<p>Еще одно отличие от сдачи задач на сайте — на олимпиаде у вас будут оцениваться также и неполные решения. По каждой задаче будет подготовлено несколько тестов, и за каждый тест вы будете получать определенное количество баллов. Поэтому если у вас не получается придумать решение, которое будет работать всегда — напишите хотя бы решение, которое будет работать иногда. Постарайтесь, чтобы по каждой задаче у вас было хоть что-то сделано, чтобы у вас <b>не было нулевых баллов ни по одной задаче.</b></p>\n\n<p>В конце тура полезно еще раз проверить, что у вас все работает так, как вы ожидаете. Выделите в конце минут пять-десять, чтобы вернуться ко всем задачам и проверить, что они работают хотя бы на тесте из условия.</p>\n\n<p>В конце олимпиады вы должны сдать свои программы (исходные тексты) на проверку. На олимпиадах начального уровня обычно это делается следующим образом: вы просто оставляете их на вашем компьютере в указанном вам каталоге, откуда их потом заберут на проверку; иногда проверка осуществляется сразу после тура, даже в вашем присутствии. Заранее или в начале тура убедитесь, что вы понимаете, где вы должны оставить свои решения или как еще их вы должны сдать на проверку; если не понимаете, то спросите учителей.</p>\n\n<p>Сохраняйте решения! Во время олимпиады может произойти что угодно — отключиться свет, перезагрузиться компьютер и т.п. Если у вас из-за этого пропадет несохраненное решение, то это будут полностью ваши проблемы. Вообще, полезно привыкнуть сохранять свое решение каждые 10-20 секунд.</p>\n\n<p>Не теряйте свои решения! Если даже вы думаете, что ваше решение неправильное и его надо переписать — не удаляйте его, просто пишите в новом файле (ну или скопируйте старое решение куда-то про запас).</p>\n\n<p>Имейте в виду, что вам не обязательно решать всё. Чтобы пройти на районную олимпиаду, часто достаточно набрать половину баллов, поэтому не бойтесь, если у вас не получается решить самую сложную задачу (или две самых сложных, если задач много). (Но все равно постарайтесь по ним хоть что-то написать.) Для 11-классников порог прохода на район может быть выше.</p>\n\n<h3>О задачах за разные классы</h3>\n<p>Так исторически сложилось (и на то есть ряд дополнительных причин), что на олимпиадах по информатике набор задач общий для всех классов. Итоги потом подводятся по классам по отдельности, но задачи общие. (Иногда бывают исключения, но довольно редко.)</p>\n<p>При этом формально может быть сказано, что олимпиада проходит только для определенных классов, как правило — для 9-11 классов. Но это вовсе не значит, что младшеклассники не могут в ней участвовать — даже если вы младше 9 класса, вполне можете писать за 9 класс.</p>\n<p>Но помимо этого, я иногда слышал, что в некоторых школах бывают какие-то отдельные задачи для более младших (например, 7-8 классов). Это довольно странно; в лицее 40 я никогда про такое не слышал. Возможно, это инициатива отдельных школ или районов. В любом случае, это не то: по этим задачам вы в лучшем случае пройдете на район и дальше никуда, в худшем случае вам скажут, что "района по вашим классам не бывает" (знаю реальный такой случай). Задачи на этих олимпиадах могут иметь мало общего с тем, что мы тут проходим, организация может быть хуже (например, вам могут предложить писать программу на бумажке (!)) — в общем, если вы младше 9 класса, убедитесь, что вы выступаете за 9 класс и пишите по тем же задачам, что и 9-классники. Для этого может быть полезно заранее сказать, что вы хотите участвовать за 9-й класс. Не бойтесь этого; как я уже писал, если у вас уровень 1В или выше, то вам эти задачи будут по силам. И даже если вы решите их плохо, все равно вы получите ценный опыт, который вам пригодится через год.</p>\n\n<h3>О результатах</h3>\n<p>Как только будут известны ваши результаты, сообщите их мне. Результаты — это общее число набранных баллов (а хорошо бы и распределение баллов по задачам) и проходите вы на район или нет. Про район иногда сообщают сразу, иногда не сразу — если вы пока знаете только баллы, то сообщите мне только баллы, потом как будет известно про район, сообщите мне.</p>\n\n<h3>Какие будут задачи?</h3>\n<p>Сложно предсказать, да и в интернете задачи прошлых найти сложно (но можете попробовать, только ищите обязательно задачи и вашего района города или области — в разных районах задачи могут быть очень разными). Спросите в школе, у них наверное есть архивы прошлых лет.\n\n</p><h3>Какие знания могут потребоваться?</h3>\n<p>Вообще, я думаю, что знаний уровней 1А-1Б (т.е. основ языка), вместе со здравым смыслом, скорее всего будет достаточно, чтобы набрать половину баллов и пройти на район (для 11-классников может потребоваться чуть больше). Уровни 1В и 1Г очень полезны в том плане, что они содержат нестандартные задачи как раз типа тех, что будут на олимпиаде. Кроме того, в ряде задач могут потребоваться следующие знания:</p>\n\n<h4>int64</h4>\nВ паскале есть очень полезный тип данных, про который вы, возможно, не знаете. Это <code>int64</code> — 64-битное целое число. Он может хранить числа от (примерно) -2<sup>63</sup> до 2<sup>63</sup>; это примерно от -9e18 до 9e18. Он полезен, если значения, которые вам нужны в вашей программе, не влезают в integer.\n<pre>var a:int64;\nbegin\na:=1000000000;\na:=a*1000000000;\nwriteln(a); // выведет 1000000000000000000\nend.\n</pre>\n\n<h4>Тестирование задач</h4>\n<p>Очень важная вещь на олимпиаде — аккуратно протестировать задачи. На эту тему я недавно написал <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">длинный текст</a> (ссылка на него также есть в уровне 1В). Прочитайте его и следуйте его рекомендациям. Конечно, вам пока не обязательно использовать совсем уж продвинутые вещи типа стресс-тестирования или assert\'ов, но практически весь остальной текст вам будет полезен. Не жалейте времени на аккуратное тестирование.</p>\n\n<p>Полезно хотя бы немного отработать навык тестирования до олимпиады. Постарайтесь порешать несколько задач из еще не решенных вами с учетом рекомендаций по тестированию.</p>\n\n<h4>Работа с файлами</h4>\n<p>Ниже — про паскаль; про работу с файлами в питоне см. текст на уровне 2А.</p>\n<p>На школьной олимпиаде, вполне возможно, вам придется вводить данные не с клавиатуры, а из указанного в условии задачи файла, и аналогично выводить данные не на экран, а в файл. В паскале это делается это так: вы заводите переменную специального типа <code>text</code>, а потом командами <code>assign</code> и <code>reset/rewrite</code> "открываете" файл на чтение/запись соответственно. Далее в командах <code>read/readln</code> и <code>write/writeln</code> <i>первым</i> аргументом указываете файл (переменную), откуда читать или куда выводить. После работы с файлом "закрываете" его командой <code>close</code>. При этом тогда ваша программа <b>не должна ничего вообще</b> читать с клавиатуры! Т.е. по нажатию Ctrl-F9 черное окошко должно мелькать на мгновение, после чего должно возвращаться синее окошко паскаля.</p>\n\n<p>Пример кода, который читает из файла <code>input.txt</code> два числа и выводит в файл <code>output.txt</code> их сумму:</p>\n<pre>var f,g:text;\n    a,b:integer;\nbegin\nassign(f,\'input.txt\');reset(f); // "открыли" файл input.txt для чтения\nread(f,a,b); // из файла f прочитали числа a и b\nclose(f); // "закрыли" файл\nassign(g,\'output.txt\');rewrite(g); // "открыли" файл output.txt для записи\nwriteln(g,a+b); // вывели сумму чисел в файл g\nclose(g); // "закрыли" файл\nend.\n</pre>\n\n<p>Как тестировать такую программу? В оболочке паскаля вы можете открыть несколько окон (через меню File - Open). В одном набираете программу (и сохраняете файл как <code>чтонибудь.pas</code>), в другом редактируете входной файл (и сохраняете как требуется по условию), в третьем открываете выходной файл.</p>\n\n<p>Переключаться между окнами можно, нажав Alt-0 — будет окошко со списком всех открытых файлов. Можно также заметь в правом верхнем углу каждого окошка цифру (1, 2, 3 и т.д.) и переключаться в это окошко, нажав Alt-1, Alt-2 и т.п. Я, например, предпочитаю иметь в окошке "1" исходный текст программы, в окошке "2" входной файл, в окошке "3" выходной файл. Я не советую вам иметь много открытых окон — оставляйте открытыми только те окна, которые нужны для текущей задачи. Когда переключаетесь на новую задачу, закрывайте все окна от старой задачи и открывайте окна для новой задачи.</p>\n\n<p>Соответственно, теперь вводите тест в окошко с входным файлом, не забываете его сохранить (!), и запускаете программу. Если в одном из окон у вас открыт выходной файл, то после запуска программы паскаль вам будет выводить диалоговое окно вида "File output.txt has changed on disk. Reload?" ("Файл output.txt изменился на диске. Перезагрузить?"; точный английский текст я не помню.) Нажмите "yes" — и в окошке с выходным файлом его содержимое автоматически обновится.</p>\n\n<p>Тестировать программу так даже удобнее, чем при вводе с клавиатуры: если вы отлаживаете программу на конкретном тесте, то вам не надо его вводить заново при каждом запуске.</p>\n\n<p>Обязательно попробуйте работать с файлами <b>до олимпиады</b>!. Если на олимпиаде у вас не получается быстро наладить работу с файлами, то лучше попросите разрешения работать по старинке — с клавиатуры и на экран. Не теряйте время на то, чтобы разобраться с файлами на олимпиаде!</p>\n\n<h4>Алгоритмы</h4>\n<p>В основном большинство задач на школьной олимпиаде вряд ли будут требовать специальных знаний, особенных алгоритмов. Задачи, скорее всего, будут требовать только аккуратного размышления и аккуратной реализации; ничего такого, что мы с вами не проходили, не потребуется. Возможно, придется пописать что-то на бумажке, сделать какое-то моделирование и т.п. Все будет довольно похоже на задачи уровней 1В и 1Г. </p>\n\n<p>В наиболее сложных задачах, возможно, потребуются алгоритмы, обсуждаемые в уровнях 2А и 2Б — в первую очередь НОД, сортировки, простые числа и разложения на множители, может быть ДП. Если у вас уже решено хотя бы задач 10-15 уровней 1В/1Г, можете переключиться на эти темы на уровне 2, но не тратьте много времени — лучше порешайте еще задач с уровней 1В/1Г и научитесь тестировать задачи. Конечно, если у вас уже много задач уровней 1В/1Г решено и вы уже находитесь на уровне 2, то изучите эти темы.</p>\n\n<h4>Сложность алгоритмов</h4>\n<p>Важной вещью может оказаться определение того, насколько долго работает придуманный вами алгоритм на больших входных данных. Это обязательно стоит проверить, в идеале — еще до написания программы. Для этого существует понятие <i>сложности алгоритма</i>, про нее можно почитать <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/02_complexity.pdf">тут</a> (в первую очередь читайте часть 1; самое главное — в абзаце, который на стыке страниц 2 и 3, про 100 миллионов действий).\n\n</p><h4>Используйте компьютер по полной</h4>\n<p>Помните, что вы можете на компьютере не только писать программы-решения задач. Если вы, например, думаете над задачей, и вам стало важно узнать, чему равно 163*634, то не надо умножать числа в столбик. Воспользуйтесь калькулятором на компьютере или напишите отдельную программу из одного writeln/print. Если у вас в задаче описан какой-то процесс (есть N бактерий, они размножаются по каким-нибудь правилам, или что-нибудь подобное), не бойтесь написать отдельную программу, которая промоделирует этот процесс, выведет что вам надо, чтобы вы могли поискать какие-нибудь закономерности. И так далее. Не бойтесь писать вспомогательные программы.</p>\n\n<h4>Ищите закономерности</h4>\n<p>Наше жюри иногда любит давать задачи, в которых легко находится та или иная закономерность. Если вы не можете решить какую-то задачу для всех входных данных, то решите ее на бумажке для маленьких входных данных (или, с учетом предыдущего пункта — напишите простую программу, которая решит задачу для маленьких и средних входных данных), и посмотрите на ответы и решения глазами: вдруг вы найдете какую-нибудь закономерность.</p>\n\n<h4>Знакомые задачи</h4>\n<p>Авторы задач школьной олимпиады не очень изобретательны и нередко у них появляются задачи, которые вы уже знаете или которые очень похожи на что-то, что вы уже решали. (Например, год назад то ли на школьной, то ли на районной олимпиаде была задача "Автобусы" из наших "Продвинутых задач на условный оператор". Я не думаю, что авторы задач пользовались этим сайтом, скорее всего они сами независимо придумали эту задачу.) Не удивляйтесь, но решите-таки.</p>\n\n<h4>Если чего-то не знаете, ищите обходные пути</h4>\n<p>Если вы понимаете, что в задаче требуется что-то, чего вы не помните, не знаете, "не проходили" — попробуйте придумать обходной путь — как сделать то же самое, пусть сложнее, но с использованием тех вещей, которые вы знаете. Или как вообще решить задачу по-другому, не используя это знание вообще. Например, если вы не помните, какая функция переводит число в строку — подумайте, как написать такую функцию самостоятельно (подсказка: по аналогии со всякими задачами про цифры с уровня 1А). Или подумайте, а может быть, вам и не надо переводить число в строку вообще? Если вы поняли, что вам нужна сортировка, но вы не знаете, как ее делать — попробуйте или придумать, или придумать, как решать задачу без сортировки. Зачастую это получится. И так далее.</p>\n\n<h4>Здравый смысл</h4>\n<p>Ну и главное. Применяйте здравый смысл. Думайте головой, постоянно думайте над тем, что вы делаете, и помните, что <b>ваша цель на олимпиаде — как можно лучше выступить по сумме заданий.</b></p>\n\n<p>В частности, тут я написал много рекомендаций, дал ссылки на много текстов. Если вы их все прочитаете и поймете — хорошо. Но если вы успели прочитать не все, или не во всем разобрались — не так страшно. Если вы чего-то не поняли, не применяйте это на олимпиаде (ну или точнее, подумайте, не сможете ли вы на олимпиаде быстро допонимать). Не суетитесь и не переживайте, а спокойно решайте задачи.</p></div>', 'title': 'Про школьную олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_4', 'order': 5, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_5', 'order': 6, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про командную олимпиаду</h1>\n<p><b>Это относится только к нижегородским школьникам. В других регионах свои отборочные олимпиады, и я не буду собирать команды из школьников других регионов. Тем не менее, если вы не из Нижегородской области, у вас нет команды, и вы хотите поучаствовать вместе с другими школьниками, занимающимися на моем курсе, можете мне написать, я может быть стыкую вас с другими такими желающими (если такие "другие желающие" будут).</b></p>\n\n<p>В ноябре в в Нижегородском техническом университете (политехе) состоится <a href="http://www.nnstuicpc.ru">Командная олимпиада школьников Нижегородской области по программированию</a>, она же — отбор на <a href="http://neerc.ifmo.ru/school/russia-team/index.html">Всероссийскую командную олимпиаду школьников по программированию (ВКОШП)</a>. Участвуют команды из трех человек, подробные правила будут в информационном письме на сайте нижегородской олимпиады и на сайте ВКОШПа, они несколько отличаются от классических школьных олимпиад (пока на сайте нижегородской олимпиады еще ничего нет). Также подробные правила я могу рассказать желающим.</p>\n\n<p>Желающие могут участвовать, а именно:</p><p>\n</p><ol>\n<li>Из достаточно сильных школьников (примерно уровень 2В и выше), которые занимаются в моем курсе, я составлю команды. Я сам свяжусь с соответствующими школьниками в ближайшее время, или вы можете написать мне.</li>\n<li>Остальные могут составить команды сами. Сообщите мне на всякий случай, что вы хотите участвовать, возможно, я найду для вас команду, но в общем случае я не готов администрировать ваши команды (подавать заявку и т.п.). Тем не менее, во-первых, если в вашей школе есть много желающих участвовать, то можете подать заявку от школы (договориться с вашим учителем информатики и т.п.); во-вторых, если вы сами соберетесь в какую-нибудь сборную команду, даже из разных школ, то можете подавать заявку полностью самостоятельно. Я считаю, что вам может иметь смысл участвовать, если вы уже уровень 1В или выше, но, конечно, самостоятельно вы вольны подавать заявку как хотите.</li>\n</ol>\n\n<p>Уровень задач на олимпиаде, я думаю, стоит ожидать такой: будет одна-две простых задачи уровня школьной олимпиады (уровня 1Б), будет большая группа задач средней сложности — примерно от уровня районной до уровня областной олимпиады (примерно сложности 1В-3В), и будет одна-две очень сложные задачи. При этом, как всегда, не следует думать, что надо решать все задачи: думаю, основная борьба будет на уровне, где решены примерно половина задач. На сайте командной олимпиады вы можете посмотреть примеры задач прошлых лет (правда, если вы хотите участвовать в тренировках — см. ниже — то особенно не вникайте в задачи прошлых лет — мы как-нибудь напишем по ним тренировку).</p>\n\n<p>Несколько лучших команд с нижегородской олимпиады проходят на Всероссийскую командную олимпиаду школьников по программированию (ВКОШП). Сразу предупреждаю: во-первых, в области есть сильные команды, поэтому самостоятельно собранным командам будет довольно сложно пройти на ВКШОП. Во-вторых, если вы и пройдете на ВКОШП, то возможно поездку на ВКОШП вам никто не оплатит — возможно, надо будет ехать за свой счет или самим искать финансирование (говорить со школой и т.п.) (К моим командам — тех, у кого есть высокий шанс пройти на ВКОШП, я об этом предупрежу. Остальные, если вдруг пройдете, то будем думать.) (Возможно, финансирование все-таки найдем.)</p>\n\n<p>Но участвовать имеет смысл и даже без цели прохода на ВКОШП. Во-первых, это интересно и весело, во-вторых, дипломы и (небольшие) призы получат не только те команды, которые пройдут на ВКОШП.</p>\n\n<p>По воскресеньям параллельно с обычными занятиями скорее всего будут командные тренировки к командной олимпиаде. Тренировки длиннее по времени, чем обычные занятия (4-6 часов), время может быть сдвинуто относительно основных занятий — следите за объявлениями на страничке курса. Командам из п. 1 выше я настоятельно рекомендую участвовать (и я напишу в личку); если будут желающие участвовать из самостоятельно-собранных команд, то напишите мне.</p></div>', 'title': 'Про командную олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_6', 'order': 7, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_7', 'order': 8, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про районную/городскую олимпиаду</h1>\n<p><font color="red">Эта информация касается Нижегородской области. В других регионах могут быть отличия.</font></p>\n\n<p>Районная олимпиада, она же городская в ряде городов области (формально "муниципальный этап Всероссийской олимпиады школьников") пройдет, по текущей информации, <b>12 декабря</b>. Участие в ней принимают те, кто хорошо написал школьную олимпиаду. Критериев прохода со школьной на районную я точно не знаю, уточняйте у своих учителей. Кроме того, в олимпиаде принимают участие призеры и победители районной олимпиады прошлого года, даже если они не участвовали в школьной олимпиаде этого года.</p>\n\n<p>Участники районной олимпиады, хорошо ее написавшие, проходят на областную. Механизм здесь примерно следующий: все районы пишут по одним и тем же задачам. Все результаты сводятся в сводную таблица по всем районам области. В этой таблице проводят границу, и все школьники, набравшие больше определенного количества баллов, проходят на область. Это пороговое количество баллов определяется тем, чтобы на область прошло столько школьников, сколько область может принять; по разным классам порог разный.</p>\n\n<p>Чего стоит ожидать на районной олимпиаде? Примерно того же, что и на школьной (см. <a href="/material/module-16024_3" onclick="window.goto(\'/material/module-16024_3\')();return false;">соответствующий текст</a>), возможно, задачи будут сложнее. На страничке курса давно висит ссылка на <a href="https://www.dropbox.com/s/brq5dotrg4lmym2/raion_archive.pdf?dl=0">архив прошлогодних районных олимпиад</a>, посмотрите задачи там, очень рекомендую над ними подумать. Я не думаю, что будут требоваться какие-то более продвинутые знания, но прочитайте текст про школьную олимпиаду еще раз и учитывайте то, что там написано. На районной олимпиаде более вероятно, чем на школьной, что потребуются алгоритмы уровня 2-3. По опыту прошлых лет, может быть одна реально сложная задача. (Но в ее практически никто не решает.)</p>\n\n<p>Ближе к делу (8 декабря в ННГУ и 4 декабря в лицее 40) я проведу отдельное занятие, посвященное подготовке к районной олимпиаде.</p>\n\n<p>С позапозапрошлого года задачи районной олимпиады составляет другое жюри, поэтому задачи в этом году могут быть не похожими на те, что были четыре года назад и более. Обратите особое внимание на задачи за последние три года.</p>\n\n<p>Обязательно убедитесь заранее (спросите учителей в школе, чтобы они спросили организаторов районной олимпиады), что вам предоставят нужное ПО (нужный Питон, или Паскаль, или c++ с нужной средой и т.д.). Если есть какие-то проблемы, звоните, но это очень хорошо бы сделать заранее.</p>\n\n<p>Последние два года районная олимпиада проходила в системе Яндекс.Контест, скорее всего и в этом году будет так же. Тогда вы сможете в течение тура отправлять решения на проверку в тестирующую систему и узнавать результаты. Скорее всего, по каждой задаче будет выбрано ваше лучшее решение (набирающее больше всего баллов), и именно этот результат и будет вашим результатом по задаче. Я не знаю, будут ли в этом году штрафы за неверные попытки, постараюсь узнать ближе к делу, в прошлом году не было. </p>\n\n<p>Количество отправок решений на проверку скорее всего будет ограничено, оно будет указано в тестирующей системе. В прошлом году в качестве примера было приведено ограничение в 100 попыток, что на самом деле очень много и фактически эквивалентно бесконечному количеству попыток (вряд ли кто из вас реально израсходует 100 попыток), но в реальности может оказаться меньше.</p>\n\n<p>Это обозначает, что все будет довольно похоже на то, как вы работаете на сайте (только, в отличие от сайта, частичные решения тоже оцениваются). Если у вас программа не прошла тесты, вы можете ее пересдать. Поэтому, в частности, если за неудачные попытки нет штрафов, то не обязательно поначалу тщательно тестировать простые задачи — потестируйте немного, отправьте решение на проверку и, если оно набирает полный балл, то забудьте про эту задачу. Вот в противоположном случае тестируйте внимательнее.</p>\n\n<p>Возможно, будут еще какие-то неожиданности и отличия, будьте к ним готовы. По идее вам должны заранее объявить полные правила, хотя по факту это бывает редко. Но можете заранее спросить в школе, нет ли у них данных о том, как будет проводиться олимпиада; я со своей стороны попробую это тоже выяснить.</p>\n\n<p>Если же у вас в районе внезапно проводят олимпиаду не в Яндекс.Контесте, то требуйте Я.Контест и/или срочно звоните мне. Если у вас будут проводить по старинке, с ручным тестированием, то вы сразу оказываетесь в заведомо проигрышном положении по сравнению с другими районами — в других районах участники будут узнавать результаты в течение тура и смогут исправлять решения, а у вас — нет. Поэтому требуйте Яндекс.Контест и отстаивайте свои права.</p>\n\n<p>Важный момент — не полагайтесь на Яндекс.Контест. Будьте готовы в случае чего сдавать решения по старинке в конце тура. В частности, не теряйте свои решения! Если вы отправили решение в Контест, не удаляйте его у себя, и уж тем более не начинайте решать другую задачу в том же файле. Контест может заглючить, может потерять ваши решения, и т.д. — если и вы их тоже потеряете, все будет совсем плохо. А если решения останутся у вас на компьютере, вы хотя бы сможете потом что-то поапеллировать.</p>\n</div>', 'title': 'Про районную/городскую олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_8', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'reg_about', 'order': 10, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix">\n\n<h1>Про областную олимпиаду</h1>\n\n<p><i>(C) Петр Калинин, 2015-20. Этот текст можно свободно распространять на условиях лицензии Creative Commons Attribution-ShareAlike 2.0 (CC-BY-SA). Пожалуйста, при ссылках на этот текст используйте адрес <a href="/material/reg_about" onclick="window.goto(\'/material/reg_about\')();return false;">algoprog.ru/material/reg_about</a></i>\n\n</p><p><font color="red">Часть информации касается только Нижегородской области, часть относится ко всем регионам.</font></p>\n\n<p>Областная олимпиада по информатике (формально — региональный этап Всероссийской олимпиады) пройдет в два тура 16 и 18 января в ННГУ им. Лобачевского.</p>\n\n<h2>Отбор на область</h2>\n\n<p>Отбор на нее осуществляется следующим образом. Решения районной (она же городская в ряде городов области — Дзержинске, Арзамасе и т.д.) олимпиады сводятся по каждому классу в единую таблицу, и в этой таблице проводится граница: для каждого класса выбирается проходной балл, и все, кто набрал столько баллов или больше, проходит на область. Кроме того, вне зависимости от результатов районной олимпиады, на областную проходят призеры прошлогодней областной олимпиады.</p>\n\n<p>В этом году проходные баллы — 200 баллов по каждому классу. На <a href="http://imc.codnn.ru/vserossijskaya-olimpiada-shkolnikov/">сайте ЦОДа</a> есть итоговые результаты и списки участников областной олимпиады (где нужен пароль к архиву — пароль "2019"); в <a href="https://docs.google.com/spreadsheets/d/1Li__hzA7ZjyBR1y-2Nej0tW8TEesP-IG6gbYaPJk81s/edit#gid=0">отдельном гуглодоке</a> я свел результаты из Я.Контеста с результатами с сайта ЦОДа.</p>\n\n<h2>Формат областной олимпиады</h2>\n<p>Ну, во-первых, областная олимпиада — это фактически первая серьезная олимпиада для многих из вас. Школьная и районная олимпиады — это скорее игрушки, как по тому, какие задачи предлагаются, так и по организации вообще и по сложности прохода на следующий этап. Сильные школьники должны проходить на область "на классе", т.е. абсолютно уверенно, не прилагая особенных усилий, чисто за счет уже давно имеющихся навыков. Областная же олимпиада — это совсем другое, там и задачи ощутимо более сложные, и организация лучше. Областная олимпиада проходит в одно и то же время по одним и тем же задачам по всей России, так что это фактически крупнейшая олимпиада по информатике в России.</p>\n\n<p>Областная олимпиада проходит в два тура по пять часов каждый. На каждом туре вам, скорее всего, будут предложены 4 задачи. Примеры прошлогодних задач вы можете посмотреть и попробовать посдавать на этом сайте, ссылка есть в конце раздела "О курсе", в разделе "Архивы старых олимпиад". Но сначала прочитайте до конца этот текст.</p>\n\n<p>Вообще, если раньше вы в областных олимпиадах не участвовали, то я рекомендую вам в зимние каникулы найти свободные пять часов и сесть и порешать какой-нибудь тур с одной из олимпиад последних лет, представляя, что вы реально сидите на олимпиаде. Еще лучше сделать это пару раз. Во-первых, если вы ни разу раньше не писали пятичасовые туры, это вам будет полезно как минимум с точки зрения понимания того, насколько вам сложно просто думать над задачами 5 часов подряд. Во-вторых, вы поймете примерно, чего вы можете ожидать на области.</p>\n\n<h2>Языки программирования</h2>\n<p>Набор языков программирования будет определяться жюри. Почти наверняка будут Free Pascal и C++ (Visual Studio, по идее должен быть минимум C++11). Скорее всего будут C# и Python. Будет ли Pascal ABC, я не знаю. Обычно жюри старается вкючить разумный набор языков, но и вы со своей стороны можете попросить школу официально заявить вам нужный язык и проверить, что он будет. С другой стороны, вроде последние годы серьезных проблем с языками на области не было.</p>\n\n<p>(Вообще, по поводу общения с жюри в целом — я, конечно, могу что-то написать в жюри, и жюри зачастую прислушивается ко мне, но надо понимать, что я не являюсь официальным представителем вас, вашей школы и т.д., поэтому жюри может и полностью проигнорировать мой вопрос. Поэтому помимо того, что я могу общаться с жюри неофициально, вы лично, а также ваши родители и ваша школа могут общаться с жюри официально, и в случае каких-то серьезных проблем это может быть полезно.)</p>\n\n<h2>Система оценивания</h2>\n<p>До 2014<sup>1</sup> года включительно областная олимпиада оценивалась очень похоже на  школьную: вы пять часов писали задачи, после чего жюри брало ваши решения и проверяло на заранее подготовленных тестах; при этом каждый тест оценивался отдельно. В процессе этой проверки вы уже ничего не могли исправить в своих решениях.</p>\n\n<p><sup>1</sup> Областная олимпиада всегда проводится после Нового года, поэтому здесь и ниже, говоря «олимпиада 2014 года», я имею в виду олимпиаду 2013-14 уч. года, и аналогично про другие годы.</p>\n\n<p>С 2015 года введена новая система — так называемая система с подзадачами и фидбеком (обратной связью). Она работает примерно следующим образом.</p>\n\n<h4>Подзадачи</h4>\n\n<p>Во-первых, в каждой задаче выделяются <i>подзадачи</i> — вариации той же задачи, как правило, с меньшими ограничениями или с дополнительными условиями. Например, если в основной задаче сказано $1\\leq N\\leq 10000$, $1\\leq K \\leq 10$, и еще задан массив $a$, а в задаче идет речь про то, что надо как-то ходить направо и налево, то подзадачи могут быть, например, такими:</p>\n<ul>\n<li>Подзадача 1: $N\\leq 100$ и $K=1$;</li>\n<li>Подзадача 2: $N\\leq 100$, но $K&gt;1$;</li>\n<li>Подзадача 3: $K=1$, но $N&gt;100$;</li>\n<li>Подзадача 4: все элементы массива $a$ одинаковы;</li>\n<li>Подзадача 5: в оптимальном решении никогда не надо ходить налево;</li>\n<li>Подзадача 6: никаких дополнительных ограничений нет.</li>\n</ul>\n<p>В каждой подзадаче все не указанные явно ограничения подразумеваются взятыми из основной задачи, например, в четвертой подзадаче подразумевается, что $N\\leq 10000$, $K\\leq 10$ и нет никаких дополнительных условий по тому, как выглядит ответ.</p>\n\n<p>Таким образом, подзадачи — это упрощенные варианты основной задачи. Как правило, для каждой подзадачи существует свой алгоритм решения, который проще, чем алгоритм, решающий полную задачу. Поэтому, если вы можете написать решение полной задачи, то пишите его (почти всегда у задачи есть естественное "полное" решение, которое автоматически решает и подзадачи, поэтому если вы можете без проблем его написать, то напишите, и не думайте про подзадачи), а если нет, то пишите решения подзадач.</p>\n\n<p>При этом подзадачи оцениваются хитро. В некоторых подзадачах, как и раньше, каждый тест оценивается независимо: за каждый тест начисляется несколько баллов, и чем больше вы тестов прошли, тем больше у вас баллов. Но в некоторых подзадачах (обычно в более простых) баллы начисляются по принципу "всё или ничего", т.е. вы получаете не ноль баллов за эту подзадачу <b>только если у вас прошли все тесты этой подзадачи</b>. Т.е. если вы прошли все тесты этой подзадачи, вы получаете полный балл за нее, иначе вы получаете ноль баллов за эту подзадачу. Собственно сами подзадачи обычно оцениваются независимо, но бывает даже так, что очередная подзадача оценивается только если в предыдущих подзадачах все тесты пройдены. Правила оценивания каждой подзадачи указаны в условиях; посмотрите примеры задач прошлых лет, чтобы понять, как это.</p>\n\n<p>Это обозначает, что вам как правило нет смысла писать "какие-то" решения. Вы должны написать решение, которое как минимум абсолютно корректно решает как минимум простые подзадачи. Навыки тестирования задач становятся очень важны; если вы все еще не читали <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">мой текст</a> про это, то прочитайте.</p>\n\n<h4>Фидбек</h4>\n\n<p>Но, чтобы компенсировать увеличение сложности от введения подзадач, также вводится так называемый фидбек. А именно, <b>в течение тура вы можете отправлять ваши решения на проверку</b>. Решения будут проверяться на всех финальных тестах, и после проверки вы можете попросить, чтобы вам сообщили результат этой проверки. Скорее всего, у вас на компьютере будет стоять клиент тестирующей системы нашего жюри, вы через этот клиент будете отправлять решения, и в нем же будет какая-нибудь кнопочка типа "узнать результат этого решения". Соответственно, узнав результат, вы можете дальше планировать свою работу.</p>\n\n<p>Бывают три варианта того, что вам сообщают в качестве результата, и это зависит не только от задачи, но и от подзадачи. В каких-то подзадачах вам могут сообщать информацию по каждому тесту, прошел он или нет (или даже если не прошел, то почему — неправильный ответ, превышение предела времени и т.п. — всё очень похоже на то, что вы видите на этом сайте на закладке "результаты"). В других подзадачах вам могут только сообщать полный балл за эту подзадачу. В третьих подзадачах — первый непройденный тест и вердикт на нем (как на командных олимпиадах). Что именно вам сообщают, обычно указывается в условии.</p>\n\n<p>При этом может быть установлено ограничение на количество посылок вида, например, «по каждой задаче за весь тур вы можете сделать не более 50 попыток», или что-то подобное. Тогда, после того, как у вас кончились эти 50 попыток, вы, видимо, больше не можете решать эту задачу.</p>\n\n<h4>Итоговая оценка</h4>\n\n<p>Итоговая оценка за каждую задачу — это максимальный балл из всех отправленных вами решений. Итоговый суммарный результат, конечно, есть сумма баллов по всем задачам.</p>\n\n<p>Тут важны два момента. Во-первых, учитываются только <i>отправленные</i> в систему решения, а не просто сохраненные вами в вашем рабочем каталоге. Во-вторых, если одно из ваших решений набирает баллы только по одной подзадаче, а второе — только по второй, но вы не сдали решения, которое набирало бы баллы по обеим подзадачам, то вы получите баллы только за одну подзадачу (от того решения, которое набирает больше баллов). Аналогично если одно решение проходит только два теста из некоторой подзадачи, в которой все тесты оцениваются независимо, а другое решение проходит только два других теста, то вы не получите суммарного балла.</p>\n\n<h4>Тесты из условия</h4>\n<p>Раньше присутстввало требование, что ваше решение <b>обязано проходить все тесты из условия</b>, даже если эти тесты не попадают под ограничения той подзадачи, на которую вы нацелились. Например, в примере подзадач, приведенном выше, если в условии есть тест с $K=2$, то, даже если вы придумали только решение для $K=1$ и рассчитываете только на баллы за соответствующую подзадачу, то все равно от вас могут потребовать, чтобы вы прошли тест из условия с $K=2$. Если хотя бы один тест из условия не пройден, то вы получаете ноль баллов за это решение.</p>\n\n<p>В этом году в официальных требованиях про это ничего не написано. Но я не буду удивлен, если в тестирующей системе это будет, поэтому будьте к этому готовы.</p>\n\n<p>В таком случае обязательно убедитесь, что вы умеете проходить все тесты из условия. Если надо, то добавьте соответствующий <code>if</code>, и просто напишите <code>writeln</code> с тем ответом, который указан в условии. Типа того:\n</p><pre>// пусть в условии есть следующие тесты:\n// n=3, k=1, решается основным алгоритмом\n// n=3, k=2, ответ 42\n// n=5, k=2, ответ 137\nread(n,k);\nif k=2 then begin\n    if n=3 then writeln(42)\n    else writeln(137);\n    halt;\nend;\n// дальше решение для k=1\n</pre>\n<p>В условии обычно не так много тестов, и не так уж и сложно написать ряд <code>if</code>\'ов, которые будут все эти тесты различать.</p>\n\n<h4>Явный if</h4>\n<p>Вот выше я уже написал, что тесты из условия можно отличать, написав явный <code>if</code> и <code>writeln</code>. Ничего в этом зазорного нет. Аналогично вы можете писать явный <code>if</code> для различения подзадач. Если вы придумали одно решение для $K=1$ и еще одно решение для случая, когда все элементы массива $a$ равны, то не стесняйтесь написать в программе <code>if</code>, отличающий эти два случая, и запускать разные алгоритмы в зависимости от теста — именно так, если у вас есть решения двух подзадач, вы их можете объединить в одно решение.</p>\n\n<p>Кстати, еще важный момент — если ваша программа видит, что ей попался тест, который не попадает ни под одну подзадачу из тех, для которых у вас есть решение, то не надо сразу вылетать. Хуже не будет, если вы для этого теста запустите решение какой-нибудь подзадачи, вдруг тест-другой так и пройдут.</p>\n\n<h2>Особенности задач</h2>\n<p>Задачи на областной олимпиаде могут быть сильно варьирующимися по сложности. Как правило, самая простая задача будет действительно простой, не требующей ничего знать, примерно уровня 1В. Самая же сложная будет очень сложной, может требовать хитрых знаний, может быть даже уровня эдак 11-го; вообще, год из года только несколько человек по всей России на областных набирают полный балл (800).</p>\n\n<p>Обычно задачи в туре устроены так: первая задача самая простая. Она обычно не требует ничего знать; вы ее должны решать на полный балл. Вторая задача чуть посложнее. Ее тоже хорошо бы решить на полный балл, но это получается не всегда. Третья обычно довольно сложная, но для самых крутых из вас она вполне должна быть по силам. Четвертая же задача обычно очень сложная, почти наверняка никто в области не решит обе четвертых задачи.</p>\n\n<p>Но бывает по-разному. То, что написано в предыдущем абзаце — это наиболее распространенная схема, см, например, первый тур 2014 года как один из самых ярких примеров таких сильно распределенных по сложности задач. Но бывает и так (и последние годы все чаще и чаще), что распределение задач по сложности намного менее выражено. Вполне может первая задача оказаться не самой простой, а последняя вполне посильной; вполне может вторая задача оказаться сравнимой по сложности или даже проще первой. Тем не менее обычно задачи все-таки идут более-менее в порядке возрастания сложности.</p>\n\n<p>Но всегда помните, что в каждой задаче есть подзадачи! Как правило, даже в самых сложных задачах первые подзадачи очень простые; часто в них достаточно перебрать все возможные решения парой вложенных <code>for</code>\'ов или т.п.; в крайнем случае написать рекурсивный перебор или какой-нибудь простой алгоритм. Поэтому обязательно решайте не только первые задачи туров, но и последние (пишите в них простые подзадачи)! Обязательно постарайтесь, чтобы <b>по каждой задаче у вас было ненулевое количество баллов!</b></p>\n\n<p>Вообще, на самом деле, как показывает опыт, вполне реально в каждом туре набрать хотя бы 200 баллов, поэтому и постарайтесь это сделать. В идеале надо решать полностью первые две задачи каждого тура, но, даже если не получилось, то недостающие до 200 баллы можно набрать в более сложных задачах. 400 баллов в сумме за два тура — это вполне достойный результат. (Конечно, это общая рекомендация; ясно, что сильные школьники должны набирать больше, а для не очень сильных и 200-300 в сумме будет хорошо. Но тем не менее баллов 150 в каждом туре обычно можно набрать вообще не думая, поэтому 200 за тур — это хорошая цель для большинства из вас.)</p>\n\n<p>Для сравнения, баллы прохождения на собственно Всероссийскую олимпиаду обычно примерно такие: по 9 классам — 450-580, по 10 классам — 500-600, по 11 классам 550-650. Проход на Россию — это очень и очень хороший результат. (Ну, для всех, кроме тех, кто на Россию уже ездил :) )</p>\n\n<p>Возможно, будет ввод из файла, хотя скорее всего будет будет только ввод с клавиатуры.</p>\n\n<h2>Про языки программирования</h2>\n\n<p>Про питон: на питоне вы, возможно, не сможете в принципе решить отдельные задачи на полный балл (возможно, не сможете решить вторую, а может быть, даже первую) — потому что решение не будет успевать по времени. (Но это не обозначает, что любые проблемы в задаче надо списывать на то, что это питон. Имейте в виду то, что на питоне может не успевать по времени; полезно оценить сложность алгоритма и прикинуть, успел ли бы такой алгоритм на C++; но если вы придумали явно неоптимальный алгоритм, то надо все-таки придумать нормальный алгоритм.) Но эту невозможность решить задачи на полный балл вы можете компенсировать тем, что на питоне вы можете заметно быстрее и легче писать небольшие подзадачи в сложных задачах, да и первую задачу вы возможно напишите быстрее, чем ваши друзья, пишущие на C++. С другой стороны, если вы хотите иметь хороший результат на областной олимпиаде, то, конечно, надо бы уже знать C++ (но если вы хотите иметь хороший результат, то наверное вы уже минимум на 3 уровне, а тогда про C++ вы уже читали).</p>\n\n<p>Если же вы знаете и C++, и питон, то, конечно, по каждой задаче выбирайте, на каком языке лучше писать.</p>\n\n<p>Паскаль по производительности сравним с C++, поэтому там проблем со временем работы быть не должно.</p>\n\n<h2>Тактика поведения на туре</h2>\n<p>Во-первых, все мои рекомендации из <a href="/material/module-15955_1" onclick="window.goto(\'/material/module-15955_1\')();return false;">текста про школьную олимпиаду</a> справедливы. Прочитайте все условия сразу, еще до того, как что-то программировать. Контролируйте время, не зависайте над одной задачей надолго. Как я уже писал выше и как писал в тексте про школьную олимпиаду, старайтесь, чтобы по всем задачам у вас был не ноль. Сохраняйте решения, чтобы, если у вас зависнет компьютер или выключится электричество, решения не пропали; вообще, полезно привыкнуть нажимать "сохранить" (F2 или Ctrl-S в разных средах программирования) каждые минуту-другую.</p>\n\n<p>Обязательно внимательно сравнивать ответ с примером. Один раз был случай, когда участник выводил два числа на двух разных строках, а в задаче требовалось вывести два числа на одной строке — и тестирующая система нашего местного жюри отказывалась засчитывать это решение (хотя это и не соответствовало требованиям центрального всероссийского жюри). Конечно, это вина жюри, но школьнику от этого было не сильно легче (после тура мы отапеллировали эти баллы, но время на туре было все равно потрачено). Поэтому если вы видите, что ваша программа выводит не совсем то, что в примере, тщательно перепроверьте, правда ли, что ваше решение правильное.</p>\n\n<p>Но наличие фидбека и четко выделенных подзадач вносит свои ньюансы в тактику. Во-первых, если вы видите, что задача простая, то напишите ее, сдайте, убедитесь, что у вас 100 баллов, и забудьте про нее вообще. Более конкретно: если вы считаете, что какая-то задача простая, если вы думаете, что там особенно негде ошибиться, то напишите ее, слегка потестируйте, не тестируйте подробно (!) и сдайте. Если у вас 100, то забудьте про нее. Если же нет, то начинайте тестировать. Не тратьте время на простые задачи, если вы можете сразу проверить, работают они или нет. (Если есть ограничение на количество попыток по задаче, то сказанное выше справедливо, если у вас еще было немного попыток по задаче. В таком случае помните про ограничение количества попыток по задаче; чем меньше у вас остается попыток, тем тщательнее тестируйте и аккуратнее расходуйте попытки.)</p>\n\n<p>В более сложных задачах часто бывает полезно написать первую подзадачу, если она простая и пишется недолго. А именно, подумайте над сложной задачей. Если сразу ничего, что могло бы решить задачу полностью, в голову не приходит, то попробуйте придумать решение к первой подзадаче. Если получилось придумать простое решение, то напишите его и сдайте — у вас уже станет не ноль баллов, и заодно вы будете уверены, что вы понимаете задачу верно. Наконец, простое решение потом можно использовать для стресс-тестов. Но это только для не самых простых задач; в простых задачах не тратьте время на подзадачи, если вы можете написать полностью задачу!</p>\n\n<p>Наоборот, если вы написали "полное" решение, оно на ваших тестах работает, но у жюри упорно набирает мало баллов, то можно написать простое решение первой подзадачи, отправить его, убедиться, что уж оно-то верное, и дальше написать стресс-тестирование. Очень полезно заранее научиться стресс-тестированию (см. еще раз <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">текст про тестирование задач</a>)!</p>\n\n<p>Контролируйте время до конца тура. Если вы придумали сложное решение, которое может решить сложную задачу полностью, но видите, что вы рискуете не успеть его дописать (и помните, что вам наверняка придется его отлаживать и тестировать! — вряд ли оно сразу 100 наберет), то может быть проще прерваться и написать простое решение по той же задаче, чтобы уж гарантированно иметь не ноль.</p>\n\n<p>Если есть ограничение на количество попыток по задаче, то контролируйте количество оставшихся попыток. 50 попыток — это реально много и в подавляющем большинстве случаев достаточно, но если вы будете их активно расходовать, то они могут внезапно кончиться. Вообще, по всем задачам, кроме самых сложных, думаю, реально использовать не больше 5 попыток за тур.</p>\n\n<p>Конечно, даже если самую простую подзадачу вы уже решили, это не значит, что надо сразу бросаться на полное решение — все вышеописанные соображения применимы, но к следующим подзадачам. Если не получается придумать или написать полное решение, то напишите решение к еще одной подзадаче, объедините с написанным ранее и сдайте. Помните, что подзадачи сделаны не просто так, каждая подзадача имеет какое-то более простое решение.</p>\n\n<p>Не теряйте решения! Вообще, постарайтесь сохранять все свои решения, которые вы отправляете в систему и которые там набирают какие-то баллы. Будет очень неприятно, если вы решили простую подзадачу, потом стали писать общий алгоритм, он в результате не заработал даже для простой подзадачи, а решения простой подзадачи у вас уже нет. Конечно, правило оценки лучшего решения вас частично от этого спасает, но лучше подстрахуйтесь. Еще хуже если вы решили первую подзадачу, начали писать вторую подзадачу, она у вас даже заработала, но при этом сломалось решение первой. Вам бы объединить два решения, но для этого надо иметь решение первой подзадачи.</p>\n\n<p>В частности, не полагайтесь на то, что вы сможете скачать решение из тестирующей системы! Система может заглючить, может потерять ваши решения, и т.д. — если и вы их тоже потеряете, все будет совсем плохо. А если решения останутся у вас на компьютере, то, на худой конец, вы сможете их использовать для апелляции.</p>\n\n<p>Вообще, я бы считал, что у успешного участника должны быть примерно следующие "вехи" во времени (конечно, это "средняя температура по больнице", т.е. варьироваться может очень и очень сильно, но тем не менее) (время везде от начала тура):</p>\n<ul>\n<li>0:10: прочитаны все задачи;</li>\n<li>0:45-1:00: есть 100 по одной из задач;</li>\n<li>2:00-2:30: есть 100 по двум задачам или в крайнем случае 100+60;</li>\n<li>3:30: написаны простые подзадачи в двух сложных задачах, соответственно есть 100+100+30+20 или в крайнем случае 100+60+30+20;</li>\n<li>оставшееся время добиваем недорешанные задачи.</li>\n</ul>\n<p>Еще раз: это очень среднее, и это "идеал" для такого "среднего", и это из предположения, что задачи сильно распределены по сложности. Но это очень грубый ориентир.</p>\n\n<p>Да, все написанное про подзадачи выше подразумевает, что у каждой задачи есть естественное правильное решение, автоматически решающее и все подзадачи тоже; в таком случае вы теоретически можете решить задачу полностью, не думая про подзадачи вообще; так обычно и бывает. Но я не исключаю, что могут быть и задачи, где подзадачи различны настолько, что даже в самом простом и правильном решении удобнее их рассматривать отдельно.</p>\n\n<h2>Особенности C++</h2>\n<p>Если вы пишите на C++, то есть ряд особенностей, которые вам полезно и даже необходимо знать.</p>\n<h4>Быстрый ввод-вывод</h4>\n<p>Стандартный ввод/вывод через <code>iostream</code> (т.е. с использованием <code>cin</code>/<code>cout</code>) по умолчанию работает медленно на больших данных. Если вам надо ввести, допустим, 100000 чисел, то с использованием <code>cin</code> вы наверняка получите time limit; аналогично если вам надо выводить много данных. Это связано с двумя проблемами.</p>\n\n<p>Во-первых, медленно работает <code>endl</code> (для тех, кто понимает — вывод в <code>cout</code> буферизуется, но <code>endl</code> каждый раз сбрасывает буфер, реально выводя данные на диск, а реальный доступ к диску работает медленно). Поэтому не используйте <code>endl</code> вообще, используйте <code>\'\\n\'</code>.</p>\n\n<p>Во-вторых, есть еще проблема синхронизации с <code>stdio</code> (не буду сейчас подробнее писать, что это значит). Чтобы эту проблему побороть, есть три способа:</p>\n<ul>\n<li>Работать с файлами, а не с клавиатурой/экраном (если это будет допустимо на олимпиаде). У <code>fstream</code> таких проблем со скоростью работы нет.</li>\n<li>Использовать для ввода/вывода конструкции из <code>stdio.h</code> (<code>scanf</code> и <code>printf</code>), а не из <code>iostream</code>.</li>\n<li>Написать в самом начале программы две магические строчки (их надо выучить наизусть): \n<pre>std::ios_base::sync_with_stdio(false);\nstd::cin.tie(nullptr);\n</pre></li></ul>\n\n<p>Лично я вам рекомендую использовать первый или последний вариант.</p>\n\n<p>Еще раз: есть <b>две</b> проблемы: одна с <code>endl</code>, другая с синхронизацией stdio и iostream. Одна решается тем, что вы не используете <code>endl</code>, другая — вот одним из трех описанных выше способов. Вам надо решить <b>обе</b> проблемы, т.е. и не использовать <code>endl</code>, и как-то разобраться с синхронизацией. Типичная ошибка — написать в начале программы этот страшный код с <code>sync_with_stdio</code>, но выводить все равно через <code>endl</code>. Получите time limit exceeded все равно.\n\n</p><h4>Установка стека в Visual Studio</h4>\n<p>В популярных компиляторах C++ по умолчанию установлен очень маленький размер стека. Если в вашей программе глубокая рекурсия (например, если вы пишете поиск в глубину), то программа может упасть.</p>\n\n<p>В GCC попросить большой размер стека из самой программы невозможно, это должно настраивать жюри при настройке компиляции. На нормальных олимпиадах жюри прописывает большой размер стека в настройки компиляции, будет ли это на нашей области — я не знаю.</p>\n\n<p>Но в Visual Studio можно установить необходимый размер стека прямо из программы примерно следующей конструкцией (проверьте заранее!): <code>#pragma comment(linker, "/STACK:32000000")</code>, здесь число — это необходимый вам размер стека в байтах (в этом примере 32 миллиона байт, т.е. примерно 32 Мб). Размер стека можете посчитать в уме исходя из вашей программы, а можете и подобрать опытным путем — 32-64 Мб обычно достаточно. Учитывайте еще, конечно, ограничение по памяти.</p>\n\n<p>Поэтому если жюри на олимпиаде нормально настроит стек в gcc (это должно быть видно в строках компиляции gcc в памятке участника), то сдавайте под gcc. Иначе если ваше решение под gcc не влезает в стек, то добавьте эту магическую строку и сдавайте под Visual Studio.</p>\n\n<h2>Про надежность тестирующих систем</h2>\n<p>Возможно, на турах будет использоваться тестирующая система нашего жюри, но скорее всего будет Яндекс.Контест (как последние несколько лет и на области, и на районе), возможно, какая-то еще из известных тестирующих систем. С любой системой возможны различные проблемы, например, тестирующая система нашего жюри может неправильно оценивать корректность решений (см. выше пример с выводом в одной строке или на разных строках), а Яндекс.Контест печально известен тем, что регулярно не справляется с нагрузкой на первом туре и тестирует решения по несколько часов (!); на втором туре все обычно работает нормально. Правда, в прошлом году вроде с этим уже не было проблем, надеюсь, что и в этом не будет. Я не знаю, какая система будет в этом году, и будут ли в ней проблемы и какие, поэтому если что-то идет не так, то думайте головой и действуйте по обстоятельствам. Например, если ваши решения тестируются долго — не паникуйте, а просто переключайтесь на другие задачи, ну и тщательнеее сами тестируйте те решения, которые вы отправляете на проверку.</p>\n\n<h2>Дополнительные замечания</h2>\n<h4>Не пугайтесь!</h4>\n<p>Год из года регулярно многие школьники на областной олимпиаде показывают результат хуже, чем от них можно было ожидать. Возможно, многие пугаются непривычной системы задач, системы тестирования и т.д. Так вот, не пугайтесь. Вы вполне способны показать весьма неплохой результат.</p>\n\n<h4>Ищите обходные решения проблем</h4>\n<p>Если у вас что-то не получается, вы не помните, как что-то сделать в вашем языке программирования и т.п. — подумайте, как эту проблему можно обойти. Если вы не помните простого способа что-то сделать, то, может быть, есть более сложный? Если у вас не работает какой-то код, может быть, можно написать как-то по-другому, пусть и сложнее, но надежнее? И т.д.</p>\n\n<h4>Неполадки на туре</h4>\n<p>Если у вас на туре что-то из оборудования работает не так, как вы хотите, сразу же спрашивайте жюри! Если, например, не работает клавиатура, или если программа не запускается с очень непонятными сообщениями об ошибках, то сразу зовите жюри! У нас в ННГУ часто бывает так, что антивирус мешает нормальной работе (например, удаляя exe-шник сразу после его создания, или очень задерживая запуск программы — вы в ННГУ на занятиях иногда это наблюдали, на занятиях это еще не так страшно, но на олимпиаде — ненормально) — сразу зовите жюри и просите отключить антивирус. Если жюри решает вашу проблему долго, требуйте компенсации времени.</p>\n\n<h4>Не уходите без баллов</h4>\n<p>По идее, после каждого тура у вас будет обед в столовой университета, потом разбор задач и объявление итогов тура. Я очень вам рекомендую дождаться объявления итогов. Последнее время обычно жюри раздает каждому участнику бумажки с его баллами — вот получите эту бумажку, чтобы проверить, что все подсчитано верно. У нашего жюри регулярно случаются проблемы с подсчетом баллов, поэтому лучше дождитесь и проверьте, что все соответствует вашим ожиданиям. Конечно, вы по идее должны знать свои баллы за счет фидбека, но лучше все-таки дождитесь бумажки.</p>\n\n<p>Я буду на олимпиаде на втором туре как перед туром, так и после тура и на закрытии; и постараюсь также подъехать когда-нибудь в день первого тура (или на открытие, или после тура, или и тогда и тогда). Если окажется, что вам неправильно посчитали баллы, то мы с вами можем пойти и поругаться. Но если вы уйдете раньше и не получите бумажку с результатами, то я сам за вас ругаться не пойду; как минимум, вы намного лучше меня знаете, чего вы ожидали.</p>\n\n<h4>Укажите меня своим преподавателем</h4>\n<p>Как я где-то уже писал, <b>пожалуйста, укажите меня своим преподавателем</b>, если наши занятия были для вас достаточно полезными. А именно, попросите школу указать меня преподавателем в заявке. На регистрации на олимпиаду перед первым туром обычно можно проверить, кто у вас указан и, если хотите, наверное можно будет исправить.</p>\n\n<h4>Прочитайте этот текст еще раз перед олимпиадой</h4>\n<p>Я могу вспомнить что-то и добавить в этот текст новую информацию. Поэтому прочитайте его перед олимпиадой еще раз.</p>\n\n<h4>Местное жюри и вариации</h4>\n<p>Все написанное выше написано по мотивам официальных правил областной олимпиады. К сожалению, наше местное жюри не всегда понимает эти правила до конца. (Правила, равно как и условия задач и тесты, составляются централизованно на всю Россию.) Например, в 2015 году они не хотели обеспечивать фидбек. Поэтому будьте готовы к каким-нибудь вариациям (например, они могут сказать, что финально будет оцениваться только то решение, которое вы оставите у себя в рабочем каталоге, а не то, которое вы сдавали). Мое мнение — пока эти вариации не сильно вам портят жизнь, не стоит ругаться с жюри; если же это что-то серьезное, то будем ругаться.</p>\n\n<p>Например, если они хотят, чтобы вы оставляли свое решение в рабочем каталоге — ну так сохраните свое лучшее решение и оставьте, не так уж это и сложно, так и вам и мне и жюри спокойнее. Конечно, если в итоге вы сохраните по ошибке не то решение и потеряете баллы из-за того, то будем ругаться, но лучше до этого не доводить. Если же жюри что-то глобальное сделает не так (например, отменит фидбек), то я буду ругаться сразу.</p>\n\n<p>Полные официальные Требования к проведению регионального этапа, которые обязательны к соблюдению во всех регионах, можно почитать <a href="http://vserosolymp.rudn.ru/mm/mpp/files/tr20/Информатика%20-%20Требования%20к%20проведению%20регионального%20этапа%202020.pdf">вот здесь</a>. Рекомендую почитать всем, кто участвует в регионе не первый раз и серьезно рассчитывает на высокий балл; а также если у вас возникли какие-то специфические вопросы (например, «можно ли разные задачи решать на разных языках программирования»).</p>\n\n<h1>Советы от <a href="/user/254947" onclick="window.goto(\'/user/254947\')();return false;"><span class="_client_components_UserName__name" style="color:#7b0000">Алексея Упирвицкого</span></a></h1>\n\n<p>(c) Алексей Упирвицкий, CC-BY-SA</p>\n\n<p>В этом тексте представлены мои личные идеи относительно регионального тура ВСОШ. Я основываюсь на своем опыте и опыте своих товарищей.</p>\n\n<p>Самым лучшим способом подготовки к региону будет прорешивание прошлогодних регионов и подготовка своей стратегии.\nТак как тур идет 5 часов, ближе к концу вы можете устать и быть куда менее продуктивными нежели в самом начале, и если вы не распределите время заранее, то можете что-то не успеть. Поэтому я предлагаю вам написать 2-3 тура и засечь, сколько времени у вас занимает та или иная задача. </p>\n\n<p>Например: <br>\nзадача А — 45 минут;<br>\nзадача В — 1.5 часа; <br>\nчто-то разумное в С — час;<br>\nполный перебор в Д — 20 минут.</p>\n\n<p>Имея такой приблизительный план, вы не будете терять время на туре, думая: что бы мне сейчас порешать. </p>\n\n<p>Вообще, в идеале стратегия должна выглядеть так:</p>\n\n<p>А — до часу. Если так происходит, что через час задача А не решена — нельзя отчаиваться и продолжать ее пихать. Нужно переключиться на задачу В и полностью погрузиться в работу над ней.</p>\n\n<p>В — еще час после А вы решаете задачу В. Записываете все свои мысли и пишете какое-нибудь решение. Пусть не на 100, но на 40-60 баллов оно должно быть. </p>\n\n<p>Теперь, когда прошло 2 часа от начала тура, я рекомендую оставить А и В и открыть D (конечно, нельзя оставлять задачу если вы прямо сейчас ее пишете или у вас есть абсолютно верная идея на очень много баллов).</p>\n\n<p>Наверное, большинство из вас удивится выбору задачи D, но это правильный выбор. Всегда в этой задаче есть подзадача на ~10 баллов, которая сдается полным перебором (вообще, я рекомендую потренироваться сдавать полный перебор заранее, это полезный навык — быстро и аккуратно написать его). Таким образом вы сможете избавиться от задачи D и отдохнуть от А и В. Возможно, это позволит взглянуть на них по-новому и придумать новое решение. </p>\n\n<p>Эти полчаса не думайте о других задачах. Да, это сложно, так как написание перебора зачастую не требует активной мыслительной деятельности, но вам нужен перерыв.</p>\n\n<p>Таким образом, прошло 2.5 часа от начала контеста, у вас сдана D на максимум который может набрать тупняк, и вы остаетесь с тремя задачами. Сейчас нужно посмотреть на А и В. Уделите каждой из них по полчаса. Скорее всего после перерыва вы сможете сгенерировать новые идеи. Прошло 3.5 часа, и нужно открывать задачу С. По моему мнению, задача С — это самое странное, что есть на регионе (но об этом позже), именно поэтому я рекомендую ее открывать последней. </p>\n\n<p>Дальше все зависит от задачи. В 2017-2018 году была задача \n<a href="/material/p113763" onclick="window.goto(\'/material/p113763\')();return false;">«Красота фейерверка»</a> и она была простой. Даже проще В, на мой взгляд (и многих других участников того года).\nНо с другой стороны, порой бывают очень сложные С. Поэтому важно быстро понять, сдавать ли ее на 100 или на частичные. Мой совет: первые  полчаса старайтесь придумать ее на 100, а если не получилось — полчаса сдавайте ее на частичные баллы. Так у вас останется полчаса, и идеальной будет разбалловка вида: 100 100 50± 20±\nЕсли она не такая, не надо отчаиваться, потому что получить идеальный результат сложнее, чем кажется.</p>\n\n<p>Теперь стоит сказать несколько слов про каждую позицию на контесте:\nЯ специально не буду рассматривать задачи с прошлого года. Почему — объясню позже.</p>\n<p>A — обычно простая задача. Очень часто формула, например: <a href="/material/p113757" onclick="window.goto(\'/material/p113757\')();return false;">«Улучшение успеваемости»</a> или <a href="/material/p113443" onclick="window.goto(\'/material/p113443\')();return false;">«Автоматизированное управление доставкой»</a></p>\n<p>В — конструктив/дп/бин-поиск не сложные темы. Просто нужно догадаться до решения. Очень часто помогает перебор всех известных вам алгоритмов, которые хоть как то могут сюда подойти.</p>\n<p>С — обычно что то очень идейное или структуры данных. Хорошим результатом будет сдать все подгруппы, не требующие мощных структур, и, может, еще одну с использованием неоптимальных структур. </p>\n<p>D — Что то очень сложное, что порой практически никто не сдает в стране. </p>\n\n<p>Почему я не касаюсь прошлого года? Потому что тур был очень сложным. Неоправдано сложным. По моему мнению, в этом году тур будет сильно проще. Например, как в 2016-17 или 2017-18 году. </p>\n\n<p>Мое мнение относительно тем по задачам: </p>\n<p>А — будет один конструктив и один бинпоиск</p>\n<p>В — думаю, что будет алгоритм на графах/конструктив/простые структуры данных. Например, дерево отрезков.</p>\n<p>С — в последние годы была подозрительная мода на интерактивные задачи, поэтому будьте готовы к ним. Будет забавно, если опять будет Декартово Дерево. Поговаривают про дп и его оптимизации. Но я больше думаю про что-то на графах/структурах данных. В задаче С всегда есть подвох. Она либо простая, либо сложная. Про нее не понятно, что можно дать, поэтому изворачиваются как могут.</p>\n<p>D — какая-то сложная, никому не известная тема, или старый добрый баян. Тут возможны оптимизации дп. Но если это так, то всем рекомендую оптимизацию buben вида: ну давайте переберем не все, а ±константу. Например, если в дп вам приходится пересчитывать значение через все предыдущие, но у вас есть подозрение, что вас не интересуют некоторые, смело пишите что-то в духе\n</p><pre><code>for (int i = 0; i &lt; n; ++i)\n    for (int j = i; j &gt;= max(0, i - buben); --j)\n</code></pre>\nВозможно, будут очень сложные строки.<p></p>\n\n<p>Вообще, есть такая тема как Сканлайн, и она может быть на любой позиции, потому что на нее можно накрутить практически что угодно.</p>\n\n<p>Также у каждого из вас есть тема, про которую вы уверены, что ее не будет, и потому не нужно ее учить. Поверьте моему опыту, именно она и будет. Так что повторите все, по чему у вас просадки. Сдайте пару прошлых регионов. Потренируйтесь писать перебор.</p>\n\n<p>Постарайтесь изучить корневую эвристику. Она позволяет делать полезные трюки и получать много баллов.</p>\n\n<p>Еще: подзадачи вам даны не только для того чтобы пихать, а для того чтобы тестировать! Что я имею ввиду: у вас есть идея на много баллов но почему то wa. Вы берёте и начинаете по частям код разбирать.</p>\n\n<p>Например есть подзадача на квадрат и есть на N log N.\nВот вы берёте и основную идею оставляете, а то что делает лог заменяете на простой алгоритм, работающий за линию.\nТак вы можете понять в какой части кода ошибка.</p>\n\n<p>Вообще не рекомендую сразу писать код на 100.\nЛучше выделить несколько ключевых идей и протестировать их так.\nДа, вы потратите время, но избавите себя от возможного дебага.</p>\n<p>Ещё иногда подзадачи могут натолкнуть на правильное решение. \nБерете простую подзадачу, которую знаете как решать, берете более сложную и начинаете думать, чем таким эти задачи отличаются, можно ли из решения простой подзадачи сделать решение сложной, или наоборот, сложную подзадачу свести к простой.</p>\n\n<p>Полезные статьи на codeforces (<i>это в первую очередь для уже реально крутых школьников, уровня эдак 5-6+ — П.К.</i>):<br>\n<a href="https://codeforces.com/blog/entry/44351">https://codeforces.com/blog/entry/44351</a><br>\n<a href="https://codeforces.com/blog/entry/63823">https://codeforces.com/blog/entry/63823</a><br>\n<a href="https://codeforces.com/blog/entry/45223">https://codeforces.com/blog/entry/45223</a><br>\n</p>\n\n<h1>Разбор районной олимпиады</h1>\n\n<p>Возможно, со временем я добавлю сюда разбор районной олимпиады.</p></div>', 'title': 'Про областную олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_10', 'order': 11, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_11', 'order': 12, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про Нижегородскую городскую олимпиаду им. В.Д. Лелюха</h1>\n<p>В феврале 2019 года (ориентировочно 8 февраля, но возможно дата будет изменена) состоится XVI Нижегородская городская олимпиада школьников по информатике им. В.Д. Лелюха. Я рекомендую подавать заявку всем школьникам моего курса, которые являются учениками школ города Нижнего Новгорода (не области!), и имеющим уровень как минимум 1В. Можете подать заявку и если у вас уровень ниже, но, возможно, задачи даже отбора вам покажутся сложными.</p>\n\n<p>Для участия в олимпиаде надо подать заявку. Информация про олимпиаду и порядок подачи заявок (приказ Департамента образования Администрации г. Н. Новгорода № 965 от 23.12.2019) уже направлен в школы города, поэтому ваши школы должны быть в курсе. Также приказ выставлен на <a href="http://olympiads.nnov.ru">сайте олимпиады</a> в разделе "Новости"; если до вашей школы он не дошел, то скачайте его с сайта олимпиады и покажите своим учителям или завучам.</p>\n\n<p>В принципе, подать заявку на вас может кто угодно — и ваша школа, и вы лично. Но не плодите заявки; если ваша школа сама подаст заявку на вас, то не дублируйте заявку. Если по каким-то причинам они не будут подавать заявку, или вы не уверены, подадут они или нет, то можете сами заполнить анкету по ссылке из приказа. В любом случае, даже если школа подает заявку за вас, все равно следите за <a href="http://olympiads.nnov.ru">сайтом олимпиады</a>, там будет появляться информация о рассмотрении заявок.</p>\n\n<p>Отбор на олимпиаду будет проводиться из числа заполнивших заявку по итогам районной и школьной олимпиад, также будет проведен дополнительный заочный отборочный тур 18 января. Подробная информация есть в приказе (см. на сайте олимпиады), а также информация будет разослана после заполнения заявок.</p>\n\n<p>На этой олимпиаде я председатель жюри, поэтому я не буду вам писать про нее столь подробно, как про другие олимпиады. Но изучите сайт олимпиады, посмотрите задания прошлых лет, чтобы понимать, чего ожидать. И прочитайте и применяйте те же рекомендации, которые я пишу по другим олимпиадам.</p>\n\n<p>На олимпиаду также будет приглашено несколько участников из области; их мы будем приглашать лично с учетом результатов областной олимпиады.</p>\n\n</div>', 'title': 'Про Нижегородскую городскую олимпиаду им. В.Д. Лелюха', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_12', 'order': 13, 'indent': 0, 'type': 'label', 'title': '', 'content': '<p><a href="https://codeforces.com/blog/entry/70187">Олимпиада Технокубок</a></p>\n<p><a href="https://olympiads.ru/zaoch/">Открытая олимпиада школьников по программированию ("заочка")</a> — очень известная и крупная олимпиада, заодно еще и поступательная. Советую участвовать, хотя задачи не самые простые.\n</p>\n\n\n<hr>\n\n<h2>Летняя компьютерная школа</h2>\n<p>\nЛетняя компьютерная школа (ЛКШ) — это очень круто, у нее только один недостаток: она платная (поездка стоит около 50 тыс. рублей).</p>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_13', 'order': 14, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><center><img src="https://lksh.ru/sis/scripts/logo.png" style="background:#000055;padding:10px;width:80%"></center>\n<h1>Летняя компьютерная школа — 2020</h1>\n\n<!--<p><b><font size=+1>NEW (29.03.2017):</font></b> <a href="https://docs.google.com/document/d/1Jc8JWvVeIMdTQGmqRgVMUFl6-xEvLOCGa43RwLP1QuE/pub">Советы по поступлению</a></p>-->\n\n<p><a href="http://lksh.ru">Летняя компьютерная школа (ЛКШ)</a> — это летняя школа для учащихся средних и старших классов, занимающихся программированием. ЛКШ проходит в две смены по три недели (в июле и в конце июля-августе, каждый школьник может поехать только в одну смену). Традиционным местом проведения школы является база отдыха "Берендеевы Поляны" в Костромской области, но последнее время смены нередко проводятся и в других местах.</p>\n\n<p>В ЛКШ приезжают школьники со всей России; преподавателями являются учителя школ и преподаватели вузов Москвы, Санкт-Петербурга и других городов, организаторы и члены жюри различных олимпиад, сильные студенты российских вузов. (Я многие годы ездил в ЛКШ преподавателем, правда, в этом году, скорее всего, не поеду.) В ЛКШ очень хорошая учебная программа, также очень хорошая внеучебная программа. От Нижегородской области (и от лицея 40) туда регулярно ездят несколько школьников (см., например, <a href="http://poldnev.ru/lksh/cities/Nizhny_Novgorod">здесь</a>). Более подробная информация про ЛКШ <a href="https://lksh.ru/sis/2019/aboutlksh.shtml">здесь</a> (это пока страничка прошлого года).</p>\n\n<p>На сайте пока никакой информации за этот год нет, но для общей справки вполне можете смотреть информацию прошлого года. Еще много информации в <a href="https://vk.com/sis">группе вКонтакте</a>.</p>\n\n<!--\n<p>В этом году июльская смена пройдет с 4 по 24 июля на базе отдыха «Берендеевы поляны» в Костромской области (это самое стандартное место для ЛКШ). Августовская смена <b>предварительно</b> пройдет в Эстонии в отеле «Laagna» с 31 июля по 20 августа. Вступительная работа будет опубликована ориентировочно 25 марта, выполнить её нужно будет до 22 апреля.</p> -->\n\n<p>Я <b>очень рекомендую</b> всем, кто может, и при этом имеет достаточный уровень программирования, туда поехать. А именно:</p>\n<ul>\n<li>Всем 8-классникам и младше, имеющим уровень как минимум 1Б, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем 9-классникам, имеющим уровень как минимум 1Г, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем вообще (кроме 11-классников, конечно), имеющим уровень как минимум 2Б, даже если у вас нет возможности поехать — все равно как минимум постараться поступить, если поступите, то будем думать, как вам поехать.</li>\n</ul>\n<p>Отбор в ЛКШ осуществляется по результатам выполнения вступительной работы, которую надо написать в марте-апреле.</p>\n\n<p>Еще раз: <b>ЛКШ — это очень и очень круто и полезно!</b> Поэтому всем, кто имеет уровень хоть сколько-то выше начального, имеет смысл туда поехать.</p>\n\n<p>Правда, есть проблема: участие в ЛКШ платное (ЛКШ проводится группой инициативных преподавателей и не имеет государственной поддержки), стоимость участия (3 недели: проживание, питание, занятия) в 2019 году была около 50000 рублей, в этом году будет, скорее всего, больше. Если вы можете оплатить эту сумму, то хорошо; иначе вы можете написать заявление на социальную скидку, и скорее всего она будет вам предоставлена за счет спонсорских средств ЛКШ (см. для примера  <a href="https://lksh.ru/sis/2019/zacisl/skidki.shtml">информацию о скидках 2019 года</a>).</p>\n\n<p>Школьники, расскажите про ЛКШ своим родителям! Если у ваших родителей есть какие-то вопросы, пусть звонят мне. <b>Если вы уже планируете лето, постарайтесь запланировать поездку в ЛКШ.</b> (Я специально говорю вам про ЛКШ настолько заранее, т.к. знаю, что многие планируют лето еще зимой.) Ближе к поступлению я тут напишу более подробную информацию. Если возникают какие-то вопросы, обращайтесь. См. также советы по поступлению в ЛКШ ниже.</p>\n\n<p>Сайт школы со всей информацией — <a href="http://lksh.ru">lksh.ru</a>.</p>\n\n<!-- <p><b><font color=red>NEW:</font></b> <a href="https://docs.google.com/document/d/e/2PACX-1vQkAIuVK7ZErO0mVYd8hVcYOKCP6m9r3dQ5VhzOkrfn6cNw0Aj3tZ2zkQFdN4Fw4v1f7CIsVmuMh-Rt/pub">Советы по поступлению в ЛКШ</a></p> -->\n\n<p>Ролик про ЛКШ разных лет (довольно старый уже; другие, тоже старые, видео есть на <a href="http://www.youtube.com/user/pakalinin">моем канале</a>):</p>\n\n<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/4nVl5MHeqIY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>', 'title': 'Информация про школу, читать всем!', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_14', 'order': 15, 'indent': 0, 'type': 'label', 'title': '', 'content': '<p><b>Я настоятельно рекомендую:</b></p>\n<ul>\n<li>Всем 8-классникам и младше, имеющим уровень как минимум 1Б, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем 9-классникам, имеющим уровень как минимум 1Г, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем вообще (кроме 11-классников, конечно), имеющим уровень как минимум 2Б, даже если у вас нет возможности поехать — все равно как минимум постараться поступить, если поступите, то будем думать, как вам поехать.</li>\n</ul>\n\n\n\n\n\n\n<h2>Архивы старых олимпиад</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-18043_0', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="https://www.dropbox.com/s/brq5dotrg4lmym2/raion_archive.pdf?dl=0">Архив прошлых районных олимпиад</a> (в тестирующей системе их скорее всего нигде нет)\n<hr>\n<a href="/material/reg">Областные олимпиады прошлых лет</a> (у нас в тестирующей засчитываются только полные баллы, но на реальной олимпиаде частичные решения тоже оцениваются)', 'path': []}]
In convert_level about materials= [{'materials': [], 'force': False, '_id': 'module-20927_0', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_1', 'order': 1, 'type': 'epigraph', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Надо думать головой!</h2>\n<p>Девиз нашего курса — «Надо думать головой!»</p>\n\n<p>Это обозначает, что все время при работе на спецкурсе вам надо думать. Вам нужно думать над тем, как решать те или иные задачи, как сделать много что еще. У вас не будет универсальных рецептов, которые позволят решить все задачи — наоборот, самые лучшие, самые интересные задачи — те, где от вас требуется что-то придумать.</p>\n\n<p>Кроме того, к любой получаемой информации, ко всему, что написано в учебниках, ко всему, что я вам говорю, что написано на страничку курса, относитесь всегда критически. Думайте, пытайтесь понять, почему это написано, почему вам советуют делать так, а не иначе. В учебниках, в том, что вам говорят другие люди, и тем более в моих материалах и советах легко могут быть ошибки, опечатки, наконец, вы, возможно, найдете более простые способы добиться того же — поэтому никогда не принимайте на веру то, что вы где-нибудь прочитали, всегда обдумывайте и перерабатывайте полученную информацию. Может так оказаться, что в одном месте вы прочитаете одну информацию, а в другом месте — диаметрально противоположную — подумайте, проверьте (см. ниже), и поймите, как делать лучше.</p>\n\n<p>Кроме того, не бойтесь экспериментировать! Если вы не уверены, можно ли в питоне/паскале/... написать ту или иную команду, отработает ли она так, как вы ожидаете — попробуйте: напишите и проверьте. Если вы точно не помните, как пишется какая-нибудь команда — попробуйте перебрать варианты, пока не получится. Если вы в разных местах прочитали совсем разную информацию о том, как что-то надо сделать — возьмите и проверьте, какой способ работает! Не бойтесь пробовать, не бойтесь экспериментировать — так вы научитесь намного большему, чем если просто будете строго следовать тому, что написано в каких-либо учебниках, что вам кто-то сказал.</p></div>', 'title': 'Надо думать головой!', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_2', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_3', 'order': 3, 'type': 'epigraph', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><div style="text-align:right;width:100%;padding-bottom:2ex;"><i>There are nine and sixty ways of constructing tribal lays,<br>\nAnd every single one of them is right!</i><br><br>\nRudyard Kipling. In the Neolithic Age<br><br><br>\nЕсть девять и шестьдесят способов писать песни племен<br>\nИ каждый из них без исключения верный!<br><br>\nРедьярд Киплинг. В эпоху Неолита</div>\n\n<p>У каждой задачи есть очень много решений, и многие из них — верные. Не следует ожидать, что у каждой задачи есть единственное правильное решение; бывают решения лучше, бывают решения хуже, но почти всегда есть два-три существенно разных решения, которые все весьма хороши, и из которых сложно выбрать одно лучшее. Будьте готовы к этому, будьте готовы видеть эти разные решения и разные подходы.</p>\n\n<p>В частности, если у вас есть ошибка в программе, то обычно есть много способов ее исправить. Поэтому не удивляйтесь, если вы меня спрашиваете, как исправить ошибку, а я вам предлагаю несколько вариантов исправления.</p></div>', 'title': 'There are nine and sixty ways of constructing tribal lays,\nAnd every single one of them is right!', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_4', 'order': 4, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Самая главная информация</h2>\n\n<div><a href="https://www.youtube.com/watch?v=kTC7z1NpOb4">\nВводная видеолекция про занятия на алгопроге (дублирует основную информацию ниже)</a></div>\n\n<div style="height:1ex;"></div>\n\n<div><b>Для начала</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_5', 'order': 5, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Общие вопросы (FAQ) по курсу</h2>\n<h3>Что это за курс?</h3>\n<p>Это курс по алгоритмическому программированию (фактически, по олимпиадным задачам). В первую очередь, он ориентирован на учеников лицея 40 Нижнего Новгорода, а также школьников Нижнего Новгорода и Нижегородской области, у которых в школе нет занятий по алгоритмическому программированию, или которых чем-то не устраивают такие занятия в их школе. Но при этом, если в этом курсе захотят участвовать школьники не из Нижегородской области, я ничего против иметь не буду.</p>\n\n<h3>Что за странный формат? Что за занятия в лицее 40 и в ННГУ?</h3>\n<p>В этом курсе можно заниматься полностью заочно — по многим темам материалы есть на сайте, и вы всегда можете написать вопрос мне. Кроме того, по материалам этого курса я веду очные занятия в лицее 40 (только для учеников лицея) и в ННГУ (для всех желающих). Но при этом у нас нет регулярных лекций по строгому расписанию, все школьники занимаются в своем темпе, поэтому можно ходить и в лицей, и в ННГУ, можно ходить не каждый раз. Поэтому это получается такой очно-заочный курс.</p>\n\n<h3>Чему тут учат?</h3>\n<p>Основное направление — это алгоритмическое программирование. Начиная с основ программирования, и далее в алгоритмы и структуры данных. Это то, что по-английски называется Computer Science. С существенным уклоном в сторону олимпиадного программирования (в первую очередь по линии Всероссийской олимпиады школьников), тем более что задачи на олимпиадах — это как раз задачи на алгоритмы и структуры данных.</p>\n\n<h3>Чему тут НЕ учат?</h3>\n<p>Мы не будем специально заниматься "техническими" вопросами:</p>\n<ul>\n<li>Созданием пользовательских интерфейсов, кнопочек, окошек и т.д.</li>\n<li>Программированием под конкретные платформы: созданием web-приложений, программированием под Android, iOS и т.п.</li>\n</ul>\n<p>Мы будем изучать алгоритмы, которые лежат в основе многих таких программ (мы не будем обсуждать, как сделать кнопку "сортировать по алфавиту", но будем обсуждать, как реализовать сортировку, когда список объектов для сортировки уже есть).</p>\n<p>Кроме того, мы не будем специально готовиться к ЕГЭ или поступлению в вузы. Тем не менее, задачи части C ЕГЭ по информатике — это фактически довольно простые олимпиадные задачи, поэтому если вы хорошо решаете олимпиадные задачи, то проблем с ЕГЭ у вас быть не должно.</p>\n\n<h3>Вы действительно будете учить?</h3>\n<p>И да, и нет. Формат заочного курса подразумевает, что существенную часть материала вы будете изучать сами. Я буду скорее направлять вас, советуя, где можно посмотреть тот или иной вопрос, на каких задачах отладить навыки, а также буду довольно активно комментировать ваши программы. Кроме того, вы всегда можете со мной связаться (контакты на главной странице курса) и задать любой вопрос.</p>\n\n<h3>Какой язык программирования?</h3>\n<p>Сложный вопрос, точнее вопрос с длинным ответом.</p>\n<p>Если вы только еще начинаете программировать, то я рекомендую использовать Python 3. Теоретические материалы для начинающих я буду подбирать именно по Python.</p>\n<p>Еще один популярный вариант — C++, но я настоятельно не рекомендую его выбирать, если вы только начинаете учиться программировать. Если же вы где-то уже научились неплохо писать на C++ (контрольный вопрос: какой тип данных вы используете для работы со строками и насколько это для вас сложно), то можете писать на C++. Теории по C++ на начальных уровнях нет, но если вы его где-то уже изучили, то она вам не нужна :) Если же вы неуверенно знаете темы уровня 1, то лучше учите питон по материалам на сайте.</p>\n<p>Довольно популярный вариант — Паскаль. Раньше я его рекомендовал, но в современном мире единственная причина учить паскаль — если вас в школе учат на паскале, вы уже неплохо его знаете, и не хотите распыляться на два языка. На самом деле, даже в этом случае я рекомендую вам изучить питон и заниматься в этом курсе на питоне, но в принципе, если хотите, то можете заниматься и на паскале. Теории по паскалю на сайте нет, но если вы его изучаете в школе и неплохо его знаете, то теория вам не нужна :) Если же вы неуверенно знаете темы уровня 1, то лучше учите питон по материалам на сайте.</p>\n<p>Но в целом я не настаиваю на том или ином выборе языка. Вы можете заниматься на любом языке из тех, которые поддерживается этим сайтом (только еще раз хорошо взвесьте все плюсы и минусы); правда, я сам лучше всего знаю паскаль, питон и c++, поэтому по другим языкам моя помощь вам будет ограничена . Ну и теории по другим языкам на сайте нет.</p>\n<p>Если у вас возникают вопросы, то свяжитесь со мной.</p>\n\n<h3>Что от меня требуется для занятий?</h3>\n<p>От вас требуется, в первую очередь, желание заниматься. Я не ваш школьный учитель, не ваш родитель, я не могу чего-то требовать от вас; ваше присутствие здесь — дело добровольное. Я не буду вас торопить, или ругать вас, если вы ничего не делаете неделями. Но при этом понимайте, что каких-либо результатов можно добиться только регулярными занятиями; если вы хотите конкретных цифр по тому, сколько времени надо выделить, то я бы считал, что как минимум два раза в неделю часа по 2-3 выделить надо, а лучше больше. (Для школьников, которые ходят ко мне на очные занятия, я рекомендую, в добавок в 2-3 часовому очному занятию, еще примерно столько же заниматься дома.) Но <b>следите за этим сами</b>, я не буду стоять у вас над душой. (Родителям и учителям: если вы хотите контролировать успехи ваших детей, см. отдельный документ по ссылке с главной страницы курса, и/или напишите мне.)</p>\n<p>Тот же принцип с моей стороны относится и к остальным вопросам: я лишь советую вам что-то, но не могу требовать. Если вы хотите выбрать определенный язык программирования вопреки моим рекомендациям — ну хорошо; и т.п.</p>\n<p>Но при этом учтите, что не только ваше участие здесь — дело добровольное, но и моя вам помощь — это тоже дело добровольное. Естественно, я с большей радостью буду помогать школьнику, который активно занимается, чем школьнику, который что-то пытается делать раз в месяц, и т.п.</p>\n\n<h3>А какие изначальные знания требуются? И каких классов могут быть школьники?</h3>\n<p>По программированию — от никаких и выше. Вообще, заочный формат позволяет реализовать почти индивидуальное обучение (т.е. я готов каждому школьнику выдавать личные задания), поэтому я готов принимать школьников, начиная от тех, кто ничего не умеет, и до школьников существенно более высокого уровня.</p>\n<p>Важными являются предварительные знания по математике. Опыт показывает, что чем сильнее математическая подготовка у школьника, тем он лучше занимается программированием. Поэтому если вы участвуете (пусть и на невысоком уровне) в математических олимпиадах — это вам плюс.</p>\n<p>Я ожидаю здесь видеть школьников от 7 и до 11 класса. Если школьник сильный (участвует в олимпиадах или конкурсах по математике, или как минимум весьма хорошо знает школьную программу), то можно и 5-6 классы. Для сильных школьников, чем раньше начать заниматься программированием, тем лучше.</p>\n\n<h3>Что надо сделать, чтобы начать заниматься?</h3>\n<p>Прочитайте документ "Инструкция для тех, кто здесь в первый раз" (ссылка на главной странице курса) и сделайте то, что там написано.</p>\n\n<h3>Когда можно начать заниматься? Когда "следующий набор"?</h3>\n<p>К курсу можно присоединится в любое время. Все равно занимающиеся школьники имеют довольно разный уровень подготовки, поэтому никакой единой программы типа "на этой неделе проходим то-то, на следующей то-то, а если вы пропустили или слишком поздно узнали о курсе, то ждите следующей группы или следующего года" нет.</p>\n<p>Единственное — во время праздников или летом у меня может быть ограничен доступ к интернету, поэтому я могу не так быстро отвечать на ваши письма, смотреть ваши решения и т.д.</p>\n<p>То же относится и к очным занятиям, можно присоединиться на любом занятии. Только проверьте, нет ли на главной странице курса объявления об отмене очередного занятия (например, из-за праздников); кроме того, летом занятий нет. На всякий случай можете мне заранее написать и уточнить, когда проходят занятия.</p>\n\n<h3><i>— И как думаешь, Василич? Будет от этой работы толк?</i></h3>\n<p><i>— А вот поработаешь, Петр Николаич, увидишь!</i><br>\n(Лев Успенский. Сопка «Камянистка», или торжество науки.)</p>\n<p>Конечно, я не гарантирую, что стоит начать заниматься, и вы сразу достигнете высоких результатов. Это зависит от многого, в том числе то того, что за пределами моего влияния — в первую очередь, математического образования, общей математической культуры, да и одаренности школьника; а также от трудолюбия и желания заниматься. Но думаю, что для большинства школьников, имеющих нужный склад мышления, эти занятия будут полезны.</p>\n\n<h3>А кто вообще вы такой?</h3>\n<p>Я — Петр Андреевич Калинин, к.ф.-м.н., старший разработчик компании Яндекс, выпускник ВШОПФ ННГУ. Я в свое время активно участвовал в различных олимпиадах: бронзовый призер международной олимпиады школьников по информатике (IOI) 2001 года, золотой призер IOI 2002 года; в составе команды ННГУ дважды участник финала чемпионата мира по командному программированию ACM (ACM ICPC). Я много лет езжу преподавателем в Летнюю компьютерную школу, крупнейшую российскую летнюю школу по алгоритмическому программированию; я постоянный член жюри Нижегородской городской олимпиады школьников по программированию (последние годы — председатель жюри). С 2017 по 2019 год я преподавал в Школе анализа данных Яндекса. Я ученик В.Д. Лелюха.</p>\n\n<p>В том или ином виде я учу школьников программированию с тех пор, как сам окончил школу в 2002 году (я ездил преподавателем в различные летние школы и т.п.); этот курс существует с 2013 года. Среди моих учеников — ряд участников и один победитель заключительного этапа Всероссийской олимпиады школьников по информатике (не считая моего брата Николая, в обучении которого я тоже принимал не последнее участие и который является абсолютным победителем заключительного этапа 2013 года и дважды — в 2013 и 2014 годах — золотым призером международной олимпиады школьников по информатике).</p>\n\n<p>Команды школьников под моим руководством регулярно участвуют в Нижегородской и Всероссийской командных олимпиада школьников по программированию. На большинстве прошедших к данному моменту Нижегородских командных олимпиадах абсолютное первое место занимала моя команда; на Всероссийской командной олимпиаде мои команды регулярно становятся призерами, нередко — медалистами, а два раза — занимали абсолютное первое место.</p>\n\n<p>Вы всегда можете связаться со мной, контактные данные указаны на главной странице курса.</p>\n\n<h3>А что за сайт informatics.mccme.ru?</h3>\n<p>Informatics.mccme.ru — это сайт дистанционной подготовки по информатике, организованный Московским центром непрерывного математического образования (МЦНМО) и Московским институтом открытого образования (МИОО); он очень удобен для организации курсов подобных этому, и, как вы можете видеть на главной странице сайта, реально широко используется, но в первую очередь для организации очных занятий. Я не имею непосредственного отношения к этому сайту (хотя и знаком с людьми, которые его создали и поддерживают).</p>\n\n<p>Этот курс строится на базе материалов с informatics и использует его в качестве тестирующей системы (а раньше вообще курс существовал только на informatics). Местами еще могли остаться ссылки на информатикс, если обнаруживаете такую, пишите мне.</p></div>', 'title': 'FAQ для школьников', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_6', 'order': 6, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_7', 'order': 7, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><div style="text-align:center;"><font size="+2">Занятия алгоритмическим программированием для студентов, выпускников вузов и вообще всех желающих</font></div>\n\n<h3>Что это за курс?</h3>\n<p>Это курс по алгоритмическому программированию (алгоритмы, структуры данных и т.д.)</p>\n\n<p>Он в первую очередь рассчитан на школьников и в качестве подготовки к школьным олимпиадами (и многие материалы в курсе написаны именно как для школьников), но также в курсе могут заочно заниматься (и реально занимаются) вообще все желающие: студенты, выпускники вузов и т.д. Занятия для нижегородских школьников бесплатные, для всех остальных — платные.</p>\n\n<p>Эта страничка — она как раз для студентов, выпускников и т.д., а не для школьников. Для школьников есть <a href="/material/module-20927_5" onclick="window.goto(\'/material/module-20927_5\')();return false;">отдельная страничка</a>.</p>\n\n<h3>Чему тут учат?</h3>\n<p>Основное направление — это алгоритмическое программирование. Начиная с основ программирования, и далее в алгоритмы и структуры данных. Это то, что по-английски называется Computer Science.</p>\n\n<h3>Чему тут НЕ учат?</h3>\n<p>Мы не занимаемся "техническими" вопросами:</p>\n<ul>\n<li>Созданием пользовательских интерфейсов, кнопочек, окошек и т.д.</li>\n<li>Программированием под конкретные платформы: созданием web-приложений, программированием под Android, iOS и т.п.</li>\n<li>Использованием различных фреймворков, библиотек и т.д.</li>\n</ul>\n<p>Мы будем изучать алгоритмы, которые лежат в основе многих таких программ (мы не будем обсуждать, как сделать кнопку "сортировать по алфавиту", но будем обсуждать, как реализовать сортировку, когда список объектов для сортировки уже есть).</p>\n\n<h3>Вы действительно будете учить?</h3>\n<p>И да, и нет. Формат заочного курса подразумевает, что существенную часть материала вы будете изучать сами. Я буду скорее направлять вас, советуя, где можно посмотреть тот или иной вопрос, на каких задачах отладить навыки, а также буду довольно активно комментировать ваши программы. Кроме того, вы всегда можете со мной связаться (контакты на главной странице курса) и задать любой вопрос.</p>\n\n<h3>Какой язык программирования?</h3>\n<p>Вообще говоря, какой хотите, из тех, что позволяют писать консольные приложения и поддерживаются этим сайтом. Это C++, Java, Python, C#, PHP, Ruby, Perl, Pascal, Basic, даже 1С. </p>\n\n<p>При этом, если вы еще не знаете никакого языка программирования, то я рекомендую Python. На страничке курса есть материалы для начинающих по питону. Если вы знаете какой-то из перечисленных в предыдущем абзаце языков, то можете использовать его; но вообще все продвинутые темы не зависят от языка.</p>\n\n<p>Лично я лучше всего знаю C++, питон и паскаль; по этим языкам я смогу вам достаточно подробно помогать. По другим языкам я не смогу вам подсказывать по различным тонкостям языка, хотя, как показывает опыт, для алгоритмов это не очень существенно.</p>\n\n<h3>А какие изначальные знания требуются?</h3>\n<p>По программированию — от никаких и выше. Вообще, заочный формат позволяет реализовать почти индивидуальное обучение (т.е. каждый участник курса занимается в своем ритме и режиме), поэтому я ожидаю здесь людей с широким спектром начальных знаний: от студентов младших курсов, только начинающих программировать, до уже профессиональных программистов, желающих улучшить свои знания в области алгоритмов.</p>\n\n<h3>Что надо сделать, чтобы начать заниматься?</h3>\n<ul>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (для этого вас попросят еще зарегистрироваться на сайте informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, где вы учитесь/работаете. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля".</li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты в разделе "О курсе" на главной странице курса.</li>\n<li>Дождитесь ответа и дальнейших инструкций от меня.\n</li>\n</ul>\n<p></p>\n\n<h3>Когда можно начать заниматься? Когда "следующий набор"?</h3>\n<p>К курсу можно присоединится в любое время. Все равно занимающиеся имеют довольно разный уровень подготовки, поэтому никакой единой программы типа "на этой неделе проходим то-то, на следующей то-то, а если вы пропустили или слишком поздно узнали о курсе, то ждите следующей группы или следующего года" нет.</p>\n<p>Единственное — во время праздников или летом у меня может быть ограничен доступ к интернету, поэтому я могу не так быстро отвечать на ваши письма, смотреть ваши решения и т.д.</p>\n\n<h3>Занятия только заочные?</h3>\n<p>Да, очных занятий для не-школьников нет. А если бы и были, то стоили бы намного дороже.</p>\n\n<h3>А кто вообще вы такой?</h3>\n<p>Я — Петр Андреевич Калинин, к.ф.-м.н., старший разработчик компании Яндекс, выпускник ВШОПФ ННГУ. Я в свое время активно участвовал в различных олимпиадах: бронзовый призер международной олимпиады школьников по информатике (IOI) 2001 года, золотой призер IOI 2002 года; в составе команды ННГУ дважды участник финала чемпионата мира по командному программированию ACM (ACM ICPC). С 2017 по 2019 год я преподавал в Школе анализа данных Яндекса. Я ученик В.Д. Лелюха.</p>\n\n<p>В том или ином виде я учу школьников программированию с тех пор, как сам окончил школу в 2002 году (я ездил преподавателем в различные летние школы и т.п.); этот курс существует с 2013 года. Среди моих учеников — ряд участников и один победитель заключительного этапа Всероссийской олимпиады школьников по информатике (не считая моего брата Николая, в обучении которого я тоже принимал не последнее участие и который является абсолютным победителем заключительного этапа 2013 года и дважды — в 2013 и 2014 годах — золотым призером международной олимпиады школьников по информатике).</p>\n\n<p>Команды школьников под моим руководством регулярно участвуют в Нижегородской и Всероссийской командных олимпиада школьников по программированию. На большинстве прошедших к данному моменту Нижегородских командных олимпиадах абсолютное первое место занимали мои команды; на Всероссийской командной олимпиаде мои команды регулярно становятся призерами, нередко — медалистами, а два раза — занимали абсолютное первое место.</p>\n\n<p>Вы всегда можете связаться со мной, контактные данные указаны на главной странице курса.</p>\n\n<h3>А что за сайт informatics.mccme.ru?</h3>\n<p>Informatics.mccme.ru — это сайт дистанционной подготовки по информатике, организованный Московским центром непрерывного математического образования (МЦНМО) и Московским институтом открытого образования (МИОО); он очень удобен для организации курсов подобных этому, и, как вы можете видеть на главной странице сайта, реально широко используется, но в первую очередь для организации очных занятий. Я не имею непосредственного отношения к этому сайту (хотя и знаком с людьми, которые его создали и поддерживают).</p>\n\n<p>Мой курс строится на базе материалов с informatics и использует его в качестве тестирующей системы (а раньше вообще курс существовал только на informatics). Местами еще могли остаться ссылки на информатикс, если обнаруживаете такую, пишите мне.</p></div>', 'title': 'FAQ для студентов и старше', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_8', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_9', 'order': 9, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Инструкция для тех, кто здесь в первый раз</h1>\n<h2>Для школьников</h2>\nЕсли вы хотите начать заниматься в этом курсе, то сделайте следующее:\n<ol>\n<li>Во-первых, можно просто придти на очное занятие (в ННГУ для всех желающих, в лицее 40 для лицеистов, информация о занятиях на страничке курса). Но можно начать (и продолжать) заниматься и дома, не дожидаясь очного занятия, можно и вообще на очные занятия не ходить. Все инструкции ниже идут как раз для случая, если вы хотите начать заниматься из дома.</li>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (вас попросят еще зарегистрироваться на informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, школу, класс, город. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля"; если вы участвовали в каких-либо олимпиадах по математике или программированию, укажите это. (Это не значит, что здесь будет какой-то отбор, я готов принять в курс всех желающих. Но я просто хочу заранее знать, какой у вас уже есть опыт.) </li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты разделе "О курсе".</li>\n<li>Далее:\n<ul>\n<li>Если вы — начинающий, т.е. не знаете никакой язык программирования на уровне, позволяющем вам уверенно писать простые программы, то начинайте с <a href="/material/1" onclick="window.goto(\'/material/1\')();return false;">уровня 1</a>. Там последовательно разбираются различные стороны языка программирования — начните их последовательно проходить. Вам надо будет выбрать, на каком языке программирования работать, я советую начинающим питон.</li>\n<li>Если вы какие-то программы писать умеете, но не очень уверенно, то выберите на уровнях <a href="/material/1%D0%90" onclick="window.goto(\'/material/1%D0%90\')();return false;">1А</a> или <a href="/material/1%D0%91" onclick="window.goto(\'/material/1%D0%91\')();return false;">1Б</a> первую тему, которую не очень уверенно знаете, и начинайте с нее.</li>\n<li>Если вы на выбранном вами языке программирования можете достаточно уверенно писать простые программы, то начните с темы "вещественные числа" на <a href="/material/1%D0%91" onclick="window.goto(\'/material/1%D0%91\')();return false;">уровне 1Б</a>, и после этого переходите к уровню 1В и далее. Вполне возможно, что эти задачи вам покажутся простыми, и вы их очень быстро решите, но, возможно, над некоторыми вам придется подумать, а заодно я посмотрю на ваш стиль программирования и на разного рода мелкие моменты, которые вы можете не знать, пусть даже и хорошо пишите программы. (Обратите внимание, что там не надо решать все задачи для перехода на следующие уровни.) Перед тем, как начинать решать задачи, прочитайте в разделе "О курсе" тексты "Работа с сайтом..." и "Начало работы с Free pascal" (если вы пишите на паскале). Многое вам там будет знакомо, но я уверен, что что-то найдете и новое.</li>\n<li>Если вы — уже очень сильно продолжающий, т.е. умеете уверенно писать простые задачи (и, скорее всего, вы уже участник региональных олимпиад), то напишите мне и ждите инструкций.</li>\n</ul>\n</li></ol>\n\n<h2>Для студентов и старше</h2>\n<ul>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (для этого вас попросят еще зарегистрироваться на сайте informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, где вы учитесь/работаете. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля".</li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты в разделе "О курсе" на главной странице курса.</li>\n<li>Дождитесь ответа и дальнейших инструкций от меня.\n</li>\n</ul></div>', 'title': '\nИнструкция для тех, кто здесь в первый раз (или "Что надо сделать, чтобы начать заниматься?")', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_10', 'order': 10, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>Про то, как тут заниматься</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_11', 'order': 11, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Работа с сайтом</h2>\n<p>Основное, что вы будете делать на наших занятиях — это решать задачи. Большинство задач будут требовать написания программы, которая считывает (с клавиатуры или из файла) некоторые данные, по ним вычисляет новые данные, и результат выводит на экран или сохраняет в файл.</p>\n<p>Написанную вами программу вы можете (и должны) отправить на проверку. Этот сайт предоставляет возможность автоматической проверки ваших программ — вы сразу (в течение максимум одной-двух минут) получаете результат проверки: работает ваша программа корректно или нет. Кроме того, я буду видеть все ваши попытки, которые вы отправляете на сайт, и смогу их комментировать, писать замечания и т.д., а вы сможете эти комментарии видеть и по ним улучшать свои программы.</p>\n\n<h3>Пример задачи</h3>\n<p>Зайдите на уровень 1А (внутри уровня 1). Там есть ссылка "Задачи на арифметические операции". Зайдите туда. Вы увидите список задач: "Дележ яблок - 1", "Дележ яблок - 2", и т.д., до "Разность времен". Это и есть набор задач (коротко говорят "контест"), которые вам предлагается прорешать для закрепления знаний по первой теме курса — арифметическим операциям. \n</p><p>Все названия задач — ссылки, по ним открывается собственно задача. Откройте задачу "Дележ яблок - 1". Вы видите ее условие: "N школьников делят K яблок поровну, неделящийся остаток остается в корзинке. Сколько яблок достанется каждому школьнику? Программа получает на вход числа N и K и должна вывести искомое количество яблок." Ниже идет пример: при вводе данных "3 14" программа должна вывести "4".</p>\n<p>Условие задачи четко описывает, что должна делать ваша программа: для любых значений N и K она должна вычислить и вывести ответ на задачу. В более серьезных задачах в условии всегда указываются ограничения на допустимые N и K, но в задачах для начинающих на этом сайте считается, что N и K "разумные" (в частности, помещаются в тип данных integer в паскале); в "разумность" в данном случае входит и то, что оба числа положительны.</p>\n<p>Пример нужен только для проверки того, что вы верно поняли условие, формат входных данных, и смогли проверить программу на простейшем тесте. Тем не менее, ваша программа должна работать не только на тесте из примера, но и на других допустимых тестах.</p>\n\n<h3>Написание решения</h3>\nДанная задача решается достаточно легко. Нам надо, конечно, завести две переменные, N и K, считать их с клавиатуры, и вывести неполное частное от деления K на N (обратите внимание, именно K на N, а не N на K!). Программа будет выглядеть так:\n<table>\n<tbody><tr><th>Паскаль</th><th>Питон</th></tr>\n<tr><td>\n<pre>{$mode delphi}\nvar n,k:integer;\nbegin\nread(n,k);\nwriteln(k div n);\nend.</pre>\n</td><td>\n<pre>n = int(input())\nk = int(input())\nprint(k // n)</pre>\n</td></tr></tbody></table>\n\nОбратите внимание на следующие особенности (в вашем учебнике может быть написано не так — надо делать так, как написано тут, а не в учебнике. Возможно, чего-то из описанного здесь вы не поймете — тогда просто пропускайте этот пункт). Часть из этих особенностей относятся только к паскалю, часть — к любому языку программирования.\n<ul>\n<li>(паскаль) Написано <code>{$mode delphi}</code>. Пока вы не знаете, какие разные режимы компилятора бывают, всегда пишите эту конструкцию. Потом, когда узнаете, сможете выбирать, какой режим компилятора вам нужен.</li>\n<li>(паскаль) Не используется конструкция <code>program ...;</code>. В современном программировании она не нужна вообще.</li>\n<li>(паскаль) Вся программа пишется маленькими буквами. Поскольку в Pascal все равно, использовать маленькие или заглавные буквы, то сейчас принято использовать маленькие.</li>\n<li>Мы не выводим никаких "приглашений" типа "введите N". В условии задачи четко написано, что именно наша программа должна выводить на экран, и там ничего не сказано про то, что надо выводить приглашения. Поэтому любой лишний вывод на экран будет рассмотрен как нарушение формата вывода.</li>\n<li>Нет никаких "проверок на дурака", например, нет проверки "а вдруг N=0?", или "а вдруг ввели не число?". Аналогично предыдущему, это в наших задачах не требуется. В более серьезных задачах в условии будут стоять ограничения на допустимые значения N, и никто не будет тестировать вашу программу с N, не удовлетворяющим этим ограничениям. В этой задаче считается, что N&gt;0 всегда.</li>\n<li>(паскаль) Мы не делаем <code>clrsrc;</code> в начале программы — это не требуется. И пользователь, и тестирующая система способны отличить вывод этой программы от того, что было выведено на экран раньше.</li>\n<li>Аналогично, мы не ставим в конце программы пустой <code>readln;</code> или <code>readkey;</code>, или <code>input()</code> в питоне, или <code>getch();</code> в c++ или другую задержку работы. Это тоже не требуется; информация, выведенная на экран, все равно сохраняется и ее все равно можно посмотреть.</li>\n<li>Мы посчитали и сразу вывели ответ, не сохраняя его в промежуточную переменную. Можно было сохранить:\n<pre>// паскаль\nans:=k div n;\nwriteln(ans);\n// питон\nans = k / n\nprint(ans)\n</pre>\nВ этой простой программе проще вывести сразу, но если выражение будет сложнее, то можно и сохранить.</li>\n</ul>\n<p>Сохраните эту программу в какой-нибудь файл. Запомните как имя файла, так и ту директорию (папку), куда вы сохранили файл (в free pascal она отображается в нижней части диалога сохранения файла).</p>\n\n<p>Теперь протестируйте программу. Запустите ее и повводите разные тесты.</p>\n\n<p>Введите для начала тест из примера: "3 14" и убедитесь, что она вывела 4.</p>\n\n<p>В этой задаче на каждый тест ответ однозначно определен (например, на пример из условия ответ может быть только 4). Бывают задачи, когда на каждый тест может быть несколько правильных вариантов ответа, в таких задачах в условии обычно написано "если есть несколько решений, выведите любое" или присутствует какая-нибудь подобная фраза. В таком случае ваша программа не обязана выдавать ответ, точно совпадающий с тем, что указан в примере — достаточно, чтобы он был одним из правильных. Аналогично, в дальнейшем, при тестировании вашей программы на сайте (см. ниже) по каждому тесту будет допускаться любой из правильный ответов.</p>\n\n<p>Придумайте еще несколько примеров к этой задаче. Постарайтесь, чтобы они были разнообразными: чтобы были разные N, K, и разные ответы. Например, введите "5 25" и проверьте, что ответ 5. Придумайте сами еще несколько примеров. Важно: прежде чем вводить каждый пример в программу, сначала в уме вычислите ответ, и только потом запустите программу и проверьте, что она вывела именно то, что вы и ожидали. Старайтесь всегда знать ответ на свой пример ДО запуска программы.</p>\n\n<p>Если программа написана правильно, то она правильно отработает на ваших тестах. Тогда ее можно сдавать на проверку на сайт (говорят "сдать/послать на проверку в тестирующую систему" или просто "сдать в систему").</p>\n\n<h3>Отправка на проверку</h3>\n<p>Вернитесь на страницу с условием задачи. Ниже условия есть раздел "Отправить решение" (он есть только если вы зарегистрированы на сайте и залогинены). Нажмите кнопку "Выбор файла" и выберите файл с вашим решением. Убедитесь, что вы выбираете файл .pas/.py (с исходным кодом), а не .o или .exe (уже скомпилированную программу)! Убедитесь, что в выпадающем списке рядом выбран правильный язык (в частности, если вы пишете на PascalABC, то надо его выбрать вручную), и нажмите кнопку "Отправить".</p>\n\n<p>Ваша программа отсылается на сервер, который ее компилирует и проверяет путем запуска на нескольких тестовых примерах. Эти тестовые примеры вам неизвестны, но в каждой конкретной задаче всегда одинаковы (т.е. если вы будете посылать несколько раз, то каждый раз тестовые примеры будут одни и те же). В данном случае тестирующая система запустит вашу программу несколько раз, каждый раз сымитирует ввод с клавиатуры значений N и K из очередного тестового примера, и проверит, что ваша программа выводит правильный ответ.</p>\n\n<p>Под формой для отправки находится таблица, перечисляющая все ваши попытки (также говорят "посылки") по этой задаче. Изначально там, конечно, никакой таблицу нет. После того, как вы отправили ваше решение, оно появится в этой таблице (через некоторое время — примерно через минуту). В колонке "Статус" отображается результат тестирования вашей программы. Сразу после того, как вы отправили программу, вы можете увидеть там "Компилирование" или "Тестирование", что обозначает, что ваша задача тестируется. Таблица обновляется автоматически, дождитесь, пока в колонке "Статус" не появится окончательный результат проверки.</p>\n\n<p>Основные результаты проверки, которые вы можете увидеть:\n</p><ul>\n<li>OK — ваша программа правильно прошла все тесты, ура!</li>\n<li>Ошибка компиляции — ваша программа не скомпилировалась</li>\n<li>Частичное решение — ваша программа прошла не все тесты (может быть, даже не прошла ни одного). Значит, ваша программа работает не совсем верно (или совсем неверно), постарайтесь найти ошибки.</li>\n<li>Бывают еще статусы "Зачтено" и "Проигнорировано", но они не ставятся автоматически, поэтому про них ниже.</li>\n</ul>\n\n<p>Справа в таблице есть колонка ссылок "Подробнее". Если вы нажмете на такую ссылку, то откроется окошко с подробной информацией о посылке. Во-первых, там будет полный код вашей программы, поэтому вы всегда сможете проверить, отправили ли вы именно то, что хотели; если вы решали задачи из школы, то придя домой, вы сможете посмотреть коды всех ваших программ, и т.д.</p>\n\n<p>Во-вторых, в открывшемся окне есть закладка "Протокол", где отображается протокол тестирования вашей программы. Если ваша программа не скомпилировалась (статус "Ошибка компиляции"), то там будет протокол компиляции: будут указаны ошибки, найденные в программе. Если же ваша программа скомпилировалась, то там будет протокол тестирования: по каждому тесту будет приведена информация о том, прошел этот тест (OK) или нет. В задаче "Дележ яблок - 1" всего 6 тестов, поэтому в таблице должно быть 6 строк. Если ваша посылка получила статус "ОК", то все 6 строк будут ОК; иначе какие-то тесты будут иметь другой статус (из названия статуса обычно понятно, что это значит).</p>\n\n<p>Таким образом, вы можете видеть, какие (по номерам) тесты у вас пройдены, а какие нет. Но вы не можете узнать, какой именно это тест (в нашей задаче — какие именно там N и K). Это сделано для того, чтобы вы учились сами тестировать свое решение и сами находить примеры, на которых оно не работает, а не рассматривали тестирующую систему как волшебный ящик, выдающий вам примеры, на которых ваша программа не работает. Поэтому если ваша программа не работает, то ищите сами примеры, на которых она ошибается. Если вы не можете их найти, то напишите мне, попробуем разобраться вместе. В крайнем случае у меня есть доступ ко всем тестовым данным, поэтому если я не смогу найти ошибку просто посмотрев код вашей программы, я смогу посмотреть, что там за тест, на котором ваша программа не работает.</p>\n\n<p>Но вообще, старайтесь проверять задачу до того, как ее отправлять в систему (и этому мы будем отдельно учиться). Рассматривайте неудачные попытки как конкретную неудачу, и старайтесь делать как можно меньше неудачных попыток. Вообще, на многих олимпиадах у вас будет только одна возможность сдать задачу, и если она не пройдет какие-то тесты, то возможности исправиться у вас уже не будет!</p>\n\n<h3>Засчитывание и игнорирование решений, комментарии к решению</h3>\n<p>Я буду просматривать все ваши решения: при наличии времени — все вообще посылки, в том числе и неуспешные, если же у меня времени будет мало, а посылок много — то только посылки со статусом ОК.</p>\n\n<p>В успешных посылках я буду просматривать ваш код на предмет следующего:\n</p><ul>\n<li>Во-первых, я буду смотреть, нет ли в коде каких-то ошибок, которые смогли миновать тесты тестирующей системы. Бывает так, что в коде какая-нибудь совсем неожиданная ошибка, и тестирующая система ее может пропустить (хотя тесты в тестирующей системе обычно подготовлены хорошо, и как правило все ошибки в коде проявляются при тестировании) — я буду смотреть, нет ли у вас таких ошибок.</li>\n<li>Также я буду смотреть, нет ли у меня каких-либо замечаний по коду, пусть и не являющихся ошибками, но являющихся общими пожеланиями. Например, может быть, что-то можно сделать проще, или что-то надо сделать по-другому, и т.д.</li>\n</ul>\n<p>Если к вашей программе у меня будут какие-либо замечания или комментарии, я их напишу, и вы сможете их увидеть. Во-первых, они появятся на сайте в правой колонке в разделе "Комментарии"; во-вторых, в каждой посылке, в окошке, открываемом по ссылке "подробнее", есть специальная закладка "комментарии". Соответственно, как только я прокомментирую вашу посылку, вы увидите комментарий. Обычно я стараюсь просматривать все посылки в течение суток, хотя иногда бывают и бОльшие задержки, до нескольких дней.</p>\n\n<p>Помимо собственно написания комментария, я по каждой вашей посылке принимаю решение — либо я принимаю это решение (пусть и с небольшими замечаниями), либо я потребую от вас это решение переписать с учетом моих замечаний. В первом случае я меняю статус посылки на "Зачтено" (т.е. вы будете видеть именно "Зачтено" вместо "ОК" в таблице с вашими посылками), во втором случае я меняю статус на "Проигнорировано". Соответственно, в первом случае просто примите к сведению замечания, которые я написал (а бывает так, что я и никаких замечаний не пишу), хотя можете и переписать решение, если хотите. Во втором случае обязательно перепишите решение с учетом этих замечаний.</p>\n\n<p>В сводной таблице решения "ОК" (т.е. которые я еще не посмотрел) отображаются с желтым фоном, решения "Зачтено" (т.е. которые я принял) — с зеленым фоном, проигнорированные решения не учитываются в общем количестве решенных вами задач, просто соответствующая задача в сводной таблице отображаются с красным фоном.</p>\n\n<p>Я буду стараться также писать комментарии по вашим неуспешным посылкам — указывать на ошибку или советовать, где ее поискать, и т.п. Я, конечно, не всегда буду писать их сразу как увижу вашу попытку, и не всегда буду полностью сообщать о найденной ошибке — ведь обычно вам полезно будет все-таки найти ошибку более-менее самостоятельно, я постараюсь вам давать наводящие советы (но, конечно, это зависит от ошибки). В общем, если вы пытались сделать задачу, но она не проходит тесты, то возможно в течение суток я вам напишу совет в комментарии к вашей посылке.</p>\n\n<p>Иногда я могу не успевать просмотреть все ваши неуспешные посылки, или не пишу комментарий по каким-то еще причинам. В таком случае, если вы хотите получить комментарий по какой-нибудь из них, просто напишите мне.</p>\n\n<h3>Хорошие решения</h3>\n<p>После того, как я засчитываю вам решение (ставлю статус "Зачтено"), у вас появляется доступ к "хорошим решения" по соответствующей задаче — на странице задачи, над формой для отправки решения, появляется ссылка на "хорошие решения".</p>\n\n<p>"Хорошие решения" — это несколько (до 5 штук) решений, которые сдавали другие ученики курса, и которые, на мой взгляд, написаны достаточно хорошо и могут считаться образцом решения этой задачи. Смотрите их, особенно по тем задачам, где я вам зачел решение с какими-либо комментариями (но вообще полезно смотреть "хорошие решения" и по всем зачтенным задачам вообще). Сравните "хорошие решения" с вашим решением, возможно, вы увидите, что что-то можно сделать проще, или вообще найдете другие полезные идеи.</p>\n\n<p>Я стараюсь в "хороших решениях" по возможности поддерживать баланс разных языков (т.е. как правило среди "хороших решений" есть решения на разных языках). Но смотрите и решения на вашем языке, и на других языках, даже которых вы не знаете — как правило, понять алгоритм можно даже на языках, которых вы вообще не знаете. С другой стороны, для вашего языка в "хороших решениях" вы можете найти и какие-нибудь интересные чисто языковые тонкости и приёмы.</p>\n\n<p>Кроме того, нередко в "хороших решениях" я показываю разные подходы к решению задачи, нередко там встречаются вообще разные алгоритмы. Если вы видите, что "хорошее решение" сильно отличается от вашего, полезно разобраться, как оно вообще работает.</p>\n\n<p>При этом понимайте, что на самом деле по многим задачам на сайте сданы уже сотни решений, и на самом деле "хороших" из них десятки, если не больше. Вы видите максимум пять из них, просто потому, что смотреть десятки более-менее одинаковых решений смысла нет. Вы увидите какие-то пять из них, которым повезло, что я их отметил как "хорошие", но это "везение" часто определяется случайностью, ну и указанными выше принципами про разнообразие языков и подходов. То есть вы видите не пять самых лучших решений, а пять случайных из числа достаточно хороших.</p>\n\n<p>Поэтому не надо считать, что если ваше личное решение не попало в "хорошие", то оно хуже "хороших". Оно может быть столь же хорошо, или даже чем-то лучше "хороших", просто ему не повезло. Если вы видите, что "хорошие" решения написаны столь же чисто и понятно, как ваше — значит, ваше тоже могло бы быть "хорошим". И наоборот, если ваше решение попало в "хорошие", это не обозначает, что оно намного лучше всех остальных :) По той же причине авторы "хороших решений" не подписаны.</p>\n\n<p>С другой стороны, если вы посмотрели "хорошие решения", и считаете, что ваше решение заметно лучше всех "хороших", напишите мне, может быть, я и ваше решение добавлю в "хорошие". (Хотя обычно я назначаю решение "хорошим" одновременно с тем, как я его засчитываю, поэтому если ваше решение действительно заметно лучше других хороших, как правило, я его сделаю "хорошим" еще до того, как вы сможете посмотреть "хорошие решения" :) .)</p>\n\n<h3>Сводная таблица</h3>\n<p>Все ваши посылки по нашим задачам отображаются в сводных таблицах, ссылки на которые есть в меню сайта. А именно, каждая клетка в основной части этой таблицы указывает статистику посылок от конкретного школьника по конкретной задаче. Если в клетке стоит знак "+", значит, задача сдана успешно ("ОК" или "Зачтено"), если "-" — значит, человек пытался сдавать задачу, но прошел не все тесты. Число после значка (если оно есть) указывает количество неуспешных попыток (если они есть). Например:\n</p><ul>\n<li>Пустая клетка обозначает, что задача не сдавалась вообще;</li>\n<li>"+" обозначает, что задача сдана с первой попытки;</li>\n<li>обозначения "-" не бывает;</li>\n<li>"+2" обозначает, что задача сдана с третьей попытки (две неуспешные попытки и потом успешная);</li>\n<li>"-2" обозначает, что по задаче были только две неуспешные попытки и всё.</li>\n</ul><p></p>\n\n<p>Фон ячейки обозначает статус задачи относительно вердиктов "Зачтено" и "Проигнорировано":\n</p><ul>\n<li>Желтый фон — статус "ОК", т.е. я еще не смотрел эту задачу;</li>\n<li>Зеленый фон — статус "Зачтено";</li>\n<li>Красный фон — статус "Проигнорировано", при этом сама проигнорированная попытка считается неуспешной.</li>\n</ul><p></p>\n\n<p>В последних двух колонках таблицы указывается общее количество решенных задач и общее количество неуспешных ("штрафных") попыток (учитываются только те задачи, по которым в итоге была получена правильная программа, проигнорированные попытки не учитываются). Таблица отсортирована по общему количеству решенных задач, а при равном числе решенных задач — по количеству штрафных попыток.</p>\n\n<p>Еще у таблицы есть следующая особенность: в ней появляются только школьники, которые удовлетворяют сразу двум требованиям: во-первых, я их должен активировать их учетную запись, во-вторых, у школьника должна быть хотя бы одна попытка сдачи задачи. Поэтому если вы еще ничего не пытались сдавать, не удивляйтесь, что вас нет в таблице. Если же вы уже пытались что-то сдавать, а в таблице вас нет, то напишите мне — возможно, я забыл вас активировать.</p>\n\n<p>Аналогично, наборы задач (контесты) появляются в сводной таблице только когда хотя бы кто-нибудь отправит какое-нибудь решение по какой-нибудь задаче этого контеста.</p>\n\n<h3>Терминология</h3>\nВыше я уже ввел некоторую специфическую терминологию, которая используется в олимпиадном программировании, на всякий случай повторю ее тут:\n<ul>\n<li>Контест — любой набор задач, каким-то образом сгруппированный и выделенный от остальных. В пределах контеста задачи обычно занумерованы (1, 2, 3, ... или A, B, C, ... и т.п.) Это может быть отдельный тур олимпиады, или набор задач к какому-нибудь занятию или на какую-нибудь тему, и т.д. В рамках наших занятий "контестом" мы называем набор задач, доступных по каждой отдельной ссылке с главной страницы курса; слева от таких ссылок обычно значок, похожий на изображение клавиатуры. Например, "Задачи на арифметические операции" — это отдельный контест.</li>\n<li>Посылка (синонимы: попытка, сабмит) — отдельная ваша попытка сдать задачу в тестирующую систему; также программа, которую вы сдали в этой попытке.</li>\n<li>Штрафная попытка (обычно в контексте сводного рейтинга) — попытка, которая не прошла все тесты.</li>\n<li>Тест — это отдельный тестовый пример, подготовленный авторами задачи, чтобы на нем проверять ваши программы. Обычно по каждой задаче автор задачи подготавливает от 5 до 60 тестов, и программы, которые вы сдаете на проверку, проверяются по очереди на всех этих тестах. Чтобы попытка считалась успешной, надо, чтобы программа прошла все тесты, т.е. на все тесты дала правильный ответ. (На других олимпиадах могут быть другие правила.)</li>\n</ul></div>', 'title': '\nРабота с сайтом, отправка решений и просмотр моих комментариев', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_12', 'order': 12, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_13', 'order': 13, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><p>Я буду просматривать, по возможности, все ваши решения, и комментировать их тем или иным образом. Тем решениям, которые я просмотрю, я буду присваивать новый статус: \n</p><ul>\n<li>"Зачтено" — задача написана более-менее нормально, ура. На страничке просмотра кода вашей посылки (по ссылке "Подробнее") под кодом вы можете увидеть мои комментарии. Если там комментария нет, значит, задача решена весьма хорошо. Если есть комментарий, то он обычно указывает, что можно улучшить.</li>\n<li>"Проигнорировано" — мне что-то весьма не понравилось в вашем коде. На страничке просмотра кода вашей посылки (по ссылке "Подробнее") под кодом вы увидите мои комментарии, объясняющие, что именно мне не понравилось. Исправьте это и пересдайте решение.</li></ul><p></p>\n\n<p>Если вы не понимаете комментарий, спросите, я объясню подробнее.</p>\n\n<p>Посылки со статусом "Зачтено" отмечаются в таблице зеленым.</p>\n\n<p>Посылки со статусом "Проигнорировано" отмечаются в таблице синим.</p>\n\n<p>Не относитесь к "игнорам" как к издевательству над вами. Я постараюсь игнорить только те программы, которые можно довольно существенно улучшить (например, существенно сократив количество кода). Помните, что ваша цель — не только написать программу, которая пройдет все тесты, но и вообще научиться программировать. Фактически, "Проигнорировано" я ставлю тогда, когда считаю, что комментарий, который я пишу к вашей посылке, настолько важен, что вам обязательно его стоит прочитать; "игнор" — это такой способ обратить ваше внимание на комментарий.</p>\n\n<p>То, что вы сумели, пусть и не самым оптимальным образом, написать программу и сдать ее — это очень круто, но еще круче будет, если вы узнаете и поймете, как то же самое можно сделать еще проще. Считайте, что в большинстве задач написать программу, чтобы она прошла все тесты — это, грубо говоря, 70% успеха, но получить по ней "Зачтено" — это оставшиеся 30%.</p>\n\n<p>Все комментарии (в том числе и к зачтенным посылкам, и даже к неуспешным) вы также можете просмотреть в правой колонка не сайте.</p></div>', 'title': '\nПро засчитывание и игнорирование решений', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_14', 'order': 14, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_15', 'order': 15, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>О системе уровней</h1>\n<p>Весь материал в нашем курсе распределен по уровням, от самого простого до очень сложного. Уровни нумеруются последовательными числами (1, 2, 3, ...), в пределах уровня также введены подуровни, нумеруемые буквами (в уровне 1 — подуровни 1А, 1Б, 1В и 1Г, и т.п.)</p>\n\n<p>Большинство уровней имееют следующую структуру: подуровни А и Б содержат новый материал, а подуровни В и Г (последний есть не всегда) — дополнительные задачи повышенной сложности на закрепление этого материала. Иногда в уровнях В и Г могут быть особенно сложные задачи на материал существенно более ранних уровней (например, в уровне 5В может оказаться сложная задача на материал уровня 3). Иногда в уровнях В и Г выделены контесты по отдельным темам, иногда дополнительные задачи в этих уровнях идут в случайном порядке.</p>\n\n<p>Я предполагаю, что вы будете проходить подуровни последовательно, переходя к новому подуровню как правило тогда, когда вы "прошли" предыдущий подуровень. Исключение: если вы прошли какую-то тему в подуровне А или Б, и видите в подуровне В или Г контест продвинутых задач на эту же тему, то можете его порешать.</p>\n\n<p>Требования к "прохождению" каждого подуровня указаны под его заголовком. Как правило, для подуровней А и Б требуется прорешать все задачи, для уровней В и Г требуется прорешать часть (половину или треть) задач. Тем не менее это не обозначает, что оставшиеся задачи уровней В и Г решать не надо. Я рекомендую, если вы прорешали необходимый минимум задач уровней В и Г, переходить на следующий уровень, чтобы побыстрее приступить к изучению новой теории. Но при этом возвращайтесь регулярно к недорешенным задачам предыдущих уровней. Примерно можно оценивать так: когда вы переходите на уровень 4А, у вас должна быть решена половина задач уровня 3В, 3/4 задач уровня 2В и примерно 7/8 задач уровней 1В и 1Г. Аналогично, когда вы переходите на уровень 5А, у вас должна быть решена половина задач уровня 4В, а также 3/4 задач уровня 3В, 7/8 задач уровня 2В и почти все (за редким исключением особенно неприятных задач) задачи уровней 1В и 1Г. Аналогично для других уровней.</p>\n\n<p>Обратите внимание, что в уровнях В и Г задачи далеко не всегда упорядочены по сложности. Поэтому решайте их в том порядке, в каком вам удобнее!</p>\n\n</div>', 'title': '\nПро систему уровней', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_16', 'order': 16, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_17', 'order': 17, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про очные занятия для школьников</h1>\n<h2>Общая информация</h2>\n\n<p>Для школьников в течение учебного года проходят очные занятия — в лицее 40 по средам и в ННГУ им. Лобачевского по воскресеньям. На занятия в лицее 40 можно ходить только ученикам лицея 40, на занятия в ННГУ можно ходить вообще всем желающим школьникам (школьникам из Нижнего Новгорода и области, в том числе ученикам лицея 40, а также школьникам из других регионов, если вы занимаетесь у меня на курсе и по каким-то причинам оказались в Нижнем).</p>\n\n<p>На очные занятия можно приходить <b>только тем, кто решил хотя бы одну задачу в курсе</b>. Исключение — специальные занятия, про которые на сайте явно написано, что можно приходить новичкам (как правило, это второе занятие каждого семестра). Если вы опоздали на такое занятие, вы должны начать заниматься заочно; после того, как решите хотя бы одну задачу, можете приходить на очные занятия.</p>\n\n<p>В ННГУ занятия проходят <b>по воскресеньям, в 2 корпусе (пр. Гагарина, 23, к. 2), в аудиториях 110 и 114</b>. Я обычно бываю в ННГУ с 14.00 до 17.00. В это время параллельно проходят два занятия: с 14.00 до 17.00 для старших уровней (у кого уровень 3 и выше, также можно по желанию тем, у кого уровень 2В), и с 15.00 до 16.30 для начинающих. При этом начинающие тоже могут приходить раньше и оставаться до 17.00, просто до 15.00 до после 16.30 я буду больше времени уделять старшим.\n\nНа занятия в ННГУ действует обязательная запись, см. ниже. Кроме того, <b>берите с собой паспорт или свидетельство о рождении</b>, его может спросить охрана (хотя вроде никогда не спрашивают, но теоретически могут спросить). Если охранники вас не пускают, звоните мне.</p>\n\n<p>В лицее 40 занятия проходят <b>по средам в КЦ</b>. Я обычно бываю в лицее с 14.30 до 17.00, иногда чуть позже. Аналогично, можно приходить и уходить в любое время, но см. ниже про нехватку компьютеров. Если вы хотите получить зачем за спецкурс, смотрите отдельные <a href="/material/in20946" onclick="window.goto(\'/material/in20946\')();return false;">правила</a>.</p>\n\n<h2>Формат занятий</h2>\n\n<p>Очные занятия у нас проходят полностью в формате практики. У нас нет каких-либо общих лекций, я не рассказываю на занятиях новую теорию «для всех» (за исключением отдельных, специально анонсированных, занятий). Вы приходите, садитесь за компьютер, заходите на алгопрог, и продолжаете заниматься с того места, где остановились в прошлый раз — решаете задачи и/или читаете теорию. Самостоятельно. Я время от времени прохожу по классам, смотрю, кто что решает, могу что-то помогать, советовать, объяснять, но в основном вы занимаетесь самостоятельно.</p>\n\n<p>То есть вы занимаетесь так же, как если бы вы занимались из дома. Единственное отличие очных занятий от занятий из дома состоит в том, что на очных занятиях присутствую я, и вы всегда можете меня спросить о чем-либо, и как правило я достаточно быстро отвечу. (Правда, учтите, что на очных занятиях помимо вас обычно еще присутствует пара десятков школьников, у которых тоже есть свои вопросы :) ).</p>\n\n<p>Если вы на занятии добрались до новой теории — скажите мне. Возможно, я вам ее расскажу. Но, возможно, я отправлю вас читать теорию на сайте.</p>\n\n<p>В частности, поэтому расписание занятий у нас нестрогое. Вы можете опоздать на занятие, можете уйти раньше, можете пропустить часть занятий, можете, наоборот, ходить на два занятия — всё на ваше усмотрение. Конечно, чем больше вы занимаетесь, тем лучше у вас, наверное, будут результаты, но я не требую какого-то строгого посещения занятий.</p>\n\n<p><b>Занятия в ННГУ для старших уровней</b> немного отличаются по формату: мы решаем разные старые контесты, а потом обсуждаем задачи.</p>\n\n<h2>Про регистрацию на занятия и компьютеры</h2>\n\n<p>Как правило, особенно в первой половине учебного года, и особенно в ННГУ, на занятия приходят больше школьников, чем есть компьютеров. Поэтому на занятия в ННГУ надо регистрироваться, чтобы всем точно хватило компьютеров. На сайте есть <a href="/checkins">специальный раздел</a>, где надо регистрироваться на очередное занятие, там же есть подробные правила. Регистрироваться надо каждую неделю заново.</p>\n\n<p>На занятия в лицей 40 регистрации нет. Занятие в лицее 40 официально начинается в 14.30; как правило, к этому моменту свободные компьютеры еще есть. Если вы опоздали, не обижайтесь, если вам не хватило компьютеров. С другой стороны, как правило, уже в районе 15.30 компьютеры начинают освобождаться (далеко не все школьники сидят до конца занятия), поэтому если вам не хватило компьютера, можете просто подождать (например, поделав домашние задания по другим предметам).</p>\n\n<p>Универсальный способ избежать пробему нехватки компьютеров — приносить свой ноутбук. Но <a href="/material/module-16024_1" onclick="window.goto(\'/material/module-16024_1\')();return false;">см. отдельные правила про это</a>.</p></div>', 'title': '\nПро очные занятия для школьников', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_18', 'order': 18, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>Про оплату</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'pay', 'order': 19, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix">\n<h1>Стоимость и порядок оплаты занятий</h1>\n\n<h2>Для школьников из Нижегородской области</h2>\n<p>Для нижегородских школьников <b>занятия бесплатны</b>, и в обозримом будущем останутся бесплатными (т.к. мне проведение занятий оплачивает лицей 40 и ННГУ).</p>\n\n<p>Формально вы считаетесь нижегородским школьников, если учитесь в школе, находящейся в Нижегородской области, и имеете теоретическую возможность, пройдя школьный и муниципальный этапы, участвовать в Нижегородской областной олимпиаде школьников по информатике.</p>\n\n<p>Если у меня возникнут подозрения, являетесь ли вы нижегородским школьников или нет, я могу попросить вас как-то это подтвердить.</p>\n\n<p>Прочитайте, пожалуйста, отдельный текст <a href="/material/module-20927_21" onclick="window.goto(\'/material/module-20927_21\')();return false;">про бесплатность занятий для нижегородских школьников</a>.</p>\n\n<p>Вы также можете поддержать занятия, переведя мне любую сумму денег на карту Тинькофф-банка номер 5536 9137 7443 1460. Например, для перевода вы можете воспользоваться <a href="https://www.tinkoff.ru/cardtocard/">сервисом перевода с карты на карту Тинькофф-банка</a>, там по идее должно быть без комиссии, или любым другим сервисом по переводу денег с карты на карту.</p>\n\n<p><b>При этом, пожалуйста, никак не указывайте, кто именно переводит деньги, и не сообщайте мне, что вы их перевели — я не хочу знать, кто из школьников мне переводит деньги, а кто нет.</b></p>\n\n<h2>Для всех остальных</h2>\n\n<p>Занятия для всех остальных (не-нижегородских школьников, а также не-школьников) платные. Точнее, собственно все материалы в курсе бесплатные. Они же есть на сайте informatics.mccme.ru в <a href="http://informatics.mccme.ru/course/view.php?id=1135">соответствующем разделе</a>, вы можете бесплатно заниматься там. Я беру деньги за то, что я добавлю вас в сводные таблицы, буду просматривать и комментировать ваши решения, отвечать на ваши вопросы (заочно) и т.д.</p>\n\n<p>Стоимость занятий определяется следующим образом:</p>\n\n<table class="table table-striped table-condensed table-hover">\n<tbody><tr><td>Младше 9 класса</td><td>500 рублей в месяц</td></tr>\n<tr><td>9 класс</td><td>1000 рублей в месяц</td></tr>\n<tr><td>10 класс</td><td>1500 рублей в месяц</td></tr>\n<tr><td>11 класс</td><td>1500 рублей в месяц</td></tr>\n<tr><td>Не школьники (студенты и старше)</td><td>1500 рублей в месяц</td></tr>\n</tbody></table>\n\n<p>Для новых учащихся первая неделя занятий в курсе бесплатна.</p>\n\n<h3>Дополнительные правила</h3>\n<p>Стоимость занятий для школьников фиксируется на тот момент, когда я активировал вам аккаунт в конкретном учебном году, и до конца учебного года; если в дальнейшем я буду поднимать стоимость занятий, то вы продолжите заниматься по старой цене (до конца учебного года, а если будете заниматься успешно, то и на следующий год и т.д.).</p>\n\n<p>Для студентов стоимость занятий фиксируется на момент первой оплаты и пожизненно.</p>\n\n<p>Для нижегородских школьников, занимавшихся в моем курсе более-менее успешно (условно говоря, набравших рейтинг 200 или выше, но может обсуждаться индивидуально), действует пожизненная скидка 50% на занятия после того, как они закончат школу.</p>\n\n<p>Границей учебного года (для определения "успешно занимающихся школьников", а также для "перевода" в следующий класс или в статус студентов) считается 1 июля.</p>\n\n<h3>Подтверждение</h3>\n\n<p>Если вы — не-нижегородский школьник младше 11 класса (т.е. стоимость занятий для вас ниже, чем для студентов), то вам надо подвердить это. Проще всего — прислать мне ссылку на какую-нибудь официальную страничку в интернете, где указаны ваши имя, фамилия, класс и школа. Например, это могут быть результаты какой-нибудь олимпиады, конкурса или т.п.; это может быть какая-нибудь новость на сайте вашей школы и т.д. Возможно, я еще попрошу ссылку на ваш профиль в социальных сетях. Альтернативный вариант для российских школьников — вы можете взять в школе справку о том, что вы учитесь, написать на ней ваш логин на алгопроге и прислать мне фотографию. Возможны и другие варианты подтверждения — напишите мне, как вы можете подтвердить ваш класс.</p>\n\n<p>Если вы не можете подтвердить свое право на сниженную стоимость занятий, вы можете заниматься по студенческой стоимости.</p>\n\n<h3>Скидки для успешных школьников</h3>\n\n<p>Для школьников существует дополнительная акция: если вы успешно занимались в курсе, и остаетесь школьником на следующий год, то на следующий год для вас сохраняется та же стоимость обучения, которая была и в этом году. Школьник считается успешно занимавшимся, если за год он решил минимум 70 задач, не считая задач уровней 1А и 1Б.</p>\n\n<p>Например, если 8-классник успешно занимался в курсе в течение года, то когда он перейдет в 9 класс, он продолжит заниматься по той же цене. Если он и в 9 классе будет успешно заниматься, то и в 10 классе он будет заниматься по той же цене, и т.д. Если, к примеру, в 10 классе он не будет успешно заниматься, то в 11 классе стоимость занятий для него сбросится на ту стоимость, которая будет установлена для 11 классов в соответствующем году.</p>\n\n<h2>Оплата</h2>\n<p>\nОплатить занятия можно картой <a href="/payment" onclick="window.goto(\'/payment\')();return false;">на сайте</a>.</p>\n\n<h2>Возможен ли возврат денег?</h2>\n<p>Стоимость не зависит от того, насколько вы активны в курсе (если вы решаете много, то я буду на вас тратить больше времени, чем если вы решаете мало, а вы платите одну и ту же сумму). Поэтому довольно странно возвращать деньги, если вы не делали ничего. Поэтому политика такая:</p>\n<ul>\n<li>Если вы по объективным непредвиденным причинам не могли заниматься в курсе более 5 дней подряд (сломали руку и т.п.), то я вам верну деньги за весь период, когда вы не могли заниматься. Предсказуемые вещи типа поездок, сессии и т.п. сюда не считаются.</li>\n<li>Если вы по каким бы то ни было причинам не занимались более 10 дней подряд, то я вам верну половину денег за этот период.</li>\n<li>Если вы заранее предупреждаете меня о том, что не сможете заниматься более 10 дней подряд, то я могу вернуть вам деньги за этот период.</li>\n<li>Конечно, если я по каким-то причинам не мог проверять ваши решения и отвечать на ваши письма в течение более чем 5 дней подряд, то я вам верну деньги за весь этот период.</li>\n</ul>\n</div>', 'title': 'Стоимость и порядок оплаты занятий', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_20', 'order': 20, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div><a href="/payment" onclick="window.goto(\'/payment\')();return false;">Оплатить занятия</a></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_21', 'order': 21, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h3>Занятия и правда бесплатные?</h3>\n<p>Да, занятия для школьников из Нижегородской области бесплатные. (Для студентов и всех остальных занятия платные, можете не читать этот текст.) </p>\n\n<h3>Но есть какие-то требования или условия?</h3>\n<p>Я, естественно, хочу от вас чего-то попросить за то, что я с вами занимаюсь. А именно, если эти занятия вам действительно полезны, и вы собираетесь применять полученные знания на какой-нибудь олимпиаде, конкурсе или подобном мероприятии, то я прошу вас указывать меня как вашего учителя, или преподавателя кружка и т.п. Особенно это касается, конечно, ситуации, если вы будете участвовать в олимпиадах высокого уровня (ну, начиная с городской/областной).</p>\n\n<h3>Но ведь я занимаюсь и где-то еще...</h3>\n<p>Конечно. Я поэтому прошу вас сначала понять, насколько этот курс вам полезен по сравнению с другими занятиями. Если подавляющую часть своих знаний вы получили где-то еще (на уроках в школе, на другом кружке или спецкурсе, от родителей и т.п.), и ваш результат на олимпиаде будет в первую очередь результатом других занятий — то, конечно, меня не надо указывать. Если вы получали важные знания как здесь, так и на других занятиях — значит, укажите и меня, и другого преподавателя. На многих олимпиадах можно указать нескольких преподавателей, или можно отдельно указать школьного учителя и преподавателя кружка, и т.п. Если же вы все знания получили только здесь, а другие занятия вам практически не помогли — я буду благодарен, если вы укажете только меня.</p>\n\n<h3>Но школа будет против указывать кого-то постороннего...</h3>\n<p>Попробуйте объяснить вашему учителю или завучу ситуацию. Объясните, что ваши результаты будут во многом определяться именно тем, что вы занимались на этом курсе (а если это не так, и вам эти занятия не помогли, — то, см. предыдущий вопрос, и не надо меня указывать); что если бы вы здесь не занимались, то ваш результат был бы хуже. Может быть, попросите ваших родителей помочь объяснить. В крайнем случае напишите мне, я могу связаться с некоторыми школами города. Или дайте учителю или завучу мой телефон, пусть позвонят.</p>\n\n<h3>Но заявку подает школа, я не могу на нее повлиять...</h3>\n<p>На многих олимпиадах на регистрации перед началом олимпиады вы можете проверить, кто у вас указан как учитель, и исправить. Кроме того, если вы прошли на олимпиаду сравнительно высокого уровня, то можете заранее подойти к вашему учителю или завучу и попросить указать меня в заявке на следующую олимпиаду.</p>\n\n<h3>А как вас указывать?</h3>\nВ большинстве случаев достаточно указать фамилию, имя и отчество — Калинин Петр Андреевич. Если это какой-то очень официальный текст (титульный лист какого-нибудь доклада и т.п.), то можете добавить «к.ф.-м.н.» (что значит кандидат физико-математических наук), но лучше сначала уточните у кого-нибудь или у меня. Если надо указать должность и место работы, пишите «старший разработчик, Яндекс». Если надо указать мой телефон, он есть на главной страничке курса. Если надо что-то еще, то свяжитесь со мной.\n\n<h3>А еще?</h3>\n<p>Вторая вещь, о которой я вас попрошу — если вам эти занятия оказались полезными, и у вас есть друзья или знакомые, которые являются достаточно умными школьниками, хорошо знают математику, участвуют в олимпиадах, или просто интересуются программированием — расскажите им про эти занятия.</p>\n</div>', 'title': '\nО бесплатности занятий для нижегородских школьников', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_22', 'order': 22, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>И еще немного...</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_23', 'order': 23, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Для учителей и родителей</h2>\n<p>Я про это уже написал в FAQ, но на всякий случай повторю здесь. Я рассматриваю занятия ваших детей здесь как добровольные, и не собираюсь от них требовать чего-либо, заставлять и т.д. Если школьник не хочет заниматься, или не может себя заставить — я не буду от него ничего требовать. У меня банально нет никакого канала влияния на него.</p>\n\n<p>Но вы можете влиять на школьника, поэтому, если вы хотите, чтобы от занятий был какой-то результат, то следите за тем, как ваш школьник занимается. На главной странице курса есть "сводная таблица", там можно отслеживать прогресс каждого школьника. Школьник также может показать вам, какие задачи он пытался сдавать, каков был результат проверки и т.д. На главной страничке курса есть также "Таблица по неделям кто что решал", в ней указывается, кто достиг какого уровня, а также по неделям кто сколько задач решил. Цвет ячейки в "таблице уровней" обозначает, насколько хороший результат показал школьник на очередной неделе: ярко-зеленый — очень хорошо, светло-зеленый — средненько, белый — вообще ничего даже не пытался. (Таблица обновляется вручную.) Наконец, вы всегда можете связаться со мной.</p>\n\n<p>Отдельное обращение к учителям: часто бывает так, что сильным школьникам на школьных уроках информатики просто скучно. Если ваш школьник занимается по этому курсу, разрешите ему во время урока решать задачи, читать теорию этого курса! И, конечно, если у вас есть сильные ученики — расскажите им об этом курсе!</p>\n\n<p>И еще одно замечание. Пожалуйста, прочитайте раздел <a href="/material/module-20927_21" onclick="window.goto(\'/material/module-20927_21\')();return false;">"О бесплатности занятий"</a>. А именно, если ваши школьники благодаря моим занятиям будут достигать хороших результатов, то постарайтесь сделать так, чтобы я был указан их учителем/преподавателем на тех олимпиадах и подобных мероприятиях, где они будут применять полученные здесь знания.</p></div>', 'title': 'Для учителей и родителей', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_24', 'order': 24, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_25', 'order': 25, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Про самостоятельность</h2>\n\n<p>Отдельно хочу вас написать про вашу самостоятельность. Я ожидаю, что при работе в курсе (независимо от того, работаете вы в заочном курсе, на занятиях в ННГУ или в лицее 40) вы будете проявлять способность к достаточно самостоятельной работе. В заочном курсе самостоятельность подразумевается сама собой, но и в при очных занятиях я хочу, чтобы вы не просто тупо писали то, что я вам рассказал, но и могли думать сами.</p>\n\n<p>Это обозначает, во-первых, не будут сам вас торопить или заставлять решать задачи. Хотите — решайте, не хотите — ну и не решайте, мне же проще — меньше проверять. Я не буду стоять у вас над душой и что-то с вас требовать. (Хотя, если вы учитесь в лицее 40 и хотите получить зачет, то к вам отдельные требования.)</p>\n\n<p>Во-вторых, не ожидайте, что на занятиях или в теоретических материалах на сайте будет отражено <i>абсолютно всё</i>, что может вам потребоваться для решения задач. Вполне возможно, что в каких-нибудь задачах вы обнаружите, что требуется что-то, что мы "не проходили". Не страшно. Вы всегда можете меня спросить, а лучше — сначала исследовать вопрос самостоятельно (в вашей любимой книжке, или в интернете), а если не получится, то спросить меня. Я вас не съем за такие вопросы, наоборот, я буду очень рад, если вы увидите, что в какой-то задаче требуется что-то дополнительное, и сможете четко спросить, что именно вам требуется.</p>\n\n<p>В-третьих, если вы чего-то не поняли на занятии, в моем комментарии к вашему решению, в теоретических материалах или где еще; или если вы не понимаете, почему не работает ваша программа, то просто подойдите ко мне и спросите (или напишите мне). Не ожидайте, что я вам все очень подробно объясню с первого раза или что я вам буду писать сверхподробные комментарии к решениям. Я объясняю и пишу как раз с расчетом что, если вы что-то не поняли, то вы переспросите.</p></div>', 'title': '\nПро самостоятельность', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_26', 'order': 26, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_27', 'order': 27, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Рекомендуемая литература</h2>\n<h3>Для начинающих — для изучения языка</h3>\n<h4>Питон</h4>\n<p>По питону, как ни странно, книжек не очень много, и вот именно учебных, направленных на школьников, я пока не видел (но я еще поищу). Поэтому, если хотите, можете купить какую-нибудь книжку, которая вам понравится.</p>\n\n<p>Но зато по питону есть очень много ресурсов в интернете; если вы будете задавать поиск по конкретным вопросам, то для питона вы получите адекватный ответ намного более вероятно, чем для паскаля. Поэтому я далеко не уверен, что вам надо покупать бумажную книжку по питону, лучше используйте интернет.</p>\n\n<p>В частности, очень рекомендую вам сайт <a href="http://pythontutor.ru/">http://pythontutor.ru/</a>. Там достаточно адекватная теория, и очень удобный визуальный отладчик питона.</p>\n<h4>Паскаль</h4>\n<p>Здесь приведен список книг, которые можно использовать для изучения языка программирования Pascal. При этом имейте в виду, что большинство из них описывает среду Turbo Pascal (или Borland Pascal, что то же самое); она является весьма устаревшей и в некоторых деталях отличается от среды Free Pascal, которую мы изучаем. Кроме того, во многих книжках есть разного рода устаревшие подходы к написанию программ. </p>\n<p>Большинство из этих книг можно скачать из интернета, или купить; в частности, ряд книг я видел недавно в магазине Дирижабль на Б. Покровской.</p>\n<p>В принципе, можно учиться и по другим книгам, не указанным здесь. Главное — чтобы это был именно учебник по основам языка программирования Pascal (Delphi скорее всего не подойдет). Прежде чем выбирать книгу, посмотрите, как в ней излагается простейший материал. Мне не понравились книги, которые сначала определяют "алфавит языка" и прочие заумные понятия, и только потом приступают к изучению языка; я считаю, что лучше начать изучение языка на простых примерах и только потом переходить к общим вещам. Если найдете книгу, которая вам понравится, скажите мне, чтобы я ее добавил сюда.</p>\n<p>При этом я не читал подробно ни одну из этих книг, я только поверхностно их просмотрел. Поэтому если у вас будут какие-либо комментарии по ним, то тоже скажите мне.</p>\n<ul>\n<li><b>Ушаков Д. М., Юркова Т. А. Паскаль для школьников</b> — мне очень понравилась; эта книга, пожалуй, ближе всего к тому, как я хочу строить обучение языку.</li>\n<li><b>Деревенец О. В. Песни о Паскале </b> (свободна распространяема с сайта <a href="http://oleg-derevenets.narod.ru/">http://oleg-derevenets.narod.ru/</a>) — очень необычный стиль изложения, возможно, понравится школьникам. Очень подробно и хорошо рассказывают про среду Free Pascal. Правда, порядок изучения тем весьма отличается от запланированного мной, но тем не менее, книга весьма неплохая.</li>\n<li><b>Кашаев С. М., Шерстнева Л. В. Паскаль для школьников. Подготовка к ЕГЭ</b> — довольно неплохой подробный учебник.</li>\n<li><b>Андреева Е. В. Программирование — это так просто, программирование — это так сложно</b>. Елена Владимировна Андреева (в отличие от авторов всех остальных учебников) — очень известный в олимпиадной информатике учитель, подготовившая многих сильных олимпиадников, многократный член жюри заключительного этапа Всероссийской олимпиады школьников. Эта книга довольно популярна в обучении олимпиадному программированию, вы можете встретить ссылки на нее во многих разных местах. Тем не менее, книга написана с точки зрения «формального» подхода, когда внимание уделяется в первую очередь полноте и строгости изложения, а не понятности и количеству примеров. Поэтому мне кажется, что она подходит скорее как справочник, или как дополнение к материалу, который я рассказываю на занятиях.\n</li><li><b>Культин Н. Б. Turbo pascal в задачах и примерах</b> — фактически только примеры, без теории.</li>\n<li><b>Павловская Т. А. Паскаль. Программирование на языке высокого уровня. Практикум</b> — не очень много теории, довольно много примеров.</li>\n<li><b>Рапаков Г. Г., Ржеуцкая С. Ю. Turbo Pascal для студентов и школьников</b> — более-менее обычный учебник, ничего особенного, на самом деле мне даже не очень понравился.</li>\n<li><b>Семакин И. Г., Шестаков А. П. Основы программирования</b> — более-менее обычный учебник, ничего особенного, на самом деле мне даже не очень понравился.</li>\n</ul>\n\n<p>Кроме того, следующие книги я видел, но они мне весьма не понравились. Я не рекомендую вам их использовать, хотя, возможно, кому-то они покажутся проще. Если сочтете, что какая-то книга тут находится незаслуженно, тоже напишите мне — на самом деле, я смотрел весьма поверхностно.</p>\n<ul>\n<li><b>Кетков Ю. Л., Кетков А. Ю. Свободное программное обеспечение. FREE PASCAL для студентов и школьников</b></li>\n<li><b>Фаронов В. В. Turbo Pascal 7.0. Учебный курс</b></li>\n</ul>\n\n<p>Наконец, непосредственно на этом сайте есть много теоретического материала — надо зайти на главную страницу сайта и далее следовать по ссылкам на разные темы или на разные курсы. К сожалению, качество материала здесь очень и очень сильно варьируется, от довольно плохого до довольно хорошего.</p>\n\n<h3>Для продолжающих — для изучения алгоритмов</h3>\n<p>К сожалению, нет хороших полноценных учебников по алгоритмам. Те книги, которые я указываю ниже, считаются довольно хорошими книгами, но покрывают материалы нашего курса далеко не полностью и/или зачастую содержат много дополнительной или не всегда нужной информации. Я стараюсь на страничке курса давать ссылки на полезные материалы по разным темам; также я всегда готов вам рассказывать нужные темы на занятиях. Соответственно, я предполагаю, что изучать нужные темы вы будете именно по материалам, на которые есть ссылки со странички курса, и/или по моим рассказам, а литература, указанная ниже — скорее вспомогательные книги.</p>\n\n<ul>\n<li><b>Т. Кормен, Ч. Лейзерсон, Р. Ривест «Алгоритмы. Построение и анализ»</b> (во втором издании к авторам присоединился еще К. Штайн). Самая популярная книга по алгоритмам, книга, которую должен знать каждый уважающий себя крутой программист. Довольно хорошая, но довольно продвинутая (вряд ли ее стоит читать школьникам ниже 3-4 уровня), и местами чересчур теоретизирована (рассчитана скорее на студентов, а не на школьников).</li>\n<li><b>А. Шень. Программирование: теоремы и задачи</b> (свободно доступна с сайта <a href="http://www.mccme.ru/free-books/">http://www.mccme.ru/free-books/</a>). Тоже довольно известная книга, и написанная в расчете на в том числе школьников, хотя на мой взгляд дает местами лишний или чересчур глубокий материала, а часть материала, наоборот, можно было бы изложить более детально. Но все равно весьма рекомендую.</li>\n<li><b>Д. Кнут. Искусство программирования.</b>. (В ранних изданиях русского перевода — Искусство программирования для ЭВМ.) Классическая и очень-очень известная монография, но содержит очень много информации, которую тяжело фильтровать на более и менее важную, очень тяжело читается, и чувствуется, что первое издание было почти 50 лет назад (!) (проблема скорее не в устаревании материала, а в устаревании способа подачи, например, примеры даются на ассемблерно-подобном языке, а не на языке высокого уровня или псевдокоде).</li>\n</ul></div>', 'title': '\nРекомендуемая литература', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_28', 'order': 28, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div><a href="https://docs.google.com/document/d/1YrAWXEK4ak9lE07Sx8C7vLZ0kgJav86IouaNU91GNGM/pub">\nПримерный план уровней</a></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_29', 'order': 29, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Формулы расчета рейтинга и т.д.</h1>\n<p>В сводных таблицах показывается рейтинг, активность, рейтинг на codeforces, взвешенное изменение рейтинга на codeforces и взвешенное количество контестов на codeforces.</p>\n\n<h2>Рейтинг</h2>\n<p>(Кому интересно, конкретный код расчета рейтинга и активности есть <a href="https://github.com/petr-kalinin/algoprog/blob/master/server/calculations/calculateRatingEtc.coffee">вот здесь</a>.)</p>\n\n<p>Рейтинг определяется просто набором решенных задач. А именно, каждая задача стоит некоторое фиксированное количество баллов рейтинга, определяемое уровнем этой задачи.</p>\n\n<p>Задача уровня 1А стоит $2.5$ балла рейтинга. Задача уровня 2А стоит $2.5^2$ баллов рейтинга. Задача уровня 3А стоит $2.5^3$ баллов рейтинга, и т.д. Задача уровня $N$А стоит $2.5^N$ баллов рейтинга.</p>\n\n<p>Задачи промежуточных уровней стоят промежуточное число баллов. А именно, задача уровня $N$Б стоит $2.5^{N+0.25}$ баллов рейтинга, уровня $N$В — $2.5^{N+0.5}$, уровня $N$Г — $2.5^{N+0.75}$ баллов.</p>\n\n<p>Задачи с региональных олимпиад считаются как задачи с уровня 3А. Если одна и та же задача есть на нескольких уровнях, то учитывается только самый высокий уровень этой задачи.</p>\n\n<p>При выводе рейтинга в таблицы он округляется до целых, но при подсчете все считается вещественными числами.</p>\n\n<p>Табличка стоимости (округленная до двух знаков после запятой):</p>\n<pre>          А        Б        В        Г\n1      2.50     3.14     3.95     4.97 \n2      6.25     7.86     9.88 \n3     15.62    19.65    24.71 \n4     39.06    49.12    61.76 \n5     97.66   122.80   154.41 \n6    244.14   306.99   386.02 \n7    610.35   767.48   965.05 \n8   1525.88  1918.69  2412.63 \n9   3814.70  4796.73  6031.57 \n10  9536.74 11991.82 15078.91 \n</pre>\n\n<h3>Идеология</h3>\n<p>Баллы за задачу растут очень быстро, специально для того, чтобы на высоких уровнях было не так важно, что вы решали на младших уровнях. Например, если вы уже на уровне 5, то, скорее всего, задачи уровня 1 не представляют для вас вообще никакой сложности. Поэтому не важно, сколько вы решили на уровне 1. И это получается за счет того, что задачи уровня 5 стоят намного больше, чем задачи уровня 1.</p>\n\n<h2>Активность</h2>\n<p>(Конкретный код расчета — по той же ссылке)</p>\n\n<p>Активность — показатель того, насколько активно вы решали задачи последнее время. Каждая задача, которую вы когда-либо решали, дает свой вклад в активность. У каждой задачи есть "базовые" баллы активности — это квадратный корень из номера уровня. (У всех задач уровня 1 "базовый" балл равен 1, у каждой задачи уровня 2 базовый балл равен 1.4, и т.д.) Этот базовый балл умножается на $0.55^{t/\\tau}$, где $t$ — время, прошедшее с того момента, как вы сдали эту задачу, а $\\strut\\tau$ равно 1 неделе. Например, если вы сдали задачу только что, то базовый балл учитывается полностью. Если вы сдали задачу ровно сутки назад, то базовый балл умножается на $0.55^{1/7}\\approx 0.92$. Если вы сдали задачу ровно две недели назад, то базовый балл умножается на $0.55^2\\approx0.3$. Если вы сдали задачу 8 недель назад, то базовый балл умножается на $0.55^8\\approx0.0083$, т.е. эта задача уже почти не учитывается.</p>\n\n<p>Суммарное значение активности по всем задачам делится на 0.45, в результате получается эдакое среднее число "задач" в неделю.</p>\n\n<p>Получается, что на самом деле учитываются только недавно сданные задачи, а те, которые вы решали давно, не учитываются. Но при этом падение этой "учитываемости" плавное. Если вы перестанете решать задачи, то ваша активность будет постепенно падать со временем (хотя и никогда не станет ровно нулем). В таблицах активность выводится округленной до одного знака после запятой, но на самом деле активность — настоящее вещественное число.</p>\n\n<p>В ряде сводных таблиц сначала указываются школьники, активность которых больше 0.1, и только потом все остальные.</p>\n\n<h2>Цвет</h2>\n<p>Имена школьников в таблицах рисуются цветом, определяемым их рейтингом и активностью. А именно, активность определяет яркость цвета (от почти черного до насыщенного), а рейтинг определяет оттенок (от фиолетового через все цвета радуги до красного). Например, школьник с рейтингом 1 и активностью 10 будет иметь ярко-фиолетовый цвет, школьник с рейтингом 1 и активностью 0.1 будет иметь темно-фиолетовый цвет, школьник с рейтингом примерно 1500 и активностью 10 будет иметь ярко-зеленый цвет, а с активностью 0.1 — темно-зеленый цвет; красный цвет соответствует рейтингу примерно 160000.</p>\n\n<p>Конкретная формула: в <a href="https://ru.wikipedia.org/wiki/HSV_(%D1%86%D0%B2%D0%B5%D1%82%D0%BE%D0%B2%D0%B0%D1%8F_%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C)">модели HSV</a> цвет участника имеет следующие компоненты:</p>\n$h = 11/12 \\cdot (1 - log(r+1) / log(R + 1))$<br>\n$v = 0.3 + 0.7 \\cdot log(a+1) / log(A + 1)$<br>\n$s = 1$<br>\n<p>здесь $r$ и $a$ — рейтинг и активность, $R$ — "максимальный рейтинг" (те самые примерно 160000, точнее — рейтинг, который получит человек, на каждом уровне решивший по 10 задач, возможно, я буду подправлять константу в будущем), $A=7$.</p>\n\n<p>Еще есть мелкие поправки на краях возможных интервалов значений. Код, кому интересно, <a href="https://github.com/petr-kalinin/algoprog/blob/master/client/components/UserName.coffee">здесь</a>.</p>\n\n<h2>Параметры codeforces</h2>\n<p><a href="https://github.com/petr-kalinin/algoprog/blob/master/server/calculations/calculateCfRating.coffee">Код</a></p>\n\n<p>Рейтинг на CF берется прямо с CF, обновляется раз в сутки.</p>\n\n<p>Взвешенное количество контестов вычисляется так: каждый написанный вами контест дает вклад, равный $0.5^{t/\\tau}$, где $t$ — время, прошедшее с написания контеста, а $\\tau$ равно 4 неделям. Все такие вклады суммируются. Т.е. только что написанный контест дает вклад 1, контест, написанный 4 недели назад — 0.5, и т.д.</p>\n\n<p>Взвешенное изменение рейтинга вычисляется так: каждый написанный вами контест дает вклад, равный $\\delta\\cdot0.5^{t/\\tau}$, где $\\delta$ — изменение рейтинга в этом контесте, $t$ — время, прошедшее с написания контеста, а $\\tau$ равно 4 неделям. При этом самый первый в жизни написанный контест не учитывается, т.к. там изменение рейтинга — это бессмысленная вещь.</p></div>', 'title': '\nФормулы расчета рейтинга, активности и т.д.', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_30', 'order': 30, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_31', 'order': 31, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про ачивки</h1>\n<p>На алгопроге каждый пользователь может заработать ачивки. Ачивки выдаются за разные вещи, в первую очередь за успешные занятия на алгопроге, а также за участие в различных олимпиадах. Заработанные пользователем ачивки показываются в его профиле, также три наиболее «крутые» ачивки показываются рядом с именем пользователя в сводных таблицах и т.д.</p>\n\n<p>Полный список доступных ачивок можно посмотреть <a href="/achieves">здесь</a>, а также в виде исходного кода <a href="https://github.com/petr-kalinin/algoprog/blob/master/client/lib/achieves.coffee">здесь</a>.</p>\n\n<p>Часть ачивок выдается автоматически, часть ачивок (в основном за олимпиады) я устанавливаю вручную. Если вы считаете, что у вас должна быть какая-то ачивка, а у вас ее нет, то напишите мне. Особенно это касается школьников из-за пределов Нижегородской области — я не всегда могу отслеживать все ваши олимпиады, поэтому пишите мне про свои олимпиады сами.</p></div>', 'title': ' \nПро ачивки', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_32', 'order': 32, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_33', 'order': 33, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про дополнительные лекции</h1>\n\n<p>Я планирую время от времени по воскресеньям на занятии в ННГУ проводить дополнительные лекции на разные темы, не связанные напрямую с алгопрогом и вообще с алгоритмами — но которые серьезный программист по идее должен знать.</p>\n\n<p>Эти лекции совершенно не нужны для занятий на алгопроге, да и по бóльшей части для олимпиад тоже (хотя отчасти и будут полезны, особенно про командную строку). Но они очень полезны для вашего кругозора.</p><p>\n\n</p><p>Цель таких лекций — дать вам общее представление о той или иной теме. Я не буду ставить целью чтобы вы сразу научились чему-то новому, я буду ставить целью чтобы вы узнали о существовании чего-то нового и поняли, что надо искать и про что читать в интернете, чтобы с этим разобраться. </p>\n\n<p>Лекции будут проходить в среднем раз в две недели по воскресеньям в ННГУ в аудитории 114 в 15.00, и длиться примерно 30-60 минут. На них можно приходить и тем, кто зарегистрировался на занятие в 14.00, и тем, кто зарегистрировался на занятие в 15.30, и тем, кто не регистрировался на занятия вообще.</p>\n\n<p>Предварительный список тем (я готов принимать от вас запросы на какие-либо еще темы):</p><p>\n\n</p><ul>\n<li><b>6 октября</b>: Командная строка</li>\n<li><b>27 октября</b>: Far manager</li>\n<li><b>16 февраля</b>: Системы контроля версий</li>\n<li>TeX и LaTeX</li>\n<li>...</li>\n</ul>\n\n<p>Запрошенные темы (не обещаю, что расскажу, но подумаю):</p>\n\n<ul>\n<li>Нейронные сети и их обучение</li>\n<li>Компиляторы, интерпретаторы, ассемблер и т.д.</li>\n<li>История языков программирования</li>\n</ul></div>', 'title': ' \nПро дополнительные лекции по воскресеньям', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_34', 'order': 34, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_35', 'order': 35, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>О лицензии на материалы этого сайта</h2>\n<h3>Исходный код сайта</h3>\nИсходный код собственно сайта algoprog.ru написан мною (Петром Калининым) и распространяется по лицензии <a href="http://www.gnu.org/licenses/agpl">GNU Affero General Public License</a>. Скачать исходный код можно с сайта <a href="http://github.com/petr-kalinin/algoprog">github.com/petr-kalinin/algoprog</a>.\n\n<h3>Теоретические материалы</h3>\n<p>На этом сайте есть различные теоретические материалы с разной степенью понятности с точки зрения лицензии.</p>\n<p>Материалы, в которых лицензия указана явно, распространяются по указанной в них лицензии.</p>\n<p>Материалы, размещенные на других сайтах, на которые с сайта algoprog.ru проставлена только ссылка, распространяются по лицензии, определяемой указанным сайтом.</p>\n<p>Материалы, в которых лицензия явно не указана, но автором которых являюсь я (это большинство материалов, размещенных непосредственно на сайте algoprog.ru), распространяются по лицензии <a href="http://creativecommons.org/licenses/by-sa/4.0/">Creative Commons Attribution-ShareAlike (CC BY-SA) 4.0</a>.</p>\n<p>Если вы не уверены, какая лицензия распространяется на конкретный материал, спросите меня.</p>\n\n<h3>Условия задач</h3>\n<p>Условия задач взяты с сайта <a href="http://informatics.mccme.ru">informatics.mccme.ru</a>, где они в большинстве случаев собраны с различных олимпиад. Условия лицензии на них не ясны.</p>\n</div>', 'title': '\nО лицензии на материалы сайта', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_36', 'order': 36, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_37', 'order': 37, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Франшиза</h1>\n\n<p>Если вы уже учите кого-нибудь (школьников, студентов и т.д.) программированию, и хотите использовать алгопрог или его материалы в своих занятиях...</p>\n\n<p>...или если вы хотите начать учить кого-нибудь на базе алгопрога или с использованием его материалов...</p>\n\n<p>...или если вы хотите использовать движок алгопрога в своих занятиях, наполнив его своими материалами</p>\n\n<p>то этот текст для вас.</p>\n\n<h2>Материалы</h2>\n\n<p>Если вам нужен не функционал алгопрога, а только <i>материалы</i> — теоретические материалы, видеолекции, задачи и т.д. — то они доступны в том или ином виде свободно. Теоретические материалы, автором которых являюсь я, как правило, распространяются под той или иной свободной лицензией, вы можете их использовать. Она обычно указана в самом материале, если там лицензия не указана, то спросите меня. Материалы, автором которых являюсь не я, взяты с других сайтов, вы обычно тоже можете их использовать. Задачи взяты с сайта <a href="http://informatics.mccme.ru">informatics.mccme.ru</a>, этот сайт специально создан для проведения различных курсов по программированию, вы можете формировать свои курсы из доступных там задач и т.д. В частности, вообще все содержимое алгопрога есть на информатиксе: <a href="https://informatics.msk.ru/course/view.php?id=1135">informatics.msk.ru/course/view.php?id=1135</a> — собственно, весь алгопрог вырос из этого моего курса на информатиксе.</p>\n\n<h2>Движок</h2>\n\n<p>Сам движок алгопрога также <a href="https://github.com/petr-kalinin/algoprog">свободно доступен</a>, вы можете поднять собственный инстанс алгопрога и делать там что угодно. (Хотя, конечно, это не так просто, и я вряд ли буду вам помогать.)</p>\n\n<h2>Отдельный инстанс</h2>\n\n<p>Я могу поднять отдельный инстанс алгопрога для ваших учеников, с вашими материалами и задачами. Это требует отдельного обсуждения, но в принципе это возможно. Это будет платно, конкретная стоимость будет зависеть от необходимой работы по поддержке инстанса, необходимых доработок, и ожидаемого количества учеников. В качестве грубой предварительной оценки, если не требуется серьезных доработок, и ожидается 20-50 учеников, то стоимость отдельного инстанса будет составлять 500-1000 рублей с ученика в месяц.</p>\n\n<h2>Занятия прямо на алгопроге по материалам алгопрога</h2>\n\n<p>Если вы хотите заниматься именно на алгопроге, то есть следующие варианты. Во-первых, ваши ученики может зарегистрироваться на алгопроге и заниматься как независимые ученики. С моей точки зрения это будут просто дополнительные ученики на алгопроге, вы сможете организовывать занятия, помогать ученикам и т.д., но у вас не появится никаких дополнительных возможностей на алгопроге (вы не сможете просматривать решения учеников и т.д.). Ваши ученики занимаются независимо, для них стоимость занятий будет, естественно, определяться <a href="/pay">по общим правилам</a>, с вас я, естественно, денег брать не буду (и вообще могу про вас и не знать :) ).</p>\n\n<p>Если вы хотите иметь дополнительные возможности — просматривать решения учеников, комментировать их, засчитывать/игнорировать, иметь отдельные сводные таблицы, то напишите мне. Это все (равно как и другие запросы с вашей стороны) вполне реально, но требует отдельного обсуждения. В качестве <b>базовых</b> вариантов есть следующие:</p>\n<ul>\n<li>Ваши ученики занимаются на алгопроге на равных правах с остальными, я их проверяю, комментирую, засчитываю/игнорирую их решения — и плюс вы можете делать то же самое; для ваших учеников будут отдельные таблички и т.д. <b>Как правило</b>, стоимость таких занятий для ваших учеников будет такая же, как если бы они занимались независимо. (Т.е. никакой дополнительной оплаты за дополнительный функционал нет, но и скидок нет.)</li>\n<li>Я никак не взаимодействую с вашими учениками — не смотрю их решения, не засчитываю/игнорирую. Все это делаете, если хотите, вы. <b>Как правило</b>, стоимость таких занятий для ваших учеников будет в два раза меньше, чем если бы они занимались независимо.</li>\n</ul>\n<p>В обоих вариантах выше существенны слова «базовые» (варианты) и «как правило». Это обозначает, что, с одной стороны, это не публичная оферта — в конкретной ситуации возможны другие условия и другие цены; с другой стороны, возможны также и другие варианты по функционалу и по нашему с вами взаимодействию. Пишите, поговорим :)</p>\n\n<p>В частности, если для ваших учеников занятия обычно бесплатные, то оба варианта выше будут, как правило, бесплатными.</p>\n\n</div>', 'title': '\nО франшизе', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_38', 'order': 38, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>«Стажировка» на алгопроге</b></div>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-20927_39', 'order': 39, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>«Стажировка» на алгопроге</h1>\n<p>Что летом делают большинство нормальных студентов-программистов? Стажируются в IT-компаниях. Школьников обычно на такие стажировки не зовут, да и участвовать школьникам в стажировках обычно сложно.</p>\n\n<p>Поэтому я подумал, чем алгопрог хуже IT-компаний? И решил организовать возможность некоего аналога стажировок на алгопроге. А именно, если вы хотите, то можете поучаствовать в развитии самой платформы алгопрога. Если вы всегда хотели добавить на алгопрог какую-нибудь фичу, то вы сможете этим заняться. Или у меня для вас есть список вещей, которые я давно хочу сделать на алгопроге, но все не успеваю, и вы можете заняться ими.</p>\n\n<p>Это, конечно, будет довольно сильно отличаться от обычных задач, которые вы решаете на алгопроге. Вам придется разбираться в довольно объемном уже существующем (и очень грязном) коде алгопрога, вам придется разбираться в наверняка незнакомом языке программирования (Coffeescript, но не бойтесь — он несложный и поначалу весьма похож на питон), вам придется разбираться со множеством технологий, с которыми вы возможно еще не работали (git, MongoDB, node.js, React, немного Redux), вам придется разбираться с HTML и браузерным Javascript, вам придется много гуглить и читать, причем скорее всего по-английски (ну или через переводчик) — но я верю, что если вы абсолютно уверенно решаете как минимум задачи уровней 1А и 1Б, и не боитесь самостоятельно разбираться с возникающими проблемами, то вы вполне можете и со всем этим разобраться.</p>\n\n<p>Исходный код алгопрога вот: <a href="https://github.com/petr-kalinin/algoprog">https://github.com/petr-kalinin/algoprog</a>. Список доделок, которыми вы можете заняться, вот: <a href="https://github.com/petr-kalinin/algoprog/issues">https://github.com/petr-kalinin/algoprog/issues</a>, или вы можете обсудить со мной и предложить что-то свое.</p>\n\n<p>В отличие от классических стажировок, я не буду требовать от вас какой-то регулярности в работе (ну собственно как и с обычными задачами на алгопроге), и не буду вам платить денег :) — но обещаю, что буду вникать в то, что вы делаете, и помогать. А вы внесете свой вклад в развитие алгопрога, и получите много нового разнообразного опыта.</p>\n\n<p>Кроме того, в отличие от классических стажировок, я не смогу вам уделять столько внимания, сколько обычно уделяет руководитель стажеру в IT-компаниях. Вам придется очень во многом разбираться самостоятельно, я буду скорее направлять ваши действия, а не давать конкретные детальные указания. Будьте к этому готовы.</p>\n\n<p>В общем, если вы хотите в этом поучаствовать, пишите. Распространяется на всех, кто занимается на алгопроге (не обязательно школьников) и имеет уровень минимум 1В. Пока только лето (с апреля по август включительно).</p></div>', 'title': '«Стажировка» на алгопроге', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Очные занятия</h2>\n<font size="+1"><a href="/material/module-20927_17" onclick="window.goto(\'/material/module-20927_17\')();return false;">Подробная информация</a></font><br>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_1', 'order': 2, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про свои ноутбуки</h1>\n<p>Иногда бывает, что на занятиях не хватает компьютеров (особенно в начале учебного года). Поэтому вы <b>можете приносить свои ноутбуки</b>, но на следующих условиях:</p>\n<ol>\n<li>Вы сами несете ответственность за свой ноутбук. Я не готов решать какие-либо проблемы, связанные с ноутбуком, начиная от отсутствующей зарядки или отсутствующего интернета (см. ниже), поломки его вами или другими школьниками, и до даже его пропажи (хотя и надеюсь, что такого не будет). Если вы и ваши родители не уверены, стоит ли вам брать с собой ноутбук — не берите.</li>\n<li>Обеспечивайте доступ в интернет на своем ноутбуке самостоятельно. Проще всего — имейте с собой usb-модем или научитесь раздавать доступ в интернет со своего телефона. Убедитесь, что у вас достаточно трафика для работы, или заранее подключите пакет трафика (я думаю, если вы собираетесь только работать на informatics, то сотни мегабайт будет более чем достаточно). Лучше проверьте заранее, что все работает. Вы можете также объединиться, чтобы в группе друзей один человек раздавал интернет на всех, но договаривайтесь об этом самостоятельно и заранее, а также читайте следующие пункты.</li>\n<li>Убедитесь, что у вас на ноутбуке нет вирусов и других программ, которые могут захотеть скачать большое количество данных из интернета; вирусы еще могут подписать вас на какие-нибудь платные мобильные рассылки. (Многие программы с функцией автообновления могут расходовать много трафика без предупреждения). Если вы используете интернет друга, или предоставляете свой интернет друзьям, то риск скачивания большого объема данных тем более возрастает. (В частности, именно поэтому я сам не раздаю интернет со своего телефона.)</li>\n<li>Имейте с собой все нужные зарядки (для ноутбука и для телефона, хотя телефон проще подключать к ноутбуку). Имейте также с собой <b>удлинитель</b> метра на 3 как минимум, а то и на 5 метров, т.к. в наших аудиториях у многих столов или нет розеток, или их мало.</li>\n<li>Заранее установите требуемые для работы программы — среду программирования и/или среды разработки, какие вы используете; для команд также убедитесь, что у вас установлено всё, что требуется для всей вашей команды.</li>\n<li>Для команд нет большого смысла приносить более 1 ноутбука на команду.</li>\n</ol></div>', 'title': 'Про свои ноутбуки на занятиях', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_2', 'order': 3, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Лицей 40</h3>\n<p><b>Только для учеников лицея 40</b></p>\n<p>Занятия проходят по средам в 14:30 КЦ.</p>\n<ul>\n<li>Новичкам (кто не ходил ни разу и не решал задач заочно) <b>прежде чем приходить на занятие, необходимо зарегистрироваться на сайте и решить хотя бы одну задачу</b>. Исключение — занятие 25 сентября, туда можно приходить всем новичкам вообще.</li>\n<li>Те, кто уже был хотя бы один раз, или решил в курсе хотя бы одну задачу заочно, могут приходить каждую среду.</li>\n</ul>\n<a href="/material/in20946" onclick="window.goto(\'/material/in20946\')();return false;">Правила получения зачета</a>\n<h3>ННГУ</h3>\n<p><b>Только для школьников</b>\n</p><p>Занятия проходят по воскресеньям в ННГУ ил. Лобачевского (пр. Гагарина, 23), корп. 2, ауд. 110 и 114.</p>\n<p><b>Берите с собой паспорт или свидетельство о рождении.</b> Если вас не пускает охрана, звоните мне.</p>\n<ul>\n<li>Проходит два занятия: с 14.00 до 15.30 и с 15.30 до 17.00.</li>\n<!--<li>Занятие проходит с 14.00 до 16.00.</li>-->\n<li>Новичкам (кто не ходил ни разу и не решал задач заочно) <b>прежде чем приходить на занятие, необходимо зарегистрироваться на сайте и решить хотя бы одну задачу</b>. Исключение — занятие 22 сентября, туда можно приходить всем новичкам вообще.</li>\n<li>Те, кто уже был хотя бы один раз, или решил в курсе хотя бы одну задачу заочно, могут приходить каждое воскресенье на любое из двух занятий.</li>\n<li>Чтобы вам точно хватило компьютеров, <b><a href="/checkins" onclick="window.goto(\'/checkins\')();return false;">зарегистрируйтесь на занятие</a></b>. Без регистрации приходить можно, но если компьютеров хватать не будет, то преимущество будет у тех, кто записался. Каждую неделю надо регистрироваться заново.</li>\n<li>Регистрироваться на два занятия нельзя, но те, кто записались на 14.00, могут остаться на второе занятие, если будут места. Те, кто со своими ноутбуками, тоже могут приходить на оба занятия.</li>\n</ul>\n<hr>\n\n<div class="algoprog-contacts">\n<h2>Контакты</h2>\nПетр Андреевич Калинин\n<ul>\n<li>e-mail: petr@kalinin.nnov.ru</li>\n<li><a href="http://vk.com/petr.kalinin">http://vk.com/petr.kalinin</a>*</li>\n<li>+7(910)794-32-07**</li>\n<li>Телеграм: +7(910)794-32-07</li>\n</ul>\n<b>Телеграм:</b>\n<ul>\n<li><a href="https://t.me/algoprog_news">Канал с важными объявлениями</a>, в первую очередь про очные занятия. Рекомендую всем подписаться. (Если ссылка на t.me заблокирована, просто в телеграмме поищите канал «algoprog_news».)</li>\n<!--<li><a href="https://t.me/joinchat/CDV8hRTLsYl_pplIhhLZzw">Телеграм-чат для общих вопросов и разного флуда</a></li>-->\n</ul>\n<p>Мои контактные данные можно свободно распространять по любым вопросам, связанным с работой курса или с олимпиадным программированием в Нижегородской области вообще.</p>\n<p><b>Если у вас есть какие-то проблемы с работой в курсе, какие-то вопросы и т.п., сразу пишите мне!</b></p>\n<p>* Политика добавления в друзья во вКонтакте: я не возражаю, если вы добавите меня в друзья, но я буду добавлять только тех, кто уже давно и успешно занимается.</p>\n<p>** Пожалуйста, звоните по телефону только в экстренных случаях. Если ваш вопрос не очень срочный и может подождать несколько часов, напишите мне любым указанным выше способом — во вКонтакте, в Телеграм или на email.</p>\n</div>\n<hr>\n\n<h2>Полезные ссылки</h2>\n<font size="+1"><a href="https://www.dropbox.com/s/1n5g6w6hkryqwcw/Free%20Pascal%202.6.4%20-%20installer%20.exe?dl=0">Ссылка на установщик Free Pascal</a></font>\n<hr>\n<font size="+1">Установщики питона: <a href="https://www.python.org/ftp/python/3.5.2/python-3.5.2.exe">сам Python</a> и <a href="http://wingware.com/pub/wingide-101/5.1.12/wingide-101-5.1.12-1.exe">Wing IDE 101</a></font>\n<hr>\n<font size="+1">\n<a href="http://petr-kalinin.github.io/keyb/">Клавиатурный тренажер</a> на скорость набора программистского текста. </font> Ориентировочные результаты: 150 символов/минуту — довольно неплохо, 200 символов/минуту — очень круто. <a href="/material/in20938" onclick="window.goto(\'/material/in20938\')();return false;">Подробнее</a>.\n\n<hr class="algoprog-main-page-separator">\n\n<h2>Текущие олимпиады и т.п.</h2>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_3', 'order': 4, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>О школьной олимпиаде</h1>\n<font color="red">Эта информация касается школьной олимпиады в Нижегородской области. В других регионах могут быть отличия.</font>\n<h3>Краткое содержание того, что ниже</h3>\n<ul>\n<li>В школьной олимпиаде стоит участвовать как минимум всем, у кого уровень 1В и выше</li>\n<li>Участвовать надо по задачам за 9-11 класс, даже если вы в младших классах</li>\n<li>Заранее выясните, где и когда будет олимпиада, и попросите вам дать возможность писать на том языке, на котором вы хотите.</li>\n<li>На самой олимпиаде:</li>\n<ul>\n<li>Тщательно тестируйте свои задачи, жюри будет проверять их только после олимпиады и второй попытки у вас не будет!</li>\n<li>Неполные решения также оцениваются</li>\n<li>Прочитайте все задачи сразу, не тратьте всё время на одну задачу.</li>\n<li>Регулярно сохраняйте решения</li>\n<li>Не бойтесь задач, самые сложные обычно примерно соответствуют уровню 1Г-2А, и не обязательно решать всё, чтобы пройти дальше.</li>\n<li>Если что-то забыли, ищите обходные пути</li>\n<li>Ищите закономерности</li>\n<li>Применяйте здравый смысл</li>\n</ul>\n<li>Как только узнаете свой результат, скажите его мне</li>\n<li><font color="red">(Только нижегородцы) По любым вопросам, а особенно если что-то идет не так, сразу и в любое время звоните мне!</font></li>\n</ul>\n<h3>О чем речь?</h3>\n<p>Школьная олимпиада по информатике в Нижнем Новгороде состоится, видимо, в конце сентября — начале октября; сроки могут быть разными в разных районах. Уточните сроки заранее в своей школе. (Школьники не из Нижнего Новгорода — тоже уточняйте у себя в школе).</p>\n<p><b>Говорят, что в некоторых школах олимпиада будет аж 19 сентября! Это очень рано, конечно. Но это обозначает, что обязательно поторопитесь и выясните всё заранее!</b></p>\n<p>Школьная олимпиада — это первый этап в системе Всероссийской олимпиады школьников. Победители школьной проходят на районную олимпиаду, с районной — на областную и далее на собственно всероссийскую и международную, поэтому это — самая важная последовательность олимпиад в году, и школьная олимпиада является "входом" в нее. Не пропустите.</p>\n\n<h3>Кому стоит участвовать?</h3>\n<p>Я очень рекомендую участвовать всем, кто на момент олимпиады будут иметь уровень 1В и выше (независимо от класса). Если у вас на момент олимпиады еще не будет уровня 1В, но вы хотите, то можете тоже участвовать — хотя, возможно, задачи вам покажутся несколько сложными. Я думаю, что уровня 1В, скорее всего, будет достаточно, чтобы пройти на районную олимпиаду.</p>\n<p>Если вы в прошлом году участвовали в олимпиадах и стали призером (или победителем) районной или областной олимпиады, то школьную олимпиаду в этом году можете пропустить — вы проходите автоматом на ту олимпиаду, на которой стали призером год назад. (К городской олимпиаде из В.Д.Лелюха это не относится, она не входит в систему Всероссийской олимпиады школьников.)</p>\n\n<h3>Что надо сделать, чтобы участвовать?</h3>\n<p>Заранее, как можно раньше, подойдите к своему учителю информатики и скажите ей, что вы хотите участвовать. Ближе к дате олимпиады вам, наверное, скажут, где и когда именно она будет проходить; если не сказали, то еще раз подойдите к учителю и уточните. Пожалуйста, контролируйте сами, что вы все знаете про олимпиаду — я не могу связаться с каждой школой и сказать, чтобы вас не забыли. (В лицее 40 я передам список школьников уровня 1В и выше учителям, чтобы они про вас не забыли. Если вы хотите участвовать, но имеете уровень ниже 1В, то сообщите мне об этом заранее, я вас тоже включу в список.)</p>\n<p>Если вы младше 9 класса, то обязательно скажите, что вы хотите писать задачи за 9 класс (см. про это подробнее ниже). (В лицее 40 я сам это проконтролирую.) Младше 9 класса могут быть очень странные задачи, очень странная организация и т.д. — ни в коем случае не соглашайтесь участвовать по задачам младше 9 класса, даже если вы сами намного младше :)</p>\n<p>Заранее уточните, на каком языке программирования вы сможете писать. Постарайтесь уговорить учителей, чтобы вам дали написать вашем любимом языке, будь то Free Pascal, и PascalABC или Python или что угодно еще; если нужно, предложите, что вы сами установите нужные программы (компиляторы, среди разработки) на компьютер(ы), на которых будет олимпиада. (В лицее 40 я постараюсь заранее это все обсудить, но на всякий случай можете и сами уточить.)</p>\n<p>Если возникают какие-то проблемы, обязательно пишите или даже звоните мне (только нижегородцы)! Я не уверен, что смогу чем-то помочь, но вдруг. Не тяните с проблемами до последнего.</p>\n\n<h3>Как проходит олимпиада</h3>\n<p>Олимпиады по информатике, по крайней мере низших уровней (школьная, районная) проходят в следующем формате. Вам предлагается несколько (обычно от 2 до 5) задач, по каждой задаче вам надо написать программу. Задачи имеют такой же формат, как у нас на этом сайте: вводятся какие-то данные, надо вывести ответ. Как и у нас, гарантируется, что входные данные соответствуют ограничениям, указанным в условиях. В общем, все весьма похоже на то, как вы решаете задачи на сайте.</p>\n\n<p>Но есть важное отличие — на сайте результат проверки задачи сообщается вам сразу же, и вы можете сдавать одну и ту же задачу несколько раз. На олимпиаде ваши задачи будут проверяться только после тура, и у вас уже <b>не будет возможности исправить никакие ошибки</b>. Поэтому тщательно проверяйте свои решения, про это еще см. ниже.</p>\n\n<p>Олимпиада длится ограниченное время (скорее всего, два урока, но уточните заранее), поэтому внимательно контролируйте время. Не зависайте над одной задачей; если что-то не получается, то подумайте, может быть, стоит переключиться на другую задачу?</p>\n\n<p>В частности, <b>прочитайте все условия всех задач сразу в начале тура,</b> до того, как начнете что-либо программировать. От нашего жюри можно ожидать, что они разместят задачи по возрастанию сложности, но этого может и не быть (не говоря уж о том, что ваше восприятие сложности может отличаться от того, как это воспринимает жюри). Поэтому сначала прочитайте задачи, убедитесь, что вы их понимаете, а потом уже начинайте решать — причем с тех, которые выглядят проще. Ни в коем случае не должно быть такого, что "я все время решал первую задачу, а остальные даже не прочитал или даже не подумал над ними".</p>\n\n<p>Еще одно отличие от сдачи задач на сайте — на олимпиаде у вас будут оцениваться также и неполные решения. По каждой задаче будет подготовлено несколько тестов, и за каждый тест вы будете получать определенное количество баллов. Поэтому если у вас не получается придумать решение, которое будет работать всегда — напишите хотя бы решение, которое будет работать иногда. Постарайтесь, чтобы по каждой задаче у вас было хоть что-то сделано, чтобы у вас <b>не было нулевых баллов ни по одной задаче.</b></p>\n\n<p>В конце тура полезно еще раз проверить, что у вас все работает так, как вы ожидаете. Выделите в конце минут пять-десять, чтобы вернуться ко всем задачам и проверить, что они работают хотя бы на тесте из условия.</p>\n\n<p>В конце олимпиады вы должны сдать свои программы (исходные тексты) на проверку. На олимпиадах начального уровня обычно это делается следующим образом: вы просто оставляете их на вашем компьютере в указанном вам каталоге, откуда их потом заберут на проверку; иногда проверка осуществляется сразу после тура, даже в вашем присутствии. Заранее или в начале тура убедитесь, что вы понимаете, где вы должны оставить свои решения или как еще их вы должны сдать на проверку; если не понимаете, то спросите учителей.</p>\n\n<p>Сохраняйте решения! Во время олимпиады может произойти что угодно — отключиться свет, перезагрузиться компьютер и т.п. Если у вас из-за этого пропадет несохраненное решение, то это будут полностью ваши проблемы. Вообще, полезно привыкнуть сохранять свое решение каждые 10-20 секунд.</p>\n\n<p>Не теряйте свои решения! Если даже вы думаете, что ваше решение неправильное и его надо переписать — не удаляйте его, просто пишите в новом файле (ну или скопируйте старое решение куда-то про запас).</p>\n\n<p>Имейте в виду, что вам не обязательно решать всё. Чтобы пройти на районную олимпиаду, часто достаточно набрать половину баллов, поэтому не бойтесь, если у вас не получается решить самую сложную задачу (или две самых сложных, если задач много). (Но все равно постарайтесь по ним хоть что-то написать.) Для 11-классников порог прохода на район может быть выше.</p>\n\n<h3>О задачах за разные классы</h3>\n<p>Так исторически сложилось (и на то есть ряд дополнительных причин), что на олимпиадах по информатике набор задач общий для всех классов. Итоги потом подводятся по классам по отдельности, но задачи общие. (Иногда бывают исключения, но довольно редко.)</p>\n<p>При этом формально может быть сказано, что олимпиада проходит только для определенных классов, как правило — для 9-11 классов. Но это вовсе не значит, что младшеклассники не могут в ней участвовать — даже если вы младше 9 класса, вполне можете писать за 9 класс.</p>\n<p>Но помимо этого, я иногда слышал, что в некоторых школах бывают какие-то отдельные задачи для более младших (например, 7-8 классов). Это довольно странно; в лицее 40 я никогда про такое не слышал. Возможно, это инициатива отдельных школ или районов. В любом случае, это не то: по этим задачам вы в лучшем случае пройдете на район и дальше никуда, в худшем случае вам скажут, что "района по вашим классам не бывает" (знаю реальный такой случай). Задачи на этих олимпиадах могут иметь мало общего с тем, что мы тут проходим, организация может быть хуже (например, вам могут предложить писать программу на бумажке (!)) — в общем, если вы младше 9 класса, убедитесь, что вы выступаете за 9 класс и пишите по тем же задачам, что и 9-классники. Для этого может быть полезно заранее сказать, что вы хотите участвовать за 9-й класс. Не бойтесь этого; как я уже писал, если у вас уровень 1В или выше, то вам эти задачи будут по силам. И даже если вы решите их плохо, все равно вы получите ценный опыт, который вам пригодится через год.</p>\n\n<h3>О результатах</h3>\n<p>Как только будут известны ваши результаты, сообщите их мне. Результаты — это общее число набранных баллов (а хорошо бы и распределение баллов по задачам) и проходите вы на район или нет. Про район иногда сообщают сразу, иногда не сразу — если вы пока знаете только баллы, то сообщите мне только баллы, потом как будет известно про район, сообщите мне.</p>\n\n<h3>Какие будут задачи?</h3>\n<p>Сложно предсказать, да и в интернете задачи прошлых найти сложно (но можете попробовать, только ищите обязательно задачи и вашего района города или области — в разных районах задачи могут быть очень разными). Спросите в школе, у них наверное есть архивы прошлых лет.\n\n</p><h3>Какие знания могут потребоваться?</h3>\n<p>Вообще, я думаю, что знаний уровней 1А-1Б (т.е. основ языка), вместе со здравым смыслом, скорее всего будет достаточно, чтобы набрать половину баллов и пройти на район (для 11-классников может потребоваться чуть больше). Уровни 1В и 1Г очень полезны в том плане, что они содержат нестандартные задачи как раз типа тех, что будут на олимпиаде. Кроме того, в ряде задач могут потребоваться следующие знания:</p>\n\n<h4>int64</h4>\nВ паскале есть очень полезный тип данных, про который вы, возможно, не знаете. Это <code>int64</code> — 64-битное целое число. Он может хранить числа от (примерно) -2<sup>63</sup> до 2<sup>63</sup>; это примерно от -9e18 до 9e18. Он полезен, если значения, которые вам нужны в вашей программе, не влезают в integer.\n<pre>var a:int64;\nbegin\na:=1000000000;\na:=a*1000000000;\nwriteln(a); // выведет 1000000000000000000\nend.\n</pre>\n\n<h4>Тестирование задач</h4>\n<p>Очень важная вещь на олимпиаде — аккуратно протестировать задачи. На эту тему я недавно написал <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">длинный текст</a> (ссылка на него также есть в уровне 1В). Прочитайте его и следуйте его рекомендациям. Конечно, вам пока не обязательно использовать совсем уж продвинутые вещи типа стресс-тестирования или assert\'ов, но практически весь остальной текст вам будет полезен. Не жалейте времени на аккуратное тестирование.</p>\n\n<p>Полезно хотя бы немного отработать навык тестирования до олимпиады. Постарайтесь порешать несколько задач из еще не решенных вами с учетом рекомендаций по тестированию.</p>\n\n<h4>Работа с файлами</h4>\n<p>Ниже — про паскаль; про работу с файлами в питоне см. текст на уровне 2А.</p>\n<p>На школьной олимпиаде, вполне возможно, вам придется вводить данные не с клавиатуры, а из указанного в условии задачи файла, и аналогично выводить данные не на экран, а в файл. В паскале это делается это так: вы заводите переменную специального типа <code>text</code>, а потом командами <code>assign</code> и <code>reset/rewrite</code> "открываете" файл на чтение/запись соответственно. Далее в командах <code>read/readln</code> и <code>write/writeln</code> <i>первым</i> аргументом указываете файл (переменную), откуда читать или куда выводить. После работы с файлом "закрываете" его командой <code>close</code>. При этом тогда ваша программа <b>не должна ничего вообще</b> читать с клавиатуры! Т.е. по нажатию Ctrl-F9 черное окошко должно мелькать на мгновение, после чего должно возвращаться синее окошко паскаля.</p>\n\n<p>Пример кода, который читает из файла <code>input.txt</code> два числа и выводит в файл <code>output.txt</code> их сумму:</p>\n<pre>var f,g:text;\n    a,b:integer;\nbegin\nassign(f,\'input.txt\');reset(f); // "открыли" файл input.txt для чтения\nread(f,a,b); // из файла f прочитали числа a и b\nclose(f); // "закрыли" файл\nassign(g,\'output.txt\');rewrite(g); // "открыли" файл output.txt для записи\nwriteln(g,a+b); // вывели сумму чисел в файл g\nclose(g); // "закрыли" файл\nend.\n</pre>\n\n<p>Как тестировать такую программу? В оболочке паскаля вы можете открыть несколько окон (через меню File - Open). В одном набираете программу (и сохраняете файл как <code>чтонибудь.pas</code>), в другом редактируете входной файл (и сохраняете как требуется по условию), в третьем открываете выходной файл.</p>\n\n<p>Переключаться между окнами можно, нажав Alt-0 — будет окошко со списком всех открытых файлов. Можно также заметь в правом верхнем углу каждого окошка цифру (1, 2, 3 и т.д.) и переключаться в это окошко, нажав Alt-1, Alt-2 и т.п. Я, например, предпочитаю иметь в окошке "1" исходный текст программы, в окошке "2" входной файл, в окошке "3" выходной файл. Я не советую вам иметь много открытых окон — оставляйте открытыми только те окна, которые нужны для текущей задачи. Когда переключаетесь на новую задачу, закрывайте все окна от старой задачи и открывайте окна для новой задачи.</p>\n\n<p>Соответственно, теперь вводите тест в окошко с входным файлом, не забываете его сохранить (!), и запускаете программу. Если в одном из окон у вас открыт выходной файл, то после запуска программы паскаль вам будет выводить диалоговое окно вида "File output.txt has changed on disk. Reload?" ("Файл output.txt изменился на диске. Перезагрузить?"; точный английский текст я не помню.) Нажмите "yes" — и в окошке с выходным файлом его содержимое автоматически обновится.</p>\n\n<p>Тестировать программу так даже удобнее, чем при вводе с клавиатуры: если вы отлаживаете программу на конкретном тесте, то вам не надо его вводить заново при каждом запуске.</p>\n\n<p>Обязательно попробуйте работать с файлами <b>до олимпиады</b>!. Если на олимпиаде у вас не получается быстро наладить работу с файлами, то лучше попросите разрешения работать по старинке — с клавиатуры и на экран. Не теряйте время на то, чтобы разобраться с файлами на олимпиаде!</p>\n\n<h4>Алгоритмы</h4>\n<p>В основном большинство задач на школьной олимпиаде вряд ли будут требовать специальных знаний, особенных алгоритмов. Задачи, скорее всего, будут требовать только аккуратного размышления и аккуратной реализации; ничего такого, что мы с вами не проходили, не потребуется. Возможно, придется пописать что-то на бумажке, сделать какое-то моделирование и т.п. Все будет довольно похоже на задачи уровней 1В и 1Г. </p>\n\n<p>В наиболее сложных задачах, возможно, потребуются алгоритмы, обсуждаемые в уровнях 2А и 2Б — в первую очередь НОД, сортировки, простые числа и разложения на множители, может быть ДП. Если у вас уже решено хотя бы задач 10-15 уровней 1В/1Г, можете переключиться на эти темы на уровне 2, но не тратьте много времени — лучше порешайте еще задач с уровней 1В/1Г и научитесь тестировать задачи. Конечно, если у вас уже много задач уровней 1В/1Г решено и вы уже находитесь на уровне 2, то изучите эти темы.</p>\n\n<h4>Сложность алгоритмов</h4>\n<p>Важной вещью может оказаться определение того, насколько долго работает придуманный вами алгоритм на больших входных данных. Это обязательно стоит проверить, в идеале — еще до написания программы. Для этого существует понятие <i>сложности алгоритма</i>, про нее можно почитать <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/02_complexity.pdf">тут</a> (в первую очередь читайте часть 1; самое главное — в абзаце, который на стыке страниц 2 и 3, про 100 миллионов действий).\n\n</p><h4>Используйте компьютер по полной</h4>\n<p>Помните, что вы можете на компьютере не только писать программы-решения задач. Если вы, например, думаете над задачей, и вам стало важно узнать, чему равно 163*634, то не надо умножать числа в столбик. Воспользуйтесь калькулятором на компьютере или напишите отдельную программу из одного writeln/print. Если у вас в задаче описан какой-то процесс (есть N бактерий, они размножаются по каким-нибудь правилам, или что-нибудь подобное), не бойтесь написать отдельную программу, которая промоделирует этот процесс, выведет что вам надо, чтобы вы могли поискать какие-нибудь закономерности. И так далее. Не бойтесь писать вспомогательные программы.</p>\n\n<h4>Ищите закономерности</h4>\n<p>Наше жюри иногда любит давать задачи, в которых легко находится та или иная закономерность. Если вы не можете решить какую-то задачу для всех входных данных, то решите ее на бумажке для маленьких входных данных (или, с учетом предыдущего пункта — напишите простую программу, которая решит задачу для маленьких и средних входных данных), и посмотрите на ответы и решения глазами: вдруг вы найдете какую-нибудь закономерность.</p>\n\n<h4>Знакомые задачи</h4>\n<p>Авторы задач школьной олимпиады не очень изобретательны и нередко у них появляются задачи, которые вы уже знаете или которые очень похожи на что-то, что вы уже решали. (Например, год назад то ли на школьной, то ли на районной олимпиаде была задача "Автобусы" из наших "Продвинутых задач на условный оператор". Я не думаю, что авторы задач пользовались этим сайтом, скорее всего они сами независимо придумали эту задачу.) Не удивляйтесь, но решите-таки.</p>\n\n<h4>Если чего-то не знаете, ищите обходные пути</h4>\n<p>Если вы понимаете, что в задаче требуется что-то, чего вы не помните, не знаете, "не проходили" — попробуйте придумать обходной путь — как сделать то же самое, пусть сложнее, но с использованием тех вещей, которые вы знаете. Или как вообще решить задачу по-другому, не используя это знание вообще. Например, если вы не помните, какая функция переводит число в строку — подумайте, как написать такую функцию самостоятельно (подсказка: по аналогии со всякими задачами про цифры с уровня 1А). Или подумайте, а может быть, вам и не надо переводить число в строку вообще? Если вы поняли, что вам нужна сортировка, но вы не знаете, как ее делать — попробуйте или придумать, или придумать, как решать задачу без сортировки. Зачастую это получится. И так далее.</p>\n\n<h4>Здравый смысл</h4>\n<p>Ну и главное. Применяйте здравый смысл. Думайте головой, постоянно думайте над тем, что вы делаете, и помните, что <b>ваша цель на олимпиаде — как можно лучше выступить по сумме заданий.</b></p>\n\n<p>В частности, тут я написал много рекомендаций, дал ссылки на много текстов. Если вы их все прочитаете и поймете — хорошо. Но если вы успели прочитать не все, или не во всем разобрались — не так страшно. Если вы чего-то не поняли, не применяйте это на олимпиаде (ну или точнее, подумайте, не сможете ли вы на олимпиаде быстро допонимать). Не суетитесь и не переживайте, а спокойно решайте задачи.</p></div>', 'title': 'Про школьную олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_4', 'order': 5, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_5', 'order': 6, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про командную олимпиаду</h1>\n<p><b>Это относится только к нижегородским школьникам. В других регионах свои отборочные олимпиады, и я не буду собирать команды из школьников других регионов. Тем не менее, если вы не из Нижегородской области, у вас нет команды, и вы хотите поучаствовать вместе с другими школьниками, занимающимися на моем курсе, можете мне написать, я может быть стыкую вас с другими такими желающими (если такие "другие желающие" будут).</b></p>\n\n<p>В ноябре в в Нижегородском техническом университете (политехе) состоится <a href="http://www.nnstuicpc.ru">Командная олимпиада школьников Нижегородской области по программированию</a>, она же — отбор на <a href="http://neerc.ifmo.ru/school/russia-team/index.html">Всероссийскую командную олимпиаду школьников по программированию (ВКОШП)</a>. Участвуют команды из трех человек, подробные правила будут в информационном письме на сайте нижегородской олимпиады и на сайте ВКОШПа, они несколько отличаются от классических школьных олимпиад (пока на сайте нижегородской олимпиады еще ничего нет). Также подробные правила я могу рассказать желающим.</p>\n\n<p>Желающие могут участвовать, а именно:</p><p>\n</p><ol>\n<li>Из достаточно сильных школьников (примерно уровень 2В и выше), которые занимаются в моем курсе, я составлю команды. Я сам свяжусь с соответствующими школьниками в ближайшее время, или вы можете написать мне.</li>\n<li>Остальные могут составить команды сами. Сообщите мне на всякий случай, что вы хотите участвовать, возможно, я найду для вас команду, но в общем случае я не готов администрировать ваши команды (подавать заявку и т.п.). Тем не менее, во-первых, если в вашей школе есть много желающих участвовать, то можете подать заявку от школы (договориться с вашим учителем информатики и т.п.); во-вторых, если вы сами соберетесь в какую-нибудь сборную команду, даже из разных школ, то можете подавать заявку полностью самостоятельно. Я считаю, что вам может иметь смысл участвовать, если вы уже уровень 1В или выше, но, конечно, самостоятельно вы вольны подавать заявку как хотите.</li>\n</ol>\n\n<p>Уровень задач на олимпиаде, я думаю, стоит ожидать такой: будет одна-две простых задачи уровня школьной олимпиады (уровня 1Б), будет большая группа задач средней сложности — примерно от уровня районной до уровня областной олимпиады (примерно сложности 1В-3В), и будет одна-две очень сложные задачи. При этом, как всегда, не следует думать, что надо решать все задачи: думаю, основная борьба будет на уровне, где решены примерно половина задач. На сайте командной олимпиады вы можете посмотреть примеры задач прошлых лет (правда, если вы хотите участвовать в тренировках — см. ниже — то особенно не вникайте в задачи прошлых лет — мы как-нибудь напишем по ним тренировку).</p>\n\n<p>Несколько лучших команд с нижегородской олимпиады проходят на Всероссийскую командную олимпиаду школьников по программированию (ВКОШП). Сразу предупреждаю: во-первых, в области есть сильные команды, поэтому самостоятельно собранным командам будет довольно сложно пройти на ВКШОП. Во-вторых, если вы и пройдете на ВКОШП, то возможно поездку на ВКОШП вам никто не оплатит — возможно, надо будет ехать за свой счет или самим искать финансирование (говорить со школой и т.п.) (К моим командам — тех, у кого есть высокий шанс пройти на ВКОШП, я об этом предупрежу. Остальные, если вдруг пройдете, то будем думать.) (Возможно, финансирование все-таки найдем.)</p>\n\n<p>Но участвовать имеет смысл и даже без цели прохода на ВКОШП. Во-первых, это интересно и весело, во-вторых, дипломы и (небольшие) призы получат не только те команды, которые пройдут на ВКОШП.</p>\n\n<p>По воскресеньям параллельно с обычными занятиями скорее всего будут командные тренировки к командной олимпиаде. Тренировки длиннее по времени, чем обычные занятия (4-6 часов), время может быть сдвинуто относительно основных занятий — следите за объявлениями на страничке курса. Командам из п. 1 выше я настоятельно рекомендую участвовать (и я напишу в личку); если будут желающие участвовать из самостоятельно-собранных команд, то напишите мне.</p></div>', 'title': 'Про командную олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_6', 'order': 7, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_7', 'order': 8, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про районную/городскую олимпиаду</h1>\n<p><font color="red">Эта информация касается Нижегородской области. В других регионах могут быть отличия.</font></p>\n\n<p>Районная олимпиада, она же городская в ряде городов области (формально "муниципальный этап Всероссийской олимпиады школьников") пройдет, по текущей информации, <b>12 декабря</b>. Участие в ней принимают те, кто хорошо написал школьную олимпиаду. Критериев прохода со школьной на районную я точно не знаю, уточняйте у своих учителей. Кроме того, в олимпиаде принимают участие призеры и победители районной олимпиады прошлого года, даже если они не участвовали в школьной олимпиаде этого года.</p>\n\n<p>Участники районной олимпиады, хорошо ее написавшие, проходят на областную. Механизм здесь примерно следующий: все районы пишут по одним и тем же задачам. Все результаты сводятся в сводную таблица по всем районам области. В этой таблице проводят границу, и все школьники, набравшие больше определенного количества баллов, проходят на область. Это пороговое количество баллов определяется тем, чтобы на область прошло столько школьников, сколько область может принять; по разным классам порог разный.</p>\n\n<p>Чего стоит ожидать на районной олимпиаде? Примерно того же, что и на школьной (см. <a href="/material/module-16024_3" onclick="window.goto(\'/material/module-16024_3\')();return false;">соответствующий текст</a>), возможно, задачи будут сложнее. На страничке курса давно висит ссылка на <a href="https://www.dropbox.com/s/brq5dotrg4lmym2/raion_archive.pdf?dl=0">архив прошлогодних районных олимпиад</a>, посмотрите задачи там, очень рекомендую над ними подумать. Я не думаю, что будут требоваться какие-то более продвинутые знания, но прочитайте текст про школьную олимпиаду еще раз и учитывайте то, что там написано. На районной олимпиаде более вероятно, чем на школьной, что потребуются алгоритмы уровня 2-3. По опыту прошлых лет, может быть одна реально сложная задача. (Но в ее практически никто не решает.)</p>\n\n<p>Ближе к делу (8 декабря в ННГУ и 4 декабря в лицее 40) я проведу отдельное занятие, посвященное подготовке к районной олимпиаде.</p>\n\n<p>С позапозапрошлого года задачи районной олимпиады составляет другое жюри, поэтому задачи в этом году могут быть не похожими на те, что были четыре года назад и более. Обратите особое внимание на задачи за последние три года.</p>\n\n<p>Обязательно убедитесь заранее (спросите учителей в школе, чтобы они спросили организаторов районной олимпиады), что вам предоставят нужное ПО (нужный Питон, или Паскаль, или c++ с нужной средой и т.д.). Если есть какие-то проблемы, звоните, но это очень хорошо бы сделать заранее.</p>\n\n<p>Последние два года районная олимпиада проходила в системе Яндекс.Контест, скорее всего и в этом году будет так же. Тогда вы сможете в течение тура отправлять решения на проверку в тестирующую систему и узнавать результаты. Скорее всего, по каждой задаче будет выбрано ваше лучшее решение (набирающее больше всего баллов), и именно этот результат и будет вашим результатом по задаче. Я не знаю, будут ли в этом году штрафы за неверные попытки, постараюсь узнать ближе к делу, в прошлом году не было. </p>\n\n<p>Количество отправок решений на проверку скорее всего будет ограничено, оно будет указано в тестирующей системе. В прошлом году в качестве примера было приведено ограничение в 100 попыток, что на самом деле очень много и фактически эквивалентно бесконечному количеству попыток (вряд ли кто из вас реально израсходует 100 попыток), но в реальности может оказаться меньше.</p>\n\n<p>Это обозначает, что все будет довольно похоже на то, как вы работаете на сайте (только, в отличие от сайта, частичные решения тоже оцениваются). Если у вас программа не прошла тесты, вы можете ее пересдать. Поэтому, в частности, если за неудачные попытки нет штрафов, то не обязательно поначалу тщательно тестировать простые задачи — потестируйте немного, отправьте решение на проверку и, если оно набирает полный балл, то забудьте про эту задачу. Вот в противоположном случае тестируйте внимательнее.</p>\n\n<p>Возможно, будут еще какие-то неожиданности и отличия, будьте к ним готовы. По идее вам должны заранее объявить полные правила, хотя по факту это бывает редко. Но можете заранее спросить в школе, нет ли у них данных о том, как будет проводиться олимпиада; я со своей стороны попробую это тоже выяснить.</p>\n\n<p>Если же у вас в районе внезапно проводят олимпиаду не в Яндекс.Контесте, то требуйте Я.Контест и/или срочно звоните мне. Если у вас будут проводить по старинке, с ручным тестированием, то вы сразу оказываетесь в заведомо проигрышном положении по сравнению с другими районами — в других районах участники будут узнавать результаты в течение тура и смогут исправлять решения, а у вас — нет. Поэтому требуйте Яндекс.Контест и отстаивайте свои права.</p>\n\n<p>Важный момент — не полагайтесь на Яндекс.Контест. Будьте готовы в случае чего сдавать решения по старинке в конце тура. В частности, не теряйте свои решения! Если вы отправили решение в Контест, не удаляйте его у себя, и уж тем более не начинайте решать другую задачу в том же файле. Контест может заглючить, может потерять ваши решения, и т.д. — если и вы их тоже потеряете, все будет совсем плохо. А если решения останутся у вас на компьютере, вы хотя бы сможете потом что-то поапеллировать.</p>\n</div>', 'title': 'Про районную/городскую олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_8', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'reg_about', 'order': 10, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix">\n\n<h1>Про областную олимпиаду</h1>\n\n<p><i>(C) Петр Калинин, 2015-20. Этот текст можно свободно распространять на условиях лицензии Creative Commons Attribution-ShareAlike 2.0 (CC-BY-SA). Пожалуйста, при ссылках на этот текст используйте адрес <a href="/material/reg_about" onclick="window.goto(\'/material/reg_about\')();return false;">algoprog.ru/material/reg_about</a></i>\n\n</p><p><font color="red">Часть информации касается только Нижегородской области, часть относится ко всем регионам.</font></p>\n\n<p>Областная олимпиада по информатике (формально — региональный этап Всероссийской олимпиады) пройдет в два тура 16 и 18 января в ННГУ им. Лобачевского.</p>\n\n<h2>Отбор на область</h2>\n\n<p>Отбор на нее осуществляется следующим образом. Решения районной (она же городская в ряде городов области — Дзержинске, Арзамасе и т.д.) олимпиады сводятся по каждому классу в единую таблицу, и в этой таблице проводится граница: для каждого класса выбирается проходной балл, и все, кто набрал столько баллов или больше, проходит на область. Кроме того, вне зависимости от результатов районной олимпиады, на областную проходят призеры прошлогодней областной олимпиады.</p>\n\n<p>В этом году проходные баллы — 200 баллов по каждому классу. На <a href="http://imc.codnn.ru/vserossijskaya-olimpiada-shkolnikov/">сайте ЦОДа</a> есть итоговые результаты и списки участников областной олимпиады (где нужен пароль к архиву — пароль "2019"); в <a href="https://docs.google.com/spreadsheets/d/1Li__hzA7ZjyBR1y-2Nej0tW8TEesP-IG6gbYaPJk81s/edit#gid=0">отдельном гуглодоке</a> я свел результаты из Я.Контеста с результатами с сайта ЦОДа.</p>\n\n<h2>Формат областной олимпиады</h2>\n<p>Ну, во-первых, областная олимпиада — это фактически первая серьезная олимпиада для многих из вас. Школьная и районная олимпиады — это скорее игрушки, как по тому, какие задачи предлагаются, так и по организации вообще и по сложности прохода на следующий этап. Сильные школьники должны проходить на область "на классе", т.е. абсолютно уверенно, не прилагая особенных усилий, чисто за счет уже давно имеющихся навыков. Областная же олимпиада — это совсем другое, там и задачи ощутимо более сложные, и организация лучше. Областная олимпиада проходит в одно и то же время по одним и тем же задачам по всей России, так что это фактически крупнейшая олимпиада по информатике в России.</p>\n\n<p>Областная олимпиада проходит в два тура по пять часов каждый. На каждом туре вам, скорее всего, будут предложены 4 задачи. Примеры прошлогодних задач вы можете посмотреть и попробовать посдавать на этом сайте, ссылка есть в конце раздела "О курсе", в разделе "Архивы старых олимпиад". Но сначала прочитайте до конца этот текст.</p>\n\n<p>Вообще, если раньше вы в областных олимпиадах не участвовали, то я рекомендую вам в зимние каникулы найти свободные пять часов и сесть и порешать какой-нибудь тур с одной из олимпиад последних лет, представляя, что вы реально сидите на олимпиаде. Еще лучше сделать это пару раз. Во-первых, если вы ни разу раньше не писали пятичасовые туры, это вам будет полезно как минимум с точки зрения понимания того, насколько вам сложно просто думать над задачами 5 часов подряд. Во-вторых, вы поймете примерно, чего вы можете ожидать на области.</p>\n\n<h2>Языки программирования</h2>\n<p>Набор языков программирования будет определяться жюри. Почти наверняка будут Free Pascal и C++ (Visual Studio, по идее должен быть минимум C++11). Скорее всего будут C# и Python. Будет ли Pascal ABC, я не знаю. Обычно жюри старается вкючить разумный набор языков, но и вы со своей стороны можете попросить школу официально заявить вам нужный язык и проверить, что он будет. С другой стороны, вроде последние годы серьезных проблем с языками на области не было.</p>\n\n<p>(Вообще, по поводу общения с жюри в целом — я, конечно, могу что-то написать в жюри, и жюри зачастую прислушивается ко мне, но надо понимать, что я не являюсь официальным представителем вас, вашей школы и т.д., поэтому жюри может и полностью проигнорировать мой вопрос. Поэтому помимо того, что я могу общаться с жюри неофициально, вы лично, а также ваши родители и ваша школа могут общаться с жюри официально, и в случае каких-то серьезных проблем это может быть полезно.)</p>\n\n<h2>Система оценивания</h2>\n<p>До 2014<sup>1</sup> года включительно областная олимпиада оценивалась очень похоже на  школьную: вы пять часов писали задачи, после чего жюри брало ваши решения и проверяло на заранее подготовленных тестах; при этом каждый тест оценивался отдельно. В процессе этой проверки вы уже ничего не могли исправить в своих решениях.</p>\n\n<p><sup>1</sup> Областная олимпиада всегда проводится после Нового года, поэтому здесь и ниже, говоря «олимпиада 2014 года», я имею в виду олимпиаду 2013-14 уч. года, и аналогично про другие годы.</p>\n\n<p>С 2015 года введена новая система — так называемая система с подзадачами и фидбеком (обратной связью). Она работает примерно следующим образом.</p>\n\n<h4>Подзадачи</h4>\n\n<p>Во-первых, в каждой задаче выделяются <i>подзадачи</i> — вариации той же задачи, как правило, с меньшими ограничениями или с дополнительными условиями. Например, если в основной задаче сказано $1\\leq N\\leq 10000$, $1\\leq K \\leq 10$, и еще задан массив $a$, а в задаче идет речь про то, что надо как-то ходить направо и налево, то подзадачи могут быть, например, такими:</p>\n<ul>\n<li>Подзадача 1: $N\\leq 100$ и $K=1$;</li>\n<li>Подзадача 2: $N\\leq 100$, но $K&gt;1$;</li>\n<li>Подзадача 3: $K=1$, но $N&gt;100$;</li>\n<li>Подзадача 4: все элементы массива $a$ одинаковы;</li>\n<li>Подзадача 5: в оптимальном решении никогда не надо ходить налево;</li>\n<li>Подзадача 6: никаких дополнительных ограничений нет.</li>\n</ul>\n<p>В каждой подзадаче все не указанные явно ограничения подразумеваются взятыми из основной задачи, например, в четвертой подзадаче подразумевается, что $N\\leq 10000$, $K\\leq 10$ и нет никаких дополнительных условий по тому, как выглядит ответ.</p>\n\n<p>Таким образом, подзадачи — это упрощенные варианты основной задачи. Как правило, для каждой подзадачи существует свой алгоритм решения, который проще, чем алгоритм, решающий полную задачу. Поэтому, если вы можете написать решение полной задачи, то пишите его (почти всегда у задачи есть естественное "полное" решение, которое автоматически решает и подзадачи, поэтому если вы можете без проблем его написать, то напишите, и не думайте про подзадачи), а если нет, то пишите решения подзадач.</p>\n\n<p>При этом подзадачи оцениваются хитро. В некоторых подзадачах, как и раньше, каждый тест оценивается независимо: за каждый тест начисляется несколько баллов, и чем больше вы тестов прошли, тем больше у вас баллов. Но в некоторых подзадачах (обычно в более простых) баллы начисляются по принципу "всё или ничего", т.е. вы получаете не ноль баллов за эту подзадачу <b>только если у вас прошли все тесты этой подзадачи</b>. Т.е. если вы прошли все тесты этой подзадачи, вы получаете полный балл за нее, иначе вы получаете ноль баллов за эту подзадачу. Собственно сами подзадачи обычно оцениваются независимо, но бывает даже так, что очередная подзадача оценивается только если в предыдущих подзадачах все тесты пройдены. Правила оценивания каждой подзадачи указаны в условиях; посмотрите примеры задач прошлых лет, чтобы понять, как это.</p>\n\n<p>Это обозначает, что вам как правило нет смысла писать "какие-то" решения. Вы должны написать решение, которое как минимум абсолютно корректно решает как минимум простые подзадачи. Навыки тестирования задач становятся очень важны; если вы все еще не читали <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">мой текст</a> про это, то прочитайте.</p>\n\n<h4>Фидбек</h4>\n\n<p>Но, чтобы компенсировать увеличение сложности от введения подзадач, также вводится так называемый фидбек. А именно, <b>в течение тура вы можете отправлять ваши решения на проверку</b>. Решения будут проверяться на всех финальных тестах, и после проверки вы можете попросить, чтобы вам сообщили результат этой проверки. Скорее всего, у вас на компьютере будет стоять клиент тестирующей системы нашего жюри, вы через этот клиент будете отправлять решения, и в нем же будет какая-нибудь кнопочка типа "узнать результат этого решения". Соответственно, узнав результат, вы можете дальше планировать свою работу.</p>\n\n<p>Бывают три варианта того, что вам сообщают в качестве результата, и это зависит не только от задачи, но и от подзадачи. В каких-то подзадачах вам могут сообщать информацию по каждому тесту, прошел он или нет (или даже если не прошел, то почему — неправильный ответ, превышение предела времени и т.п. — всё очень похоже на то, что вы видите на этом сайте на закладке "результаты"). В других подзадачах вам могут только сообщать полный балл за эту подзадачу. В третьих подзадачах — первый непройденный тест и вердикт на нем (как на командных олимпиадах). Что именно вам сообщают, обычно указывается в условии.</p>\n\n<p>При этом может быть установлено ограничение на количество посылок вида, например, «по каждой задаче за весь тур вы можете сделать не более 50 попыток», или что-то подобное. Тогда, после того, как у вас кончились эти 50 попыток, вы, видимо, больше не можете решать эту задачу.</p>\n\n<h4>Итоговая оценка</h4>\n\n<p>Итоговая оценка за каждую задачу — это максимальный балл из всех отправленных вами решений. Итоговый суммарный результат, конечно, есть сумма баллов по всем задачам.</p>\n\n<p>Тут важны два момента. Во-первых, учитываются только <i>отправленные</i> в систему решения, а не просто сохраненные вами в вашем рабочем каталоге. Во-вторых, если одно из ваших решений набирает баллы только по одной подзадаче, а второе — только по второй, но вы не сдали решения, которое набирало бы баллы по обеим подзадачам, то вы получите баллы только за одну подзадачу (от того решения, которое набирает больше баллов). Аналогично если одно решение проходит только два теста из некоторой подзадачи, в которой все тесты оцениваются независимо, а другое решение проходит только два других теста, то вы не получите суммарного балла.</p>\n\n<h4>Тесты из условия</h4>\n<p>Раньше присутстввало требование, что ваше решение <b>обязано проходить все тесты из условия</b>, даже если эти тесты не попадают под ограничения той подзадачи, на которую вы нацелились. Например, в примере подзадач, приведенном выше, если в условии есть тест с $K=2$, то, даже если вы придумали только решение для $K=1$ и рассчитываете только на баллы за соответствующую подзадачу, то все равно от вас могут потребовать, чтобы вы прошли тест из условия с $K=2$. Если хотя бы один тест из условия не пройден, то вы получаете ноль баллов за это решение.</p>\n\n<p>В этом году в официальных требованиях про это ничего не написано. Но я не буду удивлен, если в тестирующей системе это будет, поэтому будьте к этому готовы.</p>\n\n<p>В таком случае обязательно убедитесь, что вы умеете проходить все тесты из условия. Если надо, то добавьте соответствующий <code>if</code>, и просто напишите <code>writeln</code> с тем ответом, который указан в условии. Типа того:\n</p><pre>// пусть в условии есть следующие тесты:\n// n=3, k=1, решается основным алгоритмом\n// n=3, k=2, ответ 42\n// n=5, k=2, ответ 137\nread(n,k);\nif k=2 then begin\n    if n=3 then writeln(42)\n    else writeln(137);\n    halt;\nend;\n// дальше решение для k=1\n</pre>\n<p>В условии обычно не так много тестов, и не так уж и сложно написать ряд <code>if</code>\'ов, которые будут все эти тесты различать.</p>\n\n<h4>Явный if</h4>\n<p>Вот выше я уже написал, что тесты из условия можно отличать, написав явный <code>if</code> и <code>writeln</code>. Ничего в этом зазорного нет. Аналогично вы можете писать явный <code>if</code> для различения подзадач. Если вы придумали одно решение для $K=1$ и еще одно решение для случая, когда все элементы массива $a$ равны, то не стесняйтесь написать в программе <code>if</code>, отличающий эти два случая, и запускать разные алгоритмы в зависимости от теста — именно так, если у вас есть решения двух подзадач, вы их можете объединить в одно решение.</p>\n\n<p>Кстати, еще важный момент — если ваша программа видит, что ей попался тест, который не попадает ни под одну подзадачу из тех, для которых у вас есть решение, то не надо сразу вылетать. Хуже не будет, если вы для этого теста запустите решение какой-нибудь подзадачи, вдруг тест-другой так и пройдут.</p>\n\n<h2>Особенности задач</h2>\n<p>Задачи на областной олимпиаде могут быть сильно варьирующимися по сложности. Как правило, самая простая задача будет действительно простой, не требующей ничего знать, примерно уровня 1В. Самая же сложная будет очень сложной, может требовать хитрых знаний, может быть даже уровня эдак 11-го; вообще, год из года только несколько человек по всей России на областных набирают полный балл (800).</p>\n\n<p>Обычно задачи в туре устроены так: первая задача самая простая. Она обычно не требует ничего знать; вы ее должны решать на полный балл. Вторая задача чуть посложнее. Ее тоже хорошо бы решить на полный балл, но это получается не всегда. Третья обычно довольно сложная, но для самых крутых из вас она вполне должна быть по силам. Четвертая же задача обычно очень сложная, почти наверняка никто в области не решит обе четвертых задачи.</p>\n\n<p>Но бывает по-разному. То, что написано в предыдущем абзаце — это наиболее распространенная схема, см, например, первый тур 2014 года как один из самых ярких примеров таких сильно распределенных по сложности задач. Но бывает и так (и последние годы все чаще и чаще), что распределение задач по сложности намного менее выражено. Вполне может первая задача оказаться не самой простой, а последняя вполне посильной; вполне может вторая задача оказаться сравнимой по сложности или даже проще первой. Тем не менее обычно задачи все-таки идут более-менее в порядке возрастания сложности.</p>\n\n<p>Но всегда помните, что в каждой задаче есть подзадачи! Как правило, даже в самых сложных задачах первые подзадачи очень простые; часто в них достаточно перебрать все возможные решения парой вложенных <code>for</code>\'ов или т.п.; в крайнем случае написать рекурсивный перебор или какой-нибудь простой алгоритм. Поэтому обязательно решайте не только первые задачи туров, но и последние (пишите в них простые подзадачи)! Обязательно постарайтесь, чтобы <b>по каждой задаче у вас было ненулевое количество баллов!</b></p>\n\n<p>Вообще, на самом деле, как показывает опыт, вполне реально в каждом туре набрать хотя бы 200 баллов, поэтому и постарайтесь это сделать. В идеале надо решать полностью первые две задачи каждого тура, но, даже если не получилось, то недостающие до 200 баллы можно набрать в более сложных задачах. 400 баллов в сумме за два тура — это вполне достойный результат. (Конечно, это общая рекомендация; ясно, что сильные школьники должны набирать больше, а для не очень сильных и 200-300 в сумме будет хорошо. Но тем не менее баллов 150 в каждом туре обычно можно набрать вообще не думая, поэтому 200 за тур — это хорошая цель для большинства из вас.)</p>\n\n<p>Для сравнения, баллы прохождения на собственно Всероссийскую олимпиаду обычно примерно такие: по 9 классам — 450-580, по 10 классам — 500-600, по 11 классам 550-650. Проход на Россию — это очень и очень хороший результат. (Ну, для всех, кроме тех, кто на Россию уже ездил :) )</p>\n\n<p>Возможно, будет ввод из файла, хотя скорее всего будет будет только ввод с клавиатуры.</p>\n\n<h2>Про языки программирования</h2>\n\n<p>Про питон: на питоне вы, возможно, не сможете в принципе решить отдельные задачи на полный балл (возможно, не сможете решить вторую, а может быть, даже первую) — потому что решение не будет успевать по времени. (Но это не обозначает, что любые проблемы в задаче надо списывать на то, что это питон. Имейте в виду то, что на питоне может не успевать по времени; полезно оценить сложность алгоритма и прикинуть, успел ли бы такой алгоритм на C++; но если вы придумали явно неоптимальный алгоритм, то надо все-таки придумать нормальный алгоритм.) Но эту невозможность решить задачи на полный балл вы можете компенсировать тем, что на питоне вы можете заметно быстрее и легче писать небольшие подзадачи в сложных задачах, да и первую задачу вы возможно напишите быстрее, чем ваши друзья, пишущие на C++. С другой стороны, если вы хотите иметь хороший результат на областной олимпиаде, то, конечно, надо бы уже знать C++ (но если вы хотите иметь хороший результат, то наверное вы уже минимум на 3 уровне, а тогда про C++ вы уже читали).</p>\n\n<p>Если же вы знаете и C++, и питон, то, конечно, по каждой задаче выбирайте, на каком языке лучше писать.</p>\n\n<p>Паскаль по производительности сравним с C++, поэтому там проблем со временем работы быть не должно.</p>\n\n<h2>Тактика поведения на туре</h2>\n<p>Во-первых, все мои рекомендации из <a href="/material/module-15955_1" onclick="window.goto(\'/material/module-15955_1\')();return false;">текста про школьную олимпиаду</a> справедливы. Прочитайте все условия сразу, еще до того, как что-то программировать. Контролируйте время, не зависайте над одной задачей надолго. Как я уже писал выше и как писал в тексте про школьную олимпиаду, старайтесь, чтобы по всем задачам у вас был не ноль. Сохраняйте решения, чтобы, если у вас зависнет компьютер или выключится электричество, решения не пропали; вообще, полезно привыкнуть нажимать "сохранить" (F2 или Ctrl-S в разных средах программирования) каждые минуту-другую.</p>\n\n<p>Обязательно внимательно сравнивать ответ с примером. Один раз был случай, когда участник выводил два числа на двух разных строках, а в задаче требовалось вывести два числа на одной строке — и тестирующая система нашего местного жюри отказывалась засчитывать это решение (хотя это и не соответствовало требованиям центрального всероссийского жюри). Конечно, это вина жюри, но школьнику от этого было не сильно легче (после тура мы отапеллировали эти баллы, но время на туре было все равно потрачено). Поэтому если вы видите, что ваша программа выводит не совсем то, что в примере, тщательно перепроверьте, правда ли, что ваше решение правильное.</p>\n\n<p>Но наличие фидбека и четко выделенных подзадач вносит свои ньюансы в тактику. Во-первых, если вы видите, что задача простая, то напишите ее, сдайте, убедитесь, что у вас 100 баллов, и забудьте про нее вообще. Более конкретно: если вы считаете, что какая-то задача простая, если вы думаете, что там особенно негде ошибиться, то напишите ее, слегка потестируйте, не тестируйте подробно (!) и сдайте. Если у вас 100, то забудьте про нее. Если же нет, то начинайте тестировать. Не тратьте время на простые задачи, если вы можете сразу проверить, работают они или нет. (Если есть ограничение на количество попыток по задаче, то сказанное выше справедливо, если у вас еще было немного попыток по задаче. В таком случае помните про ограничение количества попыток по задаче; чем меньше у вас остается попыток, тем тщательнее тестируйте и аккуратнее расходуйте попытки.)</p>\n\n<p>В более сложных задачах часто бывает полезно написать первую подзадачу, если она простая и пишется недолго. А именно, подумайте над сложной задачей. Если сразу ничего, что могло бы решить задачу полностью, в голову не приходит, то попробуйте придумать решение к первой подзадаче. Если получилось придумать простое решение, то напишите его и сдайте — у вас уже станет не ноль баллов, и заодно вы будете уверены, что вы понимаете задачу верно. Наконец, простое решение потом можно использовать для стресс-тестов. Но это только для не самых простых задач; в простых задачах не тратьте время на подзадачи, если вы можете написать полностью задачу!</p>\n\n<p>Наоборот, если вы написали "полное" решение, оно на ваших тестах работает, но у жюри упорно набирает мало баллов, то можно написать простое решение первой подзадачи, отправить его, убедиться, что уж оно-то верное, и дальше написать стресс-тестирование. Очень полезно заранее научиться стресс-тестированию (см. еще раз <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">текст про тестирование задач</a>)!</p>\n\n<p>Контролируйте время до конца тура. Если вы придумали сложное решение, которое может решить сложную задачу полностью, но видите, что вы рискуете не успеть его дописать (и помните, что вам наверняка придется его отлаживать и тестировать! — вряд ли оно сразу 100 наберет), то может быть проще прерваться и написать простое решение по той же задаче, чтобы уж гарантированно иметь не ноль.</p>\n\n<p>Если есть ограничение на количество попыток по задаче, то контролируйте количество оставшихся попыток. 50 попыток — это реально много и в подавляющем большинстве случаев достаточно, но если вы будете их активно расходовать, то они могут внезапно кончиться. Вообще, по всем задачам, кроме самых сложных, думаю, реально использовать не больше 5 попыток за тур.</p>\n\n<p>Конечно, даже если самую простую подзадачу вы уже решили, это не значит, что надо сразу бросаться на полное решение — все вышеописанные соображения применимы, но к следующим подзадачам. Если не получается придумать или написать полное решение, то напишите решение к еще одной подзадаче, объедините с написанным ранее и сдайте. Помните, что подзадачи сделаны не просто так, каждая подзадача имеет какое-то более простое решение.</p>\n\n<p>Не теряйте решения! Вообще, постарайтесь сохранять все свои решения, которые вы отправляете в систему и которые там набирают какие-то баллы. Будет очень неприятно, если вы решили простую подзадачу, потом стали писать общий алгоритм, он в результате не заработал даже для простой подзадачи, а решения простой подзадачи у вас уже нет. Конечно, правило оценки лучшего решения вас частично от этого спасает, но лучше подстрахуйтесь. Еще хуже если вы решили первую подзадачу, начали писать вторую подзадачу, она у вас даже заработала, но при этом сломалось решение первой. Вам бы объединить два решения, но для этого надо иметь решение первой подзадачи.</p>\n\n<p>В частности, не полагайтесь на то, что вы сможете скачать решение из тестирующей системы! Система может заглючить, может потерять ваши решения, и т.д. — если и вы их тоже потеряете, все будет совсем плохо. А если решения останутся у вас на компьютере, то, на худой конец, вы сможете их использовать для апелляции.</p>\n\n<p>Вообще, я бы считал, что у успешного участника должны быть примерно следующие "вехи" во времени (конечно, это "средняя температура по больнице", т.е. варьироваться может очень и очень сильно, но тем не менее) (время везде от начала тура):</p>\n<ul>\n<li>0:10: прочитаны все задачи;</li>\n<li>0:45-1:00: есть 100 по одной из задач;</li>\n<li>2:00-2:30: есть 100 по двум задачам или в крайнем случае 100+60;</li>\n<li>3:30: написаны простые подзадачи в двух сложных задачах, соответственно есть 100+100+30+20 или в крайнем случае 100+60+30+20;</li>\n<li>оставшееся время добиваем недорешанные задачи.</li>\n</ul>\n<p>Еще раз: это очень среднее, и это "идеал" для такого "среднего", и это из предположения, что задачи сильно распределены по сложности. Но это очень грубый ориентир.</p>\n\n<p>Да, все написанное про подзадачи выше подразумевает, что у каждой задачи есть естественное правильное решение, автоматически решающее и все подзадачи тоже; в таком случае вы теоретически можете решить задачу полностью, не думая про подзадачи вообще; так обычно и бывает. Но я не исключаю, что могут быть и задачи, где подзадачи различны настолько, что даже в самом простом и правильном решении удобнее их рассматривать отдельно.</p>\n\n<h2>Особенности C++</h2>\n<p>Если вы пишите на C++, то есть ряд особенностей, которые вам полезно и даже необходимо знать.</p>\n<h4>Быстрый ввод-вывод</h4>\n<p>Стандартный ввод/вывод через <code>iostream</code> (т.е. с использованием <code>cin</code>/<code>cout</code>) по умолчанию работает медленно на больших данных. Если вам надо ввести, допустим, 100000 чисел, то с использованием <code>cin</code> вы наверняка получите time limit; аналогично если вам надо выводить много данных. Это связано с двумя проблемами.</p>\n\n<p>Во-первых, медленно работает <code>endl</code> (для тех, кто понимает — вывод в <code>cout</code> буферизуется, но <code>endl</code> каждый раз сбрасывает буфер, реально выводя данные на диск, а реальный доступ к диску работает медленно). Поэтому не используйте <code>endl</code> вообще, используйте <code>\'\\n\'</code>.</p>\n\n<p>Во-вторых, есть еще проблема синхронизации с <code>stdio</code> (не буду сейчас подробнее писать, что это значит). Чтобы эту проблему побороть, есть три способа:</p>\n<ul>\n<li>Работать с файлами, а не с клавиатурой/экраном (если это будет допустимо на олимпиаде). У <code>fstream</code> таких проблем со скоростью работы нет.</li>\n<li>Использовать для ввода/вывода конструкции из <code>stdio.h</code> (<code>scanf</code> и <code>printf</code>), а не из <code>iostream</code>.</li>\n<li>Написать в самом начале программы две магические строчки (их надо выучить наизусть): \n<pre>std::ios_base::sync_with_stdio(false);\nstd::cin.tie(nullptr);\n</pre></li></ul>\n\n<p>Лично я вам рекомендую использовать первый или последний вариант.</p>\n\n<p>Еще раз: есть <b>две</b> проблемы: одна с <code>endl</code>, другая с синхронизацией stdio и iostream. Одна решается тем, что вы не используете <code>endl</code>, другая — вот одним из трех описанных выше способов. Вам надо решить <b>обе</b> проблемы, т.е. и не использовать <code>endl</code>, и как-то разобраться с синхронизацией. Типичная ошибка — написать в начале программы этот страшный код с <code>sync_with_stdio</code>, но выводить все равно через <code>endl</code>. Получите time limit exceeded все равно.\n\n</p><h4>Установка стека в Visual Studio</h4>\n<p>В популярных компиляторах C++ по умолчанию установлен очень маленький размер стека. Если в вашей программе глубокая рекурсия (например, если вы пишете поиск в глубину), то программа может упасть.</p>\n\n<p>В GCC попросить большой размер стека из самой программы невозможно, это должно настраивать жюри при настройке компиляции. На нормальных олимпиадах жюри прописывает большой размер стека в настройки компиляции, будет ли это на нашей области — я не знаю.</p>\n\n<p>Но в Visual Studio можно установить необходимый размер стека прямо из программы примерно следующей конструкцией (проверьте заранее!): <code>#pragma comment(linker, "/STACK:32000000")</code>, здесь число — это необходимый вам размер стека в байтах (в этом примере 32 миллиона байт, т.е. примерно 32 Мб). Размер стека можете посчитать в уме исходя из вашей программы, а можете и подобрать опытным путем — 32-64 Мб обычно достаточно. Учитывайте еще, конечно, ограничение по памяти.</p>\n\n<p>Поэтому если жюри на олимпиаде нормально настроит стек в gcc (это должно быть видно в строках компиляции gcc в памятке участника), то сдавайте под gcc. Иначе если ваше решение под gcc не влезает в стек, то добавьте эту магическую строку и сдавайте под Visual Studio.</p>\n\n<h2>Про надежность тестирующих систем</h2>\n<p>Возможно, на турах будет использоваться тестирующая система нашего жюри, но скорее всего будет Яндекс.Контест (как последние несколько лет и на области, и на районе), возможно, какая-то еще из известных тестирующих систем. С любой системой возможны различные проблемы, например, тестирующая система нашего жюри может неправильно оценивать корректность решений (см. выше пример с выводом в одной строке или на разных строках), а Яндекс.Контест печально известен тем, что регулярно не справляется с нагрузкой на первом туре и тестирует решения по несколько часов (!); на втором туре все обычно работает нормально. Правда, в прошлом году вроде с этим уже не было проблем, надеюсь, что и в этом не будет. Я не знаю, какая система будет в этом году, и будут ли в ней проблемы и какие, поэтому если что-то идет не так, то думайте головой и действуйте по обстоятельствам. Например, если ваши решения тестируются долго — не паникуйте, а просто переключайтесь на другие задачи, ну и тщательнеее сами тестируйте те решения, которые вы отправляете на проверку.</p>\n\n<h2>Дополнительные замечания</h2>\n<h4>Не пугайтесь!</h4>\n<p>Год из года регулярно многие школьники на областной олимпиаде показывают результат хуже, чем от них можно было ожидать. Возможно, многие пугаются непривычной системы задач, системы тестирования и т.д. Так вот, не пугайтесь. Вы вполне способны показать весьма неплохой результат.</p>\n\n<h4>Ищите обходные решения проблем</h4>\n<p>Если у вас что-то не получается, вы не помните, как что-то сделать в вашем языке программирования и т.п. — подумайте, как эту проблему можно обойти. Если вы не помните простого способа что-то сделать, то, может быть, есть более сложный? Если у вас не работает какой-то код, может быть, можно написать как-то по-другому, пусть и сложнее, но надежнее? И т.д.</p>\n\n<h4>Неполадки на туре</h4>\n<p>Если у вас на туре что-то из оборудования работает не так, как вы хотите, сразу же спрашивайте жюри! Если, например, не работает клавиатура, или если программа не запускается с очень непонятными сообщениями об ошибках, то сразу зовите жюри! У нас в ННГУ часто бывает так, что антивирус мешает нормальной работе (например, удаляя exe-шник сразу после его создания, или очень задерживая запуск программы — вы в ННГУ на занятиях иногда это наблюдали, на занятиях это еще не так страшно, но на олимпиаде — ненормально) — сразу зовите жюри и просите отключить антивирус. Если жюри решает вашу проблему долго, требуйте компенсации времени.</p>\n\n<h4>Не уходите без баллов</h4>\n<p>По идее, после каждого тура у вас будет обед в столовой университета, потом разбор задач и объявление итогов тура. Я очень вам рекомендую дождаться объявления итогов. Последнее время обычно жюри раздает каждому участнику бумажки с его баллами — вот получите эту бумажку, чтобы проверить, что все подсчитано верно. У нашего жюри регулярно случаются проблемы с подсчетом баллов, поэтому лучше дождитесь и проверьте, что все соответствует вашим ожиданиям. Конечно, вы по идее должны знать свои баллы за счет фидбека, но лучше все-таки дождитесь бумажки.</p>\n\n<p>Я буду на олимпиаде на втором туре как перед туром, так и после тура и на закрытии; и постараюсь также подъехать когда-нибудь в день первого тура (или на открытие, или после тура, или и тогда и тогда). Если окажется, что вам неправильно посчитали баллы, то мы с вами можем пойти и поругаться. Но если вы уйдете раньше и не получите бумажку с результатами, то я сам за вас ругаться не пойду; как минимум, вы намного лучше меня знаете, чего вы ожидали.</p>\n\n<h4>Укажите меня своим преподавателем</h4>\n<p>Как я где-то уже писал, <b>пожалуйста, укажите меня своим преподавателем</b>, если наши занятия были для вас достаточно полезными. А именно, попросите школу указать меня преподавателем в заявке. На регистрации на олимпиаду перед первым туром обычно можно проверить, кто у вас указан и, если хотите, наверное можно будет исправить.</p>\n\n<h4>Прочитайте этот текст еще раз перед олимпиадой</h4>\n<p>Я могу вспомнить что-то и добавить в этот текст новую информацию. Поэтому прочитайте его перед олимпиадой еще раз.</p>\n\n<h4>Местное жюри и вариации</h4>\n<p>Все написанное выше написано по мотивам официальных правил областной олимпиады. К сожалению, наше местное жюри не всегда понимает эти правила до конца. (Правила, равно как и условия задач и тесты, составляются централизованно на всю Россию.) Например, в 2015 году они не хотели обеспечивать фидбек. Поэтому будьте готовы к каким-нибудь вариациям (например, они могут сказать, что финально будет оцениваться только то решение, которое вы оставите у себя в рабочем каталоге, а не то, которое вы сдавали). Мое мнение — пока эти вариации не сильно вам портят жизнь, не стоит ругаться с жюри; если же это что-то серьезное, то будем ругаться.</p>\n\n<p>Например, если они хотят, чтобы вы оставляли свое решение в рабочем каталоге — ну так сохраните свое лучшее решение и оставьте, не так уж это и сложно, так и вам и мне и жюри спокойнее. Конечно, если в итоге вы сохраните по ошибке не то решение и потеряете баллы из-за того, то будем ругаться, но лучше до этого не доводить. Если же жюри что-то глобальное сделает не так (например, отменит фидбек), то я буду ругаться сразу.</p>\n\n<p>Полные официальные Требования к проведению регионального этапа, которые обязательны к соблюдению во всех регионах, можно почитать <a href="http://vserosolymp.rudn.ru/mm/mpp/files/tr20/Информатика%20-%20Требования%20к%20проведению%20регионального%20этапа%202020.pdf">вот здесь</a>. Рекомендую почитать всем, кто участвует в регионе не первый раз и серьезно рассчитывает на высокий балл; а также если у вас возникли какие-то специфические вопросы (например, «можно ли разные задачи решать на разных языках программирования»).</p>\n\n<h1>Советы от <a href="/user/254947" onclick="window.goto(\'/user/254947\')();return false;"><span class="_client_components_UserName__name" style="color:#7b0000">Алексея Упирвицкого</span></a></h1>\n\n<p>(c) Алексей Упирвицкий, CC-BY-SA</p>\n\n<p>В этом тексте представлены мои личные идеи относительно регионального тура ВСОШ. Я основываюсь на своем опыте и опыте своих товарищей.</p>\n\n<p>Самым лучшим способом подготовки к региону будет прорешивание прошлогодних регионов и подготовка своей стратегии.\nТак как тур идет 5 часов, ближе к концу вы можете устать и быть куда менее продуктивными нежели в самом начале, и если вы не распределите время заранее, то можете что-то не успеть. Поэтому я предлагаю вам написать 2-3 тура и засечь, сколько времени у вас занимает та или иная задача. </p>\n\n<p>Например: <br>\nзадача А — 45 минут;<br>\nзадача В — 1.5 часа; <br>\nчто-то разумное в С — час;<br>\nполный перебор в Д — 20 минут.</p>\n\n<p>Имея такой приблизительный план, вы не будете терять время на туре, думая: что бы мне сейчас порешать. </p>\n\n<p>Вообще, в идеале стратегия должна выглядеть так:</p>\n\n<p>А — до часу. Если так происходит, что через час задача А не решена — нельзя отчаиваться и продолжать ее пихать. Нужно переключиться на задачу В и полностью погрузиться в работу над ней.</p>\n\n<p>В — еще час после А вы решаете задачу В. Записываете все свои мысли и пишете какое-нибудь решение. Пусть не на 100, но на 40-60 баллов оно должно быть. </p>\n\n<p>Теперь, когда прошло 2 часа от начала тура, я рекомендую оставить А и В и открыть D (конечно, нельзя оставлять задачу если вы прямо сейчас ее пишете или у вас есть абсолютно верная идея на очень много баллов).</p>\n\n<p>Наверное, большинство из вас удивится выбору задачи D, но это правильный выбор. Всегда в этой задаче есть подзадача на ~10 баллов, которая сдается полным перебором (вообще, я рекомендую потренироваться сдавать полный перебор заранее, это полезный навык — быстро и аккуратно написать его). Таким образом вы сможете избавиться от задачи D и отдохнуть от А и В. Возможно, это позволит взглянуть на них по-новому и придумать новое решение. </p>\n\n<p>Эти полчаса не думайте о других задачах. Да, это сложно, так как написание перебора зачастую не требует активной мыслительной деятельности, но вам нужен перерыв.</p>\n\n<p>Таким образом, прошло 2.5 часа от начала контеста, у вас сдана D на максимум который может набрать тупняк, и вы остаетесь с тремя задачами. Сейчас нужно посмотреть на А и В. Уделите каждой из них по полчаса. Скорее всего после перерыва вы сможете сгенерировать новые идеи. Прошло 3.5 часа, и нужно открывать задачу С. По моему мнению, задача С — это самое странное, что есть на регионе (но об этом позже), именно поэтому я рекомендую ее открывать последней. </p>\n\n<p>Дальше все зависит от задачи. В 2017-2018 году была задача \n<a href="/material/p113763" onclick="window.goto(\'/material/p113763\')();return false;">«Красота фейерверка»</a> и она была простой. Даже проще В, на мой взгляд (и многих других участников того года).\nНо с другой стороны, порой бывают очень сложные С. Поэтому важно быстро понять, сдавать ли ее на 100 или на частичные. Мой совет: первые  полчаса старайтесь придумать ее на 100, а если не получилось — полчаса сдавайте ее на частичные баллы. Так у вас останется полчаса, и идеальной будет разбалловка вида: 100 100 50± 20±\nЕсли она не такая, не надо отчаиваться, потому что получить идеальный результат сложнее, чем кажется.</p>\n\n<p>Теперь стоит сказать несколько слов про каждую позицию на контесте:\nЯ специально не буду рассматривать задачи с прошлого года. Почему — объясню позже.</p>\n<p>A — обычно простая задача. Очень часто формула, например: <a href="/material/p113757" onclick="window.goto(\'/material/p113757\')();return false;">«Улучшение успеваемости»</a> или <a href="/material/p113443" onclick="window.goto(\'/material/p113443\')();return false;">«Автоматизированное управление доставкой»</a></p>\n<p>В — конструктив/дп/бин-поиск не сложные темы. Просто нужно догадаться до решения. Очень часто помогает перебор всех известных вам алгоритмов, которые хоть как то могут сюда подойти.</p>\n<p>С — обычно что то очень идейное или структуры данных. Хорошим результатом будет сдать все подгруппы, не требующие мощных структур, и, может, еще одну с использованием неоптимальных структур. </p>\n<p>D — Что то очень сложное, что порой практически никто не сдает в стране. </p>\n\n<p>Почему я не касаюсь прошлого года? Потому что тур был очень сложным. Неоправдано сложным. По моему мнению, в этом году тур будет сильно проще. Например, как в 2016-17 или 2017-18 году. </p>\n\n<p>Мое мнение относительно тем по задачам: </p>\n<p>А — будет один конструктив и один бинпоиск</p>\n<p>В — думаю, что будет алгоритм на графах/конструктив/простые структуры данных. Например, дерево отрезков.</p>\n<p>С — в последние годы была подозрительная мода на интерактивные задачи, поэтому будьте готовы к ним. Будет забавно, если опять будет Декартово Дерево. Поговаривают про дп и его оптимизации. Но я больше думаю про что-то на графах/структурах данных. В задаче С всегда есть подвох. Она либо простая, либо сложная. Про нее не понятно, что можно дать, поэтому изворачиваются как могут.</p>\n<p>D — какая-то сложная, никому не известная тема, или старый добрый баян. Тут возможны оптимизации дп. Но если это так, то всем рекомендую оптимизацию buben вида: ну давайте переберем не все, а ±константу. Например, если в дп вам приходится пересчитывать значение через все предыдущие, но у вас есть подозрение, что вас не интересуют некоторые, смело пишите что-то в духе\n</p><pre><code>for (int i = 0; i &lt; n; ++i)\n    for (int j = i; j &gt;= max(0, i - buben); --j)\n</code></pre>\nВозможно, будут очень сложные строки.<p></p>\n\n<p>Вообще, есть такая тема как Сканлайн, и она может быть на любой позиции, потому что на нее можно накрутить практически что угодно.</p>\n\n<p>Также у каждого из вас есть тема, про которую вы уверены, что ее не будет, и потому не нужно ее учить. Поверьте моему опыту, именно она и будет. Так что повторите все, по чему у вас просадки. Сдайте пару прошлых регионов. Потренируйтесь писать перебор.</p>\n\n<p>Постарайтесь изучить корневую эвристику. Она позволяет делать полезные трюки и получать много баллов.</p>\n\n<p>Еще: подзадачи вам даны не только для того чтобы пихать, а для того чтобы тестировать! Что я имею ввиду: у вас есть идея на много баллов но почему то wa. Вы берёте и начинаете по частям код разбирать.</p>\n\n<p>Например есть подзадача на квадрат и есть на N log N.\nВот вы берёте и основную идею оставляете, а то что делает лог заменяете на простой алгоритм, работающий за линию.\nТак вы можете понять в какой части кода ошибка.</p>\n\n<p>Вообще не рекомендую сразу писать код на 100.\nЛучше выделить несколько ключевых идей и протестировать их так.\nДа, вы потратите время, но избавите себя от возможного дебага.</p>\n<p>Ещё иногда подзадачи могут натолкнуть на правильное решение. \nБерете простую подзадачу, которую знаете как решать, берете более сложную и начинаете думать, чем таким эти задачи отличаются, можно ли из решения простой подзадачи сделать решение сложной, или наоборот, сложную подзадачу свести к простой.</p>\n\n<p>Полезные статьи на codeforces (<i>это в первую очередь для уже реально крутых школьников, уровня эдак 5-6+ — П.К.</i>):<br>\n<a href="https://codeforces.com/blog/entry/44351">https://codeforces.com/blog/entry/44351</a><br>\n<a href="https://codeforces.com/blog/entry/63823">https://codeforces.com/blog/entry/63823</a><br>\n<a href="https://codeforces.com/blog/entry/45223">https://codeforces.com/blog/entry/45223</a><br>\n</p>\n\n<h1>Разбор районной олимпиады</h1>\n\n<p>Возможно, со временем я добавлю сюда разбор районной олимпиады.</p></div>', 'title': 'Про областную олимпиаду', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_10', 'order': 11, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_11', 'order': 12, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про Нижегородскую городскую олимпиаду им. В.Д. Лелюха</h1>\n<p>В феврале 2019 года (ориентировочно 8 февраля, но возможно дата будет изменена) состоится XVI Нижегородская городская олимпиада школьников по информатике им. В.Д. Лелюха. Я рекомендую подавать заявку всем школьникам моего курса, которые являются учениками школ города Нижнего Новгорода (не области!), и имеющим уровень как минимум 1В. Можете подать заявку и если у вас уровень ниже, но, возможно, задачи даже отбора вам покажутся сложными.</p>\n\n<p>Для участия в олимпиаде надо подать заявку. Информация про олимпиаду и порядок подачи заявок (приказ Департамента образования Администрации г. Н. Новгорода № 965 от 23.12.2019) уже направлен в школы города, поэтому ваши школы должны быть в курсе. Также приказ выставлен на <a href="http://olympiads.nnov.ru">сайте олимпиады</a> в разделе "Новости"; если до вашей школы он не дошел, то скачайте его с сайта олимпиады и покажите своим учителям или завучам.</p>\n\n<p>В принципе, подать заявку на вас может кто угодно — и ваша школа, и вы лично. Но не плодите заявки; если ваша школа сама подаст заявку на вас, то не дублируйте заявку. Если по каким-то причинам они не будут подавать заявку, или вы не уверены, подадут они или нет, то можете сами заполнить анкету по ссылке из приказа. В любом случае, даже если школа подает заявку за вас, все равно следите за <a href="http://olympiads.nnov.ru">сайтом олимпиады</a>, там будет появляться информация о рассмотрении заявок.</p>\n\n<p>Отбор на олимпиаду будет проводиться из числа заполнивших заявку по итогам районной и школьной олимпиад, также будет проведен дополнительный заочный отборочный тур 18 января. Подробная информация есть в приказе (см. на сайте олимпиады), а также информация будет разослана после заполнения заявок.</p>\n\n<p>На этой олимпиаде я председатель жюри, поэтому я не буду вам писать про нее столь подробно, как про другие олимпиады. Но изучите сайт олимпиады, посмотрите задания прошлых лет, чтобы понимать, чего ожидать. И прочитайте и применяйте те же рекомендации, которые я пишу по другим олимпиадам.</p>\n\n<p>На олимпиаду также будет приглашено несколько участников из области; их мы будем приглашать лично с учетом результатов областной олимпиады.</p>\n\n</div>', 'title': 'Про Нижегородскую городскую олимпиаду им. В.Д. Лелюха', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_12', 'order': 13, 'indent': 0, 'type': 'label', 'title': '', 'content': '<p><a href="https://codeforces.com/blog/entry/70187">Олимпиада Технокубок</a></p>\n<p><a href="https://olympiads.ru/zaoch/">Открытая олимпиада школьников по программированию ("заочка")</a> — очень известная и крупная олимпиада, заодно еще и поступательная. Советую участвовать, хотя задачи не самые простые.\n</p>\n\n\n<hr>\n\n<h2>Летняя компьютерная школа</h2>\n<p>\nЛетняя компьютерная школа (ЛКШ) — это очень круто, у нее только один недостаток: она платная (поездка стоит около 50 тыс. рублей).</p>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_13', 'order': 14, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><center><img src="https://lksh.ru/sis/scripts/logo.png" style="background:#000055;padding:10px;width:80%"></center>\n<h1>Летняя компьютерная школа — 2020</h1>\n\n<!--<p><b><font size=+1>NEW (29.03.2017):</font></b> <a href="https://docs.google.com/document/d/1Jc8JWvVeIMdTQGmqRgVMUFl6-xEvLOCGa43RwLP1QuE/pub">Советы по поступлению</a></p>-->\n\n<p><a href="http://lksh.ru">Летняя компьютерная школа (ЛКШ)</a> — это летняя школа для учащихся средних и старших классов, занимающихся программированием. ЛКШ проходит в две смены по три недели (в июле и в конце июля-августе, каждый школьник может поехать только в одну смену). Традиционным местом проведения школы является база отдыха "Берендеевы Поляны" в Костромской области, но последнее время смены нередко проводятся и в других местах.</p>\n\n<p>В ЛКШ приезжают школьники со всей России; преподавателями являются учителя школ и преподаватели вузов Москвы, Санкт-Петербурга и других городов, организаторы и члены жюри различных олимпиад, сильные студенты российских вузов. (Я многие годы ездил в ЛКШ преподавателем, правда, в этом году, скорее всего, не поеду.) В ЛКШ очень хорошая учебная программа, также очень хорошая внеучебная программа. От Нижегородской области (и от лицея 40) туда регулярно ездят несколько школьников (см., например, <a href="http://poldnev.ru/lksh/cities/Nizhny_Novgorod">здесь</a>). Более подробная информация про ЛКШ <a href="https://lksh.ru/sis/2019/aboutlksh.shtml">здесь</a> (это пока страничка прошлого года).</p>\n\n<p>На сайте пока никакой информации за этот год нет, но для общей справки вполне можете смотреть информацию прошлого года. Еще много информации в <a href="https://vk.com/sis">группе вКонтакте</a>.</p>\n\n<!--\n<p>В этом году июльская смена пройдет с 4 по 24 июля на базе отдыха «Берендеевы поляны» в Костромской области (это самое стандартное место для ЛКШ). Августовская смена <b>предварительно</b> пройдет в Эстонии в отеле «Laagna» с 31 июля по 20 августа. Вступительная работа будет опубликована ориентировочно 25 марта, выполнить её нужно будет до 22 апреля.</p> -->\n\n<p>Я <b>очень рекомендую</b> всем, кто может, и при этом имеет достаточный уровень программирования, туда поехать. А именно:</p>\n<ul>\n<li>Всем 8-классникам и младше, имеющим уровень как минимум 1Б, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем 9-классникам, имеющим уровень как минимум 1Г, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем вообще (кроме 11-классников, конечно), имеющим уровень как минимум 2Б, даже если у вас нет возможности поехать — все равно как минимум постараться поступить, если поступите, то будем думать, как вам поехать.</li>\n</ul>\n<p>Отбор в ЛКШ осуществляется по результатам выполнения вступительной работы, которую надо написать в марте-апреле.</p>\n\n<p>Еще раз: <b>ЛКШ — это очень и очень круто и полезно!</b> Поэтому всем, кто имеет уровень хоть сколько-то выше начального, имеет смысл туда поехать.</p>\n\n<p>Правда, есть проблема: участие в ЛКШ платное (ЛКШ проводится группой инициативных преподавателей и не имеет государственной поддержки), стоимость участия (3 недели: проживание, питание, занятия) в 2019 году была около 50000 рублей, в этом году будет, скорее всего, больше. Если вы можете оплатить эту сумму, то хорошо; иначе вы можете написать заявление на социальную скидку, и скорее всего она будет вам предоставлена за счет спонсорских средств ЛКШ (см. для примера  <a href="https://lksh.ru/sis/2019/zacisl/skidki.shtml">информацию о скидках 2019 года</a>).</p>\n\n<p>Школьники, расскажите про ЛКШ своим родителям! Если у ваших родителей есть какие-то вопросы, пусть звонят мне. <b>Если вы уже планируете лето, постарайтесь запланировать поездку в ЛКШ.</b> (Я специально говорю вам про ЛКШ настолько заранее, т.к. знаю, что многие планируют лето еще зимой.) Ближе к поступлению я тут напишу более подробную информацию. Если возникают какие-то вопросы, обращайтесь. См. также советы по поступлению в ЛКШ ниже.</p>\n\n<p>Сайт школы со всей информацией — <a href="http://lksh.ru">lksh.ru</a>.</p>\n\n<!-- <p><b><font color=red>NEW:</font></b> <a href="https://docs.google.com/document/d/e/2PACX-1vQkAIuVK7ZErO0mVYd8hVcYOKCP6m9r3dQ5VhzOkrfn6cNw0Aj3tZ2zkQFdN4Fw4v1f7CIsVmuMh-Rt/pub">Советы по поступлению в ЛКШ</a></p> -->\n\n<p>Ролик про ЛКШ разных лет (довольно старый уже; другие, тоже старые, видео есть на <a href="http://www.youtube.com/user/pakalinin">моем канале</a>):</p>\n\n<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/4nVl5MHeqIY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>', 'title': 'Информация про школу, читать всем!', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16024_14', 'order': 15, 'indent': 0, 'type': 'label', 'title': '', 'content': '<p><b>Я настоятельно рекомендую:</b></p>\n<ul>\n<li>Всем 8-классникам и младше, имеющим уровень как минимум 1Б, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем 9-классникам, имеющим уровень как минимум 1Г, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем вообще (кроме 11-классников, конечно), имеющим уровень как минимум 2Б, даже если у вас нет возможности поехать — все равно как минимум постараться поступить, если поступите, то будем думать, как вам поехать.</li>\n</ul>\n\n\n\n\n\n\n<h2>Архивы старых олимпиад</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-18043_0', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="https://www.dropbox.com/s/brq5dotrg4lmym2/raion_archive.pdf?dl=0">Архив прошлых районных олимпиад</a> (в тестирующей системе их скорее всего нигде нет)\n<hr>\n<a href="/material/reg">Областные олимпиады прошлых лет</a> (у нас в тестирующей засчитываются только полные баллы, но на реальной олимпиаде частичные решения тоже оцениваются)', 'path': []}]
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_0', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_1', 'order': 1, 'type': 'epigraph', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Надо думать головой!</h2>\n<p>Девиз нашего курса — «Надо думать головой!»</p>\n\n<p>Это обозначает, что все время при работе на спецкурсе вам надо думать. Вам нужно думать над тем, как решать те или иные задачи, как сделать много что еще. У вас не будет универсальных рецептов, которые позволят решить все задачи — наоборот, самые лучшие, самые интересные задачи — те, где от вас требуется что-то придумать.</p>\n\n<p>Кроме того, к любой получаемой информации, ко всему, что написано в учебниках, ко всему, что я вам говорю, что написано на страничку курса, относитесь всегда критически. Думайте, пытайтесь понять, почему это написано, почему вам советуют делать так, а не иначе. В учебниках, в том, что вам говорят другие люди, и тем более в моих материалах и советах легко могут быть ошибки, опечатки, наконец, вы, возможно, найдете более простые способы добиться того же — поэтому никогда не принимайте на веру то, что вы где-нибудь прочитали, всегда обдумывайте и перерабатывайте полученную информацию. Может так оказаться, что в одном месте вы прочитаете одну информацию, а в другом месте — диаметрально противоположную — подумайте, проверьте (см. ниже), и поймите, как делать лучше.</p>\n\n<p>Кроме того, не бойтесь экспериментировать! Если вы не уверены, можно ли в питоне/паскале/... написать ту или иную команду, отработает ли она так, как вы ожидаете — попробуйте: напишите и проверьте. Если вы точно не помните, как пишется какая-нибудь команда — попробуйте перебрать варианты, пока не получится. Если вы в разных местах прочитали совсем разную информацию о том, как что-то надо сделать — возьмите и проверьте, какой способ работает! Не бойтесь пробовать, не бойтесь экспериментировать — так вы научитесь намного большему, чем если просто будете строго следовать тому, что написано в каких-либо учебниках, что вам кто-то сказал.</p></div>', 'title': 'Надо думать головой!', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_2', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_3', 'order': 3, 'type': 'epigraph', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><div style="text-align:right;width:100%;padding-bottom:2ex;"><i>There are nine and sixty ways of constructing tribal lays,<br>\nAnd every single one of them is right!</i><br><br>\nRudyard Kipling. In the Neolithic Age<br><br><br>\nЕсть девять и шестьдесят способов писать песни племен<br>\nИ каждый из них без исключения верный!<br><br>\nРедьярд Киплинг. В эпоху Неолита</div>\n\n<p>У каждой задачи есть очень много решений, и многие из них — верные. Не следует ожидать, что у каждой задачи есть единственное правильное решение; бывают решения лучше, бывают решения хуже, но почти всегда есть два-три существенно разных решения, которые все весьма хороши, и из которых сложно выбрать одно лучшее. Будьте готовы к этому, будьте готовы видеть эти разные решения и разные подходы.</p>\n\n<p>В частности, если у вас есть ошибка в программе, то обычно есть много способов ее исправить. Поэтому не удивляйтесь, если вы меня спрашиваете, как исправить ошибку, а я вам предлагаю несколько вариантов исправления.</p></div>', 'title': 'There are nine and sixty ways of constructing tribal lays,\nAnd every single one of them is right!', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_4', 'order': 4, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Самая главная информация</h2>\n\n<div><a href="https://www.youtube.com/watch?v=kTC7z1NpOb4">\nВводная видеолекция про занятия на алгопроге (дублирует основную информацию ниже)</a></div>\n\n<div style="height:1ex;"></div>\n\n<div><b>Для начала</b></div>\n', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_5', 'order': 5, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Общие вопросы (FAQ) по курсу</h2>\n<h3>Что это за курс?</h3>\n<p>Это курс по алгоритмическому программированию (фактически, по олимпиадным задачам). В первую очередь, он ориентирован на учеников лицея 40 Нижнего Новгорода, а также школьников Нижнего Новгорода и Нижегородской области, у которых в школе нет занятий по алгоритмическому программированию, или которых чем-то не устраивают такие занятия в их школе. Но при этом, если в этом курсе захотят участвовать школьники не из Нижегородской области, я ничего против иметь не буду.</p>\n\n<h3>Что за странный формат? Что за занятия в лицее 40 и в ННГУ?</h3>\n<p>В этом курсе можно заниматься полностью заочно — по многим темам материалы есть на сайте, и вы всегда можете написать вопрос мне. Кроме того, по материалам этого курса я веду очные занятия в лицее 40 (только для учеников лицея) и в ННГУ (для всех желающих). Но при этом у нас нет регулярных лекций по строгому расписанию, все школьники занимаются в своем темпе, поэтому можно ходить и в лицей, и в ННГУ, можно ходить не каждый раз. Поэтому это получается такой очно-заочный курс.</p>\n\n<h3>Чему тут учат?</h3>\n<p>Основное направление — это алгоритмическое программирование. Начиная с основ программирования, и далее в алгоритмы и структуры данных. Это то, что по-английски называется Computer Science. С существенным уклоном в сторону олимпиадного программирования (в первую очередь по линии Всероссийской олимпиады школьников), тем более что задачи на олимпиадах — это как раз задачи на алгоритмы и структуры данных.</p>\n\n<h3>Чему тут НЕ учат?</h3>\n<p>Мы не будем специально заниматься "техническими" вопросами:</p>\n<ul>\n<li>Созданием пользовательских интерфейсов, кнопочек, окошек и т.д.</li>\n<li>Программированием под конкретные платформы: созданием web-приложений, программированием под Android, iOS и т.п.</li>\n</ul>\n<p>Мы будем изучать алгоритмы, которые лежат в основе многих таких программ (мы не будем обсуждать, как сделать кнопку "сортировать по алфавиту", но будем обсуждать, как реализовать сортировку, когда список объектов для сортировки уже есть).</p>\n<p>Кроме того, мы не будем специально готовиться к ЕГЭ или поступлению в вузы. Тем не менее, задачи части C ЕГЭ по информатике — это фактически довольно простые олимпиадные задачи, поэтому если вы хорошо решаете олимпиадные задачи, то проблем с ЕГЭ у вас быть не должно.</p>\n\n<h3>Вы действительно будете учить?</h3>\n<p>И да, и нет. Формат заочного курса подразумевает, что существенную часть материала вы будете изучать сами. Я буду скорее направлять вас, советуя, где можно посмотреть тот или иной вопрос, на каких задачах отладить навыки, а также буду довольно активно комментировать ваши программы. Кроме того, вы всегда можете со мной связаться (контакты на главной странице курса) и задать любой вопрос.</p>\n\n<h3>Какой язык программирования?</h3>\n<p>Сложный вопрос, точнее вопрос с длинным ответом.</p>\n<p>Если вы только еще начинаете программировать, то я рекомендую использовать Python 3. Теоретические материалы для начинающих я буду подбирать именно по Python.</p>\n<p>Еще один популярный вариант — C++, но я настоятельно не рекомендую его выбирать, если вы только начинаете учиться программировать. Если же вы где-то уже научились неплохо писать на C++ (контрольный вопрос: какой тип данных вы используете для работы со строками и насколько это для вас сложно), то можете писать на C++. Теории по C++ на начальных уровнях нет, но если вы его где-то уже изучили, то она вам не нужна :) Если же вы неуверенно знаете темы уровня 1, то лучше учите питон по материалам на сайте.</p>\n<p>Довольно популярный вариант — Паскаль. Раньше я его рекомендовал, но в современном мире единственная причина учить паскаль — если вас в школе учат на паскале, вы уже неплохо его знаете, и не хотите распыляться на два языка. На самом деле, даже в этом случае я рекомендую вам изучить питон и заниматься в этом курсе на питоне, но в принципе, если хотите, то можете заниматься и на паскале. Теории по паскалю на сайте нет, но если вы его изучаете в школе и неплохо его знаете, то теория вам не нужна :) Если же вы неуверенно знаете темы уровня 1, то лучше учите питон по материалам на сайте.</p>\n<p>Но в целом я не настаиваю на том или ином выборе языка. Вы можете заниматься на любом языке из тех, которые поддерживается этим сайтом (только еще раз хорошо взвесьте все плюсы и минусы); правда, я сам лучше всего знаю паскаль, питон и c++, поэтому по другим языкам моя помощь вам будет ограничена . Ну и теории по другим языкам на сайте нет.</p>\n<p>Если у вас возникают вопросы, то свяжитесь со мной.</p>\n\n<h3>Что от меня требуется для занятий?</h3>\n<p>От вас требуется, в первую очередь, желание заниматься. Я не ваш школьный учитель, не ваш родитель, я не могу чего-то требовать от вас; ваше присутствие здесь — дело добровольное. Я не буду вас торопить, или ругать вас, если вы ничего не делаете неделями. Но при этом понимайте, что каких-либо результатов можно добиться только регулярными занятиями; если вы хотите конкретных цифр по тому, сколько времени надо выделить, то я бы считал, что как минимум два раза в неделю часа по 2-3 выделить надо, а лучше больше. (Для школьников, которые ходят ко мне на очные занятия, я рекомендую, в добавок в 2-3 часовому очному занятию, еще примерно столько же заниматься дома.) Но <b>следите за этим сами</b>, я не буду стоять у вас над душой. (Родителям и учителям: если вы хотите контролировать успехи ваших детей, см. отдельный документ по ссылке с главной страницы курса, и/или напишите мне.)</p>\n<p>Тот же принцип с моей стороны относится и к остальным вопросам: я лишь советую вам что-то, но не могу требовать. Если вы хотите выбрать определенный язык программирования вопреки моим рекомендациям — ну хорошо; и т.п.</p>\n<p>Но при этом учтите, что не только ваше участие здесь — дело добровольное, но и моя вам помощь — это тоже дело добровольное. Естественно, я с большей радостью буду помогать школьнику, который активно занимается, чем школьнику, который что-то пытается делать раз в месяц, и т.п.</p>\n\n<h3>А какие изначальные знания требуются? И каких классов могут быть школьники?</h3>\n<p>По программированию — от никаких и выше. Вообще, заочный формат позволяет реализовать почти индивидуальное обучение (т.е. я готов каждому школьнику выдавать личные задания), поэтому я готов принимать школьников, начиная от тех, кто ничего не умеет, и до школьников существенно более высокого уровня.</p>\n<p>Важными являются предварительные знания по математике. Опыт показывает, что чем сильнее математическая подготовка у школьника, тем он лучше занимается программированием. Поэтому если вы участвуете (пусть и на невысоком уровне) в математических олимпиадах — это вам плюс.</p>\n<p>Я ожидаю здесь видеть школьников от 7 и до 11 класса. Если школьник сильный (участвует в олимпиадах или конкурсах по математике, или как минимум весьма хорошо знает школьную программу), то можно и 5-6 классы. Для сильных школьников, чем раньше начать заниматься программированием, тем лучше.</p>\n\n<h3>Что надо сделать, чтобы начать заниматься?</h3>\n<p>Прочитайте документ "Инструкция для тех, кто здесь в первый раз" (ссылка на главной странице курса) и сделайте то, что там написано.</p>\n\n<h3>Когда можно начать заниматься? Когда "следующий набор"?</h3>\n<p>К курсу можно присоединится в любое время. Все равно занимающиеся школьники имеют довольно разный уровень подготовки, поэтому никакой единой программы типа "на этой неделе проходим то-то, на следующей то-то, а если вы пропустили или слишком поздно узнали о курсе, то ждите следующей группы или следующего года" нет.</p>\n<p>Единственное — во время праздников или летом у меня может быть ограничен доступ к интернету, поэтому я могу не так быстро отвечать на ваши письма, смотреть ваши решения и т.д.</p>\n<p>То же относится и к очным занятиям, можно присоединиться на любом занятии. Только проверьте, нет ли на главной странице курса объявления об отмене очередного занятия (например, из-за праздников); кроме того, летом занятий нет. На всякий случай можете мне заранее написать и уточнить, когда проходят занятия.</p>\n\n<h3><i>— И как думаешь, Василич? Будет от этой работы толк?</i></h3>\n<p><i>— А вот поработаешь, Петр Николаич, увидишь!</i><br>\n(Лев Успенский. Сопка «Камянистка», или торжество науки.)</p>\n<p>Конечно, я не гарантирую, что стоит начать заниматься, и вы сразу достигнете высоких результатов. Это зависит от многого, в том числе то того, что за пределами моего влияния — в первую очередь, математического образования, общей математической культуры, да и одаренности школьника; а также от трудолюбия и желания заниматься. Но думаю, что для большинства школьников, имеющих нужный склад мышления, эти занятия будут полезны.</p>\n\n<h3>А кто вообще вы такой?</h3>\n<p>Я — Петр Андреевич Калинин, к.ф.-м.н., старший разработчик компании Яндекс, выпускник ВШОПФ ННГУ. Я в свое время активно участвовал в различных олимпиадах: бронзовый призер международной олимпиады школьников по информатике (IOI) 2001 года, золотой призер IOI 2002 года; в составе команды ННГУ дважды участник финала чемпионата мира по командному программированию ACM (ACM ICPC). Я много лет езжу преподавателем в Летнюю компьютерную школу, крупнейшую российскую летнюю школу по алгоритмическому программированию; я постоянный член жюри Нижегородской городской олимпиады школьников по программированию (последние годы — председатель жюри). С 2017 по 2019 год я преподавал в Школе анализа данных Яндекса. Я ученик В.Д. Лелюха.</p>\n\n<p>В том или ином виде я учу школьников программированию с тех пор, как сам окончил школу в 2002 году (я ездил преподавателем в различные летние школы и т.п.); этот курс существует с 2013 года. Среди моих учеников — ряд участников и один победитель заключительного этапа Всероссийской олимпиады школьников по информатике (не считая моего брата Николая, в обучении которого я тоже принимал не последнее участие и который является абсолютным победителем заключительного этапа 2013 года и дважды — в 2013 и 2014 годах — золотым призером международной олимпиады школьников по информатике).</p>\n\n<p>Команды школьников под моим руководством регулярно участвуют в Нижегородской и Всероссийской командных олимпиада школьников по программированию. На большинстве прошедших к данному моменту Нижегородских командных олимпиадах абсолютное первое место занимала моя команда; на Всероссийской командной олимпиаде мои команды регулярно становятся призерами, нередко — медалистами, а два раза — занимали абсолютное первое место.</p>\n\n<p>Вы всегда можете связаться со мной, контактные данные указаны на главной странице курса.</p>\n\n<h3>А что за сайт informatics.mccme.ru?</h3>\n<p>Informatics.mccme.ru — это сайт дистанционной подготовки по информатике, организованный Московским центром непрерывного математического образования (МЦНМО) и Московским институтом открытого образования (МИОО); он очень удобен для организации курсов подобных этому, и, как вы можете видеть на главной странице сайта, реально широко используется, но в первую очередь для организации очных занятий. Я не имею непосредственного отношения к этому сайту (хотя и знаком с людьми, которые его создали и поддерживают).</p>\n\n<p>Этот курс строится на базе материалов с informatics и использует его в качестве тестирующей системы (а раньше вообще курс существовал только на informatics). Местами еще могли остаться ссылки на информатикс, если обнаруживаете такую, пишите мне.</p></div>', 'title': 'FAQ для школьников', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_6', 'order': 6, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_7', 'order': 7, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><div style="text-align:center;"><font size="+2">Занятия алгоритмическим программированием для студентов, выпускников вузов и вообще всех желающих</font></div>\n\n<h3>Что это за курс?</h3>\n<p>Это курс по алгоритмическому программированию (алгоритмы, структуры данных и т.д.)</p>\n\n<p>Он в первую очередь рассчитан на школьников и в качестве подготовки к школьным олимпиадами (и многие материалы в курсе написаны именно как для школьников), но также в курсе могут заочно заниматься (и реально занимаются) вообще все желающие: студенты, выпускники вузов и т.д. Занятия для нижегородских школьников бесплатные, для всех остальных — платные.</p>\n\n<p>Эта страничка — она как раз для студентов, выпускников и т.д., а не для школьников. Для школьников есть <a href="/material/module-20927_5" onclick="window.goto(\'/material/module-20927_5\')();return false;">отдельная страничка</a>.</p>\n\n<h3>Чему тут учат?</h3>\n<p>Основное направление — это алгоритмическое программирование. Начиная с основ программирования, и далее в алгоритмы и структуры данных. Это то, что по-английски называется Computer Science.</p>\n\n<h3>Чему тут НЕ учат?</h3>\n<p>Мы не занимаемся "техническими" вопросами:</p>\n<ul>\n<li>Созданием пользовательских интерфейсов, кнопочек, окошек и т.д.</li>\n<li>Программированием под конкретные платформы: созданием web-приложений, программированием под Android, iOS и т.п.</li>\n<li>Использованием различных фреймворков, библиотек и т.д.</li>\n</ul>\n<p>Мы будем изучать алгоритмы, которые лежат в основе многих таких программ (мы не будем обсуждать, как сделать кнопку "сортировать по алфавиту", но будем обсуждать, как реализовать сортировку, когда список объектов для сортировки уже есть).</p>\n\n<h3>Вы действительно будете учить?</h3>\n<p>И да, и нет. Формат заочного курса подразумевает, что существенную часть материала вы будете изучать сами. Я буду скорее направлять вас, советуя, где можно посмотреть тот или иной вопрос, на каких задачах отладить навыки, а также буду довольно активно комментировать ваши программы. Кроме того, вы всегда можете со мной связаться (контакты на главной странице курса) и задать любой вопрос.</p>\n\n<h3>Какой язык программирования?</h3>\n<p>Вообще говоря, какой хотите, из тех, что позволяют писать консольные приложения и поддерживаются этим сайтом. Это C++, Java, Python, C#, PHP, Ruby, Perl, Pascal, Basic, даже 1С. </p>\n\n<p>При этом, если вы еще не знаете никакого языка программирования, то я рекомендую Python. На страничке курса есть материалы для начинающих по питону. Если вы знаете какой-то из перечисленных в предыдущем абзаце языков, то можете использовать его; но вообще все продвинутые темы не зависят от языка.</p>\n\n<p>Лично я лучше всего знаю C++, питон и паскаль; по этим языкам я смогу вам достаточно подробно помогать. По другим языкам я не смогу вам подсказывать по различным тонкостям языка, хотя, как показывает опыт, для алгоритмов это не очень существенно.</p>\n\n<h3>А какие изначальные знания требуются?</h3>\n<p>По программированию — от никаких и выше. Вообще, заочный формат позволяет реализовать почти индивидуальное обучение (т.е. каждый участник курса занимается в своем ритме и режиме), поэтому я ожидаю здесь людей с широким спектром начальных знаний: от студентов младших курсов, только начинающих программировать, до уже профессиональных программистов, желающих улучшить свои знания в области алгоритмов.</p>\n\n<h3>Что надо сделать, чтобы начать заниматься?</h3>\n<ul>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (для этого вас попросят еще зарегистрироваться на сайте informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, где вы учитесь/работаете. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля".</li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты в разделе "О курсе" на главной странице курса.</li>\n<li>Дождитесь ответа и дальнейших инструкций от меня.\n</li>\n</ul>\n<p></p>\n\n<h3>Когда можно начать заниматься? Когда "следующий набор"?</h3>\n<p>К курсу можно присоединится в любое время. Все равно занимающиеся имеют довольно разный уровень подготовки, поэтому никакой единой программы типа "на этой неделе проходим то-то, на следующей то-то, а если вы пропустили или слишком поздно узнали о курсе, то ждите следующей группы или следующего года" нет.</p>\n<p>Единственное — во время праздников или летом у меня может быть ограничен доступ к интернету, поэтому я могу не так быстро отвечать на ваши письма, смотреть ваши решения и т.д.</p>\n\n<h3>Занятия только заочные?</h3>\n<p>Да, очных занятий для не-школьников нет. А если бы и были, то стоили бы намного дороже.</p>\n\n<h3>А кто вообще вы такой?</h3>\n<p>Я — Петр Андреевич Калинин, к.ф.-м.н., старший разработчик компании Яндекс, выпускник ВШОПФ ННГУ. Я в свое время активно участвовал в различных олимпиадах: бронзовый призер международной олимпиады школьников по информатике (IOI) 2001 года, золотой призер IOI 2002 года; в составе команды ННГУ дважды участник финала чемпионата мира по командному программированию ACM (ACM ICPC). С 2017 по 2019 год я преподавал в Школе анализа данных Яндекса. Я ученик В.Д. Лелюха.</p>\n\n<p>В том или ином виде я учу школьников программированию с тех пор, как сам окончил школу в 2002 году (я ездил преподавателем в различные летние школы и т.п.); этот курс существует с 2013 года. Среди моих учеников — ряд участников и один победитель заключительного этапа Всероссийской олимпиады школьников по информатике (не считая моего брата Николая, в обучении которого я тоже принимал не последнее участие и который является абсолютным победителем заключительного этапа 2013 года и дважды — в 2013 и 2014 годах — золотым призером международной олимпиады школьников по информатике).</p>\n\n<p>Команды школьников под моим руководством регулярно участвуют в Нижегородской и Всероссийской командных олимпиада школьников по программированию. На большинстве прошедших к данному моменту Нижегородских командных олимпиадах абсолютное первое место занимали мои команды; на Всероссийской командной олимпиаде мои команды регулярно становятся призерами, нередко — медалистами, а два раза — занимали абсолютное первое место.</p>\n\n<p>Вы всегда можете связаться со мной, контактные данные указаны на главной странице курса.</p>\n\n<h3>А что за сайт informatics.mccme.ru?</h3>\n<p>Informatics.mccme.ru — это сайт дистанционной подготовки по информатике, организованный Московским центром непрерывного математического образования (МЦНМО) и Московским институтом открытого образования (МИОО); он очень удобен для организации курсов подобных этому, и, как вы можете видеть на главной странице сайта, реально широко используется, но в первую очередь для организации очных занятий. Я не имею непосредственного отношения к этому сайту (хотя и знаком с людьми, которые его создали и поддерживают).</p>\n\n<p>Мой курс строится на базе материалов с informatics и использует его в качестве тестирующей системы (а раньше вообще курс существовал только на informatics). Местами еще могли остаться ссылки на информатикс, если обнаруживаете такую, пишите мне.</p></div>', 'title': 'FAQ для студентов и старше', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_8', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_9', 'order': 9, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Инструкция для тех, кто здесь в первый раз</h1>\n<h2>Для школьников</h2>\nЕсли вы хотите начать заниматься в этом курсе, то сделайте следующее:\n<ol>\n<li>Во-первых, можно просто придти на очное занятие (в ННГУ для всех желающих, в лицее 40 для лицеистов, информация о занятиях на страничке курса). Но можно начать (и продолжать) заниматься и дома, не дожидаясь очного занятия, можно и вообще на очные занятия не ходить. Все инструкции ниже идут как раз для случая, если вы хотите начать заниматься из дома.</li>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (вас попросят еще зарегистрироваться на informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, школу, класс, город. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля"; если вы участвовали в каких-либо олимпиадах по математике или программированию, укажите это. (Это не значит, что здесь будет какой-то отбор, я готов принять в курс всех желающих. Но я просто хочу заранее знать, какой у вас уже есть опыт.) </li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты разделе "О курсе".</li>\n<li>Далее:\n<ul>\n<li>Если вы — начинающий, т.е. не знаете никакой язык программирования на уровне, позволяющем вам уверенно писать простые программы, то начинайте с <a href="/material/1" onclick="window.goto(\'/material/1\')();return false;">уровня 1</a>. Там последовательно разбираются различные стороны языка программирования — начните их последовательно проходить. Вам надо будет выбрать, на каком языке программирования работать, я советую начинающим питон.</li>\n<li>Если вы какие-то программы писать умеете, но не очень уверенно, то выберите на уровнях <a href="/material/1%D0%90" onclick="window.goto(\'/material/1%D0%90\')();return false;">1А</a> или <a href="/material/1%D0%91" onclick="window.goto(\'/material/1%D0%91\')();return false;">1Б</a> первую тему, которую не очень уверенно знаете, и начинайте с нее.</li>\n<li>Если вы на выбранном вами языке программирования можете достаточно уверенно писать простые программы, то начните с темы "вещественные числа" на <a href="/material/1%D0%91" onclick="window.goto(\'/material/1%D0%91\')();return false;">уровне 1Б</a>, и после этого переходите к уровню 1В и далее. Вполне возможно, что эти задачи вам покажутся простыми, и вы их очень быстро решите, но, возможно, над некоторыми вам придется подумать, а заодно я посмотрю на ваш стиль программирования и на разного рода мелкие моменты, которые вы можете не знать, пусть даже и хорошо пишите программы. (Обратите внимание, что там не надо решать все задачи для перехода на следующие уровни.) Перед тем, как начинать решать задачи, прочитайте в разделе "О курсе" тексты "Работа с сайтом..." и "Начало работы с Free pascal" (если вы пишите на паскале). Многое вам там будет знакомо, но я уверен, что что-то найдете и новое.</li>\n<li>Если вы — уже очень сильно продолжающий, т.е. умеете уверенно писать простые задачи (и, скорее всего, вы уже участник региональных олимпиад), то напишите мне и ждите инструкций.</li>\n</ul>\n</li></ol>\n\n<h2>Для студентов и старше</h2>\n<ul>\n<li><a href="/register" onclick="window.goto(\'/register\')();return false;">Зарегистрируйтесь на сайте</a> (для этого вас попросят еще зарегистрироваться на сайте informatics.mccme.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>\n<li>Напишите мне любым из указанных в <a href="/material/0" onclick="window.goto(\'/material/0\')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, где вы учитесь/работаете. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля".</li>\n<li>Прочитайте, или хотя бы просмотрите, все тексты в разделе "О курсе" на главной странице курса.</li>\n<li>Дождитесь ответа и дальнейших инструкций от меня.\n</li>\n</ul></div>', 'title': '\nИнструкция для тех, кто здесь в первый раз (или "Что надо сделать, чтобы начать заниматься?")', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_10', 'order': 10, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>Про то, как тут заниматься</b></div>\n', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_11', 'order': 11, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Работа с сайтом</h2>\n<p>Основное, что вы будете делать на наших занятиях — это решать задачи. Большинство задач будут требовать написания программы, которая считывает (с клавиатуры или из файла) некоторые данные, по ним вычисляет новые данные, и результат выводит на экран или сохраняет в файл.</p>\n<p>Написанную вами программу вы можете (и должны) отправить на проверку. Этот сайт предоставляет возможность автоматической проверки ваших программ — вы сразу (в течение максимум одной-двух минут) получаете результат проверки: работает ваша программа корректно или нет. Кроме того, я буду видеть все ваши попытки, которые вы отправляете на сайт, и смогу их комментировать, писать замечания и т.д., а вы сможете эти комментарии видеть и по ним улучшать свои программы.</p>\n\n<h3>Пример задачи</h3>\n<p>Зайдите на уровень 1А (внутри уровня 1). Там есть ссылка "Задачи на арифметические операции". Зайдите туда. Вы увидите список задач: "Дележ яблок - 1", "Дележ яблок - 2", и т.д., до "Разность времен". Это и есть набор задач (коротко говорят "контест"), которые вам предлагается прорешать для закрепления знаний по первой теме курса — арифметическим операциям. \n</p><p>Все названия задач — ссылки, по ним открывается собственно задача. Откройте задачу "Дележ яблок - 1". Вы видите ее условие: "N школьников делят K яблок поровну, неделящийся остаток остается в корзинке. Сколько яблок достанется каждому школьнику? Программа получает на вход числа N и K и должна вывести искомое количество яблок." Ниже идет пример: при вводе данных "3 14" программа должна вывести "4".</p>\n<p>Условие задачи четко описывает, что должна делать ваша программа: для любых значений N и K она должна вычислить и вывести ответ на задачу. В более серьезных задачах в условии всегда указываются ограничения на допустимые N и K, но в задачах для начинающих на этом сайте считается, что N и K "разумные" (в частности, помещаются в тип данных integer в паскале); в "разумность" в данном случае входит и то, что оба числа положительны.</p>\n<p>Пример нужен только для проверки того, что вы верно поняли условие, формат входных данных, и смогли проверить программу на простейшем тесте. Тем не менее, ваша программа должна работать не только на тесте из примера, но и на других допустимых тестах.</p>\n\n<h3>Написание решения</h3>\nДанная задача решается достаточно легко. Нам надо, конечно, завести две переменные, N и K, считать их с клавиатуры, и вывести неполное частное от деления K на N (обратите внимание, именно K на N, а не N на K!). Программа будет выглядеть так:\n<table>\n<tbody><tr><th>Паскаль</th><th>Питон</th></tr>\n<tr><td>\n<pre>{$mode delphi}\nvar n,k:integer;\nbegin\nread(n,k);\nwriteln(k div n);\nend.</pre>\n</td><td>\n<pre>n = int(input())\nk = int(input())\nprint(k // n)</pre>\n</td></tr></tbody></table>\n\nОбратите внимание на следующие особенности (в вашем учебнике может быть написано не так — надо делать так, как написано тут, а не в учебнике. Возможно, чего-то из описанного здесь вы не поймете — тогда просто пропускайте этот пункт). Часть из этих особенностей относятся только к паскалю, часть — к любому языку программирования.\n<ul>\n<li>(паскаль) Написано <code>{$mode delphi}</code>. Пока вы не знаете, какие разные режимы компилятора бывают, всегда пишите эту конструкцию. Потом, когда узнаете, сможете выбирать, какой режим компилятора вам нужен.</li>\n<li>(паскаль) Не используется конструкция <code>program ...;</code>. В современном программировании она не нужна вообще.</li>\n<li>(паскаль) Вся программа пишется маленькими буквами. Поскольку в Pascal все равно, использовать маленькие или заглавные буквы, то сейчас принято использовать маленькие.</li>\n<li>Мы не выводим никаких "приглашений" типа "введите N". В условии задачи четко написано, что именно наша программа должна выводить на экран, и там ничего не сказано про то, что надо выводить приглашения. Поэтому любой лишний вывод на экран будет рассмотрен как нарушение формата вывода.</li>\n<li>Нет никаких "проверок на дурака", например, нет проверки "а вдруг N=0?", или "а вдруг ввели не число?". Аналогично предыдущему, это в наших задачах не требуется. В более серьезных задачах в условии будут стоять ограничения на допустимые значения N, и никто не будет тестировать вашу программу с N, не удовлетворяющим этим ограничениям. В этой задаче считается, что N&gt;0 всегда.</li>\n<li>(паскаль) Мы не делаем <code>clrsrc;</code> в начале программы — это не требуется. И пользователь, и тестирующая система способны отличить вывод этой программы от того, что было выведено на экран раньше.</li>\n<li>Аналогично, мы не ставим в конце программы пустой <code>readln;</code> или <code>readkey;</code>, или <code>input()</code> в питоне, или <code>getch();</code> в c++ или другую задержку работы. Это тоже не требуется; информация, выведенная на экран, все равно сохраняется и ее все равно можно посмотреть.</li>\n<li>Мы посчитали и сразу вывели ответ, не сохраняя его в промежуточную переменную. Можно было сохранить:\n<pre>// паскаль\nans:=k div n;\nwriteln(ans);\n// питон\nans = k / n\nprint(ans)\n</pre>\nВ этой простой программе проще вывести сразу, но если выражение будет сложнее, то можно и сохранить.</li>\n</ul>\n<p>Сохраните эту программу в какой-нибудь файл. Запомните как имя файла, так и ту директорию (папку), куда вы сохранили файл (в free pascal она отображается в нижней части диалога сохранения файла).</p>\n\n<p>Теперь протестируйте программу. Запустите ее и повводите разные тесты.</p>\n\n<p>Введите для начала тест из примера: "3 14" и убедитесь, что она вывела 4.</p>\n\n<p>В этой задаче на каждый тест ответ однозначно определен (например, на пример из условия ответ может быть только 4). Бывают задачи, когда на каждый тест может быть несколько правильных вариантов ответа, в таких задачах в условии обычно написано "если есть несколько решений, выведите любое" или присутствует какая-нибудь подобная фраза. В таком случае ваша программа не обязана выдавать ответ, точно совпадающий с тем, что указан в примере — достаточно, чтобы он был одним из правильных. Аналогично, в дальнейшем, при тестировании вашей программы на сайте (см. ниже) по каждому тесту будет допускаться любой из правильный ответов.</p>\n\n<p>Придумайте еще несколько примеров к этой задаче. Постарайтесь, чтобы они были разнообразными: чтобы были разные N, K, и разные ответы. Например, введите "5 25" и проверьте, что ответ 5. Придумайте сами еще несколько примеров. Важно: прежде чем вводить каждый пример в программу, сначала в уме вычислите ответ, и только потом запустите программу и проверьте, что она вывела именно то, что вы и ожидали. Старайтесь всегда знать ответ на свой пример ДО запуска программы.</p>\n\n<p>Если программа написана правильно, то она правильно отработает на ваших тестах. Тогда ее можно сдавать на проверку на сайт (говорят "сдать/послать на проверку в тестирующую систему" или просто "сдать в систему").</p>\n\n<h3>Отправка на проверку</h3>\n<p>Вернитесь на страницу с условием задачи. Ниже условия есть раздел "Отправить решение" (он есть только если вы зарегистрированы на сайте и залогинены). Нажмите кнопку "Выбор файла" и выберите файл с вашим решением. Убедитесь, что вы выбираете файл .pas/.py (с исходным кодом), а не .o или .exe (уже скомпилированную программу)! Убедитесь, что в выпадающем списке рядом выбран правильный язык (в частности, если вы пишете на PascalABC, то надо его выбрать вручную), и нажмите кнопку "Отправить".</p>\n\n<p>Ваша программа отсылается на сервер, который ее компилирует и проверяет путем запуска на нескольких тестовых примерах. Эти тестовые примеры вам неизвестны, но в каждой конкретной задаче всегда одинаковы (т.е. если вы будете посылать несколько раз, то каждый раз тестовые примеры будут одни и те же). В данном случае тестирующая система запустит вашу программу несколько раз, каждый раз сымитирует ввод с клавиатуры значений N и K из очередного тестового примера, и проверит, что ваша программа выводит правильный ответ.</p>\n\n<p>Под формой для отправки находится таблица, перечисляющая все ваши попытки (также говорят "посылки") по этой задаче. Изначально там, конечно, никакой таблицу нет. После того, как вы отправили ваше решение, оно появится в этой таблице (через некоторое время — примерно через минуту). В колонке "Статус" отображается результат тестирования вашей программы. Сразу после того, как вы отправили программу, вы можете увидеть там "Компилирование" или "Тестирование", что обозначает, что ваша задача тестируется. Таблица обновляется автоматически, дождитесь, пока в колонке "Статус" не появится окончательный результат проверки.</p>\n\n<p>Основные результаты проверки, которые вы можете увидеть:\n</p><ul>\n<li>OK — ваша программа правильно прошла все тесты, ура!</li>\n<li>Ошибка компиляции — ваша программа не скомпилировалась</li>\n<li>Частичное решение — ваша программа прошла не все тесты (может быть, даже не прошла ни одного). Значит, ваша программа работает не совсем верно (или совсем неверно), постарайтесь найти ошибки.</li>\n<li>Бывают еще статусы "Зачтено" и "Проигнорировано", но они не ставятся автоматически, поэтому про них ниже.</li>\n</ul>\n\n<p>Справа в таблице есть колонка ссылок "Подробнее". Если вы нажмете на такую ссылку, то откроется окошко с подробной информацией о посылке. Во-первых, там будет полный код вашей программы, поэтому вы всегда сможете проверить, отправили ли вы именно то, что хотели; если вы решали задачи из школы, то придя домой, вы сможете посмотреть коды всех ваших программ, и т.д.</p>\n\n<p>Во-вторых, в открывшемся окне есть закладка "Протокол", где отображается протокол тестирования вашей программы. Если ваша программа не скомпилировалась (статус "Ошибка компиляции"), то там будет протокол компиляции: будут указаны ошибки, найденные в программе. Если же ваша программа скомпилировалась, то там будет протокол тестирования: по каждому тесту будет приведена информация о том, прошел этот тест (OK) или нет. В задаче "Дележ яблок - 1" всего 6 тестов, поэтому в таблице должно быть 6 строк. Если ваша посылка получила статус "ОК", то все 6 строк будут ОК; иначе какие-то тесты будут иметь другой статус (из названия статуса обычно понятно, что это значит).</p>\n\n<p>Таким образом, вы можете видеть, какие (по номерам) тесты у вас пройдены, а какие нет. Но вы не можете узнать, какой именно это тест (в нашей задаче — какие именно там N и K). Это сделано для того, чтобы вы учились сами тестировать свое решение и сами находить примеры, на которых оно не работает, а не рассматривали тестирующую систему как волшебный ящик, выдающий вам примеры, на которых ваша программа не работает. Поэтому если ваша программа не работает, то ищите сами примеры, на которых она ошибается. Если вы не можете их найти, то напишите мне, попробуем разобраться вместе. В крайнем случае у меня есть доступ ко всем тестовым данным, поэтому если я не смогу найти ошибку просто посмотрев код вашей программы, я смогу посмотреть, что там за тест, на котором ваша программа не работает.</p>\n\n<p>Но вообще, старайтесь проверять задачу до того, как ее отправлять в систему (и этому мы будем отдельно учиться). Рассматривайте неудачные попытки как конкретную неудачу, и старайтесь делать как можно меньше неудачных попыток. Вообще, на многих олимпиадах у вас будет только одна возможность сдать задачу, и если она не пройдет какие-то тесты, то возможности исправиться у вас уже не будет!</p>\n\n<h3>Засчитывание и игнорирование решений, комментарии к решению</h3>\n<p>Я буду просматривать все ваши решения: при наличии времени — все вообще посылки, в том числе и неуспешные, если же у меня времени будет мало, а посылок много — то только посылки со статусом ОК.</p>\n\n<p>В успешных посылках я буду просматривать ваш код на предмет следующего:\n</p><ul>\n<li>Во-первых, я буду смотреть, нет ли в коде каких-то ошибок, которые смогли миновать тесты тестирующей системы. Бывает так, что в коде какая-нибудь совсем неожиданная ошибка, и тестирующая система ее может пропустить (хотя тесты в тестирующей системе обычно подготовлены хорошо, и как правило все ошибки в коде проявляются при тестировании) — я буду смотреть, нет ли у вас таких ошибок.</li>\n<li>Также я буду смотреть, нет ли у меня каких-либо замечаний по коду, пусть и не являющихся ошибками, но являющихся общими пожеланиями. Например, может быть, что-то можно сделать проще, или что-то надо сделать по-другому, и т.д.</li>\n</ul>\n<p>Если к вашей программе у меня будут какие-либо замечания или комментарии, я их напишу, и вы сможете их увидеть. Во-первых, они появятся на сайте в правой колонке в разделе "Комментарии"; во-вторых, в каждой посылке, в окошке, открываемом по ссылке "подробнее", есть специальная закладка "комментарии". Соответственно, как только я прокомментирую вашу посылку, вы увидите комментарий. Обычно я стараюсь просматривать все посылки в течение суток, хотя иногда бывают и бОльшие задержки, до нескольких дней.</p>\n\n<p>Помимо собственно написания комментария, я по каждой вашей посылке принимаю решение — либо я принимаю это решение (пусть и с небольшими замечаниями), либо я потребую от вас это решение переписать с учетом моих замечаний. В первом случае я меняю статус посылки на "Зачтено" (т.е. вы будете видеть именно "Зачтено" вместо "ОК" в таблице с вашими посылками), во втором случае я меняю статус на "Проигнорировано". Соответственно, в первом случае просто примите к сведению замечания, которые я написал (а бывает так, что я и никаких замечаний не пишу), хотя можете и переписать решение, если хотите. Во втором случае обязательно перепишите решение с учетом этих замечаний.</p>\n\n<p>В сводной таблице решения "ОК" (т.е. которые я еще не посмотрел) отображаются с желтым фоном, решения "Зачтено" (т.е. которые я принял) — с зеленым фоном, проигнорированные решения не учитываются в общем количестве решенных вами задач, просто соответствующая задача в сводной таблице отображаются с красным фоном.</p>\n\n<p>Я буду стараться также писать комментарии по вашим неуспешным посылкам — указывать на ошибку или советовать, где ее поискать, и т.п. Я, конечно, не всегда буду писать их сразу как увижу вашу попытку, и не всегда буду полностью сообщать о найденной ошибке — ведь обычно вам полезно будет все-таки найти ошибку более-менее самостоятельно, я постараюсь вам давать наводящие советы (но, конечно, это зависит от ошибки). В общем, если вы пытались сделать задачу, но она не проходит тесты, то возможно в течение суток я вам напишу совет в комментарии к вашей посылке.</p>\n\n<p>Иногда я могу не успевать просмотреть все ваши неуспешные посылки, или не пишу комментарий по каким-то еще причинам. В таком случае, если вы хотите получить комментарий по какой-нибудь из них, просто напишите мне.</p>\n\n<h3>Хорошие решения</h3>\n<p>После того, как я засчитываю вам решение (ставлю статус "Зачтено"), у вас появляется доступ к "хорошим решения" по соответствующей задаче — на странице задачи, над формой для отправки решения, появляется ссылка на "хорошие решения".</p>\n\n<p>"Хорошие решения" — это несколько (до 5 штук) решений, которые сдавали другие ученики курса, и которые, на мой взгляд, написаны достаточно хорошо и могут считаться образцом решения этой задачи. Смотрите их, особенно по тем задачам, где я вам зачел решение с какими-либо комментариями (но вообще полезно смотреть "хорошие решения" и по всем зачтенным задачам вообще). Сравните "хорошие решения" с вашим решением, возможно, вы увидите, что что-то можно сделать проще, или вообще найдете другие полезные идеи.</p>\n\n<p>Я стараюсь в "хороших решениях" по возможности поддерживать баланс разных языков (т.е. как правило среди "хороших решений" есть решения на разных языках). Но смотрите и решения на вашем языке, и на других языках, даже которых вы не знаете — как правило, понять алгоритм можно даже на языках, которых вы вообще не знаете. С другой стороны, для вашего языка в "хороших решениях" вы можете найти и какие-нибудь интересные чисто языковые тонкости и приёмы.</p>\n\n<p>Кроме того, нередко в "хороших решениях" я показываю разные подходы к решению задачи, нередко там встречаются вообще разные алгоритмы. Если вы видите, что "хорошее решение" сильно отличается от вашего, полезно разобраться, как оно вообще работает.</p>\n\n<p>При этом понимайте, что на самом деле по многим задачам на сайте сданы уже сотни решений, и на самом деле "хороших" из них десятки, если не больше. Вы видите максимум пять из них, просто потому, что смотреть десятки более-менее одинаковых решений смысла нет. Вы увидите какие-то пять из них, которым повезло, что я их отметил как "хорошие", но это "везение" часто определяется случайностью, ну и указанными выше принципами про разнообразие языков и подходов. То есть вы видите не пять самых лучших решений, а пять случайных из числа достаточно хороших.</p>\n\n<p>Поэтому не надо считать, что если ваше личное решение не попало в "хорошие", то оно хуже "хороших". Оно может быть столь же хорошо, или даже чем-то лучше "хороших", просто ему не повезло. Если вы видите, что "хорошие" решения написаны столь же чисто и понятно, как ваше — значит, ваше тоже могло бы быть "хорошим". И наоборот, если ваше решение попало в "хорошие", это не обозначает, что оно намного лучше всех остальных :) По той же причине авторы "хороших решений" не подписаны.</p>\n\n<p>С другой стороны, если вы посмотрели "хорошие решения", и считаете, что ваше решение заметно лучше всех "хороших", напишите мне, может быть, я и ваше решение добавлю в "хорошие". (Хотя обычно я назначаю решение "хорошим" одновременно с тем, как я его засчитываю, поэтому если ваше решение действительно заметно лучше других хороших, как правило, я его сделаю "хорошим" еще до того, как вы сможете посмотреть "хорошие решения" :) .)</p>\n\n<h3>Сводная таблица</h3>\n<p>Все ваши посылки по нашим задачам отображаются в сводных таблицах, ссылки на которые есть в меню сайта. А именно, каждая клетка в основной части этой таблицы указывает статистику посылок от конкретного школьника по конкретной задаче. Если в клетке стоит знак "+", значит, задача сдана успешно ("ОК" или "Зачтено"), если "-" — значит, человек пытался сдавать задачу, но прошел не все тесты. Число после значка (если оно есть) указывает количество неуспешных попыток (если они есть). Например:\n</p><ul>\n<li>Пустая клетка обозначает, что задача не сдавалась вообще;</li>\n<li>"+" обозначает, что задача сдана с первой попытки;</li>\n<li>обозначения "-" не бывает;</li>\n<li>"+2" обозначает, что задача сдана с третьей попытки (две неуспешные попытки и потом успешная);</li>\n<li>"-2" обозначает, что по задаче были только две неуспешные попытки и всё.</li>\n</ul><p></p>\n\n<p>Фон ячейки обозначает статус задачи относительно вердиктов "Зачтено" и "Проигнорировано":\n</p><ul>\n<li>Желтый фон — статус "ОК", т.е. я еще не смотрел эту задачу;</li>\n<li>Зеленый фон — статус "Зачтено";</li>\n<li>Красный фон — статус "Проигнорировано", при этом сама проигнорированная попытка считается неуспешной.</li>\n</ul><p></p>\n\n<p>В последних двух колонках таблицы указывается общее количество решенных задач и общее количество неуспешных ("штрафных") попыток (учитываются только те задачи, по которым в итоге была получена правильная программа, проигнорированные попытки не учитываются). Таблица отсортирована по общему количеству решенных задач, а при равном числе решенных задач — по количеству штрафных попыток.</p>\n\n<p>Еще у таблицы есть следующая особенность: в ней появляются только школьники, которые удовлетворяют сразу двум требованиям: во-первых, я их должен активировать их учетную запись, во-вторых, у школьника должна быть хотя бы одна попытка сдачи задачи. Поэтому если вы еще ничего не пытались сдавать, не удивляйтесь, что вас нет в таблице. Если же вы уже пытались что-то сдавать, а в таблице вас нет, то напишите мне — возможно, я забыл вас активировать.</p>\n\n<p>Аналогично, наборы задач (контесты) появляются в сводной таблице только когда хотя бы кто-нибудь отправит какое-нибудь решение по какой-нибудь задаче этого контеста.</p>\n\n<h3>Терминология</h3>\nВыше я уже ввел некоторую специфическую терминологию, которая используется в олимпиадном программировании, на всякий случай повторю ее тут:\n<ul>\n<li>Контест — любой набор задач, каким-то образом сгруппированный и выделенный от остальных. В пределах контеста задачи обычно занумерованы (1, 2, 3, ... или A, B, C, ... и т.п.) Это может быть отдельный тур олимпиады, или набор задач к какому-нибудь занятию или на какую-нибудь тему, и т.д. В рамках наших занятий "контестом" мы называем набор задач, доступных по каждой отдельной ссылке с главной страницы курса; слева от таких ссылок обычно значок, похожий на изображение клавиатуры. Например, "Задачи на арифметические операции" — это отдельный контест.</li>\n<li>Посылка (синонимы: попытка, сабмит) — отдельная ваша попытка сдать задачу в тестирующую систему; также программа, которую вы сдали в этой попытке.</li>\n<li>Штрафная попытка (обычно в контексте сводного рейтинга) — попытка, которая не прошла все тесты.</li>\n<li>Тест — это отдельный тестовый пример, подготовленный авторами задачи, чтобы на нем проверять ваши программы. Обычно по каждой задаче автор задачи подготавливает от 5 до 60 тестов, и программы, которые вы сдаете на проверку, проверяются по очереди на всех этих тестах. Чтобы попытка считалась успешной, надо, чтобы программа прошла все тесты, т.е. на все тесты дала правильный ответ. (На других олимпиадах могут быть другие правила.)</li>\n</ul></div>', 'title': '\nРабота с сайтом, отправка решений и просмотр моих комментариев', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_12', 'order': 12, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_13', 'order': 13, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><p>Я буду просматривать, по возможности, все ваши решения, и комментировать их тем или иным образом. Тем решениям, которые я просмотрю, я буду присваивать новый статус: \n</p><ul>\n<li>"Зачтено" — задача написана более-менее нормально, ура. На страничке просмотра кода вашей посылки (по ссылке "Подробнее") под кодом вы можете увидеть мои комментарии. Если там комментария нет, значит, задача решена весьма хорошо. Если есть комментарий, то он обычно указывает, что можно улучшить.</li>\n<li>"Проигнорировано" — мне что-то весьма не понравилось в вашем коде. На страничке просмотра кода вашей посылки (по ссылке "Подробнее") под кодом вы увидите мои комментарии, объясняющие, что именно мне не понравилось. Исправьте это и пересдайте решение.</li></ul><p></p>\n\n<p>Если вы не понимаете комментарий, спросите, я объясню подробнее.</p>\n\n<p>Посылки со статусом "Зачтено" отмечаются в таблице зеленым.</p>\n\n<p>Посылки со статусом "Проигнорировано" отмечаются в таблице синим.</p>\n\n<p>Не относитесь к "игнорам" как к издевательству над вами. Я постараюсь игнорить только те программы, которые можно довольно существенно улучшить (например, существенно сократив количество кода). Помните, что ваша цель — не только написать программу, которая пройдет все тесты, но и вообще научиться программировать. Фактически, "Проигнорировано" я ставлю тогда, когда считаю, что комментарий, который я пишу к вашей посылке, настолько важен, что вам обязательно его стоит прочитать; "игнор" — это такой способ обратить ваше внимание на комментарий.</p>\n\n<p>То, что вы сумели, пусть и не самым оптимальным образом, написать программу и сдать ее — это очень круто, но еще круче будет, если вы узнаете и поймете, как то же самое можно сделать еще проще. Считайте, что в большинстве задач написать программу, чтобы она прошла все тесты — это, грубо говоря, 70% успеха, но получить по ней "Зачтено" — это оставшиеся 30%.</p>\n\n<p>Все комментарии (в том числе и к зачтенным посылкам, и даже к неуспешным) вы также можете просмотреть в правой колонка не сайте.</p></div>', 'title': '\nПро засчитывание и игнорирование решений', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_14', 'order': 14, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_15', 'order': 15, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>О системе уровней</h1>\n<p>Весь материал в нашем курсе распределен по уровням, от самого простого до очень сложного. Уровни нумеруются последовательными числами (1, 2, 3, ...), в пределах уровня также введены подуровни, нумеруемые буквами (в уровне 1 — подуровни 1А, 1Б, 1В и 1Г, и т.п.)</p>\n\n<p>Большинство уровней имееют следующую структуру: подуровни А и Б содержат новый материал, а подуровни В и Г (последний есть не всегда) — дополнительные задачи повышенной сложности на закрепление этого материала. Иногда в уровнях В и Г могут быть особенно сложные задачи на материал существенно более ранних уровней (например, в уровне 5В может оказаться сложная задача на материал уровня 3). Иногда в уровнях В и Г выделены контесты по отдельным темам, иногда дополнительные задачи в этих уровнях идут в случайном порядке.</p>\n\n<p>Я предполагаю, что вы будете проходить подуровни последовательно, переходя к новому подуровню как правило тогда, когда вы "прошли" предыдущий подуровень. Исключение: если вы прошли какую-то тему в подуровне А или Б, и видите в подуровне В или Г контест продвинутых задач на эту же тему, то можете его порешать.</p>\n\n<p>Требования к "прохождению" каждого подуровня указаны под его заголовком. Как правило, для подуровней А и Б требуется прорешать все задачи, для уровней В и Г требуется прорешать часть (половину или треть) задач. Тем не менее это не обозначает, что оставшиеся задачи уровней В и Г решать не надо. Я рекомендую, если вы прорешали необходимый минимум задач уровней В и Г, переходить на следующий уровень, чтобы побыстрее приступить к изучению новой теории. Но при этом возвращайтесь регулярно к недорешенным задачам предыдущих уровней. Примерно можно оценивать так: когда вы переходите на уровень 4А, у вас должна быть решена половина задач уровня 3В, 3/4 задач уровня 2В и примерно 7/8 задач уровней 1В и 1Г. Аналогично, когда вы переходите на уровень 5А, у вас должна быть решена половина задач уровня 4В, а также 3/4 задач уровня 3В, 7/8 задач уровня 2В и почти все (за редким исключением особенно неприятных задач) задачи уровней 1В и 1Г. Аналогично для других уровней.</p>\n\n<p>Обратите внимание, что в уровнях В и Г задачи далеко не всегда упорядочены по сложности. Поэтому решайте их в том порядке, в каком вам удобнее!</p>\n\n</div>', 'title': '\nПро систему уровней', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_16', 'order': 16, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_17', 'order': 17, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про очные занятия для школьников</h1>\n<h2>Общая информация</h2>\n\n<p>Для школьников в течение учебного года проходят очные занятия — в лицее 40 по средам и в ННГУ им. Лобачевского по воскресеньям. На занятия в лицее 40 можно ходить только ученикам лицея 40, на занятия в ННГУ можно ходить вообще всем желающим школьникам (школьникам из Нижнего Новгорода и области, в том числе ученикам лицея 40, а также школьникам из других регионов, если вы занимаетесь у меня на курсе и по каким-то причинам оказались в Нижнем).</p>\n\n<p>На очные занятия можно приходить <b>только тем, кто решил хотя бы одну задачу в курсе</b>. Исключение — специальные занятия, про которые на сайте явно написано, что можно приходить новичкам (как правило, это второе занятие каждого семестра). Если вы опоздали на такое занятие, вы должны начать заниматься заочно; после того, как решите хотя бы одну задачу, можете приходить на очные занятия.</p>\n\n<p>В ННГУ занятия проходят <b>по воскресеньям, в 2 корпусе (пр. Гагарина, 23, к. 2), в аудиториях 110 и 114</b>. Я обычно бываю в ННГУ с 14.00 до 17.00. В это время параллельно проходят два занятия: с 14.00 до 17.00 для старших уровней (у кого уровень 3 и выше, также можно по желанию тем, у кого уровень 2В), и с 15.00 до 16.30 для начинающих. При этом начинающие тоже могут приходить раньше и оставаться до 17.00, просто до 15.00 до после 16.30 я буду больше времени уделять старшим.\n\nНа занятия в ННГУ действует обязательная запись, см. ниже. Кроме того, <b>берите с собой паспорт или свидетельство о рождении</b>, его может спросить охрана (хотя вроде никогда не спрашивают, но теоретически могут спросить). Если охранники вас не пускают, звоните мне.</p>\n\n<p>В лицее 40 занятия проходят <b>по средам в КЦ</b>. Я обычно бываю в лицее с 14.30 до 17.00, иногда чуть позже. Аналогично, можно приходить и уходить в любое время, но см. ниже про нехватку компьютеров. Если вы хотите получить зачем за спецкурс, смотрите отдельные <a href="/material/in20946" onclick="window.goto(\'/material/in20946\')();return false;">правила</a>.</p>\n\n<h2>Формат занятий</h2>\n\n<p>Очные занятия у нас проходят полностью в формате практики. У нас нет каких-либо общих лекций, я не рассказываю на занятиях новую теорию «для всех» (за исключением отдельных, специально анонсированных, занятий). Вы приходите, садитесь за компьютер, заходите на алгопрог, и продолжаете заниматься с того места, где остановились в прошлый раз — решаете задачи и/или читаете теорию. Самостоятельно. Я время от времени прохожу по классам, смотрю, кто что решает, могу что-то помогать, советовать, объяснять, но в основном вы занимаетесь самостоятельно.</p>\n\n<p>То есть вы занимаетесь так же, как если бы вы занимались из дома. Единственное отличие очных занятий от занятий из дома состоит в том, что на очных занятиях присутствую я, и вы всегда можете меня спросить о чем-либо, и как правило я достаточно быстро отвечу. (Правда, учтите, что на очных занятиях помимо вас обычно еще присутствует пара десятков школьников, у которых тоже есть свои вопросы :) ).</p>\n\n<p>Если вы на занятии добрались до новой теории — скажите мне. Возможно, я вам ее расскажу. Но, возможно, я отправлю вас читать теорию на сайте.</p>\n\n<p>В частности, поэтому расписание занятий у нас нестрогое. Вы можете опоздать на занятие, можете уйти раньше, можете пропустить часть занятий, можете, наоборот, ходить на два занятия — всё на ваше усмотрение. Конечно, чем больше вы занимаетесь, тем лучше у вас, наверное, будут результаты, но я не требую какого-то строгого посещения занятий.</p>\n\n<p><b>Занятия в ННГУ для старших уровней</b> немного отличаются по формату: мы решаем разные старые контесты, а потом обсуждаем задачи.</p>\n\n<h2>Про регистрацию на занятия и компьютеры</h2>\n\n<p>Как правило, особенно в первой половине учебного года, и особенно в ННГУ, на занятия приходят больше школьников, чем есть компьютеров. Поэтому на занятия в ННГУ надо регистрироваться, чтобы всем точно хватило компьютеров. На сайте есть <a href="/checkins">специальный раздел</a>, где надо регистрироваться на очередное занятие, там же есть подробные правила. Регистрироваться надо каждую неделю заново.</p>\n\n<p>На занятия в лицей 40 регистрации нет. Занятие в лицее 40 официально начинается в 14.30; как правило, к этому моменту свободные компьютеры еще есть. Если вы опоздали, не обижайтесь, если вам не хватило компьютеров. С другой стороны, как правило, уже в районе 15.30 компьютеры начинают освобождаться (далеко не все школьники сидят до конца занятия), поэтому если вам не хватило компьютера, можете просто подождать (например, поделав домашние задания по другим предметам).</p>\n\n<p>Универсальный способ избежать пробему нехватки компьютеров — приносить свой ноутбук. Но <a href="/material/module-16024_1" onclick="window.goto(\'/material/module-16024_1\')();return false;">см. отдельные правила про это</a>.</p></div>', 'title': '\nПро очные занятия для школьников', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_18', 'order': 18, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>Про оплату</b></div>\n', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'pay', 'order': 19, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix">\n<h1>Стоимость и порядок оплаты занятий</h1>\n\n<h2>Для школьников из Нижегородской области</h2>\n<p>Для нижегородских школьников <b>занятия бесплатны</b>, и в обозримом будущем останутся бесплатными (т.к. мне проведение занятий оплачивает лицей 40 и ННГУ).</p>\n\n<p>Формально вы считаетесь нижегородским школьников, если учитесь в школе, находящейся в Нижегородской области, и имеете теоретическую возможность, пройдя школьный и муниципальный этапы, участвовать в Нижегородской областной олимпиаде школьников по информатике.</p>\n\n<p>Если у меня возникнут подозрения, являетесь ли вы нижегородским школьников или нет, я могу попросить вас как-то это подтвердить.</p>\n\n<p>Прочитайте, пожалуйста, отдельный текст <a href="/material/module-20927_21" onclick="window.goto(\'/material/module-20927_21\')();return false;">про бесплатность занятий для нижегородских школьников</a>.</p>\n\n<p>Вы также можете поддержать занятия, переведя мне любую сумму денег на карту Тинькофф-банка номер 5536 9137 7443 1460. Например, для перевода вы можете воспользоваться <a href="https://www.tinkoff.ru/cardtocard/">сервисом перевода с карты на карту Тинькофф-банка</a>, там по идее должно быть без комиссии, или любым другим сервисом по переводу денег с карты на карту.</p>\n\n<p><b>При этом, пожалуйста, никак не указывайте, кто именно переводит деньги, и не сообщайте мне, что вы их перевели — я не хочу знать, кто из школьников мне переводит деньги, а кто нет.</b></p>\n\n<h2>Для всех остальных</h2>\n\n<p>Занятия для всех остальных (не-нижегородских школьников, а также не-школьников) платные. Точнее, собственно все материалы в курсе бесплатные. Они же есть на сайте informatics.mccme.ru в <a href="http://informatics.mccme.ru/course/view.php?id=1135">соответствующем разделе</a>, вы можете бесплатно заниматься там. Я беру деньги за то, что я добавлю вас в сводные таблицы, буду просматривать и комментировать ваши решения, отвечать на ваши вопросы (заочно) и т.д.</p>\n\n<p>Стоимость занятий определяется следующим образом:</p>\n\n<table class="table table-striped table-condensed table-hover">\n<tbody><tr><td>Младше 9 класса</td><td>500 рублей в месяц</td></tr>\n<tr><td>9 класс</td><td>1000 рублей в месяц</td></tr>\n<tr><td>10 класс</td><td>1500 рублей в месяц</td></tr>\n<tr><td>11 класс</td><td>1500 рублей в месяц</td></tr>\n<tr><td>Не школьники (студенты и старше)</td><td>1500 рублей в месяц</td></tr>\n</tbody></table>\n\n<p>Для новых учащихся первая неделя занятий в курсе бесплатна.</p>\n\n<h3>Дополнительные правила</h3>\n<p>Стоимость занятий для школьников фиксируется на тот момент, когда я активировал вам аккаунт в конкретном учебном году, и до конца учебного года; если в дальнейшем я буду поднимать стоимость занятий, то вы продолжите заниматься по старой цене (до конца учебного года, а если будете заниматься успешно, то и на следующий год и т.д.).</p>\n\n<p>Для студентов стоимость занятий фиксируется на момент первой оплаты и пожизненно.</p>\n\n<p>Для нижегородских школьников, занимавшихся в моем курсе более-менее успешно (условно говоря, набравших рейтинг 200 или выше, но может обсуждаться индивидуально), действует пожизненная скидка 50% на занятия после того, как они закончат школу.</p>\n\n<p>Границей учебного года (для определения "успешно занимающихся школьников", а также для "перевода" в следующий класс или в статус студентов) считается 1 июля.</p>\n\n<h3>Подтверждение</h3>\n\n<p>Если вы — не-нижегородский школьник младше 11 класса (т.е. стоимость занятий для вас ниже, чем для студентов), то вам надо подвердить это. Проще всего — прислать мне ссылку на какую-нибудь официальную страничку в интернете, где указаны ваши имя, фамилия, класс и школа. Например, это могут быть результаты какой-нибудь олимпиады, конкурса или т.п.; это может быть какая-нибудь новость на сайте вашей школы и т.д. Возможно, я еще попрошу ссылку на ваш профиль в социальных сетях. Альтернативный вариант для российских школьников — вы можете взять в школе справку о том, что вы учитесь, написать на ней ваш логин на алгопроге и прислать мне фотографию. Возможны и другие варианты подтверждения — напишите мне, как вы можете подтвердить ваш класс.</p>\n\n<p>Если вы не можете подтвердить свое право на сниженную стоимость занятий, вы можете заниматься по студенческой стоимости.</p>\n\n<h3>Скидки для успешных школьников</h3>\n\n<p>Для школьников существует дополнительная акция: если вы успешно занимались в курсе, и остаетесь школьником на следующий год, то на следующий год для вас сохраняется та же стоимость обучения, которая была и в этом году. Школьник считается успешно занимавшимся, если за год он решил минимум 70 задач, не считая задач уровней 1А и 1Б.</p>\n\n<p>Например, если 8-классник успешно занимался в курсе в течение года, то когда он перейдет в 9 класс, он продолжит заниматься по той же цене. Если он и в 9 классе будет успешно заниматься, то и в 10 классе он будет заниматься по той же цене, и т.д. Если, к примеру, в 10 классе он не будет успешно заниматься, то в 11 классе стоимость занятий для него сбросится на ту стоимость, которая будет установлена для 11 классов в соответствующем году.</p>\n\n<h2>Оплата</h2>\n<p>\nОплатить занятия можно картой <a href="/payment" onclick="window.goto(\'/payment\')();return false;">на сайте</a>.</p>\n\n<h2>Возможен ли возврат денег?</h2>\n<p>Стоимость не зависит от того, насколько вы активны в курсе (если вы решаете много, то я буду на вас тратить больше времени, чем если вы решаете мало, а вы платите одну и ту же сумму). Поэтому довольно странно возвращать деньги, если вы не делали ничего. Поэтому политика такая:</p>\n<ul>\n<li>Если вы по объективным непредвиденным причинам не могли заниматься в курсе более 5 дней подряд (сломали руку и т.п.), то я вам верну деньги за весь период, когда вы не могли заниматься. Предсказуемые вещи типа поездок, сессии и т.п. сюда не считаются.</li>\n<li>Если вы по каким бы то ни было причинам не занимались более 10 дней подряд, то я вам верну половину денег за этот период.</li>\n<li>Если вы заранее предупреждаете меня о том, что не сможете заниматься более 10 дней подряд, то я могу вернуть вам деньги за этот период.</li>\n<li>Конечно, если я по каким-то причинам не мог проверять ваши решения и отвечать на ваши письма в течение более чем 5 дней подряд, то я вам верну деньги за весь этот период.</li>\n</ul>\n</div>', 'title': 'Стоимость и порядок оплаты занятий', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_20', 'order': 20, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div><a href="/payment" onclick="window.goto(\'/payment\')();return false;">Оплатить занятия</a></div>\n', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_21', 'order': 21, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h3>Занятия и правда бесплатные?</h3>\n<p>Да, занятия для школьников из Нижегородской области бесплатные. (Для студентов и всех остальных занятия платные, можете не читать этот текст.) </p>\n\n<h3>Но есть какие-то требования или условия?</h3>\n<p>Я, естественно, хочу от вас чего-то попросить за то, что я с вами занимаюсь. А именно, если эти занятия вам действительно полезны, и вы собираетесь применять полученные знания на какой-нибудь олимпиаде, конкурсе или подобном мероприятии, то я прошу вас указывать меня как вашего учителя, или преподавателя кружка и т.п. Особенно это касается, конечно, ситуации, если вы будете участвовать в олимпиадах высокого уровня (ну, начиная с городской/областной).</p>\n\n<h3>Но ведь я занимаюсь и где-то еще...</h3>\n<p>Конечно. Я поэтому прошу вас сначала понять, насколько этот курс вам полезен по сравнению с другими занятиями. Если подавляющую часть своих знаний вы получили где-то еще (на уроках в школе, на другом кружке или спецкурсе, от родителей и т.п.), и ваш результат на олимпиаде будет в первую очередь результатом других занятий — то, конечно, меня не надо указывать. Если вы получали важные знания как здесь, так и на других занятиях — значит, укажите и меня, и другого преподавателя. На многих олимпиадах можно указать нескольких преподавателей, или можно отдельно указать школьного учителя и преподавателя кружка, и т.п. Если же вы все знания получили только здесь, а другие занятия вам практически не помогли — я буду благодарен, если вы укажете только меня.</p>\n\n<h3>Но школа будет против указывать кого-то постороннего...</h3>\n<p>Попробуйте объяснить вашему учителю или завучу ситуацию. Объясните, что ваши результаты будут во многом определяться именно тем, что вы занимались на этом курсе (а если это не так, и вам эти занятия не помогли, — то, см. предыдущий вопрос, и не надо меня указывать); что если бы вы здесь не занимались, то ваш результат был бы хуже. Может быть, попросите ваших родителей помочь объяснить. В крайнем случае напишите мне, я могу связаться с некоторыми школами города. Или дайте учителю или завучу мой телефон, пусть позвонят.</p>\n\n<h3>Но заявку подает школа, я не могу на нее повлиять...</h3>\n<p>На многих олимпиадах на регистрации перед началом олимпиады вы можете проверить, кто у вас указан как учитель, и исправить. Кроме того, если вы прошли на олимпиаду сравнительно высокого уровня, то можете заранее подойти к вашему учителю или завучу и попросить указать меня в заявке на следующую олимпиаду.</p>\n\n<h3>А как вас указывать?</h3>\nВ большинстве случаев достаточно указать фамилию, имя и отчество — Калинин Петр Андреевич. Если это какой-то очень официальный текст (титульный лист какого-нибудь доклада и т.п.), то можете добавить «к.ф.-м.н.» (что значит кандидат физико-математических наук), но лучше сначала уточните у кого-нибудь или у меня. Если надо указать должность и место работы, пишите «старший разработчик, Яндекс». Если надо указать мой телефон, он есть на главной страничке курса. Если надо что-то еще, то свяжитесь со мной.\n\n<h3>А еще?</h3>\n<p>Вторая вещь, о которой я вас попрошу — если вам эти занятия оказались полезными, и у вас есть друзья или знакомые, которые являются достаточно умными школьниками, хорошо знают математику, участвуют в олимпиадах, или просто интересуются программированием — расскажите им про эти занятия.</p>\n</div>', 'title': '\nО бесплатности занятий для нижегородских школьников', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_22', 'order': 22, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>И еще немного...</b></div>\n', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_23', 'order': 23, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Для учителей и родителей</h2>\n<p>Я про это уже написал в FAQ, но на всякий случай повторю здесь. Я рассматриваю занятия ваших детей здесь как добровольные, и не собираюсь от них требовать чего-либо, заставлять и т.д. Если школьник не хочет заниматься, или не может себя заставить — я не буду от него ничего требовать. У меня банально нет никакого канала влияния на него.</p>\n\n<p>Но вы можете влиять на школьника, поэтому, если вы хотите, чтобы от занятий был какой-то результат, то следите за тем, как ваш школьник занимается. На главной странице курса есть "сводная таблица", там можно отслеживать прогресс каждого школьника. Школьник также может показать вам, какие задачи он пытался сдавать, каков был результат проверки и т.д. На главной страничке курса есть также "Таблица по неделям кто что решал", в ней указывается, кто достиг какого уровня, а также по неделям кто сколько задач решил. Цвет ячейки в "таблице уровней" обозначает, насколько хороший результат показал школьник на очередной неделе: ярко-зеленый — очень хорошо, светло-зеленый — средненько, белый — вообще ничего даже не пытался. (Таблица обновляется вручную.) Наконец, вы всегда можете связаться со мной.</p>\n\n<p>Отдельное обращение к учителям: часто бывает так, что сильным школьникам на школьных уроках информатики просто скучно. Если ваш школьник занимается по этому курсу, разрешите ему во время урока решать задачи, читать теорию этого курса! И, конечно, если у вас есть сильные ученики — расскажите им об этом курсе!</p>\n\n<p>И еще одно замечание. Пожалуйста, прочитайте раздел <a href="/material/module-20927_21" onclick="window.goto(\'/material/module-20927_21\')();return false;">"О бесплатности занятий"</a>. А именно, если ваши школьники благодаря моим занятиям будут достигать хороших результатов, то постарайтесь сделать так, чтобы я был указан их учителем/преподавателем на тех олимпиадах и подобных мероприятиях, где они будут применять полученные здесь знания.</p></div>', 'title': 'Для учителей и родителей', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_24', 'order': 24, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_25', 'order': 25, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Про самостоятельность</h2>\n\n<p>Отдельно хочу вас написать про вашу самостоятельность. Я ожидаю, что при работе в курсе (независимо от того, работаете вы в заочном курсе, на занятиях в ННГУ или в лицее 40) вы будете проявлять способность к достаточно самостоятельной работе. В заочном курсе самостоятельность подразумевается сама собой, но и в при очных занятиях я хочу, чтобы вы не просто тупо писали то, что я вам рассказал, но и могли думать сами.</p>\n\n<p>Это обозначает, во-первых, не будут сам вас торопить или заставлять решать задачи. Хотите — решайте, не хотите — ну и не решайте, мне же проще — меньше проверять. Я не буду стоять у вас над душой и что-то с вас требовать. (Хотя, если вы учитесь в лицее 40 и хотите получить зачет, то к вам отдельные требования.)</p>\n\n<p>Во-вторых, не ожидайте, что на занятиях или в теоретических материалах на сайте будет отражено <i>абсолютно всё</i>, что может вам потребоваться для решения задач. Вполне возможно, что в каких-нибудь задачах вы обнаружите, что требуется что-то, что мы "не проходили". Не страшно. Вы всегда можете меня спросить, а лучше — сначала исследовать вопрос самостоятельно (в вашей любимой книжке, или в интернете), а если не получится, то спросить меня. Я вас не съем за такие вопросы, наоборот, я буду очень рад, если вы увидите, что в какой-то задаче требуется что-то дополнительное, и сможете четко спросить, что именно вам требуется.</p>\n\n<p>В-третьих, если вы чего-то не поняли на занятии, в моем комментарии к вашему решению, в теоретических материалах или где еще; или если вы не понимаете, почему не работает ваша программа, то просто подойдите ко мне и спросите (или напишите мне). Не ожидайте, что я вам все очень подробно объясню с первого раза или что я вам буду писать сверхподробные комментарии к решениям. Я объясняю и пишу как раз с расчетом что, если вы что-то не поняли, то вы переспросите.</p></div>', 'title': '\nПро самостоятельность', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_26', 'order': 26, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_27', 'order': 27, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Рекомендуемая литература</h2>\n<h3>Для начинающих — для изучения языка</h3>\n<h4>Питон</h4>\n<p>По питону, как ни странно, книжек не очень много, и вот именно учебных, направленных на школьников, я пока не видел (но я еще поищу). Поэтому, если хотите, можете купить какую-нибудь книжку, которая вам понравится.</p>\n\n<p>Но зато по питону есть очень много ресурсов в интернете; если вы будете задавать поиск по конкретным вопросам, то для питона вы получите адекватный ответ намного более вероятно, чем для паскаля. Поэтому я далеко не уверен, что вам надо покупать бумажную книжку по питону, лучше используйте интернет.</p>\n\n<p>В частности, очень рекомендую вам сайт <a href="http://pythontutor.ru/">http://pythontutor.ru/</a>. Там достаточно адекватная теория, и очень удобный визуальный отладчик питона.</p>\n<h4>Паскаль</h4>\n<p>Здесь приведен список книг, которые можно использовать для изучения языка программирования Pascal. При этом имейте в виду, что большинство из них описывает среду Turbo Pascal (или Borland Pascal, что то же самое); она является весьма устаревшей и в некоторых деталях отличается от среды Free Pascal, которую мы изучаем. Кроме того, во многих книжках есть разного рода устаревшие подходы к написанию программ. </p>\n<p>Большинство из этих книг можно скачать из интернета, или купить; в частности, ряд книг я видел недавно в магазине Дирижабль на Б. Покровской.</p>\n<p>В принципе, можно учиться и по другим книгам, не указанным здесь. Главное — чтобы это был именно учебник по основам языка программирования Pascal (Delphi скорее всего не подойдет). Прежде чем выбирать книгу, посмотрите, как в ней излагается простейший материал. Мне не понравились книги, которые сначала определяют "алфавит языка" и прочие заумные понятия, и только потом приступают к изучению языка; я считаю, что лучше начать изучение языка на простых примерах и только потом переходить к общим вещам. Если найдете книгу, которая вам понравится, скажите мне, чтобы я ее добавил сюда.</p>\n<p>При этом я не читал подробно ни одну из этих книг, я только поверхностно их просмотрел. Поэтому если у вас будут какие-либо комментарии по ним, то тоже скажите мне.</p>\n<ul>\n<li><b>Ушаков Д. М., Юркова Т. А. Паскаль для школьников</b> — мне очень понравилась; эта книга, пожалуй, ближе всего к тому, как я хочу строить обучение языку.</li>\n<li><b>Деревенец О. В. Песни о Паскале </b> (свободна распространяема с сайта <a href="http://oleg-derevenets.narod.ru/">http://oleg-derevenets.narod.ru/</a>) — очень необычный стиль изложения, возможно, понравится школьникам. Очень подробно и хорошо рассказывают про среду Free Pascal. Правда, порядок изучения тем весьма отличается от запланированного мной, но тем не менее, книга весьма неплохая.</li>\n<li><b>Кашаев С. М., Шерстнева Л. В. Паскаль для школьников. Подготовка к ЕГЭ</b> — довольно неплохой подробный учебник.</li>\n<li><b>Андреева Е. В. Программирование — это так просто, программирование — это так сложно</b>. Елена Владимировна Андреева (в отличие от авторов всех остальных учебников) — очень известный в олимпиадной информатике учитель, подготовившая многих сильных олимпиадников, многократный член жюри заключительного этапа Всероссийской олимпиады школьников. Эта книга довольно популярна в обучении олимпиадному программированию, вы можете встретить ссылки на нее во многих разных местах. Тем не менее, книга написана с точки зрения «формального» подхода, когда внимание уделяется в первую очередь полноте и строгости изложения, а не понятности и количеству примеров. Поэтому мне кажется, что она подходит скорее как справочник, или как дополнение к материалу, который я рассказываю на занятиях.\n</li><li><b>Культин Н. Б. Turbo pascal в задачах и примерах</b> — фактически только примеры, без теории.</li>\n<li><b>Павловская Т. А. Паскаль. Программирование на языке высокого уровня. Практикум</b> — не очень много теории, довольно много примеров.</li>\n<li><b>Рапаков Г. Г., Ржеуцкая С. Ю. Turbo Pascal для студентов и школьников</b> — более-менее обычный учебник, ничего особенного, на самом деле мне даже не очень понравился.</li>\n<li><b>Семакин И. Г., Шестаков А. П. Основы программирования</b> — более-менее обычный учебник, ничего особенного, на самом деле мне даже не очень понравился.</li>\n</ul>\n\n<p>Кроме того, следующие книги я видел, но они мне весьма не понравились. Я не рекомендую вам их использовать, хотя, возможно, кому-то они покажутся проще. Если сочтете, что какая-то книга тут находится незаслуженно, тоже напишите мне — на самом деле, я смотрел весьма поверхностно.</p>\n<ul>\n<li><b>Кетков Ю. Л., Кетков А. Ю. Свободное программное обеспечение. FREE PASCAL для студентов и школьников</b></li>\n<li><b>Фаронов В. В. Turbo Pascal 7.0. Учебный курс</b></li>\n</ul>\n\n<p>Наконец, непосредственно на этом сайте есть много теоретического материала — надо зайти на главную страницу сайта и далее следовать по ссылкам на разные темы или на разные курсы. К сожалению, качество материала здесь очень и очень сильно варьируется, от довольно плохого до довольно хорошего.</p>\n\n<h3>Для продолжающих — для изучения алгоритмов</h3>\n<p>К сожалению, нет хороших полноценных учебников по алгоритмам. Те книги, которые я указываю ниже, считаются довольно хорошими книгами, но покрывают материалы нашего курса далеко не полностью и/или зачастую содержат много дополнительной или не всегда нужной информации. Я стараюсь на страничке курса давать ссылки на полезные материалы по разным темам; также я всегда готов вам рассказывать нужные темы на занятиях. Соответственно, я предполагаю, что изучать нужные темы вы будете именно по материалам, на которые есть ссылки со странички курса, и/или по моим рассказам, а литература, указанная ниже — скорее вспомогательные книги.</p>\n\n<ul>\n<li><b>Т. Кормен, Ч. Лейзерсон, Р. Ривест «Алгоритмы. Построение и анализ»</b> (во втором издании к авторам присоединился еще К. Штайн). Самая популярная книга по алгоритмам, книга, которую должен знать каждый уважающий себя крутой программист. Довольно хорошая, но довольно продвинутая (вряд ли ее стоит читать школьникам ниже 3-4 уровня), и местами чересчур теоретизирована (рассчитана скорее на студентов, а не на школьников).</li>\n<li><b>А. Шень. Программирование: теоремы и задачи</b> (свободно доступна с сайта <a href="http://www.mccme.ru/free-books/">http://www.mccme.ru/free-books/</a>). Тоже довольно известная книга, и написанная в расчете на в том числе школьников, хотя на мой взгляд дает местами лишний или чересчур глубокий материала, а часть материала, наоборот, можно было бы изложить более детально. Но все равно весьма рекомендую.</li>\n<li><b>Д. Кнут. Искусство программирования.</b>. (В ранних изданиях русского перевода — Искусство программирования для ЭВМ.) Классическая и очень-очень известная монография, но содержит очень много информации, которую тяжело фильтровать на более и менее важную, очень тяжело читается, и чувствуется, что первое издание было почти 50 лет назад (!) (проблема скорее не в устаревании материала, а в устаревании способа подачи, например, примеры даются на ассемблерно-подобном языке, а не на языке высокого уровня или псевдокоде).</li>\n</ul></div>', 'title': '\nРекомендуемая литература', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_28', 'order': 28, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div><a href="https://docs.google.com/document/d/1YrAWXEK4ak9lE07Sx8C7vLZ0kgJav86IouaNU91GNGM/pub">\nПримерный план уровней</a></div>\n', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_29', 'order': 29, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Формулы расчета рейтинга и т.д.</h1>\n<p>В сводных таблицах показывается рейтинг, активность, рейтинг на codeforces, взвешенное изменение рейтинга на codeforces и взвешенное количество контестов на codeforces.</p>\n\n<h2>Рейтинг</h2>\n<p>(Кому интересно, конкретный код расчета рейтинга и активности есть <a href="https://github.com/petr-kalinin/algoprog/blob/master/server/calculations/calculateRatingEtc.coffee">вот здесь</a>.)</p>\n\n<p>Рейтинг определяется просто набором решенных задач. А именно, каждая задача стоит некоторое фиксированное количество баллов рейтинга, определяемое уровнем этой задачи.</p>\n\n<p>Задача уровня 1А стоит $2.5$ балла рейтинга. Задача уровня 2А стоит $2.5^2$ баллов рейтинга. Задача уровня 3А стоит $2.5^3$ баллов рейтинга, и т.д. Задача уровня $N$А стоит $2.5^N$ баллов рейтинга.</p>\n\n<p>Задачи промежуточных уровней стоят промежуточное число баллов. А именно, задача уровня $N$Б стоит $2.5^{N+0.25}$ баллов рейтинга, уровня $N$В — $2.5^{N+0.5}$, уровня $N$Г — $2.5^{N+0.75}$ баллов.</p>\n\n<p>Задачи с региональных олимпиад считаются как задачи с уровня 3А. Если одна и та же задача есть на нескольких уровнях, то учитывается только самый высокий уровень этой задачи.</p>\n\n<p>При выводе рейтинга в таблицы он округляется до целых, но при подсчете все считается вещественными числами.</p>\n\n<p>Табличка стоимости (округленная до двух знаков после запятой):</p>\n<pre>          А        Б        В        Г\n1      2.50     3.14     3.95     4.97 \n2      6.25     7.86     9.88 \n3     15.62    19.65    24.71 \n4     39.06    49.12    61.76 \n5     97.66   122.80   154.41 \n6    244.14   306.99   386.02 \n7    610.35   767.48   965.05 \n8   1525.88  1918.69  2412.63 \n9   3814.70  4796.73  6031.57 \n10  9536.74 11991.82 15078.91 \n</pre>\n\n<h3>Идеология</h3>\n<p>Баллы за задачу растут очень быстро, специально для того, чтобы на высоких уровнях было не так важно, что вы решали на младших уровнях. Например, если вы уже на уровне 5, то, скорее всего, задачи уровня 1 не представляют для вас вообще никакой сложности. Поэтому не важно, сколько вы решили на уровне 1. И это получается за счет того, что задачи уровня 5 стоят намного больше, чем задачи уровня 1.</p>\n\n<h2>Активность</h2>\n<p>(Конкретный код расчета — по той же ссылке)</p>\n\n<p>Активность — показатель того, насколько активно вы решали задачи последнее время. Каждая задача, которую вы когда-либо решали, дает свой вклад в активность. У каждой задачи есть "базовые" баллы активности — это квадратный корень из номера уровня. (У всех задач уровня 1 "базовый" балл равен 1, у каждой задачи уровня 2 базовый балл равен 1.4, и т.д.) Этот базовый балл умножается на $0.55^{t/\\tau}$, где $t$ — время, прошедшее с того момента, как вы сдали эту задачу, а $\\strut\\tau$ равно 1 неделе. Например, если вы сдали задачу только что, то базовый балл учитывается полностью. Если вы сдали задачу ровно сутки назад, то базовый балл умножается на $0.55^{1/7}\\approx 0.92$. Если вы сдали задачу ровно две недели назад, то базовый балл умножается на $0.55^2\\approx0.3$. Если вы сдали задачу 8 недель назад, то базовый балл умножается на $0.55^8\\approx0.0083$, т.е. эта задача уже почти не учитывается.</p>\n\n<p>Суммарное значение активности по всем задачам делится на 0.45, в результате получается эдакое среднее число "задач" в неделю.</p>\n\n<p>Получается, что на самом деле учитываются только недавно сданные задачи, а те, которые вы решали давно, не учитываются. Но при этом падение этой "учитываемости" плавное. Если вы перестанете решать задачи, то ваша активность будет постепенно падать со временем (хотя и никогда не станет ровно нулем). В таблицах активность выводится округленной до одного знака после запятой, но на самом деле активность — настоящее вещественное число.</p>\n\n<p>В ряде сводных таблиц сначала указываются школьники, активность которых больше 0.1, и только потом все остальные.</p>\n\n<h2>Цвет</h2>\n<p>Имена школьников в таблицах рисуются цветом, определяемым их рейтингом и активностью. А именно, активность определяет яркость цвета (от почти черного до насыщенного), а рейтинг определяет оттенок (от фиолетового через все цвета радуги до красного). Например, школьник с рейтингом 1 и активностью 10 будет иметь ярко-фиолетовый цвет, школьник с рейтингом 1 и активностью 0.1 будет иметь темно-фиолетовый цвет, школьник с рейтингом примерно 1500 и активностью 10 будет иметь ярко-зеленый цвет, а с активностью 0.1 — темно-зеленый цвет; красный цвет соответствует рейтингу примерно 160000.</p>\n\n<p>Конкретная формула: в <a href="https://ru.wikipedia.org/wiki/HSV_(%D1%86%D0%B2%D0%B5%D1%82%D0%BE%D0%B2%D0%B0%D1%8F_%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C)">модели HSV</a> цвет участника имеет следующие компоненты:</p>\n$h = 11/12 \\cdot (1 - log(r+1) / log(R + 1))$<br>\n$v = 0.3 + 0.7 \\cdot log(a+1) / log(A + 1)$<br>\n$s = 1$<br>\n<p>здесь $r$ и $a$ — рейтинг и активность, $R$ — "максимальный рейтинг" (те самые примерно 160000, точнее — рейтинг, который получит человек, на каждом уровне решивший по 10 задач, возможно, я буду подправлять константу в будущем), $A=7$.</p>\n\n<p>Еще есть мелкие поправки на краях возможных интервалов значений. Код, кому интересно, <a href="https://github.com/petr-kalinin/algoprog/blob/master/client/components/UserName.coffee">здесь</a>.</p>\n\n<h2>Параметры codeforces</h2>\n<p><a href="https://github.com/petr-kalinin/algoprog/blob/master/server/calculations/calculateCfRating.coffee">Код</a></p>\n\n<p>Рейтинг на CF берется прямо с CF, обновляется раз в сутки.</p>\n\n<p>Взвешенное количество контестов вычисляется так: каждый написанный вами контест дает вклад, равный $0.5^{t/\\tau}$, где $t$ — время, прошедшее с написания контеста, а $\\tau$ равно 4 неделям. Все такие вклады суммируются. Т.е. только что написанный контест дает вклад 1, контест, написанный 4 недели назад — 0.5, и т.д.</p>\n\n<p>Взвешенное изменение рейтинга вычисляется так: каждый написанный вами контест дает вклад, равный $\\delta\\cdot0.5^{t/\\tau}$, где $\\delta$ — изменение рейтинга в этом контесте, $t$ — время, прошедшее с написания контеста, а $\\tau$ равно 4 неделям. При этом самый первый в жизни написанный контест не учитывается, т.к. там изменение рейтинга — это бессмысленная вещь.</p></div>', 'title': '\nФормулы расчета рейтинга, активности и т.д.', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_30', 'order': 30, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_31', 'order': 31, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про ачивки</h1>\n<p>На алгопроге каждый пользователь может заработать ачивки. Ачивки выдаются за разные вещи, в первую очередь за успешные занятия на алгопроге, а также за участие в различных олимпиадах. Заработанные пользователем ачивки показываются в его профиле, также три наиболее «крутые» ачивки показываются рядом с именем пользователя в сводных таблицах и т.д.</p>\n\n<p>Полный список доступных ачивок можно посмотреть <a href="/achieves">здесь</a>, а также в виде исходного кода <a href="https://github.com/petr-kalinin/algoprog/blob/master/client/lib/achieves.coffee">здесь</a>.</p>\n\n<p>Часть ачивок выдается автоматически, часть ачивок (в основном за олимпиады) я устанавливаю вручную. Если вы считаете, что у вас должна быть какая-то ачивка, а у вас ее нет, то напишите мне. Особенно это касается школьников из-за пределов Нижегородской области — я не всегда могу отслеживать все ваши олимпиады, поэтому пишите мне про свои олимпиады сами.</p></div>', 'title': ' \nПро ачивки', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_32', 'order': 32, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_33', 'order': 33, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про дополнительные лекции</h1>\n\n<p>Я планирую время от времени по воскресеньям на занятии в ННГУ проводить дополнительные лекции на разные темы, не связанные напрямую с алгопрогом и вообще с алгоритмами — но которые серьезный программист по идее должен знать.</p>\n\n<p>Эти лекции совершенно не нужны для занятий на алгопроге, да и по бóльшей части для олимпиад тоже (хотя отчасти и будут полезны, особенно про командную строку). Но они очень полезны для вашего кругозора.</p><p>\n\n</p><p>Цель таких лекций — дать вам общее представление о той или иной теме. Я не буду ставить целью чтобы вы сразу научились чему-то новому, я буду ставить целью чтобы вы узнали о существовании чего-то нового и поняли, что надо искать и про что читать в интернете, чтобы с этим разобраться. </p>\n\n<p>Лекции будут проходить в среднем раз в две недели по воскресеньям в ННГУ в аудитории 114 в 15.00, и длиться примерно 30-60 минут. На них можно приходить и тем, кто зарегистрировался на занятие в 14.00, и тем, кто зарегистрировался на занятие в 15.30, и тем, кто не регистрировался на занятия вообще.</p>\n\n<p>Предварительный список тем (я готов принимать от вас запросы на какие-либо еще темы):</p><p>\n\n</p><ul>\n<li><b>6 октября</b>: Командная строка</li>\n<li><b>27 октября</b>: Far manager</li>\n<li><b>16 февраля</b>: Системы контроля версий</li>\n<li>TeX и LaTeX</li>\n<li>...</li>\n</ul>\n\n<p>Запрошенные темы (не обещаю, что расскажу, но подумаю):</p>\n\n<ul>\n<li>Нейронные сети и их обучение</li>\n<li>Компиляторы, интерпретаторы, ассемблер и т.д.</li>\n<li>История языков программирования</li>\n</ul></div>', 'title': ' \nПро дополнительные лекции по воскресеньям', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_34', 'order': 34, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_35', 'order': 35, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>О лицензии на материалы этого сайта</h2>\n<h3>Исходный код сайта</h3>\nИсходный код собственно сайта algoprog.ru написан мною (Петром Калининым) и распространяется по лицензии <a href="http://www.gnu.org/licenses/agpl">GNU Affero General Public License</a>. Скачать исходный код можно с сайта <a href="http://github.com/petr-kalinin/algoprog">github.com/petr-kalinin/algoprog</a>.\n\n<h3>Теоретические материалы</h3>\n<p>На этом сайте есть различные теоретические материалы с разной степенью понятности с точки зрения лицензии.</p>\n<p>Материалы, в которых лицензия указана явно, распространяются по указанной в них лицензии.</p>\n<p>Материалы, размещенные на других сайтах, на которые с сайта algoprog.ru проставлена только ссылка, распространяются по лицензии, определяемой указанным сайтом.</p>\n<p>Материалы, в которых лицензия явно не указана, но автором которых являюсь я (это большинство материалов, размещенных непосредственно на сайте algoprog.ru), распространяются по лицензии <a href="http://creativecommons.org/licenses/by-sa/4.0/">Creative Commons Attribution-ShareAlike (CC BY-SA) 4.0</a>.</p>\n<p>Если вы не уверены, какая лицензия распространяется на конкретный материал, спросите меня.</p>\n\n<h3>Условия задач</h3>\n<p>Условия задач взяты с сайта <a href="http://informatics.mccme.ru">informatics.mccme.ru</a>, где они в большинстве случаев собраны с различных олимпиад. Условия лицензии на них не ясны.</p>\n</div>', 'title': '\nО лицензии на материалы сайта', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_36', 'order': 36, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_37', 'order': 37, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Франшиза</h1>\n\n<p>Если вы уже учите кого-нибудь (школьников, студентов и т.д.) программированию, и хотите использовать алгопрог или его материалы в своих занятиях...</p>\n\n<p>...или если вы хотите начать учить кого-нибудь на базе алгопрога или с использованием его материалов...</p>\n\n<p>...или если вы хотите использовать движок алгопрога в своих занятиях, наполнив его своими материалами</p>\n\n<p>то этот текст для вас.</p>\n\n<h2>Материалы</h2>\n\n<p>Если вам нужен не функционал алгопрога, а только <i>материалы</i> — теоретические материалы, видеолекции, задачи и т.д. — то они доступны в том или ином виде свободно. Теоретические материалы, автором которых являюсь я, как правило, распространяются под той или иной свободной лицензией, вы можете их использовать. Она обычно указана в самом материале, если там лицензия не указана, то спросите меня. Материалы, автором которых являюсь не я, взяты с других сайтов, вы обычно тоже можете их использовать. Задачи взяты с сайта <a href="http://informatics.mccme.ru">informatics.mccme.ru</a>, этот сайт специально создан для проведения различных курсов по программированию, вы можете формировать свои курсы из доступных там задач и т.д. В частности, вообще все содержимое алгопрога есть на информатиксе: <a href="https://informatics.msk.ru/course/view.php?id=1135">informatics.msk.ru/course/view.php?id=1135</a> — собственно, весь алгопрог вырос из этого моего курса на информатиксе.</p>\n\n<h2>Движок</h2>\n\n<p>Сам движок алгопрога также <a href="https://github.com/petr-kalinin/algoprog">свободно доступен</a>, вы можете поднять собственный инстанс алгопрога и делать там что угодно. (Хотя, конечно, это не так просто, и я вряд ли буду вам помогать.)</p>\n\n<h2>Отдельный инстанс</h2>\n\n<p>Я могу поднять отдельный инстанс алгопрога для ваших учеников, с вашими материалами и задачами. Это требует отдельного обсуждения, но в принципе это возможно. Это будет платно, конкретная стоимость будет зависеть от необходимой работы по поддержке инстанса, необходимых доработок, и ожидаемого количества учеников. В качестве грубой предварительной оценки, если не требуется серьезных доработок, и ожидается 20-50 учеников, то стоимость отдельного инстанса будет составлять 500-1000 рублей с ученика в месяц.</p>\n\n<h2>Занятия прямо на алгопроге по материалам алгопрога</h2>\n\n<p>Если вы хотите заниматься именно на алгопроге, то есть следующие варианты. Во-первых, ваши ученики может зарегистрироваться на алгопроге и заниматься как независимые ученики. С моей точки зрения это будут просто дополнительные ученики на алгопроге, вы сможете организовывать занятия, помогать ученикам и т.д., но у вас не появится никаких дополнительных возможностей на алгопроге (вы не сможете просматривать решения учеников и т.д.). Ваши ученики занимаются независимо, для них стоимость занятий будет, естественно, определяться <a href="/pay">по общим правилам</a>, с вас я, естественно, денег брать не буду (и вообще могу про вас и не знать :) ).</p>\n\n<p>Если вы хотите иметь дополнительные возможности — просматривать решения учеников, комментировать их, засчитывать/игнорировать, иметь отдельные сводные таблицы, то напишите мне. Это все (равно как и другие запросы с вашей стороны) вполне реально, но требует отдельного обсуждения. В качестве <b>базовых</b> вариантов есть следующие:</p>\n<ul>\n<li>Ваши ученики занимаются на алгопроге на равных правах с остальными, я их проверяю, комментирую, засчитываю/игнорирую их решения — и плюс вы можете делать то же самое; для ваших учеников будут отдельные таблички и т.д. <b>Как правило</b>, стоимость таких занятий для ваших учеников будет такая же, как если бы они занимались независимо. (Т.е. никакой дополнительной оплаты за дополнительный функционал нет, но и скидок нет.)</li>\n<li>Я никак не взаимодействую с вашими учениками — не смотрю их решения, не засчитываю/игнорирую. Все это делаете, если хотите, вы. <b>Как правило</b>, стоимость таких занятий для ваших учеников будет в два раза меньше, чем если бы они занимались независимо.</li>\n</ul>\n<p>В обоих вариантах выше существенны слова «базовые» (варианты) и «как правило». Это обозначает, что, с одной стороны, это не публичная оферта — в конкретной ситуации возможны другие условия и другие цены; с другой стороны, возможны также и другие варианты по функционалу и по нашему с вами взаимодействию. Пишите, поговорим :)</p>\n\n<p>В частности, если для ваших учеников занятия обычно бесплатные, то оба варианта выше будут, как правило, бесплатными.</p>\n\n</div>', 'title': '\nО франшизе', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_38', 'order': 38, 'indent': 0, 'type': 'label', 'title': '', 'content': '<div style="height:1ex;"></div>\n\n<div><b>«Стажировка» на алгопроге</b></div>\n', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-20927_39', 'order': 39, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>«Стажировка» на алгопроге</h1>\n<p>Что летом делают большинство нормальных студентов-программистов? Стажируются в IT-компаниях. Школьников обычно на такие стажировки не зовут, да и участвовать школьникам в стажировках обычно сложно.</p>\n\n<p>Поэтому я подумал, чем алгопрог хуже IT-компаний? И решил организовать возможность некоего аналога стажировок на алгопроге. А именно, если вы хотите, то можете поучаствовать в развитии самой платформы алгопрога. Если вы всегда хотели добавить на алгопрог какую-нибудь фичу, то вы сможете этим заняться. Или у меня для вас есть список вещей, которые я давно хочу сделать на алгопроге, но все не успеваю, и вы можете заняться ими.</p>\n\n<p>Это, конечно, будет довольно сильно отличаться от обычных задач, которые вы решаете на алгопроге. Вам придется разбираться в довольно объемном уже существующем (и очень грязном) коде алгопрога, вам придется разбираться в наверняка незнакомом языке программирования (Coffeescript, но не бойтесь — он несложный и поначалу весьма похож на питон), вам придется разбираться со множеством технологий, с которыми вы возможно еще не работали (git, MongoDB, node.js, React, немного Redux), вам придется разбираться с HTML и браузерным Javascript, вам придется много гуглить и читать, причем скорее всего по-английски (ну или через переводчик) — но я верю, что если вы абсолютно уверенно решаете как минимум задачи уровней 1А и 1Б, и не боитесь самостоятельно разбираться с возникающими проблемами, то вы вполне можете и со всем этим разобраться.</p>\n\n<p>Исходный код алгопрога вот: <a href="https://github.com/petr-kalinin/algoprog">https://github.com/petr-kalinin/algoprog</a>. Список доделок, которыми вы можете заняться, вот: <a href="https://github.com/petr-kalinin/algoprog/issues">https://github.com/petr-kalinin/algoprog/issues</a>, или вы можете обсудить со мной и предложить что-то свое.</p>\n\n<p>В отличие от классических стажировок, я не буду требовать от вас какой-то регулярности в работе (ну собственно как и с обычными задачами на алгопроге), и не буду вам платить денег :) — но обещаю, что буду вникать в то, что вы делаете, и помогать. А вы внесете свой вклад в развитие алгопрога, и получите много нового разнообразного опыта.</p>\n\n<p>Кроме того, в отличие от классических стажировок, я не смогу вам уделять столько внимания, сколько обычно уделяет руководитель стажеру в IT-компаниях. Вам придется очень во многом разбираться самостоятельно, я буду скорее направлять ваши действия, а не давать конкретные детальные указания. Будьте к этому готовы.</p>\n\n<p>В общем, если вы хотите в этом поучаствовать, пишите. Распространяется на всех, кто занимается на алгопроге (не обязательно школьников) и имеет уровень минимум 1В. Пока только лето (с апреля по август включительно).</p></div>', 'title': '«Стажировка» на алгопроге', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16024_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Очные занятия</h2>\n<font size="+1"><a href="/material/module-20927_17" onclick="window.goto(\'/material/module-20927_17\')();return false;">Подробная информация</a></font><br>\n', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16024_1', 'order': 2, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про свои ноутбуки</h1>\n<p>Иногда бывает, что на занятиях не хватает компьютеров (особенно в начале учебного года). Поэтому вы <b>можете приносить свои ноутбуки</b>, но на следующих условиях:</p>\n<ol>\n<li>Вы сами несете ответственность за свой ноутбук. Я не готов решать какие-либо проблемы, связанные с ноутбуком, начиная от отсутствующей зарядки или отсутствующего интернета (см. ниже), поломки его вами или другими школьниками, и до даже его пропажи (хотя и надеюсь, что такого не будет). Если вы и ваши родители не уверены, стоит ли вам брать с собой ноутбук — не берите.</li>\n<li>Обеспечивайте доступ в интернет на своем ноутбуке самостоятельно. Проще всего — имейте с собой usb-модем или научитесь раздавать доступ в интернет со своего телефона. Убедитесь, что у вас достаточно трафика для работы, или заранее подключите пакет трафика (я думаю, если вы собираетесь только работать на informatics, то сотни мегабайт будет более чем достаточно). Лучше проверьте заранее, что все работает. Вы можете также объединиться, чтобы в группе друзей один человек раздавал интернет на всех, но договаривайтесь об этом самостоятельно и заранее, а также читайте следующие пункты.</li>\n<li>Убедитесь, что у вас на ноутбуке нет вирусов и других программ, которые могут захотеть скачать большое количество данных из интернета; вирусы еще могут подписать вас на какие-нибудь платные мобильные рассылки. (Многие программы с функцией автообновления могут расходовать много трафика без предупреждения). Если вы используете интернет друга, или предоставляете свой интернет друзьям, то риск скачивания большого объема данных тем более возрастает. (В частности, именно поэтому я сам не раздаю интернет со своего телефона.)</li>\n<li>Имейте с собой все нужные зарядки (для ноутбука и для телефона, хотя телефон проще подключать к ноутбуку). Имейте также с собой <b>удлинитель</b> метра на 3 как минимум, а то и на 5 метров, т.к. в наших аудиториях у многих столов или нет розеток, или их мало.</li>\n<li>Заранее установите требуемые для работы программы — среду программирования и/или среды разработки, какие вы используете; для команд также убедитесь, что у вас установлено всё, что требуется для всей вашей команды.</li>\n<li>Для команд нет большого смысла приносить более 1 ноутбука на команду.</li>\n</ol></div>', 'title': 'Про свои ноутбуки на занятиях', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16024_2', 'order': 3, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Лицей 40</h3>\n<p><b>Только для учеников лицея 40</b></p>\n<p>Занятия проходят по средам в 14:30 КЦ.</p>\n<ul>\n<li>Новичкам (кто не ходил ни разу и не решал задач заочно) <b>прежде чем приходить на занятие, необходимо зарегистрироваться на сайте и решить хотя бы одну задачу</b>. Исключение — занятие 25 сентября, туда можно приходить всем новичкам вообще.</li>\n<li>Те, кто уже был хотя бы один раз, или решил в курсе хотя бы одну задачу заочно, могут приходить каждую среду.</li>\n</ul>\n<a href="/material/in20946" onclick="window.goto(\'/material/in20946\')();return false;">Правила получения зачета</a>\n<h3>ННГУ</h3>\n<p><b>Только для школьников</b>\n</p><p>Занятия проходят по воскресеньям в ННГУ ил. Лобачевского (пр. Гагарина, 23), корп. 2, ауд. 110 и 114.</p>\n<p><b>Берите с собой паспорт или свидетельство о рождении.</b> Если вас не пускает охрана, звоните мне.</p>\n<ul>\n<li>Проходит два занятия: с 14.00 до 15.30 и с 15.30 до 17.00.</li>\n<!--<li>Занятие проходит с 14.00 до 16.00.</li>-->\n<li>Новичкам (кто не ходил ни разу и не решал задач заочно) <b>прежде чем приходить на занятие, необходимо зарегистрироваться на сайте и решить хотя бы одну задачу</b>. Исключение — занятие 22 сентября, туда можно приходить всем новичкам вообще.</li>\n<li>Те, кто уже был хотя бы один раз, или решил в курсе хотя бы одну задачу заочно, могут приходить каждое воскресенье на любое из двух занятий.</li>\n<li>Чтобы вам точно хватило компьютеров, <b><a href="/checkins" onclick="window.goto(\'/checkins\')();return false;">зарегистрируйтесь на занятие</a></b>. Без регистрации приходить можно, но если компьютеров хватать не будет, то преимущество будет у тех, кто записался. Каждую неделю надо регистрироваться заново.</li>\n<li>Регистрироваться на два занятия нельзя, но те, кто записались на 14.00, могут остаться на второе занятие, если будут места. Те, кто со своими ноутбуками, тоже могут приходить на оба занятия.</li>\n</ul>\n<hr>\n\n<div class="algoprog-contacts">\n<h2>Контакты</h2>\nПетр Андреевич Калинин\n<ul>\n<li>e-mail: petr@kalinin.nnov.ru</li>\n<li><a href="http://vk.com/petr.kalinin">http://vk.com/petr.kalinin</a>*</li>\n<li>+7(910)794-32-07**</li>\n<li>Телеграм: +7(910)794-32-07</li>\n</ul>\n<b>Телеграм:</b>\n<ul>\n<li><a href="https://t.me/algoprog_news">Канал с важными объявлениями</a>, в первую очередь про очные занятия. Рекомендую всем подписаться. (Если ссылка на t.me заблокирована, просто в телеграмме поищите канал «algoprog_news».)</li>\n<!--<li><a href="https://t.me/joinchat/CDV8hRTLsYl_pplIhhLZzw">Телеграм-чат для общих вопросов и разного флуда</a></li>-->\n</ul>\n<p>Мои контактные данные можно свободно распространять по любым вопросам, связанным с работой курса или с олимпиадным программированием в Нижегородской области вообще.</p>\n<p><b>Если у вас есть какие-то проблемы с работой в курсе, какие-то вопросы и т.п., сразу пишите мне!</b></p>\n<p>* Политика добавления в друзья во вКонтакте: я не возражаю, если вы добавите меня в друзья, но я буду добавлять только тех, кто уже давно и успешно занимается.</p>\n<p>** Пожалуйста, звоните по телефону только в экстренных случаях. Если ваш вопрос не очень срочный и может подождать несколько часов, напишите мне любым указанным выше способом — во вКонтакте, в Телеграм или на email.</p>\n</div>\n<hr>\n\n<h2>Полезные ссылки</h2>\n<font size="+1"><a href="https://www.dropbox.com/s/1n5g6w6hkryqwcw/Free%20Pascal%202.6.4%20-%20installer%20.exe?dl=0">Ссылка на установщик Free Pascal</a></font>\n<hr>\n<font size="+1">Установщики питона: <a href="https://www.python.org/ftp/python/3.5.2/python-3.5.2.exe">сам Python</a> и <a href="http://wingware.com/pub/wingide-101/5.1.12/wingide-101-5.1.12-1.exe">Wing IDE 101</a></font>\n<hr>\n<font size="+1">\n<a href="http://petr-kalinin.github.io/keyb/">Клавиатурный тренажер</a> на скорость набора программистского текста. </font> Ориентировочные результаты: 150 символов/минуту — довольно неплохо, 200 символов/минуту — очень круто. <a href="/material/in20938" onclick="window.goto(\'/material/in20938\')();return false;">Подробнее</a>.\n\n<hr class="algoprog-main-page-separator">\n\n<h2>Текущие олимпиады и т.п.</h2>\n', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16024_3', 'order': 4, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>О школьной олимпиаде</h1>\n<font color="red">Эта информация касается школьной олимпиады в Нижегородской области. В других регионах могут быть отличия.</font>\n<h3>Краткое содержание того, что ниже</h3>\n<ul>\n<li>В школьной олимпиаде стоит участвовать как минимум всем, у кого уровень 1В и выше</li>\n<li>Участвовать надо по задачам за 9-11 класс, даже если вы в младших классах</li>\n<li>Заранее выясните, где и когда будет олимпиада, и попросите вам дать возможность писать на том языке, на котором вы хотите.</li>\n<li>На самой олимпиаде:</li>\n<ul>\n<li>Тщательно тестируйте свои задачи, жюри будет проверять их только после олимпиады и второй попытки у вас не будет!</li>\n<li>Неполные решения также оцениваются</li>\n<li>Прочитайте все задачи сразу, не тратьте всё время на одну задачу.</li>\n<li>Регулярно сохраняйте решения</li>\n<li>Не бойтесь задач, самые сложные обычно примерно соответствуют уровню 1Г-2А, и не обязательно решать всё, чтобы пройти дальше.</li>\n<li>Если что-то забыли, ищите обходные пути</li>\n<li>Ищите закономерности</li>\n<li>Применяйте здравый смысл</li>\n</ul>\n<li>Как только узнаете свой результат, скажите его мне</li>\n<li><font color="red">(Только нижегородцы) По любым вопросам, а особенно если что-то идет не так, сразу и в любое время звоните мне!</font></li>\n</ul>\n<h3>О чем речь?</h3>\n<p>Школьная олимпиада по информатике в Нижнем Новгороде состоится, видимо, в конце сентября — начале октября; сроки могут быть разными в разных районах. Уточните сроки заранее в своей школе. (Школьники не из Нижнего Новгорода — тоже уточняйте у себя в школе).</p>\n<p><b>Говорят, что в некоторых школах олимпиада будет аж 19 сентября! Это очень рано, конечно. Но это обозначает, что обязательно поторопитесь и выясните всё заранее!</b></p>\n<p>Школьная олимпиада — это первый этап в системе Всероссийской олимпиады школьников. Победители школьной проходят на районную олимпиаду, с районной — на областную и далее на собственно всероссийскую и международную, поэтому это — самая важная последовательность олимпиад в году, и школьная олимпиада является "входом" в нее. Не пропустите.</p>\n\n<h3>Кому стоит участвовать?</h3>\n<p>Я очень рекомендую участвовать всем, кто на момент олимпиады будут иметь уровень 1В и выше (независимо от класса). Если у вас на момент олимпиады еще не будет уровня 1В, но вы хотите, то можете тоже участвовать — хотя, возможно, задачи вам покажутся несколько сложными. Я думаю, что уровня 1В, скорее всего, будет достаточно, чтобы пройти на районную олимпиаду.</p>\n<p>Если вы в прошлом году участвовали в олимпиадах и стали призером (или победителем) районной или областной олимпиады, то школьную олимпиаду в этом году можете пропустить — вы проходите автоматом на ту олимпиаду, на которой стали призером год назад. (К городской олимпиаде из В.Д.Лелюха это не относится, она не входит в систему Всероссийской олимпиады школьников.)</p>\n\n<h3>Что надо сделать, чтобы участвовать?</h3>\n<p>Заранее, как можно раньше, подойдите к своему учителю информатики и скажите ей, что вы хотите участвовать. Ближе к дате олимпиады вам, наверное, скажут, где и когда именно она будет проходить; если не сказали, то еще раз подойдите к учителю и уточните. Пожалуйста, контролируйте сами, что вы все знаете про олимпиаду — я не могу связаться с каждой школой и сказать, чтобы вас не забыли. (В лицее 40 я передам список школьников уровня 1В и выше учителям, чтобы они про вас не забыли. Если вы хотите участвовать, но имеете уровень ниже 1В, то сообщите мне об этом заранее, я вас тоже включу в список.)</p>\n<p>Если вы младше 9 класса, то обязательно скажите, что вы хотите писать задачи за 9 класс (см. про это подробнее ниже). (В лицее 40 я сам это проконтролирую.) Младше 9 класса могут быть очень странные задачи, очень странная организация и т.д. — ни в коем случае не соглашайтесь участвовать по задачам младше 9 класса, даже если вы сами намного младше :)</p>\n<p>Заранее уточните, на каком языке программирования вы сможете писать. Постарайтесь уговорить учителей, чтобы вам дали написать вашем любимом языке, будь то Free Pascal, и PascalABC или Python или что угодно еще; если нужно, предложите, что вы сами установите нужные программы (компиляторы, среди разработки) на компьютер(ы), на которых будет олимпиада. (В лицее 40 я постараюсь заранее это все обсудить, но на всякий случай можете и сами уточить.)</p>\n<p>Если возникают какие-то проблемы, обязательно пишите или даже звоните мне (только нижегородцы)! Я не уверен, что смогу чем-то помочь, но вдруг. Не тяните с проблемами до последнего.</p>\n\n<h3>Как проходит олимпиада</h3>\n<p>Олимпиады по информатике, по крайней мере низших уровней (школьная, районная) проходят в следующем формате. Вам предлагается несколько (обычно от 2 до 5) задач, по каждой задаче вам надо написать программу. Задачи имеют такой же формат, как у нас на этом сайте: вводятся какие-то данные, надо вывести ответ. Как и у нас, гарантируется, что входные данные соответствуют ограничениям, указанным в условиях. В общем, все весьма похоже на то, как вы решаете задачи на сайте.</p>\n\n<p>Но есть важное отличие — на сайте результат проверки задачи сообщается вам сразу же, и вы можете сдавать одну и ту же задачу несколько раз. На олимпиаде ваши задачи будут проверяться только после тура, и у вас уже <b>не будет возможности исправить никакие ошибки</b>. Поэтому тщательно проверяйте свои решения, про это еще см. ниже.</p>\n\n<p>Олимпиада длится ограниченное время (скорее всего, два урока, но уточните заранее), поэтому внимательно контролируйте время. Не зависайте над одной задачей; если что-то не получается, то подумайте, может быть, стоит переключиться на другую задачу?</p>\n\n<p>В частности, <b>прочитайте все условия всех задач сразу в начале тура,</b> до того, как начнете что-либо программировать. От нашего жюри можно ожидать, что они разместят задачи по возрастанию сложности, но этого может и не быть (не говоря уж о том, что ваше восприятие сложности может отличаться от того, как это воспринимает жюри). Поэтому сначала прочитайте задачи, убедитесь, что вы их понимаете, а потом уже начинайте решать — причем с тех, которые выглядят проще. Ни в коем случае не должно быть такого, что "я все время решал первую задачу, а остальные даже не прочитал или даже не подумал над ними".</p>\n\n<p>Еще одно отличие от сдачи задач на сайте — на олимпиаде у вас будут оцениваться также и неполные решения. По каждой задаче будет подготовлено несколько тестов, и за каждый тест вы будете получать определенное количество баллов. Поэтому если у вас не получается придумать решение, которое будет работать всегда — напишите хотя бы решение, которое будет работать иногда. Постарайтесь, чтобы по каждой задаче у вас было хоть что-то сделано, чтобы у вас <b>не было нулевых баллов ни по одной задаче.</b></p>\n\n<p>В конце тура полезно еще раз проверить, что у вас все работает так, как вы ожидаете. Выделите в конце минут пять-десять, чтобы вернуться ко всем задачам и проверить, что они работают хотя бы на тесте из условия.</p>\n\n<p>В конце олимпиады вы должны сдать свои программы (исходные тексты) на проверку. На олимпиадах начального уровня обычно это делается следующим образом: вы просто оставляете их на вашем компьютере в указанном вам каталоге, откуда их потом заберут на проверку; иногда проверка осуществляется сразу после тура, даже в вашем присутствии. Заранее или в начале тура убедитесь, что вы понимаете, где вы должны оставить свои решения или как еще их вы должны сдать на проверку; если не понимаете, то спросите учителей.</p>\n\n<p>Сохраняйте решения! Во время олимпиады может произойти что угодно — отключиться свет, перезагрузиться компьютер и т.п. Если у вас из-за этого пропадет несохраненное решение, то это будут полностью ваши проблемы. Вообще, полезно привыкнуть сохранять свое решение каждые 10-20 секунд.</p>\n\n<p>Не теряйте свои решения! Если даже вы думаете, что ваше решение неправильное и его надо переписать — не удаляйте его, просто пишите в новом файле (ну или скопируйте старое решение куда-то про запас).</p>\n\n<p>Имейте в виду, что вам не обязательно решать всё. Чтобы пройти на районную олимпиаду, часто достаточно набрать половину баллов, поэтому не бойтесь, если у вас не получается решить самую сложную задачу (или две самых сложных, если задач много). (Но все равно постарайтесь по ним хоть что-то написать.) Для 11-классников порог прохода на район может быть выше.</p>\n\n<h3>О задачах за разные классы</h3>\n<p>Так исторически сложилось (и на то есть ряд дополнительных причин), что на олимпиадах по информатике набор задач общий для всех классов. Итоги потом подводятся по классам по отдельности, но задачи общие. (Иногда бывают исключения, но довольно редко.)</p>\n<p>При этом формально может быть сказано, что олимпиада проходит только для определенных классов, как правило — для 9-11 классов. Но это вовсе не значит, что младшеклассники не могут в ней участвовать — даже если вы младше 9 класса, вполне можете писать за 9 класс.</p>\n<p>Но помимо этого, я иногда слышал, что в некоторых школах бывают какие-то отдельные задачи для более младших (например, 7-8 классов). Это довольно странно; в лицее 40 я никогда про такое не слышал. Возможно, это инициатива отдельных школ или районов. В любом случае, это не то: по этим задачам вы в лучшем случае пройдете на район и дальше никуда, в худшем случае вам скажут, что "района по вашим классам не бывает" (знаю реальный такой случай). Задачи на этих олимпиадах могут иметь мало общего с тем, что мы тут проходим, организация может быть хуже (например, вам могут предложить писать программу на бумажке (!)) — в общем, если вы младше 9 класса, убедитесь, что вы выступаете за 9 класс и пишите по тем же задачам, что и 9-классники. Для этого может быть полезно заранее сказать, что вы хотите участвовать за 9-й класс. Не бойтесь этого; как я уже писал, если у вас уровень 1В или выше, то вам эти задачи будут по силам. И даже если вы решите их плохо, все равно вы получите ценный опыт, который вам пригодится через год.</p>\n\n<h3>О результатах</h3>\n<p>Как только будут известны ваши результаты, сообщите их мне. Результаты — это общее число набранных баллов (а хорошо бы и распределение баллов по задачам) и проходите вы на район или нет. Про район иногда сообщают сразу, иногда не сразу — если вы пока знаете только баллы, то сообщите мне только баллы, потом как будет известно про район, сообщите мне.</p>\n\n<h3>Какие будут задачи?</h3>\n<p>Сложно предсказать, да и в интернете задачи прошлых найти сложно (но можете попробовать, только ищите обязательно задачи и вашего района города или области — в разных районах задачи могут быть очень разными). Спросите в школе, у них наверное есть архивы прошлых лет.\n\n</p><h3>Какие знания могут потребоваться?</h3>\n<p>Вообще, я думаю, что знаний уровней 1А-1Б (т.е. основ языка), вместе со здравым смыслом, скорее всего будет достаточно, чтобы набрать половину баллов и пройти на район (для 11-классников может потребоваться чуть больше). Уровни 1В и 1Г очень полезны в том плане, что они содержат нестандартные задачи как раз типа тех, что будут на олимпиаде. Кроме того, в ряде задач могут потребоваться следующие знания:</p>\n\n<h4>int64</h4>\nВ паскале есть очень полезный тип данных, про который вы, возможно, не знаете. Это <code>int64</code> — 64-битное целое число. Он может хранить числа от (примерно) -2<sup>63</sup> до 2<sup>63</sup>; это примерно от -9e18 до 9e18. Он полезен, если значения, которые вам нужны в вашей программе, не влезают в integer.\n<pre>var a:int64;\nbegin\na:=1000000000;\na:=a*1000000000;\nwriteln(a); // выведет 1000000000000000000\nend.\n</pre>\n\n<h4>Тестирование задач</h4>\n<p>Очень важная вещь на олимпиаде — аккуратно протестировать задачи. На эту тему я недавно написал <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">длинный текст</a> (ссылка на него также есть в уровне 1В). Прочитайте его и следуйте его рекомендациям. Конечно, вам пока не обязательно использовать совсем уж продвинутые вещи типа стресс-тестирования или assert\'ов, но практически весь остальной текст вам будет полезен. Не жалейте времени на аккуратное тестирование.</p>\n\n<p>Полезно хотя бы немного отработать навык тестирования до олимпиады. Постарайтесь порешать несколько задач из еще не решенных вами с учетом рекомендаций по тестированию.</p>\n\n<h4>Работа с файлами</h4>\n<p>Ниже — про паскаль; про работу с файлами в питоне см. текст на уровне 2А.</p>\n<p>На школьной олимпиаде, вполне возможно, вам придется вводить данные не с клавиатуры, а из указанного в условии задачи файла, и аналогично выводить данные не на экран, а в файл. В паскале это делается это так: вы заводите переменную специального типа <code>text</code>, а потом командами <code>assign</code> и <code>reset/rewrite</code> "открываете" файл на чтение/запись соответственно. Далее в командах <code>read/readln</code> и <code>write/writeln</code> <i>первым</i> аргументом указываете файл (переменную), откуда читать или куда выводить. После работы с файлом "закрываете" его командой <code>close</code>. При этом тогда ваша программа <b>не должна ничего вообще</b> читать с клавиатуры! Т.е. по нажатию Ctrl-F9 черное окошко должно мелькать на мгновение, после чего должно возвращаться синее окошко паскаля.</p>\n\n<p>Пример кода, который читает из файла <code>input.txt</code> два числа и выводит в файл <code>output.txt</code> их сумму:</p>\n<pre>var f,g:text;\n    a,b:integer;\nbegin\nassign(f,\'input.txt\');reset(f); // "открыли" файл input.txt для чтения\nread(f,a,b); // из файла f прочитали числа a и b\nclose(f); // "закрыли" файл\nassign(g,\'output.txt\');rewrite(g); // "открыли" файл output.txt для записи\nwriteln(g,a+b); // вывели сумму чисел в файл g\nclose(g); // "закрыли" файл\nend.\n</pre>\n\n<p>Как тестировать такую программу? В оболочке паскаля вы можете открыть несколько окон (через меню File - Open). В одном набираете программу (и сохраняете файл как <code>чтонибудь.pas</code>), в другом редактируете входной файл (и сохраняете как требуется по условию), в третьем открываете выходной файл.</p>\n\n<p>Переключаться между окнами можно, нажав Alt-0 — будет окошко со списком всех открытых файлов. Можно также заметь в правом верхнем углу каждого окошка цифру (1, 2, 3 и т.д.) и переключаться в это окошко, нажав Alt-1, Alt-2 и т.п. Я, например, предпочитаю иметь в окошке "1" исходный текст программы, в окошке "2" входной файл, в окошке "3" выходной файл. Я не советую вам иметь много открытых окон — оставляйте открытыми только те окна, которые нужны для текущей задачи. Когда переключаетесь на новую задачу, закрывайте все окна от старой задачи и открывайте окна для новой задачи.</p>\n\n<p>Соответственно, теперь вводите тест в окошко с входным файлом, не забываете его сохранить (!), и запускаете программу. Если в одном из окон у вас открыт выходной файл, то после запуска программы паскаль вам будет выводить диалоговое окно вида "File output.txt has changed on disk. Reload?" ("Файл output.txt изменился на диске. Перезагрузить?"; точный английский текст я не помню.) Нажмите "yes" — и в окошке с выходным файлом его содержимое автоматически обновится.</p>\n\n<p>Тестировать программу так даже удобнее, чем при вводе с клавиатуры: если вы отлаживаете программу на конкретном тесте, то вам не надо его вводить заново при каждом запуске.</p>\n\n<p>Обязательно попробуйте работать с файлами <b>до олимпиады</b>!. Если на олимпиаде у вас не получается быстро наладить работу с файлами, то лучше попросите разрешения работать по старинке — с клавиатуры и на экран. Не теряйте время на то, чтобы разобраться с файлами на олимпиаде!</p>\n\n<h4>Алгоритмы</h4>\n<p>В основном большинство задач на школьной олимпиаде вряд ли будут требовать специальных знаний, особенных алгоритмов. Задачи, скорее всего, будут требовать только аккуратного размышления и аккуратной реализации; ничего такого, что мы с вами не проходили, не потребуется. Возможно, придется пописать что-то на бумажке, сделать какое-то моделирование и т.п. Все будет довольно похоже на задачи уровней 1В и 1Г. </p>\n\n<p>В наиболее сложных задачах, возможно, потребуются алгоритмы, обсуждаемые в уровнях 2А и 2Б — в первую очередь НОД, сортировки, простые числа и разложения на множители, может быть ДП. Если у вас уже решено хотя бы задач 10-15 уровней 1В/1Г, можете переключиться на эти темы на уровне 2, но не тратьте много времени — лучше порешайте еще задач с уровней 1В/1Г и научитесь тестировать задачи. Конечно, если у вас уже много задач уровней 1В/1Г решено и вы уже находитесь на уровне 2, то изучите эти темы.</p>\n\n<h4>Сложность алгоритмов</h4>\n<p>Важной вещью может оказаться определение того, насколько долго работает придуманный вами алгоритм на больших входных данных. Это обязательно стоит проверить, в идеале — еще до написания программы. Для этого существует понятие <i>сложности алгоритма</i>, про нее можно почитать <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/02_complexity.pdf">тут</a> (в первую очередь читайте часть 1; самое главное — в абзаце, который на стыке страниц 2 и 3, про 100 миллионов действий).\n\n</p><h4>Используйте компьютер по полной</h4>\n<p>Помните, что вы можете на компьютере не только писать программы-решения задач. Если вы, например, думаете над задачей, и вам стало важно узнать, чему равно 163*634, то не надо умножать числа в столбик. Воспользуйтесь калькулятором на компьютере или напишите отдельную программу из одного writeln/print. Если у вас в задаче описан какой-то процесс (есть N бактерий, они размножаются по каким-нибудь правилам, или что-нибудь подобное), не бойтесь написать отдельную программу, которая промоделирует этот процесс, выведет что вам надо, чтобы вы могли поискать какие-нибудь закономерности. И так далее. Не бойтесь писать вспомогательные программы.</p>\n\n<h4>Ищите закономерности</h4>\n<p>Наше жюри иногда любит давать задачи, в которых легко находится та или иная закономерность. Если вы не можете решить какую-то задачу для всех входных данных, то решите ее на бумажке для маленьких входных данных (или, с учетом предыдущего пункта — напишите простую программу, которая решит задачу для маленьких и средних входных данных), и посмотрите на ответы и решения глазами: вдруг вы найдете какую-нибудь закономерность.</p>\n\n<h4>Знакомые задачи</h4>\n<p>Авторы задач школьной олимпиады не очень изобретательны и нередко у них появляются задачи, которые вы уже знаете или которые очень похожи на что-то, что вы уже решали. (Например, год назад то ли на школьной, то ли на районной олимпиаде была задача "Автобусы" из наших "Продвинутых задач на условный оператор". Я не думаю, что авторы задач пользовались этим сайтом, скорее всего они сами независимо придумали эту задачу.) Не удивляйтесь, но решите-таки.</p>\n\n<h4>Если чего-то не знаете, ищите обходные пути</h4>\n<p>Если вы понимаете, что в задаче требуется что-то, чего вы не помните, не знаете, "не проходили" — попробуйте придумать обходной путь — как сделать то же самое, пусть сложнее, но с использованием тех вещей, которые вы знаете. Или как вообще решить задачу по-другому, не используя это знание вообще. Например, если вы не помните, какая функция переводит число в строку — подумайте, как написать такую функцию самостоятельно (подсказка: по аналогии со всякими задачами про цифры с уровня 1А). Или подумайте, а может быть, вам и не надо переводить число в строку вообще? Если вы поняли, что вам нужна сортировка, но вы не знаете, как ее делать — попробуйте или придумать, или придумать, как решать задачу без сортировки. Зачастую это получится. И так далее.</p>\n\n<h4>Здравый смысл</h4>\n<p>Ну и главное. Применяйте здравый смысл. Думайте головой, постоянно думайте над тем, что вы делаете, и помните, что <b>ваша цель на олимпиаде — как можно лучше выступить по сумме заданий.</b></p>\n\n<p>В частности, тут я написал много рекомендаций, дал ссылки на много текстов. Если вы их все прочитаете и поймете — хорошо. Но если вы успели прочитать не все, или не во всем разобрались — не так страшно. Если вы чего-то не поняли, не применяйте это на олимпиаде (ну или точнее, подумайте, не сможете ли вы на олимпиаде быстро допонимать). Не суетитесь и не переживайте, а спокойно решайте задачи.</p></div>', 'title': 'Про школьную олимпиаду', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16024_4', 'order': 5, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16024_5', 'order': 6, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про командную олимпиаду</h1>\n<p><b>Это относится только к нижегородским школьникам. В других регионах свои отборочные олимпиады, и я не буду собирать команды из школьников других регионов. Тем не менее, если вы не из Нижегородской области, у вас нет команды, и вы хотите поучаствовать вместе с другими школьниками, занимающимися на моем курсе, можете мне написать, я может быть стыкую вас с другими такими желающими (если такие "другие желающие" будут).</b></p>\n\n<p>В ноябре в в Нижегородском техническом университете (политехе) состоится <a href="http://www.nnstuicpc.ru">Командная олимпиада школьников Нижегородской области по программированию</a>, она же — отбор на <a href="http://neerc.ifmo.ru/school/russia-team/index.html">Всероссийскую командную олимпиаду школьников по программированию (ВКОШП)</a>. Участвуют команды из трех человек, подробные правила будут в информационном письме на сайте нижегородской олимпиады и на сайте ВКОШПа, они несколько отличаются от классических школьных олимпиад (пока на сайте нижегородской олимпиады еще ничего нет). Также подробные правила я могу рассказать желающим.</p>\n\n<p>Желающие могут участвовать, а именно:</p><p>\n</p><ol>\n<li>Из достаточно сильных школьников (примерно уровень 2В и выше), которые занимаются в моем курсе, я составлю команды. Я сам свяжусь с соответствующими школьниками в ближайшее время, или вы можете написать мне.</li>\n<li>Остальные могут составить команды сами. Сообщите мне на всякий случай, что вы хотите участвовать, возможно, я найду для вас команду, но в общем случае я не готов администрировать ваши команды (подавать заявку и т.п.). Тем не менее, во-первых, если в вашей школе есть много желающих участвовать, то можете подать заявку от школы (договориться с вашим учителем информатики и т.п.); во-вторых, если вы сами соберетесь в какую-нибудь сборную команду, даже из разных школ, то можете подавать заявку полностью самостоятельно. Я считаю, что вам может иметь смысл участвовать, если вы уже уровень 1В или выше, но, конечно, самостоятельно вы вольны подавать заявку как хотите.</li>\n</ol>\n\n<p>Уровень задач на олимпиаде, я думаю, стоит ожидать такой: будет одна-две простых задачи уровня школьной олимпиады (уровня 1Б), будет большая группа задач средней сложности — примерно от уровня районной до уровня областной олимпиады (примерно сложности 1В-3В), и будет одна-две очень сложные задачи. При этом, как всегда, не следует думать, что надо решать все задачи: думаю, основная борьба будет на уровне, где решены примерно половина задач. На сайте командной олимпиады вы можете посмотреть примеры задач прошлых лет (правда, если вы хотите участвовать в тренировках — см. ниже — то особенно не вникайте в задачи прошлых лет — мы как-нибудь напишем по ним тренировку).</p>\n\n<p>Несколько лучших команд с нижегородской олимпиады проходят на Всероссийскую командную олимпиаду школьников по программированию (ВКОШП). Сразу предупреждаю: во-первых, в области есть сильные команды, поэтому самостоятельно собранным командам будет довольно сложно пройти на ВКШОП. Во-вторых, если вы и пройдете на ВКОШП, то возможно поездку на ВКОШП вам никто не оплатит — возможно, надо будет ехать за свой счет или самим искать финансирование (говорить со школой и т.п.) (К моим командам — тех, у кого есть высокий шанс пройти на ВКОШП, я об этом предупрежу. Остальные, если вдруг пройдете, то будем думать.) (Возможно, финансирование все-таки найдем.)</p>\n\n<p>Но участвовать имеет смысл и даже без цели прохода на ВКОШП. Во-первых, это интересно и весело, во-вторых, дипломы и (небольшие) призы получат не только те команды, которые пройдут на ВКОШП.</p>\n\n<p>По воскресеньям параллельно с обычными занятиями скорее всего будут командные тренировки к командной олимпиаде. Тренировки длиннее по времени, чем обычные занятия (4-6 часов), время может быть сдвинуто относительно основных занятий — следите за объявлениями на страничке курса. Командам из п. 1 выше я настоятельно рекомендую участвовать (и я напишу в личку); если будут желающие участвовать из самостоятельно-собранных команд, то напишите мне.</p></div>', 'title': 'Про командную олимпиаду', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16024_6', 'order': 7, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16024_7', 'order': 8, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про районную/городскую олимпиаду</h1>\n<p><font color="red">Эта информация касается Нижегородской области. В других регионах могут быть отличия.</font></p>\n\n<p>Районная олимпиада, она же городская в ряде городов области (формально "муниципальный этап Всероссийской олимпиады школьников") пройдет, по текущей информации, <b>12 декабря</b>. Участие в ней принимают те, кто хорошо написал школьную олимпиаду. Критериев прохода со школьной на районную я точно не знаю, уточняйте у своих учителей. Кроме того, в олимпиаде принимают участие призеры и победители районной олимпиады прошлого года, даже если они не участвовали в школьной олимпиаде этого года.</p>\n\n<p>Участники районной олимпиады, хорошо ее написавшие, проходят на областную. Механизм здесь примерно следующий: все районы пишут по одним и тем же задачам. Все результаты сводятся в сводную таблица по всем районам области. В этой таблице проводят границу, и все школьники, набравшие больше определенного количества баллов, проходят на область. Это пороговое количество баллов определяется тем, чтобы на область прошло столько школьников, сколько область может принять; по разным классам порог разный.</p>\n\n<p>Чего стоит ожидать на районной олимпиаде? Примерно того же, что и на школьной (см. <a href="/material/module-16024_3" onclick="window.goto(\'/material/module-16024_3\')();return false;">соответствующий текст</a>), возможно, задачи будут сложнее. На страничке курса давно висит ссылка на <a href="https://www.dropbox.com/s/brq5dotrg4lmym2/raion_archive.pdf?dl=0">архив прошлогодних районных олимпиад</a>, посмотрите задачи там, очень рекомендую над ними подумать. Я не думаю, что будут требоваться какие-то более продвинутые знания, но прочитайте текст про школьную олимпиаду еще раз и учитывайте то, что там написано. На районной олимпиаде более вероятно, чем на школьной, что потребуются алгоритмы уровня 2-3. По опыту прошлых лет, может быть одна реально сложная задача. (Но в ее практически никто не решает.)</p>\n\n<p>Ближе к делу (8 декабря в ННГУ и 4 декабря в лицее 40) я проведу отдельное занятие, посвященное подготовке к районной олимпиаде.</p>\n\n<p>С позапозапрошлого года задачи районной олимпиады составляет другое жюри, поэтому задачи в этом году могут быть не похожими на те, что были четыре года назад и более. Обратите особое внимание на задачи за последние три года.</p>\n\n<p>Обязательно убедитесь заранее (спросите учителей в школе, чтобы они спросили организаторов районной олимпиады), что вам предоставят нужное ПО (нужный Питон, или Паскаль, или c++ с нужной средой и т.д.). Если есть какие-то проблемы, звоните, но это очень хорошо бы сделать заранее.</p>\n\n<p>Последние два года районная олимпиада проходила в системе Яндекс.Контест, скорее всего и в этом году будет так же. Тогда вы сможете в течение тура отправлять решения на проверку в тестирующую систему и узнавать результаты. Скорее всего, по каждой задаче будет выбрано ваше лучшее решение (набирающее больше всего баллов), и именно этот результат и будет вашим результатом по задаче. Я не знаю, будут ли в этом году штрафы за неверные попытки, постараюсь узнать ближе к делу, в прошлом году не было. </p>\n\n<p>Количество отправок решений на проверку скорее всего будет ограничено, оно будет указано в тестирующей системе. В прошлом году в качестве примера было приведено ограничение в 100 попыток, что на самом деле очень много и фактически эквивалентно бесконечному количеству попыток (вряд ли кто из вас реально израсходует 100 попыток), но в реальности может оказаться меньше.</p>\n\n<p>Это обозначает, что все будет довольно похоже на то, как вы работаете на сайте (только, в отличие от сайта, частичные решения тоже оцениваются). Если у вас программа не прошла тесты, вы можете ее пересдать. Поэтому, в частности, если за неудачные попытки нет штрафов, то не обязательно поначалу тщательно тестировать простые задачи — потестируйте немного, отправьте решение на проверку и, если оно набирает полный балл, то забудьте про эту задачу. Вот в противоположном случае тестируйте внимательнее.</p>\n\n<p>Возможно, будут еще какие-то неожиданности и отличия, будьте к ним готовы. По идее вам должны заранее объявить полные правила, хотя по факту это бывает редко. Но можете заранее спросить в школе, нет ли у них данных о том, как будет проводиться олимпиада; я со своей стороны попробую это тоже выяснить.</p>\n\n<p>Если же у вас в районе внезапно проводят олимпиаду не в Яндекс.Контесте, то требуйте Я.Контест и/или срочно звоните мне. Если у вас будут проводить по старинке, с ручным тестированием, то вы сразу оказываетесь в заведомо проигрышном положении по сравнению с другими районами — в других районах участники будут узнавать результаты в течение тура и смогут исправлять решения, а у вас — нет. Поэтому требуйте Яндекс.Контест и отстаивайте свои права.</p>\n\n<p>Важный момент — не полагайтесь на Яндекс.Контест. Будьте готовы в случае чего сдавать решения по старинке в конце тура. В частности, не теряйте свои решения! Если вы отправили решение в Контест, не удаляйте его у себя, и уж тем более не начинайте решать другую задачу в том же файле. Контест может заглючить, может потерять ваши решения, и т.д. — если и вы их тоже потеряете, все будет совсем плохо. А если решения останутся у вас на компьютере, вы хотя бы сможете потом что-то поапеллировать.</p>\n</div>', 'title': 'Про районную/городскую олимпиаду', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16024_8', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'reg_about', 'order': 10, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix">\n\n<h1>Про областную олимпиаду</h1>\n\n<p><i>(C) Петр Калинин, 2015-20. Этот текст можно свободно распространять на условиях лицензии Creative Commons Attribution-ShareAlike 2.0 (CC-BY-SA). Пожалуйста, при ссылках на этот текст используйте адрес <a href="/material/reg_about" onclick="window.goto(\'/material/reg_about\')();return false;">algoprog.ru/material/reg_about</a></i>\n\n</p><p><font color="red">Часть информации касается только Нижегородской области, часть относится ко всем регионам.</font></p>\n\n<p>Областная олимпиада по информатике (формально — региональный этап Всероссийской олимпиады) пройдет в два тура 16 и 18 января в ННГУ им. Лобачевского.</p>\n\n<h2>Отбор на область</h2>\n\n<p>Отбор на нее осуществляется следующим образом. Решения районной (она же городская в ряде городов области — Дзержинске, Арзамасе и т.д.) олимпиады сводятся по каждому классу в единую таблицу, и в этой таблице проводится граница: для каждого класса выбирается проходной балл, и все, кто набрал столько баллов или больше, проходит на область. Кроме того, вне зависимости от результатов районной олимпиады, на областную проходят призеры прошлогодней областной олимпиады.</p>\n\n<p>В этом году проходные баллы — 200 баллов по каждому классу. На <a href="http://imc.codnn.ru/vserossijskaya-olimpiada-shkolnikov/">сайте ЦОДа</a> есть итоговые результаты и списки участников областной олимпиады (где нужен пароль к архиву — пароль "2019"); в <a href="https://docs.google.com/spreadsheets/d/1Li__hzA7ZjyBR1y-2Nej0tW8TEesP-IG6gbYaPJk81s/edit#gid=0">отдельном гуглодоке</a> я свел результаты из Я.Контеста с результатами с сайта ЦОДа.</p>\n\n<h2>Формат областной олимпиады</h2>\n<p>Ну, во-первых, областная олимпиада — это фактически первая серьезная олимпиада для многих из вас. Школьная и районная олимпиады — это скорее игрушки, как по тому, какие задачи предлагаются, так и по организации вообще и по сложности прохода на следующий этап. Сильные школьники должны проходить на область "на классе", т.е. абсолютно уверенно, не прилагая особенных усилий, чисто за счет уже давно имеющихся навыков. Областная же олимпиада — это совсем другое, там и задачи ощутимо более сложные, и организация лучше. Областная олимпиада проходит в одно и то же время по одним и тем же задачам по всей России, так что это фактически крупнейшая олимпиада по информатике в России.</p>\n\n<p>Областная олимпиада проходит в два тура по пять часов каждый. На каждом туре вам, скорее всего, будут предложены 4 задачи. Примеры прошлогодних задач вы можете посмотреть и попробовать посдавать на этом сайте, ссылка есть в конце раздела "О курсе", в разделе "Архивы старых олимпиад". Но сначала прочитайте до конца этот текст.</p>\n\n<p>Вообще, если раньше вы в областных олимпиадах не участвовали, то я рекомендую вам в зимние каникулы найти свободные пять часов и сесть и порешать какой-нибудь тур с одной из олимпиад последних лет, представляя, что вы реально сидите на олимпиаде. Еще лучше сделать это пару раз. Во-первых, если вы ни разу раньше не писали пятичасовые туры, это вам будет полезно как минимум с точки зрения понимания того, насколько вам сложно просто думать над задачами 5 часов подряд. Во-вторых, вы поймете примерно, чего вы можете ожидать на области.</p>\n\n<h2>Языки программирования</h2>\n<p>Набор языков программирования будет определяться жюри. Почти наверняка будут Free Pascal и C++ (Visual Studio, по идее должен быть минимум C++11). Скорее всего будут C# и Python. Будет ли Pascal ABC, я не знаю. Обычно жюри старается вкючить разумный набор языков, но и вы со своей стороны можете попросить школу официально заявить вам нужный язык и проверить, что он будет. С другой стороны, вроде последние годы серьезных проблем с языками на области не было.</p>\n\n<p>(Вообще, по поводу общения с жюри в целом — я, конечно, могу что-то написать в жюри, и жюри зачастую прислушивается ко мне, но надо понимать, что я не являюсь официальным представителем вас, вашей школы и т.д., поэтому жюри может и полностью проигнорировать мой вопрос. Поэтому помимо того, что я могу общаться с жюри неофициально, вы лично, а также ваши родители и ваша школа могут общаться с жюри официально, и в случае каких-то серьезных проблем это может быть полезно.)</p>\n\n<h2>Система оценивания</h2>\n<p>До 2014<sup>1</sup> года включительно областная олимпиада оценивалась очень похоже на  школьную: вы пять часов писали задачи, после чего жюри брало ваши решения и проверяло на заранее подготовленных тестах; при этом каждый тест оценивался отдельно. В процессе этой проверки вы уже ничего не могли исправить в своих решениях.</p>\n\n<p><sup>1</sup> Областная олимпиада всегда проводится после Нового года, поэтому здесь и ниже, говоря «олимпиада 2014 года», я имею в виду олимпиаду 2013-14 уч. года, и аналогично про другие годы.</p>\n\n<p>С 2015 года введена новая система — так называемая система с подзадачами и фидбеком (обратной связью). Она работает примерно следующим образом.</p>\n\n<h4>Подзадачи</h4>\n\n<p>Во-первых, в каждой задаче выделяются <i>подзадачи</i> — вариации той же задачи, как правило, с меньшими ограничениями или с дополнительными условиями. Например, если в основной задаче сказано $1\\leq N\\leq 10000$, $1\\leq K \\leq 10$, и еще задан массив $a$, а в задаче идет речь про то, что надо как-то ходить направо и налево, то подзадачи могут быть, например, такими:</p>\n<ul>\n<li>Подзадача 1: $N\\leq 100$ и $K=1$;</li>\n<li>Подзадача 2: $N\\leq 100$, но $K&gt;1$;</li>\n<li>Подзадача 3: $K=1$, но $N&gt;100$;</li>\n<li>Подзадача 4: все элементы массива $a$ одинаковы;</li>\n<li>Подзадача 5: в оптимальном решении никогда не надо ходить налево;</li>\n<li>Подзадача 6: никаких дополнительных ограничений нет.</li>\n</ul>\n<p>В каждой подзадаче все не указанные явно ограничения подразумеваются взятыми из основной задачи, например, в четвертой подзадаче подразумевается, что $N\\leq 10000$, $K\\leq 10$ и нет никаких дополнительных условий по тому, как выглядит ответ.</p>\n\n<p>Таким образом, подзадачи — это упрощенные варианты основной задачи. Как правило, для каждой подзадачи существует свой алгоритм решения, который проще, чем алгоритм, решающий полную задачу. Поэтому, если вы можете написать решение полной задачи, то пишите его (почти всегда у задачи есть естественное "полное" решение, которое автоматически решает и подзадачи, поэтому если вы можете без проблем его написать, то напишите, и не думайте про подзадачи), а если нет, то пишите решения подзадач.</p>\n\n<p>При этом подзадачи оцениваются хитро. В некоторых подзадачах, как и раньше, каждый тест оценивается независимо: за каждый тест начисляется несколько баллов, и чем больше вы тестов прошли, тем больше у вас баллов. Но в некоторых подзадачах (обычно в более простых) баллы начисляются по принципу "всё или ничего", т.е. вы получаете не ноль баллов за эту подзадачу <b>только если у вас прошли все тесты этой подзадачи</b>. Т.е. если вы прошли все тесты этой подзадачи, вы получаете полный балл за нее, иначе вы получаете ноль баллов за эту подзадачу. Собственно сами подзадачи обычно оцениваются независимо, но бывает даже так, что очередная подзадача оценивается только если в предыдущих подзадачах все тесты пройдены. Правила оценивания каждой подзадачи указаны в условиях; посмотрите примеры задач прошлых лет, чтобы понять, как это.</p>\n\n<p>Это обозначает, что вам как правило нет смысла писать "какие-то" решения. Вы должны написать решение, которое как минимум абсолютно корректно решает как минимум простые подзадачи. Навыки тестирования задач становятся очень важны; если вы все еще не читали <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">мой текст</a> про это, то прочитайте.</p>\n\n<h4>Фидбек</h4>\n\n<p>Но, чтобы компенсировать увеличение сложности от введения подзадач, также вводится так называемый фидбек. А именно, <b>в течение тура вы можете отправлять ваши решения на проверку</b>. Решения будут проверяться на всех финальных тестах, и после проверки вы можете попросить, чтобы вам сообщили результат этой проверки. Скорее всего, у вас на компьютере будет стоять клиент тестирующей системы нашего жюри, вы через этот клиент будете отправлять решения, и в нем же будет какая-нибудь кнопочка типа "узнать результат этого решения". Соответственно, узнав результат, вы можете дальше планировать свою работу.</p>\n\n<p>Бывают три варианта того, что вам сообщают в качестве результата, и это зависит не только от задачи, но и от подзадачи. В каких-то подзадачах вам могут сообщать информацию по каждому тесту, прошел он или нет (или даже если не прошел, то почему — неправильный ответ, превышение предела времени и т.п. — всё очень похоже на то, что вы видите на этом сайте на закладке "результаты"). В других подзадачах вам могут только сообщать полный балл за эту подзадачу. В третьих подзадачах — первый непройденный тест и вердикт на нем (как на командных олимпиадах). Что именно вам сообщают, обычно указывается в условии.</p>\n\n<p>При этом может быть установлено ограничение на количество посылок вида, например, «по каждой задаче за весь тур вы можете сделать не более 50 попыток», или что-то подобное. Тогда, после того, как у вас кончились эти 50 попыток, вы, видимо, больше не можете решать эту задачу.</p>\n\n<h4>Итоговая оценка</h4>\n\n<p>Итоговая оценка за каждую задачу — это максимальный балл из всех отправленных вами решений. Итоговый суммарный результат, конечно, есть сумма баллов по всем задачам.</p>\n\n<p>Тут важны два момента. Во-первых, учитываются только <i>отправленные</i> в систему решения, а не просто сохраненные вами в вашем рабочем каталоге. Во-вторых, если одно из ваших решений набирает баллы только по одной подзадаче, а второе — только по второй, но вы не сдали решения, которое набирало бы баллы по обеим подзадачам, то вы получите баллы только за одну подзадачу (от того решения, которое набирает больше баллов). Аналогично если одно решение проходит только два теста из некоторой подзадачи, в которой все тесты оцениваются независимо, а другое решение проходит только два других теста, то вы не получите суммарного балла.</p>\n\n<h4>Тесты из условия</h4>\n<p>Раньше присутстввало требование, что ваше решение <b>обязано проходить все тесты из условия</b>, даже если эти тесты не попадают под ограничения той подзадачи, на которую вы нацелились. Например, в примере подзадач, приведенном выше, если в условии есть тест с $K=2$, то, даже если вы придумали только решение для $K=1$ и рассчитываете только на баллы за соответствующую подзадачу, то все равно от вас могут потребовать, чтобы вы прошли тест из условия с $K=2$. Если хотя бы один тест из условия не пройден, то вы получаете ноль баллов за это решение.</p>\n\n<p>В этом году в официальных требованиях про это ничего не написано. Но я не буду удивлен, если в тестирующей системе это будет, поэтому будьте к этому готовы.</p>\n\n<p>В таком случае обязательно убедитесь, что вы умеете проходить все тесты из условия. Если надо, то добавьте соответствующий <code>if</code>, и просто напишите <code>writeln</code> с тем ответом, который указан в условии. Типа того:\n</p><pre>// пусть в условии есть следующие тесты:\n// n=3, k=1, решается основным алгоритмом\n// n=3, k=2, ответ 42\n// n=5, k=2, ответ 137\nread(n,k);\nif k=2 then begin\n    if n=3 then writeln(42)\n    else writeln(137);\n    halt;\nend;\n// дальше решение для k=1\n</pre>\n<p>В условии обычно не так много тестов, и не так уж и сложно написать ряд <code>if</code>\'ов, которые будут все эти тесты различать.</p>\n\n<h4>Явный if</h4>\n<p>Вот выше я уже написал, что тесты из условия можно отличать, написав явный <code>if</code> и <code>writeln</code>. Ничего в этом зазорного нет. Аналогично вы можете писать явный <code>if</code> для различения подзадач. Если вы придумали одно решение для $K=1$ и еще одно решение для случая, когда все элементы массива $a$ равны, то не стесняйтесь написать в программе <code>if</code>, отличающий эти два случая, и запускать разные алгоритмы в зависимости от теста — именно так, если у вас есть решения двух подзадач, вы их можете объединить в одно решение.</p>\n\n<p>Кстати, еще важный момент — если ваша программа видит, что ей попался тест, который не попадает ни под одну подзадачу из тех, для которых у вас есть решение, то не надо сразу вылетать. Хуже не будет, если вы для этого теста запустите решение какой-нибудь подзадачи, вдруг тест-другой так и пройдут.</p>\n\n<h2>Особенности задач</h2>\n<p>Задачи на областной олимпиаде могут быть сильно варьирующимися по сложности. Как правило, самая простая задача будет действительно простой, не требующей ничего знать, примерно уровня 1В. Самая же сложная будет очень сложной, может требовать хитрых знаний, может быть даже уровня эдак 11-го; вообще, год из года только несколько человек по всей России на областных набирают полный балл (800).</p>\n\n<p>Обычно задачи в туре устроены так: первая задача самая простая. Она обычно не требует ничего знать; вы ее должны решать на полный балл. Вторая задача чуть посложнее. Ее тоже хорошо бы решить на полный балл, но это получается не всегда. Третья обычно довольно сложная, но для самых крутых из вас она вполне должна быть по силам. Четвертая же задача обычно очень сложная, почти наверняка никто в области не решит обе четвертых задачи.</p>\n\n<p>Но бывает по-разному. То, что написано в предыдущем абзаце — это наиболее распространенная схема, см, например, первый тур 2014 года как один из самых ярких примеров таких сильно распределенных по сложности задач. Но бывает и так (и последние годы все чаще и чаще), что распределение задач по сложности намного менее выражено. Вполне может первая задача оказаться не самой простой, а последняя вполне посильной; вполне может вторая задача оказаться сравнимой по сложности или даже проще первой. Тем не менее обычно задачи все-таки идут более-менее в порядке возрастания сложности.</p>\n\n<p>Но всегда помните, что в каждой задаче есть подзадачи! Как правило, даже в самых сложных задачах первые подзадачи очень простые; часто в них достаточно перебрать все возможные решения парой вложенных <code>for</code>\'ов или т.п.; в крайнем случае написать рекурсивный перебор или какой-нибудь простой алгоритм. Поэтому обязательно решайте не только первые задачи туров, но и последние (пишите в них простые подзадачи)! Обязательно постарайтесь, чтобы <b>по каждой задаче у вас было ненулевое количество баллов!</b></p>\n\n<p>Вообще, на самом деле, как показывает опыт, вполне реально в каждом туре набрать хотя бы 200 баллов, поэтому и постарайтесь это сделать. В идеале надо решать полностью первые две задачи каждого тура, но, даже если не получилось, то недостающие до 200 баллы можно набрать в более сложных задачах. 400 баллов в сумме за два тура — это вполне достойный результат. (Конечно, это общая рекомендация; ясно, что сильные школьники должны набирать больше, а для не очень сильных и 200-300 в сумме будет хорошо. Но тем не менее баллов 150 в каждом туре обычно можно набрать вообще не думая, поэтому 200 за тур — это хорошая цель для большинства из вас.)</p>\n\n<p>Для сравнения, баллы прохождения на собственно Всероссийскую олимпиаду обычно примерно такие: по 9 классам — 450-580, по 10 классам — 500-600, по 11 классам 550-650. Проход на Россию — это очень и очень хороший результат. (Ну, для всех, кроме тех, кто на Россию уже ездил :) )</p>\n\n<p>Возможно, будет ввод из файла, хотя скорее всего будет будет только ввод с клавиатуры.</p>\n\n<h2>Про языки программирования</h2>\n\n<p>Про питон: на питоне вы, возможно, не сможете в принципе решить отдельные задачи на полный балл (возможно, не сможете решить вторую, а может быть, даже первую) — потому что решение не будет успевать по времени. (Но это не обозначает, что любые проблемы в задаче надо списывать на то, что это питон. Имейте в виду то, что на питоне может не успевать по времени; полезно оценить сложность алгоритма и прикинуть, успел ли бы такой алгоритм на C++; но если вы придумали явно неоптимальный алгоритм, то надо все-таки придумать нормальный алгоритм.) Но эту невозможность решить задачи на полный балл вы можете компенсировать тем, что на питоне вы можете заметно быстрее и легче писать небольшие подзадачи в сложных задачах, да и первую задачу вы возможно напишите быстрее, чем ваши друзья, пишущие на C++. С другой стороны, если вы хотите иметь хороший результат на областной олимпиаде, то, конечно, надо бы уже знать C++ (но если вы хотите иметь хороший результат, то наверное вы уже минимум на 3 уровне, а тогда про C++ вы уже читали).</p>\n\n<p>Если же вы знаете и C++, и питон, то, конечно, по каждой задаче выбирайте, на каком языке лучше писать.</p>\n\n<p>Паскаль по производительности сравним с C++, поэтому там проблем со временем работы быть не должно.</p>\n\n<h2>Тактика поведения на туре</h2>\n<p>Во-первых, все мои рекомендации из <a href="/material/module-15955_1" onclick="window.goto(\'/material/module-15955_1\')();return false;">текста про школьную олимпиаду</a> справедливы. Прочитайте все условия сразу, еще до того, как что-то программировать. Контролируйте время, не зависайте над одной задачей надолго. Как я уже писал выше и как писал в тексте про школьную олимпиаду, старайтесь, чтобы по всем задачам у вас был не ноль. Сохраняйте решения, чтобы, если у вас зависнет компьютер или выключится электричество, решения не пропали; вообще, полезно привыкнуть нажимать "сохранить" (F2 или Ctrl-S в разных средах программирования) каждые минуту-другую.</p>\n\n<p>Обязательно внимательно сравнивать ответ с примером. Один раз был случай, когда участник выводил два числа на двух разных строках, а в задаче требовалось вывести два числа на одной строке — и тестирующая система нашего местного жюри отказывалась засчитывать это решение (хотя это и не соответствовало требованиям центрального всероссийского жюри). Конечно, это вина жюри, но школьнику от этого было не сильно легче (после тура мы отапеллировали эти баллы, но время на туре было все равно потрачено). Поэтому если вы видите, что ваша программа выводит не совсем то, что в примере, тщательно перепроверьте, правда ли, что ваше решение правильное.</p>\n\n<p>Но наличие фидбека и четко выделенных подзадач вносит свои ньюансы в тактику. Во-первых, если вы видите, что задача простая, то напишите ее, сдайте, убедитесь, что у вас 100 баллов, и забудьте про нее вообще. Более конкретно: если вы считаете, что какая-то задача простая, если вы думаете, что там особенно негде ошибиться, то напишите ее, слегка потестируйте, не тестируйте подробно (!) и сдайте. Если у вас 100, то забудьте про нее. Если же нет, то начинайте тестировать. Не тратьте время на простые задачи, если вы можете сразу проверить, работают они или нет. (Если есть ограничение на количество попыток по задаче, то сказанное выше справедливо, если у вас еще было немного попыток по задаче. В таком случае помните про ограничение количества попыток по задаче; чем меньше у вас остается попыток, тем тщательнее тестируйте и аккуратнее расходуйте попытки.)</p>\n\n<p>В более сложных задачах часто бывает полезно написать первую подзадачу, если она простая и пишется недолго. А именно, подумайте над сложной задачей. Если сразу ничего, что могло бы решить задачу полностью, в голову не приходит, то попробуйте придумать решение к первой подзадаче. Если получилось придумать простое решение, то напишите его и сдайте — у вас уже станет не ноль баллов, и заодно вы будете уверены, что вы понимаете задачу верно. Наконец, простое решение потом можно использовать для стресс-тестов. Но это только для не самых простых задач; в простых задачах не тратьте время на подзадачи, если вы можете написать полностью задачу!</p>\n\n<p>Наоборот, если вы написали "полное" решение, оно на ваших тестах работает, но у жюри упорно набирает мало баллов, то можно написать простое решение первой подзадачи, отправить его, убедиться, что уж оно-то верное, и дальше написать стресс-тестирование. Очень полезно заранее научиться стресс-тестированию (см. еще раз <a href="https://github.com/petr-kalinin/progtexts/releases/download/v2014.09.11/06_testing.pdf">текст про тестирование задач</a>)!</p>\n\n<p>Контролируйте время до конца тура. Если вы придумали сложное решение, которое может решить сложную задачу полностью, но видите, что вы рискуете не успеть его дописать (и помните, что вам наверняка придется его отлаживать и тестировать! — вряд ли оно сразу 100 наберет), то может быть проще прерваться и написать простое решение по той же задаче, чтобы уж гарантированно иметь не ноль.</p>\n\n<p>Если есть ограничение на количество попыток по задаче, то контролируйте количество оставшихся попыток. 50 попыток — это реально много и в подавляющем большинстве случаев достаточно, но если вы будете их активно расходовать, то они могут внезапно кончиться. Вообще, по всем задачам, кроме самых сложных, думаю, реально использовать не больше 5 попыток за тур.</p>\n\n<p>Конечно, даже если самую простую подзадачу вы уже решили, это не значит, что надо сразу бросаться на полное решение — все вышеописанные соображения применимы, но к следующим подзадачам. Если не получается придумать или написать полное решение, то напишите решение к еще одной подзадаче, объедините с написанным ранее и сдайте. Помните, что подзадачи сделаны не просто так, каждая подзадача имеет какое-то более простое решение.</p>\n\n<p>Не теряйте решения! Вообще, постарайтесь сохранять все свои решения, которые вы отправляете в систему и которые там набирают какие-то баллы. Будет очень неприятно, если вы решили простую подзадачу, потом стали писать общий алгоритм, он в результате не заработал даже для простой подзадачи, а решения простой подзадачи у вас уже нет. Конечно, правило оценки лучшего решения вас частично от этого спасает, но лучше подстрахуйтесь. Еще хуже если вы решили первую подзадачу, начали писать вторую подзадачу, она у вас даже заработала, но при этом сломалось решение первой. Вам бы объединить два решения, но для этого надо иметь решение первой подзадачи.</p>\n\n<p>В частности, не полагайтесь на то, что вы сможете скачать решение из тестирующей системы! Система может заглючить, может потерять ваши решения, и т.д. — если и вы их тоже потеряете, все будет совсем плохо. А если решения останутся у вас на компьютере, то, на худой конец, вы сможете их использовать для апелляции.</p>\n\n<p>Вообще, я бы считал, что у успешного участника должны быть примерно следующие "вехи" во времени (конечно, это "средняя температура по больнице", т.е. варьироваться может очень и очень сильно, но тем не менее) (время везде от начала тура):</p>\n<ul>\n<li>0:10: прочитаны все задачи;</li>\n<li>0:45-1:00: есть 100 по одной из задач;</li>\n<li>2:00-2:30: есть 100 по двум задачам или в крайнем случае 100+60;</li>\n<li>3:30: написаны простые подзадачи в двух сложных задачах, соответственно есть 100+100+30+20 или в крайнем случае 100+60+30+20;</li>\n<li>оставшееся время добиваем недорешанные задачи.</li>\n</ul>\n<p>Еще раз: это очень среднее, и это "идеал" для такого "среднего", и это из предположения, что задачи сильно распределены по сложности. Но это очень грубый ориентир.</p>\n\n<p>Да, все написанное про подзадачи выше подразумевает, что у каждой задачи есть естественное правильное решение, автоматически решающее и все подзадачи тоже; в таком случае вы теоретически можете решить задачу полностью, не думая про подзадачи вообще; так обычно и бывает. Но я не исключаю, что могут быть и задачи, где подзадачи различны настолько, что даже в самом простом и правильном решении удобнее их рассматривать отдельно.</p>\n\n<h2>Особенности C++</h2>\n<p>Если вы пишите на C++, то есть ряд особенностей, которые вам полезно и даже необходимо знать.</p>\n<h4>Быстрый ввод-вывод</h4>\n<p>Стандартный ввод/вывод через <code>iostream</code> (т.е. с использованием <code>cin</code>/<code>cout</code>) по умолчанию работает медленно на больших данных. Если вам надо ввести, допустим, 100000 чисел, то с использованием <code>cin</code> вы наверняка получите time limit; аналогично если вам надо выводить много данных. Это связано с двумя проблемами.</p>\n\n<p>Во-первых, медленно работает <code>endl</code> (для тех, кто понимает — вывод в <code>cout</code> буферизуется, но <code>endl</code> каждый раз сбрасывает буфер, реально выводя данные на диск, а реальный доступ к диску работает медленно). Поэтому не используйте <code>endl</code> вообще, используйте <code>\'\\n\'</code>.</p>\n\n<p>Во-вторых, есть еще проблема синхронизации с <code>stdio</code> (не буду сейчас подробнее писать, что это значит). Чтобы эту проблему побороть, есть три способа:</p>\n<ul>\n<li>Работать с файлами, а не с клавиатурой/экраном (если это будет допустимо на олимпиаде). У <code>fstream</code> таких проблем со скоростью работы нет.</li>\n<li>Использовать для ввода/вывода конструкции из <code>stdio.h</code> (<code>scanf</code> и <code>printf</code>), а не из <code>iostream</code>.</li>\n<li>Написать в самом начале программы две магические строчки (их надо выучить наизусть): \n<pre>std::ios_base::sync_with_stdio(false);\nstd::cin.tie(nullptr);\n</pre></li></ul>\n\n<p>Лично я вам рекомендую использовать первый или последний вариант.</p>\n\n<p>Еще раз: есть <b>две</b> проблемы: одна с <code>endl</code>, другая с синхронизацией stdio и iostream. Одна решается тем, что вы не используете <code>endl</code>, другая — вот одним из трех описанных выше способов. Вам надо решить <b>обе</b> проблемы, т.е. и не использовать <code>endl</code>, и как-то разобраться с синхронизацией. Типичная ошибка — написать в начале программы этот страшный код с <code>sync_with_stdio</code>, но выводить все равно через <code>endl</code>. Получите time limit exceeded все равно.\n\n</p><h4>Установка стека в Visual Studio</h4>\n<p>В популярных компиляторах C++ по умолчанию установлен очень маленький размер стека. Если в вашей программе глубокая рекурсия (например, если вы пишете поиск в глубину), то программа может упасть.</p>\n\n<p>В GCC попросить большой размер стека из самой программы невозможно, это должно настраивать жюри при настройке компиляции. На нормальных олимпиадах жюри прописывает большой размер стека в настройки компиляции, будет ли это на нашей области — я не знаю.</p>\n\n<p>Но в Visual Studio можно установить необходимый размер стека прямо из программы примерно следующей конструкцией (проверьте заранее!): <code>#pragma comment(linker, "/STACK:32000000")</code>, здесь число — это необходимый вам размер стека в байтах (в этом примере 32 миллиона байт, т.е. примерно 32 Мб). Размер стека можете посчитать в уме исходя из вашей программы, а можете и подобрать опытным путем — 32-64 Мб обычно достаточно. Учитывайте еще, конечно, ограничение по памяти.</p>\n\n<p>Поэтому если жюри на олимпиаде нормально настроит стек в gcc (это должно быть видно в строках компиляции gcc в памятке участника), то сдавайте под gcc. Иначе если ваше решение под gcc не влезает в стек, то добавьте эту магическую строку и сдавайте под Visual Studio.</p>\n\n<h2>Про надежность тестирующих систем</h2>\n<p>Возможно, на турах будет использоваться тестирующая система нашего жюри, но скорее всего будет Яндекс.Контест (как последние несколько лет и на области, и на районе), возможно, какая-то еще из известных тестирующих систем. С любой системой возможны различные проблемы, например, тестирующая система нашего жюри может неправильно оценивать корректность решений (см. выше пример с выводом в одной строке или на разных строках), а Яндекс.Контест печально известен тем, что регулярно не справляется с нагрузкой на первом туре и тестирует решения по несколько часов (!); на втором туре все обычно работает нормально. Правда, в прошлом году вроде с этим уже не было проблем, надеюсь, что и в этом не будет. Я не знаю, какая система будет в этом году, и будут ли в ней проблемы и какие, поэтому если что-то идет не так, то думайте головой и действуйте по обстоятельствам. Например, если ваши решения тестируются долго — не паникуйте, а просто переключайтесь на другие задачи, ну и тщательнеее сами тестируйте те решения, которые вы отправляете на проверку.</p>\n\n<h2>Дополнительные замечания</h2>\n<h4>Не пугайтесь!</h4>\n<p>Год из года регулярно многие школьники на областной олимпиаде показывают результат хуже, чем от них можно было ожидать. Возможно, многие пугаются непривычной системы задач, системы тестирования и т.д. Так вот, не пугайтесь. Вы вполне способны показать весьма неплохой результат.</p>\n\n<h4>Ищите обходные решения проблем</h4>\n<p>Если у вас что-то не получается, вы не помните, как что-то сделать в вашем языке программирования и т.п. — подумайте, как эту проблему можно обойти. Если вы не помните простого способа что-то сделать, то, может быть, есть более сложный? Если у вас не работает какой-то код, может быть, можно написать как-то по-другому, пусть и сложнее, но надежнее? И т.д.</p>\n\n<h4>Неполадки на туре</h4>\n<p>Если у вас на туре что-то из оборудования работает не так, как вы хотите, сразу же спрашивайте жюри! Если, например, не работает клавиатура, или если программа не запускается с очень непонятными сообщениями об ошибках, то сразу зовите жюри! У нас в ННГУ часто бывает так, что антивирус мешает нормальной работе (например, удаляя exe-шник сразу после его создания, или очень задерживая запуск программы — вы в ННГУ на занятиях иногда это наблюдали, на занятиях это еще не так страшно, но на олимпиаде — ненормально) — сразу зовите жюри и просите отключить антивирус. Если жюри решает вашу проблему долго, требуйте компенсации времени.</p>\n\n<h4>Не уходите без баллов</h4>\n<p>По идее, после каждого тура у вас будет обед в столовой университета, потом разбор задач и объявление итогов тура. Я очень вам рекомендую дождаться объявления итогов. Последнее время обычно жюри раздает каждому участнику бумажки с его баллами — вот получите эту бумажку, чтобы проверить, что все подсчитано верно. У нашего жюри регулярно случаются проблемы с подсчетом баллов, поэтому лучше дождитесь и проверьте, что все соответствует вашим ожиданиям. Конечно, вы по идее должны знать свои баллы за счет фидбека, но лучше все-таки дождитесь бумажки.</p>\n\n<p>Я буду на олимпиаде на втором туре как перед туром, так и после тура и на закрытии; и постараюсь также подъехать когда-нибудь в день первого тура (или на открытие, или после тура, или и тогда и тогда). Если окажется, что вам неправильно посчитали баллы, то мы с вами можем пойти и поругаться. Но если вы уйдете раньше и не получите бумажку с результатами, то я сам за вас ругаться не пойду; как минимум, вы намного лучше меня знаете, чего вы ожидали.</p>\n\n<h4>Укажите меня своим преподавателем</h4>\n<p>Как я где-то уже писал, <b>пожалуйста, укажите меня своим преподавателем</b>, если наши занятия были для вас достаточно полезными. А именно, попросите школу указать меня преподавателем в заявке. На регистрации на олимпиаду перед первым туром обычно можно проверить, кто у вас указан и, если хотите, наверное можно будет исправить.</p>\n\n<h4>Прочитайте этот текст еще раз перед олимпиадой</h4>\n<p>Я могу вспомнить что-то и добавить в этот текст новую информацию. Поэтому прочитайте его перед олимпиадой еще раз.</p>\n\n<h4>Местное жюри и вариации</h4>\n<p>Все написанное выше написано по мотивам официальных правил областной олимпиады. К сожалению, наше местное жюри не всегда понимает эти правила до конца. (Правила, равно как и условия задач и тесты, составляются централизованно на всю Россию.) Например, в 2015 году они не хотели обеспечивать фидбек. Поэтому будьте готовы к каким-нибудь вариациям (например, они могут сказать, что финально будет оцениваться только то решение, которое вы оставите у себя в рабочем каталоге, а не то, которое вы сдавали). Мое мнение — пока эти вариации не сильно вам портят жизнь, не стоит ругаться с жюри; если же это что-то серьезное, то будем ругаться.</p>\n\n<p>Например, если они хотят, чтобы вы оставляли свое решение в рабочем каталоге — ну так сохраните свое лучшее решение и оставьте, не так уж это и сложно, так и вам и мне и жюри спокойнее. Конечно, если в итоге вы сохраните по ошибке не то решение и потеряете баллы из-за того, то будем ругаться, но лучше до этого не доводить. Если же жюри что-то глобальное сделает не так (например, отменит фидбек), то я буду ругаться сразу.</p>\n\n<p>Полные официальные Требования к проведению регионального этапа, которые обязательны к соблюдению во всех регионах, можно почитать <a href="http://vserosolymp.rudn.ru/mm/mpp/files/tr20/Информатика%20-%20Требования%20к%20проведению%20регионального%20этапа%202020.pdf">вот здесь</a>. Рекомендую почитать всем, кто участвует в регионе не первый раз и серьезно рассчитывает на высокий балл; а также если у вас возникли какие-то специфические вопросы (например, «можно ли разные задачи решать на разных языках программирования»).</p>\n\n<h1>Советы от <a href="/user/254947" onclick="window.goto(\'/user/254947\')();return false;"><span class="_client_components_UserName__name" style="color:#7b0000">Алексея Упирвицкого</span></a></h1>\n\n<p>(c) Алексей Упирвицкий, CC-BY-SA</p>\n\n<p>В этом тексте представлены мои личные идеи относительно регионального тура ВСОШ. Я основываюсь на своем опыте и опыте своих товарищей.</p>\n\n<p>Самым лучшим способом подготовки к региону будет прорешивание прошлогодних регионов и подготовка своей стратегии.\nТак как тур идет 5 часов, ближе к концу вы можете устать и быть куда менее продуктивными нежели в самом начале, и если вы не распределите время заранее, то можете что-то не успеть. Поэтому я предлагаю вам написать 2-3 тура и засечь, сколько времени у вас занимает та или иная задача. </p>\n\n<p>Например: <br>\nзадача А — 45 минут;<br>\nзадача В — 1.5 часа; <br>\nчто-то разумное в С — час;<br>\nполный перебор в Д — 20 минут.</p>\n\n<p>Имея такой приблизительный план, вы не будете терять время на туре, думая: что бы мне сейчас порешать. </p>\n\n<p>Вообще, в идеале стратегия должна выглядеть так:</p>\n\n<p>А — до часу. Если так происходит, что через час задача А не решена — нельзя отчаиваться и продолжать ее пихать. Нужно переключиться на задачу В и полностью погрузиться в работу над ней.</p>\n\n<p>В — еще час после А вы решаете задачу В. Записываете все свои мысли и пишете какое-нибудь решение. Пусть не на 100, но на 40-60 баллов оно должно быть. </p>\n\n<p>Теперь, когда прошло 2 часа от начала тура, я рекомендую оставить А и В и открыть D (конечно, нельзя оставлять задачу если вы прямо сейчас ее пишете или у вас есть абсолютно верная идея на очень много баллов).</p>\n\n<p>Наверное, большинство из вас удивится выбору задачи D, но это правильный выбор. Всегда в этой задаче есть подзадача на ~10 баллов, которая сдается полным перебором (вообще, я рекомендую потренироваться сдавать полный перебор заранее, это полезный навык — быстро и аккуратно написать его). Таким образом вы сможете избавиться от задачи D и отдохнуть от А и В. Возможно, это позволит взглянуть на них по-новому и придумать новое решение. </p>\n\n<p>Эти полчаса не думайте о других задачах. Да, это сложно, так как написание перебора зачастую не требует активной мыслительной деятельности, но вам нужен перерыв.</p>\n\n<p>Таким образом, прошло 2.5 часа от начала контеста, у вас сдана D на максимум который может набрать тупняк, и вы остаетесь с тремя задачами. Сейчас нужно посмотреть на А и В. Уделите каждой из них по полчаса. Скорее всего после перерыва вы сможете сгенерировать новые идеи. Прошло 3.5 часа, и нужно открывать задачу С. По моему мнению, задача С — это самое странное, что есть на регионе (но об этом позже), именно поэтому я рекомендую ее открывать последней. </p>\n\n<p>Дальше все зависит от задачи. В 2017-2018 году была задача \n<a href="/material/p113763" onclick="window.goto(\'/material/p113763\')();return false;">«Красота фейерверка»</a> и она была простой. Даже проще В, на мой взгляд (и многих других участников того года).\nНо с другой стороны, порой бывают очень сложные С. Поэтому важно быстро понять, сдавать ли ее на 100 или на частичные. Мой совет: первые  полчаса старайтесь придумать ее на 100, а если не получилось — полчаса сдавайте ее на частичные баллы. Так у вас останется полчаса, и идеальной будет разбалловка вида: 100 100 50± 20±\nЕсли она не такая, не надо отчаиваться, потому что получить идеальный результат сложнее, чем кажется.</p>\n\n<p>Теперь стоит сказать несколько слов про каждую позицию на контесте:\nЯ специально не буду рассматривать задачи с прошлого года. Почему — объясню позже.</p>\n<p>A — обычно простая задача. Очень часто формула, например: <a href="/material/p113757" onclick="window.goto(\'/material/p113757\')();return false;">«Улучшение успеваемости»</a> или <a href="/material/p113443" onclick="window.goto(\'/material/p113443\')();return false;">«Автоматизированное управление доставкой»</a></p>\n<p>В — конструктив/дп/бин-поиск не сложные темы. Просто нужно догадаться до решения. Очень часто помогает перебор всех известных вам алгоритмов, которые хоть как то могут сюда подойти.</p>\n<p>С — обычно что то очень идейное или структуры данных. Хорошим результатом будет сдать все подгруппы, не требующие мощных структур, и, может, еще одну с использованием неоптимальных структур. </p>\n<p>D — Что то очень сложное, что порой практически никто не сдает в стране. </p>\n\n<p>Почему я не касаюсь прошлого года? Потому что тур был очень сложным. Неоправдано сложным. По моему мнению, в этом году тур будет сильно проще. Например, как в 2016-17 или 2017-18 году. </p>\n\n<p>Мое мнение относительно тем по задачам: </p>\n<p>А — будет один конструктив и один бинпоиск</p>\n<p>В — думаю, что будет алгоритм на графах/конструктив/простые структуры данных. Например, дерево отрезков.</p>\n<p>С — в последние годы была подозрительная мода на интерактивные задачи, поэтому будьте готовы к ним. Будет забавно, если опять будет Декартово Дерево. Поговаривают про дп и его оптимизации. Но я больше думаю про что-то на графах/структурах данных. В задаче С всегда есть подвох. Она либо простая, либо сложная. Про нее не понятно, что можно дать, поэтому изворачиваются как могут.</p>\n<p>D — какая-то сложная, никому не известная тема, или старый добрый баян. Тут возможны оптимизации дп. Но если это так, то всем рекомендую оптимизацию buben вида: ну давайте переберем не все, а ±константу. Например, если в дп вам приходится пересчитывать значение через все предыдущие, но у вас есть подозрение, что вас не интересуют некоторые, смело пишите что-то в духе\n</p><pre><code>for (int i = 0; i &lt; n; ++i)\n    for (int j = i; j &gt;= max(0, i - buben); --j)\n</code></pre>\nВозможно, будут очень сложные строки.<p></p>\n\n<p>Вообще, есть такая тема как Сканлайн, и она может быть на любой позиции, потому что на нее можно накрутить практически что угодно.</p>\n\n<p>Также у каждого из вас есть тема, про которую вы уверены, что ее не будет, и потому не нужно ее учить. Поверьте моему опыту, именно она и будет. Так что повторите все, по чему у вас просадки. Сдайте пару прошлых регионов. Потренируйтесь писать перебор.</p>\n\n<p>Постарайтесь изучить корневую эвристику. Она позволяет делать полезные трюки и получать много баллов.</p>\n\n<p>Еще: подзадачи вам даны не только для того чтобы пихать, а для того чтобы тестировать! Что я имею ввиду: у вас есть идея на много баллов но почему то wa. Вы берёте и начинаете по частям код разбирать.</p>\n\n<p>Например есть подзадача на квадрат и есть на N log N.\nВот вы берёте и основную идею оставляете, а то что делает лог заменяете на простой алгоритм, работающий за линию.\nТак вы можете понять в какой части кода ошибка.</p>\n\n<p>Вообще не рекомендую сразу писать код на 100.\nЛучше выделить несколько ключевых идей и протестировать их так.\nДа, вы потратите время, но избавите себя от возможного дебага.</p>\n<p>Ещё иногда подзадачи могут натолкнуть на правильное решение. \nБерете простую подзадачу, которую знаете как решать, берете более сложную и начинаете думать, чем таким эти задачи отличаются, можно ли из решения простой подзадачи сделать решение сложной, или наоборот, сложную подзадачу свести к простой.</p>\n\n<p>Полезные статьи на codeforces (<i>это в первую очередь для уже реально крутых школьников, уровня эдак 5-6+ — П.К.</i>):<br>\n<a href="https://codeforces.com/blog/entry/44351">https://codeforces.com/blog/entry/44351</a><br>\n<a href="https://codeforces.com/blog/entry/63823">https://codeforces.com/blog/entry/63823</a><br>\n<a href="https://codeforces.com/blog/entry/45223">https://codeforces.com/blog/entry/45223</a><br>\n</p>\n\n<h1>Разбор районной олимпиады</h1>\n\n<p>Возможно, со временем я добавлю сюда разбор районной олимпиады.</p></div>', 'title': 'Про областную олимпиаду', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16024_10', 'order': 11, 'indent': 0, 'type': 'label', 'title': '', 'content': '', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16024_11', 'order': 12, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про Нижегородскую городскую олимпиаду им. В.Д. Лелюха</h1>\n<p>В феврале 2019 года (ориентировочно 8 февраля, но возможно дата будет изменена) состоится XVI Нижегородская городская олимпиада школьников по информатике им. В.Д. Лелюха. Я рекомендую подавать заявку всем школьникам моего курса, которые являются учениками школ города Нижнего Новгорода (не области!), и имеющим уровень как минимум 1В. Можете подать заявку и если у вас уровень ниже, но, возможно, задачи даже отбора вам покажутся сложными.</p>\n\n<p>Для участия в олимпиаде надо подать заявку. Информация про олимпиаду и порядок подачи заявок (приказ Департамента образования Администрации г. Н. Новгорода № 965 от 23.12.2019) уже направлен в школы города, поэтому ваши школы должны быть в курсе. Также приказ выставлен на <a href="http://olympiads.nnov.ru">сайте олимпиады</a> в разделе "Новости"; если до вашей школы он не дошел, то скачайте его с сайта олимпиады и покажите своим учителям или завучам.</p>\n\n<p>В принципе, подать заявку на вас может кто угодно — и ваша школа, и вы лично. Но не плодите заявки; если ваша школа сама подаст заявку на вас, то не дублируйте заявку. Если по каким-то причинам они не будут подавать заявку, или вы не уверены, подадут они или нет, то можете сами заполнить анкету по ссылке из приказа. В любом случае, даже если школа подает заявку за вас, все равно следите за <a href="http://olympiads.nnov.ru">сайтом олимпиады</a>, там будет появляться информация о рассмотрении заявок.</p>\n\n<p>Отбор на олимпиаду будет проводиться из числа заполнивших заявку по итогам районной и школьной олимпиад, также будет проведен дополнительный заочный отборочный тур 18 января. Подробная информация есть в приказе (см. на сайте олимпиады), а также информация будет разослана после заполнения заявок.</p>\n\n<p>На этой олимпиаде я председатель жюри, поэтому я не буду вам писать про нее столь подробно, как про другие олимпиады. Но изучите сайт олимпиады, посмотрите задания прошлых лет, чтобы понимать, чего ожидать. И прочитайте и применяйте те же рекомендации, которые я пишу по другим олимпиадам.</p>\n\n<p>На олимпиаду также будет приглашено несколько участников из области; их мы будем приглашать лично с учетом результатов областной олимпиады.</p>\n\n</div>', 'title': 'Про Нижегородскую городскую олимпиаду им. В.Д. Лелюха', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16024_12', 'order': 13, 'indent': 0, 'type': 'label', 'title': '', 'content': '<p><a href="https://codeforces.com/blog/entry/70187">Олимпиада Технокубок</a></p>\n<p><a href="https://olympiads.ru/zaoch/">Открытая олимпиада школьников по программированию ("заочка")</a> — очень известная и крупная олимпиада, заодно еще и поступательная. Советую участвовать, хотя задачи не самые простые.\n</p>\n\n\n<hr>\n\n<h2>Летняя компьютерная школа</h2>\n<p>\nЛетняя компьютерная школа (ЛКШ) — это очень круто, у нее только один недостаток: она платная (поездка стоит около 50 тыс. рублей).</p>\n', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16024_13', 'order': 14, 'type': 'page', 'indent': 0, 'content': '<div class="box generalbox generalboxcontent boxaligncenter clearfix"><center><img src="https://lksh.ru/sis/scripts/logo.png" style="background:#000055;padding:10px;width:80%"></center>\n<h1>Летняя компьютерная школа — 2020</h1>\n\n<!--<p><b><font size=+1>NEW (29.03.2017):</font></b> <a href="https://docs.google.com/document/d/1Jc8JWvVeIMdTQGmqRgVMUFl6-xEvLOCGa43RwLP1QuE/pub">Советы по поступлению</a></p>-->\n\n<p><a href="http://lksh.ru">Летняя компьютерная школа (ЛКШ)</a> — это летняя школа для учащихся средних и старших классов, занимающихся программированием. ЛКШ проходит в две смены по три недели (в июле и в конце июля-августе, каждый школьник может поехать только в одну смену). Традиционным местом проведения школы является база отдыха "Берендеевы Поляны" в Костромской области, но последнее время смены нередко проводятся и в других местах.</p>\n\n<p>В ЛКШ приезжают школьники со всей России; преподавателями являются учителя школ и преподаватели вузов Москвы, Санкт-Петербурга и других городов, организаторы и члены жюри различных олимпиад, сильные студенты российских вузов. (Я многие годы ездил в ЛКШ преподавателем, правда, в этом году, скорее всего, не поеду.) В ЛКШ очень хорошая учебная программа, также очень хорошая внеучебная программа. От Нижегородской области (и от лицея 40) туда регулярно ездят несколько школьников (см., например, <a href="http://poldnev.ru/lksh/cities/Nizhny_Novgorod">здесь</a>). Более подробная информация про ЛКШ <a href="https://lksh.ru/sis/2019/aboutlksh.shtml">здесь</a> (это пока страничка прошлого года).</p>\n\n<p>На сайте пока никакой информации за этот год нет, но для общей справки вполне можете смотреть информацию прошлого года. Еще много информации в <a href="https://vk.com/sis">группе вКонтакте</a>.</p>\n\n<!--\n<p>В этом году июльская смена пройдет с 4 по 24 июля на базе отдыха «Берендеевы поляны» в Костромской области (это самое стандартное место для ЛКШ). Августовская смена <b>предварительно</b> пройдет в Эстонии в отеле «Laagna» с 31 июля по 20 августа. Вступительная работа будет опубликована ориентировочно 25 марта, выполнить её нужно будет до 22 апреля.</p> -->\n\n<p>Я <b>очень рекомендую</b> всем, кто может, и при этом имеет достаточный уровень программирования, туда поехать. А именно:</p>\n<ul>\n<li>Всем 8-классникам и младше, имеющим уровень как минимум 1Б, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем 9-классникам, имеющим уровень как минимум 1Г, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем вообще (кроме 11-классников, конечно), имеющим уровень как минимум 2Б, даже если у вас нет возможности поехать — все равно как минимум постараться поступить, если поступите, то будем думать, как вам поехать.</li>\n</ul>\n<p>Отбор в ЛКШ осуществляется по результатам выполнения вступительной работы, которую надо написать в марте-апреле.</p>\n\n<p>Еще раз: <b>ЛКШ — это очень и очень круто и полезно!</b> Поэтому всем, кто имеет уровень хоть сколько-то выше начального, имеет смысл туда поехать.</p>\n\n<p>Правда, есть проблема: участие в ЛКШ платное (ЛКШ проводится группой инициативных преподавателей и не имеет государственной поддержки), стоимость участия (3 недели: проживание, питание, занятия) в 2019 году была около 50000 рублей, в этом году будет, скорее всего, больше. Если вы можете оплатить эту сумму, то хорошо; иначе вы можете написать заявление на социальную скидку, и скорее всего она будет вам предоставлена за счет спонсорских средств ЛКШ (см. для примера  <a href="https://lksh.ru/sis/2019/zacisl/skidki.shtml">информацию о скидках 2019 года</a>).</p>\n\n<p>Школьники, расскажите про ЛКШ своим родителям! Если у ваших родителей есть какие-то вопросы, пусть звонят мне. <b>Если вы уже планируете лето, постарайтесь запланировать поездку в ЛКШ.</b> (Я специально говорю вам про ЛКШ настолько заранее, т.к. знаю, что многие планируют лето еще зимой.) Ближе к поступлению я тут напишу более подробную информацию. Если возникают какие-то вопросы, обращайтесь. См. также советы по поступлению в ЛКШ ниже.</p>\n\n<p>Сайт школы со всей информацией — <a href="http://lksh.ru">lksh.ru</a>.</p>\n\n<!-- <p><b><font color=red>NEW:</font></b> <a href="https://docs.google.com/document/d/e/2PACX-1vQkAIuVK7ZErO0mVYd8hVcYOKCP6m9r3dQ5VhzOkrfn6cNw0Aj3tZ2zkQFdN4Fw4v1f7CIsVmuMh-Rt/pub">Советы по поступлению в ЛКШ</a></p> -->\n\n<p>Ролик про ЛКШ разных лет (довольно старый уже; другие, тоже старые, видео есть на <a href="http://www.youtube.com/user/pakalinin">моем канале</a>):</p>\n\n<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/4nVl5MHeqIY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>', 'title': 'Информация про школу, читать всем!', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16024_14', 'order': 15, 'indent': 0, 'type': 'label', 'title': '', 'content': '<p><b>Я настоятельно рекомендую:</b></p>\n<ul>\n<li>Всем 8-классникам и младше, имеющим уровень как минимум 1Б, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем 9-классникам, имеющим уровень как минимум 1Г, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем вообще (кроме 11-классников, конечно), имеющим уровень как минимум 2Б, даже если у вас нет возможности поехать — все равно как минимум постараться поступить, если поступите, то будем думать, как вам поехать.</li>\n</ul>\n\n\n\n\n\n\n<h2>Архивы старых олимпиад</h2>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-18043_0', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="https://www.dropbox.com/s/brq5dotrg4lmym2/raion_archive.pdf?dl=0">Архив прошлых районных олимпиад</a> (в тестирующей системе их скорее всего нигде нет)\n<hr>\n<a href="/material/reg">Областные олимпиады прошлых лет</a> (у нас в тестирующей засчитываются только полные баллы, но на реальной олимпиаде частичные решения тоже оцениваются)', 'path': []}
Result= [{'_id': 'module-35188_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 9</h2>', 'indent': 0}, {'_id': '9А', 'title': 'Уровень 9А', 'type': 'level'}, {'_id': 'module-35191_0t', 'title': '', 'type': 'label', 'content': 'Простые потоки', 'indent': 20}, {'_id': 'module-35194_0t', 'title': '', 'type': 'label', 'content': 'Дерево Фенвика', 'indent': 20}, {'_id': 'module-35698_0t', 'title': '', 'type': 'label', 'content': 'LCA', 'indent': 20}, {'_id': '9Б', 'title': 'Уровень 9Б', 'type': 'level'}, {'_id': 'module-35703_0t', 'title': '', 'type': 'label', 'content': 'Групповые операции на деревьях', 'indent': 20}, {'_id': 'module-35706_0t', 'title': '', 'type': 'label', 'content': 'Бор и алгоритм Ахо-Корасик', 'indent': 20}, {'_id': 'module-35708_0t', 'title': '', 'type': 'label', 'content': 'Многомерные деревья', 'indent': 20}, {'_id': '9В', 'title': 'Уровень 9В', 'type': 'level'}]
In convert_level 9 materials= [{'_id': 'module-35188_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 9</h2>', 'indent': 0}, {'_id': '9А', 'title': 'Уровень 9А', 'type': 'level'}, {'_id': 'module-35191_0t', 'title': '', 'type': 'label', 'content': 'Простые потоки', 'indent': 20}, {'_id': 'module-35194_0t', 'title': '', 'type': 'label', 'content': 'Дерево Фенвика', 'indent': 20}, {'_id': 'module-35698_0t', 'title': '', 'type': 'label', 'content': 'LCA', 'indent': 20}, {'_id': '9Б', 'title': 'Уровень 9Б', 'type': 'level'}, {'_id': 'module-35703_0t', 'title': '', 'type': 'label', 'content': 'Групповые операции на деревьях', 'indent': 20}, {'_id': 'module-35706_0t', 'title': '', 'type': 'label', 'content': 'Бор и алгоритм Ахо-Корасик', 'indent': 20}, {'_id': 'module-35708_0t', 'title': '', 'type': 'label', 'content': 'Многомерные деревья', 'indent': 20}, {'_id': '9В', 'title': 'Уровень 9В', 'type': 'level'}]
Converting material  {'_id': 'module-35188_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 9</h2>', 'indent': 0}
Converting material  {'_id': '9А', 'title': 'Уровень 9А', 'type': 'level'}
Converting material  {'_id': 'module-35191_0t', 'title': '', 'type': 'label', 'content': 'Простые потоки', 'indent': 20}
Converting material  {'_id': 'module-35194_0t', 'title': '', 'type': 'label', 'content': 'Дерево Фенвика', 'indent': 20}
Converting material  {'_id': 'module-35698_0t', 'title': '', 'type': 'label', 'content': 'LCA', 'indent': 20}
Converting material  {'_id': '9Б', 'title': 'Уровень 9Б', 'type': 'level'}
Converting material  {'_id': 'module-35703_0t', 'title': '', 'type': 'label', 'content': 'Групповые операции на деревьях', 'indent': 20}
Converting material  {'_id': 'module-35706_0t', 'title': '', 'type': 'label', 'content': 'Бор и алгоритм Ахо-Корасик', 'indent': 20}
Converting material  {'_id': 'module-35708_0t', 'title': '', 'type': 'label', 'content': 'Многомерные деревья', 'indent': 20}
Converting material  {'_id': '9В', 'title': 'Уровень 9В', 'type': 'level'}
Result= [{'_id': 'module-15997_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 2</h2>', 'indent': 0}, {'_id': '2А', 'title': 'Уровень 2А', 'type': 'level'}, {'_id': 'module-15998_0t', 'title': '', 'type': 'label', 'content': '*Работа с файлами (без контеста)', 'indent': 20}, {'_id': 'module-16005_0t', 'title': '', 'type': 'label', 'content': '*Функции (без контеста)', 'indent': 20}, {'_id': 'module-16007_0t', 'title': '', 'type': 'label', 'content': 'НОД, алгоритм Евклида', 'indent': 20}, {'_id': 'module-16010_0t', 'title': '', 'type': 'label', 'content': '*Рекурсивный перебор', 'indent': 20}, {'_id': 'module-16018_0t', 'title': '', 'type': 'label', 'content': 'Квадратичные сортировки', 'indent': 20}, {'_id': 'module-25197_0t', 'title': '', 'type': 'label', 'content': 'Задачи "на технику"', 'indent': 20}, {'_id': '2Б', 'title': 'Уровень 2Б', 'type': 'level'}, {'_id': 'module-16027_0t', 'title': '', 'type': 'label', 'content': 'Сложность алгоритмов (без контеста)', 'indent': 20}, {'_id': 'module-16035_0t', 'title': '', 'type': 'label', 'content': 'Основы динамического программирования', 'indent': 20}, {'_id': 'module-16039_0t', 'title': '', 'type': 'label', 'content': 'Стек, дек, очередь', 'indent': 20}, {'_id': 'module-16042_0t', 'title': '', 'type': 'label', 'content': 'Простые числа и разложение на множители', 'indent': 20}, {'_id': 'module-25223_0t', 'title': '', 'type': 'label', 'content': 'Простая жадность', 'indent': 20}, {'_id': '2В', 'title': 'Уровень 2В', 'type': 'level'}]
In convert_level 2 materials= [{'_id': 'module-15997_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 2</h2>', 'indent': 0}, {'_id': '2А', 'title': 'Уровень 2А', 'type': 'level'}, {'_id': 'module-15998_0t', 'title': '', 'type': 'label', 'content': '*Работа с файлами (без контеста)', 'indent': 20}, {'_id': 'module-16005_0t', 'title': '', 'type': 'label', 'content': '*Функции (без контеста)', 'indent': 20}, {'_id': 'module-16007_0t', 'title': '', 'type': 'label', 'content': 'НОД, алгоритм Евклида', 'indent': 20}, {'_id': 'module-16010_0t', 'title': '', 'type': 'label', 'content': '*Рекурсивный перебор', 'indent': 20}, {'_id': 'module-16018_0t', 'title': '', 'type': 'label', 'content': 'Квадратичные сортировки', 'indent': 20}, {'_id': 'module-25197_0t', 'title': '', 'type': 'label', 'content': 'Задачи "на технику"', 'indent': 20}, {'_id': '2Б', 'title': 'Уровень 2Б', 'type': 'level'}, {'_id': 'module-16027_0t', 'title': '', 'type': 'label', 'content': 'Сложность алгоритмов (без контеста)', 'indent': 20}, {'_id': 'module-16035_0t', 'title': '', 'type': 'label', 'content': 'Основы динамического программирования', 'indent': 20}, {'_id': 'module-16039_0t', 'title': '', 'type': 'label', 'content': 'Стек, дек, очередь', 'indent': 20}, {'_id': 'module-16042_0t', 'title': '', 'type': 'label', 'content': 'Простые числа и разложение на множители', 'indent': 20}, {'_id': 'module-25223_0t', 'title': '', 'type': 'label', 'content': 'Простая жадность', 'indent': 20}, {'_id': '2В', 'title': 'Уровень 2В', 'type': 'level'}]
Converting material  {'_id': 'module-15997_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 2</h2>', 'indent': 0}
Converting material  {'_id': '2А', 'title': 'Уровень 2А', 'type': 'level'}
Converting material  {'_id': 'module-15998_0t', 'title': '', 'type': 'label', 'content': '*Работа с файлами (без контеста)', 'indent': 20}
Converting material  {'_id': 'module-16005_0t', 'title': '', 'type': 'label', 'content': '*Функции (без контеста)', 'indent': 20}
Converting material  {'_id': 'module-16007_0t', 'title': '', 'type': 'label', 'content': 'НОД, алгоритм Евклида', 'indent': 20}
Converting material  {'_id': 'module-16010_0t', 'title': '', 'type': 'label', 'content': '*Рекурсивный перебор', 'indent': 20}
Converting material  {'_id': 'module-16018_0t', 'title': '', 'type': 'label', 'content': 'Квадратичные сортировки', 'indent': 20}
Converting material  {'_id': 'module-25197_0t', 'title': '', 'type': 'label', 'content': 'Задачи "на технику"', 'indent': 20}
Converting material  {'_id': '2Б', 'title': 'Уровень 2Б', 'type': 'level'}
Converting material  {'_id': 'module-16027_0t', 'title': '', 'type': 'label', 'content': 'Сложность алгоритмов (без контеста)', 'indent': 20}
Converting material  {'_id': 'module-16035_0t', 'title': '', 'type': 'label', 'content': 'Основы динамического программирования', 'indent': 20}
Converting material  {'_id': 'module-16039_0t', 'title': '', 'type': 'label', 'content': 'Стек, дек, очередь', 'indent': 20}
Converting material  {'_id': 'module-16042_0t', 'title': '', 'type': 'label', 'content': 'Простые числа и разложение на множители', 'indent': 20}
Converting material  {'_id': 'module-25223_0t', 'title': '', 'type': 'label', 'content': 'Простая жадность', 'indent': 20}
Converting material  {'_id': '2В', 'title': 'Уровень 2В', 'type': 'level'}
Result= [{'_id': 'module-16093_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 3</h2>', 'indent': 0}, {'_id': '3А', 'title': 'Уровень 3А', 'type': 'level'}, {'_id': 'module-16272_0t', 'title': '', 'type': 'label', 'content': 'Проcтые графы', 'indent': 20}, {'_id': 'module-16275_0t', 'title': '', 'type': 'label', 'content': 'Поиск в ширину', 'indent': 20}, {'_id': 'module-16279_0t', 'title': '', 'type': 'label', 'content': 'Бинарный поиск (поиск делением пополам)', 'indent': 20}, {'_id': '3Б', 'title': 'Уровень 3Б', 'type': 'level'}, {'_id': 'module-16305_0t', 'title': '', 'type': 'label', 'content': 'Системы счисления. Двоичная система счисления.', 'indent': 20}, {'_id': 'module-16343_0t', 'title': '', 'type': 'label', 'content': 'Два указателя', 'indent': 20}, {'_id': 'module-16369_0t', 'title': '', 'type': 'label', 'content': 'Основы поиска в глубину', 'indent': 20}, {'_id': 'module-16373_0t', 'title': '', 'type': 'label', 'content': 'Продвинутое тестирование задач (без контеста)', 'indent': 20}, {'_id': '3В', 'title': 'Уровень 3В', 'type': 'level'}]
In convert_level 3 materials= [{'_id': 'module-16093_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 3</h2>', 'indent': 0}, {'_id': '3А', 'title': 'Уровень 3А', 'type': 'level'}, {'_id': 'module-16272_0t', 'title': '', 'type': 'label', 'content': 'Проcтые графы', 'indent': 20}, {'_id': 'module-16275_0t', 'title': '', 'type': 'label', 'content': 'Поиск в ширину', 'indent': 20}, {'_id': 'module-16279_0t', 'title': '', 'type': 'label', 'content': 'Бинарный поиск (поиск делением пополам)', 'indent': 20}, {'_id': '3Б', 'title': 'Уровень 3Б', 'type': 'level'}, {'_id': 'module-16305_0t', 'title': '', 'type': 'label', 'content': 'Системы счисления. Двоичная система счисления.', 'indent': 20}, {'_id': 'module-16343_0t', 'title': '', 'type': 'label', 'content': 'Два указателя', 'indent': 20}, {'_id': 'module-16369_0t', 'title': '', 'type': 'label', 'content': 'Основы поиска в глубину', 'indent': 20}, {'_id': 'module-16373_0t', 'title': '', 'type': 'label', 'content': 'Продвинутое тестирование задач (без контеста)', 'indent': 20}, {'_id': '3В', 'title': 'Уровень 3В', 'type': 'level'}]
Converting material  {'_id': 'module-16093_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 3</h2>', 'indent': 0}
Converting material  {'_id': '3А', 'title': 'Уровень 3А', 'type': 'level'}
Converting material  {'_id': 'module-16272_0t', 'title': '', 'type': 'label', 'content': 'Проcтые графы', 'indent': 20}
Converting material  {'_id': 'module-16275_0t', 'title': '', 'type': 'label', 'content': 'Поиск в ширину', 'indent': 20}
Converting material  {'_id': 'module-16279_0t', 'title': '', 'type': 'label', 'content': 'Бинарный поиск (поиск делением пополам)', 'indent': 20}
Converting material  {'_id': '3Б', 'title': 'Уровень 3Б', 'type': 'level'}
Converting material  {'_id': 'module-16305_0t', 'title': '', 'type': 'label', 'content': 'Системы счисления. Двоичная система счисления.', 'indent': 20}
Converting material  {'_id': 'module-16343_0t', 'title': '', 'type': 'label', 'content': 'Два указателя', 'indent': 20}
Converting material  {'_id': 'module-16369_0t', 'title': '', 'type': 'label', 'content': 'Основы поиска в глубину', 'indent': 20}
Converting material  {'_id': 'module-16373_0t', 'title': '', 'type': 'label', 'content': 'Продвинутое тестирование задач (без контеста)', 'indent': 20}
Converting material  {'_id': '3В', 'title': 'Уровень 3В', 'type': 'level'}
Result= [{'_id': 'module-25508_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 7</h2>', 'indent': 0}, {'_id': '7А', 'title': 'Уровень 7А', 'type': 'level'}, {'_id': 'module-25510_0t', 'title': '', 'type': 'label', 'content': 'Сложные задачи на поиск в глубину', 'indent': 20}, {'_id': 'module-25513_0t', 'title': '', 'type': 'label', 'content': 'Алгоритм Кнута-Морриса-Пратта (КМП)', 'indent': 20}, {'_id': 'module-25515_0t', 'title': '', 'type': 'label', 'content': 'Z-функция', 'indent': 20}, {'_id': '7Б', 'title': 'Уровень 7Б', 'type': 'level'}, {'_id': 'module-25518_0t', 'title': '', 'type': 'label', 'content': 'Sqrt-декомпозиция, она же корневая эвристика', 'indent': 20}, {'_id': 'module-25520_0t', 'title': '', 'type': 'label', 'content': 'Дерево отрезков', 'indent': 20}, {'_id': 'module-25527_0t', 'title': '', 'type': 'label', 'content': 'Декартово дерево', 'indent': 20}, {'_id': '7В', 'title': 'Уровень 7В', 'type': 'level'}]
In convert_level 7 materials= [{'_id': 'module-25508_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 7</h2>', 'indent': 0}, {'_id': '7А', 'title': 'Уровень 7А', 'type': 'level'}, {'_id': 'module-25510_0t', 'title': '', 'type': 'label', 'content': 'Сложные задачи на поиск в глубину', 'indent': 20}, {'_id': 'module-25513_0t', 'title': '', 'type': 'label', 'content': 'Алгоритм Кнута-Морриса-Пратта (КМП)', 'indent': 20}, {'_id': 'module-25515_0t', 'title': '', 'type': 'label', 'content': 'Z-функция', 'indent': 20}, {'_id': '7Б', 'title': 'Уровень 7Б', 'type': 'level'}, {'_id': 'module-25518_0t', 'title': '', 'type': 'label', 'content': 'Sqrt-декомпозиция, она же корневая эвристика', 'indent': 20}, {'_id': 'module-25520_0t', 'title': '', 'type': 'label', 'content': 'Дерево отрезков', 'indent': 20}, {'_id': 'module-25527_0t', 'title': '', 'type': 'label', 'content': 'Декартово дерево', 'indent': 20}, {'_id': '7В', 'title': 'Уровень 7В', 'type': 'level'}]
Converting material  {'_id': 'module-25508_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 7</h2>', 'indent': 0}
Converting material  {'_id': '7А', 'title': 'Уровень 7А', 'type': 'level'}
Converting material  {'_id': 'module-25510_0t', 'title': '', 'type': 'label', 'content': 'Сложные задачи на поиск в глубину', 'indent': 20}
Converting material  {'_id': 'module-25513_0t', 'title': '', 'type': 'label', 'content': 'Алгоритм Кнута-Морриса-Пратта (КМП)', 'indent': 20}
Converting material  {'_id': 'module-25515_0t', 'title': '', 'type': 'label', 'content': 'Z-функция', 'indent': 20}
Converting material  {'_id': '7Б', 'title': 'Уровень 7Б', 'type': 'level'}
Converting material  {'_id': 'module-25518_0t', 'title': '', 'type': 'label', 'content': 'Sqrt-декомпозиция, она же корневая эвристика', 'indent': 20}
Converting material  {'_id': 'module-25520_0t', 'title': '', 'type': 'label', 'content': 'Дерево отрезков', 'indent': 20}
Converting material  {'_id': 'module-25527_0t', 'title': '', 'type': 'label', 'content': 'Декартово дерево', 'indent': 20}
Converting material  {'_id': '7В', 'title': 'Уровень 7В', 'type': 'level'}
Result= [{'_id': 'module-16127_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 1</h2>', 'indent': 0}, {'_id': '1А', 'title': 'Уровень 1А', 'type': 'level'}, {'_id': 'module-15941_0t', 'title': '', 'type': 'label', 'content': 'Арифметические операции', 'indent': 20}, {'_id': 'module-15942_0t', 'title': '', 'type': 'label', 'content': 'Условный оператор', 'indent': 20}, {'_id': 'module-49287_0t', 'title': '', 'type': 'label', 'content': 'Как отлаживать программы', 'indent': 20}, {'_id': 'module-15943_0t', 'title': '', 'type': 'label', 'content': 'Циклы', 'indent': 20}, {'_id': '1Б', 'title': 'Уровень 1Б', 'type': 'level'}, {'_id': 'module-15945_0t', 'title': '', 'type': 'label', 'content': 'Массивы', 'indent': 20}, {'_id': 'module-15946_0t', 'title': '', 'type': 'label', 'content': 'Символы и строки', 'indent': 20}, {'_id': 'module-15947_0t', 'title': '', 'type': 'label', 'content': 'Вещественные числа', 'indent': 20}, {'_id': '1В', 'title': 'Уровень 1В', 'type': 'level'}, {'_id': 'module-21146_0t', 'title': '', 'type': 'label', 'content': 'Вещественные числа', 'indent': 20}, {'_id': 'module-15980_0t', 'title': '', 'type': 'label', 'content': 'Основы тестирования задач (без контеста)', 'indent': 20}, {'_id': 'module-16264_0t', 'title': '', 'type': 'label', 'content': 'Задачи', 'indent': 20}, {'_id': '1Г', 'title': 'Уровень 1Г', 'type': 'level'}]
In convert_level 1 materials= [{'_id': 'module-16127_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 1</h2>', 'indent': 0}, {'_id': '1А', 'title': 'Уровень 1А', 'type': 'level'}, {'_id': 'module-15941_0t', 'title': '', 'type': 'label', 'content': 'Арифметические операции', 'indent': 20}, {'_id': 'module-15942_0t', 'title': '', 'type': 'label', 'content': 'Условный оператор', 'indent': 20}, {'_id': 'module-49287_0t', 'title': '', 'type': 'label', 'content': 'Как отлаживать программы', 'indent': 20}, {'_id': 'module-15943_0t', 'title': '', 'type': 'label', 'content': 'Циклы', 'indent': 20}, {'_id': '1Б', 'title': 'Уровень 1Б', 'type': 'level'}, {'_id': 'module-15945_0t', 'title': '', 'type': 'label', 'content': 'Массивы', 'indent': 20}, {'_id': 'module-15946_0t', 'title': '', 'type': 'label', 'content': 'Символы и строки', 'indent': 20}, {'_id': 'module-15947_0t', 'title': '', 'type': 'label', 'content': 'Вещественные числа', 'indent': 20}, {'_id': '1В', 'title': 'Уровень 1В', 'type': 'level'}, {'_id': 'module-21146_0t', 'title': '', 'type': 'label', 'content': 'Вещественные числа', 'indent': 20}, {'_id': 'module-15980_0t', 'title': '', 'type': 'label', 'content': 'Основы тестирования задач (без контеста)', 'indent': 20}, {'_id': 'module-16264_0t', 'title': '', 'type': 'label', 'content': 'Задачи', 'indent': 20}, {'_id': '1Г', 'title': 'Уровень 1Г', 'type': 'level'}]
Converting material  {'_id': 'module-16127_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 1</h2>', 'indent': 0}
Converting material  {'_id': '1А', 'title': 'Уровень 1А', 'type': 'level'}
Converting material  {'_id': 'module-15941_0t', 'title': '', 'type': 'label', 'content': 'Арифметические операции', 'indent': 20}
Converting material  {'_id': 'module-15942_0t', 'title': '', 'type': 'label', 'content': 'Условный оператор', 'indent': 20}
Converting material  {'_id': 'module-49287_0t', 'title': '', 'type': 'label', 'content': 'Как отлаживать программы', 'indent': 20}
Converting material  {'_id': 'module-15943_0t', 'title': '', 'type': 'label', 'content': 'Циклы', 'indent': 20}
Converting material  {'_id': '1Б', 'title': 'Уровень 1Б', 'type': 'level'}
Converting material  {'_id': 'module-15945_0t', 'title': '', 'type': 'label', 'content': 'Массивы', 'indent': 20}
Converting material  {'_id': 'module-15946_0t', 'title': '', 'type': 'label', 'content': 'Символы и строки', 'indent': 20}
Converting material  {'_id': 'module-15947_0t', 'title': '', 'type': 'label', 'content': 'Вещественные числа', 'indent': 20}
Converting material  {'_id': '1В', 'title': 'Уровень 1В', 'type': 'level'}
Converting material  {'_id': 'module-21146_0t', 'title': '', 'type': 'label', 'content': 'Вещественные числа', 'indent': 20}
Converting material  {'_id': 'module-15980_0t', 'title': '', 'type': 'label', 'content': 'Основы тестирования задач (без контеста)', 'indent': 20}
Converting material  {'_id': 'module-16264_0t', 'title': '', 'type': 'label', 'content': 'Задачи', 'indent': 20}
Converting material  {'_id': '1Г', 'title': 'Уровень 1Г', 'type': 'level'}
Result= [{'_id': 'module-26191_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 8</h2>', 'indent': 0}, {'_id': '8А', 'title': 'Уровень 8А', 'type': 'level'}, {'_id': 'module-26193_0t', 'title': '', 'type': 'label', 'content': 'Системы непересекающихся множеств и минимальный остов', 'indent': 20}, {'_id': 'module-26195_0t', 'title': '', 'type': 'label', 'content': 'Паросочетания и связанные темы', 'indent': 20}, {'_id': 'module-26197_0t', 'title': '', 'type': 'label', 'content': 'Функция Гранди', 'indent': 20}, {'_id': '8Б', 'title': 'Уровень 8Б', 'type': 'level'}, {'_id': 'module-26200_0t', 'title': '', 'type': 'label', 'content': 'Сложные задачи на ДП', 'indent': 20}, {'_id': 'module-26202_0t', 'title': '', 'type': 'label', 'content': 'Декартово дерево по неявному ключу', 'indent': 20}, {'_id': 'module-26204_0t', 'title': '', 'type': 'label', 'content': 'Геометрия средней сложности', 'indent': 20}, {'_id': '8В', 'title': 'Уровень 8В', 'type': 'level'}]
In convert_level 8 materials= [{'_id': 'module-26191_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 8</h2>', 'indent': 0}, {'_id': '8А', 'title': 'Уровень 8А', 'type': 'level'}, {'_id': 'module-26193_0t', 'title': '', 'type': 'label', 'content': 'Системы непересекающихся множеств и минимальный остов', 'indent': 20}, {'_id': 'module-26195_0t', 'title': '', 'type': 'label', 'content': 'Паросочетания и связанные темы', 'indent': 20}, {'_id': 'module-26197_0t', 'title': '', 'type': 'label', 'content': 'Функция Гранди', 'indent': 20}, {'_id': '8Б', 'title': 'Уровень 8Б', 'type': 'level'}, {'_id': 'module-26200_0t', 'title': '', 'type': 'label', 'content': 'Сложные задачи на ДП', 'indent': 20}, {'_id': 'module-26202_0t', 'title': '', 'type': 'label', 'content': 'Декартово дерево по неявному ключу', 'indent': 20}, {'_id': 'module-26204_0t', 'title': '', 'type': 'label', 'content': 'Геометрия средней сложности', 'indent': 20}, {'_id': '8В', 'title': 'Уровень 8В', 'type': 'level'}]
Converting material  {'_id': 'module-26191_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 8</h2>', 'indent': 0}
Converting material  {'_id': '8А', 'title': 'Уровень 8А', 'type': 'level'}
Converting material  {'_id': 'module-26193_0t', 'title': '', 'type': 'label', 'content': 'Системы непересекающихся множеств и минимальный остов', 'indent': 20}
Converting material  {'_id': 'module-26195_0t', 'title': '', 'type': 'label', 'content': 'Паросочетания и связанные темы', 'indent': 20}
Converting material  {'_id': 'module-26197_0t', 'title': '', 'type': 'label', 'content': 'Функция Гранди', 'indent': 20}
Converting material  {'_id': '8Б', 'title': 'Уровень 8Б', 'type': 'level'}
Converting material  {'_id': 'module-26200_0t', 'title': '', 'type': 'label', 'content': 'Сложные задачи на ДП', 'indent': 20}
Converting material  {'_id': 'module-26202_0t', 'title': '', 'type': 'label', 'content': 'Декартово дерево по неявному ключу', 'indent': 20}
Converting material  {'_id': 'module-26204_0t', 'title': '', 'type': 'label', 'content': 'Геометрия средней сложности', 'indent': 20}
Converting material  {'_id': '8В', 'title': 'Уровень 8В', 'type': 'level'}
Result= [{'_id': 'module-19470_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 6</h2>', 'indent': 0}, {'_id': '6А', 'title': 'Уровень 6А', 'type': 'level'}, {'_id': 'module-19472_0t', 'title': '', 'type': 'label', 'content': 'Алгоритмы Флойда и Форда-Беллмана', 'indent': 20}, {'_id': 'module-19475_0t', 'title': '', 'type': 'label', 'content': 'Простые игры на графах', 'indent': 20}, {'_id': 'module-19478_0t', 'title': '', 'type': 'label', 'content': 'Поиск в ширину в 1-k и 0-k графах', 'indent': 20}, {'_id': '6Б', 'title': 'Уровень 6Б', 'type': 'level'}, {'_id': 'module-19481_0t', 'title': '', 'type': 'label', 'content': 'Жадные алгоритмы', 'indent': 20}, {'_id': 'module-19483_0t', 'title': '', 'type': 'label', 'content': 'Простая геометрия', 'indent': 20}, {'_id': '6В', 'title': 'Уровень 6В', 'type': 'level'}]
In convert_level 6 materials= [{'_id': 'module-19470_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 6</h2>', 'indent': 0}, {'_id': '6А', 'title': 'Уровень 6А', 'type': 'level'}, {'_id': 'module-19472_0t', 'title': '', 'type': 'label', 'content': 'Алгоритмы Флойда и Форда-Беллмана', 'indent': 20}, {'_id': 'module-19475_0t', 'title': '', 'type': 'label', 'content': 'Простые игры на графах', 'indent': 20}, {'_id': 'module-19478_0t', 'title': '', 'type': 'label', 'content': 'Поиск в ширину в 1-k и 0-k графах', 'indent': 20}, {'_id': '6Б', 'title': 'Уровень 6Б', 'type': 'level'}, {'_id': 'module-19481_0t', 'title': '', 'type': 'label', 'content': 'Жадные алгоритмы', 'indent': 20}, {'_id': 'module-19483_0t', 'title': '', 'type': 'label', 'content': 'Простая геометрия', 'indent': 20}, {'_id': '6В', 'title': 'Уровень 6В', 'type': 'level'}]
Converting material  {'_id': 'module-19470_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 6</h2>', 'indent': 0}
Converting material  {'_id': '6А', 'title': 'Уровень 6А', 'type': 'level'}
Converting material  {'_id': 'module-19472_0t', 'title': '', 'type': 'label', 'content': 'Алгоритмы Флойда и Форда-Беллмана', 'indent': 20}
Converting material  {'_id': 'module-19475_0t', 'title': '', 'type': 'label', 'content': 'Простые игры на графах', 'indent': 20}
Converting material  {'_id': 'module-19478_0t', 'title': '', 'type': 'label', 'content': 'Поиск в ширину в 1-k и 0-k графах', 'indent': 20}
Converting material  {'_id': '6Б', 'title': 'Уровень 6Б', 'type': 'level'}
Converting material  {'_id': 'module-19481_0t', 'title': '', 'type': 'label', 'content': 'Жадные алгоритмы', 'indent': 20}
Converting material  {'_id': 'module-19483_0t', 'title': '', 'type': 'label', 'content': 'Простая геометрия', 'indent': 20}
Converting material  {'_id': '6В', 'title': 'Уровень 6В', 'type': 'level'}
Result= [{'_id': 'module-16885_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 5</h2>', 'indent': 0}, {'_id': '5А', 'title': 'Уровень 5А', 'type': 'level'}, {'_id': 'module-16887_0t', 'title': '', 'type': 'label', 'content': 'Тернарный (троичный) поиск', 'indent': 20}, {'_id': 'module-16952_0t', 'title': '', 'type': 'label', 'content': 'Задачи средней сложности на ДП', 'indent': 20}, {'_id': 'module-42872_0t', 'title': '', 'type': 'label', 'content': 'Хеширование', 'indent': 20}, {'_id': '5Б', 'title': 'Уровень 5Б', 'type': 'level'}, {'_id': 'module-17239_0t', 'title': '', 'type': 'label', 'content': 'Куча', 'indent': 20}, {'_id': 'module-17295_0t', 'title': '', 'type': 'label', 'content': 'Продвинутый алгоритм Дейкстры', 'indent': 20}, {'_id': 'module-19008_0t', 'title': '', 'type': 'label', 'content': 'Рекурсивный перебор', 'indent': 20}, {'_id': 'module-19010_0t', 'title': '', 'type': 'label', 'content': 'Применения сортировки', 'indent': 20}, {'_id': '5В', 'title': 'Уровень 5В', 'type': 'level'}]
In convert_level 5 materials= [{'_id': 'module-16885_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 5</h2>', 'indent': 0}, {'_id': '5А', 'title': 'Уровень 5А', 'type': 'level'}, {'_id': 'module-16887_0t', 'title': '', 'type': 'label', 'content': 'Тернарный (троичный) поиск', 'indent': 20}, {'_id': 'module-16952_0t', 'title': '', 'type': 'label', 'content': 'Задачи средней сложности на ДП', 'indent': 20}, {'_id': 'module-42872_0t', 'title': '', 'type': 'label', 'content': 'Хеширование', 'indent': 20}, {'_id': '5Б', 'title': 'Уровень 5Б', 'type': 'level'}, {'_id': 'module-17239_0t', 'title': '', 'type': 'label', 'content': 'Куча', 'indent': 20}, {'_id': 'module-17295_0t', 'title': '', 'type': 'label', 'content': 'Продвинутый алгоритм Дейкстры', 'indent': 20}, {'_id': 'module-19008_0t', 'title': '', 'type': 'label', 'content': 'Рекурсивный перебор', 'indent': 20}, {'_id': 'module-19010_0t', 'title': '', 'type': 'label', 'content': 'Применения сортировки', 'indent': 20}, {'_id': '5В', 'title': 'Уровень 5В', 'type': 'level'}]
Converting material  {'_id': 'module-16885_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 5</h2>', 'indent': 0}
Converting material  {'_id': '5А', 'title': 'Уровень 5А', 'type': 'level'}
Converting material  {'_id': 'module-16887_0t', 'title': '', 'type': 'label', 'content': 'Тернарный (троичный) поиск', 'indent': 20}
Converting material  {'_id': 'module-16952_0t', 'title': '', 'type': 'label', 'content': 'Задачи средней сложности на ДП', 'indent': 20}
Converting material  {'_id': 'module-42872_0t', 'title': '', 'type': 'label', 'content': 'Хеширование', 'indent': 20}
Converting material  {'_id': '5Б', 'title': 'Уровень 5Б', 'type': 'level'}
Converting material  {'_id': 'module-17239_0t', 'title': '', 'type': 'label', 'content': 'Куча', 'indent': 20}
Converting material  {'_id': 'module-17295_0t', 'title': '', 'type': 'label', 'content': 'Продвинутый алгоритм Дейкстры', 'indent': 20}
Converting material  {'_id': 'module-19008_0t', 'title': '', 'type': 'label', 'content': 'Рекурсивный перебор', 'indent': 20}
Converting material  {'_id': 'module-19010_0t', 'title': '', 'type': 'label', 'content': 'Применения сортировки', 'indent': 20}
Converting material  {'_id': '5В', 'title': 'Уровень 5В', 'type': 'level'}
Result= [{'_id': 'module-16470_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 4</h2>', 'indent': 0}, {'_id': '4А', 'title': 'Уровень 4А', 'type': 'level'}, {'_id': 'module-16472_0t', 'title': '', 'type': 'label', 'content': 'Логарифмические сортировки', 'indent': 20}, {'_id': 'module-16577_0t', 'title': '', 'type': 'label', 'content': 'Динамическое программирование: баяны', 'indent': 20}, {'_id': 'module-16614_0t', 'title': '', 'type': 'label', 'content': 'Связные списки', 'indent': 20}, {'_id': 'module-16618_0t', 'title': '', 'type': 'label', 'content': 'Хранение графов списками смежности', 'indent': 20}, {'_id': '4Б', 'title': 'Уровень 4Б', 'type': 'level'}, {'_id': 'module-16682_0t', 'title': '', 'type': 'label', 'content': 'Алгоритм Дейкстры', 'indent': 20}, {'_id': 'module-16685_0t', 'title': '', 'type': 'label', 'content': 'Сортировка подсчетом', 'indent': 20}, {'_id': 'module-16786_0t', 'title': '', 'type': 'label', 'content': 'Длинная арифметика', 'indent': 20}, {'_id': 'module-16789_0t', 'title': '', 'type': 'label', 'content': 'Сортировка событий', 'indent': 20}, {'_id': '4В', 'title': 'Уровень 4В', 'type': 'level'}]
In convert_level 4 materials= [{'_id': 'module-16470_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 4</h2>', 'indent': 0}, {'_id': '4А', 'title': 'Уровень 4А', 'type': 'level'}, {'_id': 'module-16472_0t', 'title': '', 'type': 'label', 'content': 'Логарифмические сортировки', 'indent': 20}, {'_id': 'module-16577_0t', 'title': '', 'type': 'label', 'content': 'Динамическое программирование: баяны', 'indent': 20}, {'_id': 'module-16614_0t', 'title': '', 'type': 'label', 'content': 'Связные списки', 'indent': 20}, {'_id': 'module-16618_0t', 'title': '', 'type': 'label', 'content': 'Хранение графов списками смежности', 'indent': 20}, {'_id': '4Б', 'title': 'Уровень 4Б', 'type': 'level'}, {'_id': 'module-16682_0t', 'title': '', 'type': 'label', 'content': 'Алгоритм Дейкстры', 'indent': 20}, {'_id': 'module-16685_0t', 'title': '', 'type': 'label', 'content': 'Сортировка подсчетом', 'indent': 20}, {'_id': 'module-16786_0t', 'title': '', 'type': 'label', 'content': 'Длинная арифметика', 'indent': 20}, {'_id': 'module-16789_0t', 'title': '', 'type': 'label', 'content': 'Сортировка событий', 'indent': 20}, {'_id': '4В', 'title': 'Уровень 4В', 'type': 'level'}]
Converting material  {'_id': 'module-16470_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 4</h2>', 'indent': 0}
Converting material  {'_id': '4А', 'title': 'Уровень 4А', 'type': 'level'}
Converting material  {'_id': 'module-16472_0t', 'title': '', 'type': 'label', 'content': 'Логарифмические сортировки', 'indent': 20}
Converting material  {'_id': 'module-16577_0t', 'title': '', 'type': 'label', 'content': 'Динамическое программирование: баяны', 'indent': 20}
Converting material  {'_id': 'module-16614_0t', 'title': '', 'type': 'label', 'content': 'Связные списки', 'indent': 20}
Converting material  {'_id': 'module-16618_0t', 'title': '', 'type': 'label', 'content': 'Хранение графов списками смежности', 'indent': 20}
Converting material  {'_id': '4Б', 'title': 'Уровень 4Б', 'type': 'level'}
Converting material  {'_id': 'module-16682_0t', 'title': '', 'type': 'label', 'content': 'Алгоритм Дейкстры', 'indent': 20}
Converting material  {'_id': 'module-16685_0t', 'title': '', 'type': 'label', 'content': 'Сортировка подсчетом', 'indent': 20}
Converting material  {'_id': 'module-16786_0t', 'title': '', 'type': 'label', 'content': 'Длинная арифметика', 'indent': 20}
Converting material  {'_id': 'module-16789_0t', 'title': '', 'type': 'label', 'content': 'Сортировка событий', 'indent': 20}
Converting material  {'_id': '4В', 'title': 'Уровень 4В', 'type': 'level'}
Result= [{'_id': 'module-39719_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 10</h2>', 'indent': 0}, {'_id': '10А', 'title': 'Уровень 10А', 'type': 'level'}, {'_id': 'module-39721_0t', 'title': '', 'type': 'label', 'content': 'Продвинутая теория чисел, китайская теорема об остатках', 'indent': 20}, {'_id': 'module-39723_0t', 'title': '', 'type': 'label', 'content': 'Суффиксные структуры данных', 'indent': 20}, {'_id': 'module-39768_0t', 'title': '', 'type': 'label', 'content': 'Сложная геометрия', 'indent': 20}, {'_id': '10Б', 'title': 'Уровень 10Б', 'type': 'level'}, {'_id': 'module-39862_0t', 'title': '', 'type': 'label', 'content': 'Mincost-maxflow', 'indent': 20}, {'_id': 'module-39864_0t', 'title': '', 'type': 'label', 'content': 'Паросочетание максимального веста, венгерский алгоритм', 'indent': 20}, {'_id': 'module-39866_0t', 'title': '', 'type': 'label', 'content': 'Матрицы и их применение к ДП', 'indent': 20}, {'_id': '10В', 'title': 'Уровень 10В', 'type': 'level'}]
In convert_level 10 materials= [{'_id': 'module-39719_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 10</h2>', 'indent': 0}, {'_id': '10А', 'title': 'Уровень 10А', 'type': 'level'}, {'_id': 'module-39721_0t', 'title': '', 'type': 'label', 'content': 'Продвинутая теория чисел, китайская теорема об остатках', 'indent': 20}, {'_id': 'module-39723_0t', 'title': '', 'type': 'label', 'content': 'Суффиксные структуры данных', 'indent': 20}, {'_id': 'module-39768_0t', 'title': '', 'type': 'label', 'content': 'Сложная геометрия', 'indent': 20}, {'_id': '10Б', 'title': 'Уровень 10Б', 'type': 'level'}, {'_id': 'module-39862_0t', 'title': '', 'type': 'label', 'content': 'Mincost-maxflow', 'indent': 20}, {'_id': 'module-39864_0t', 'title': '', 'type': 'label', 'content': 'Паросочетание максимального веста, венгерский алгоритм', 'indent': 20}, {'_id': 'module-39866_0t', 'title': '', 'type': 'label', 'content': 'Матрицы и их применение к ДП', 'indent': 20}, {'_id': '10В', 'title': 'Уровень 10В', 'type': 'level'}]
Converting material  {'_id': 'module-39719_0', 'title': '', 'type': 'label', 'content': '<h2>Уровень 10</h2>', 'indent': 0}
Converting material  {'_id': '10А', 'title': 'Уровень 10А', 'type': 'level'}
Converting material  {'_id': 'module-39721_0t', 'title': '', 'type': 'label', 'content': 'Продвинутая теория чисел, китайская теорема об остатках', 'indent': 20}
Converting material  {'_id': 'module-39723_0t', 'title': '', 'type': 'label', 'content': 'Суффиксные структуры данных', 'indent': 20}
Converting material  {'_id': 'module-39768_0t', 'title': '', 'type': 'label', 'content': 'Сложная геометрия', 'indent': 20}
Converting material  {'_id': '10Б', 'title': 'Уровень 10Б', 'type': 'level'}
Converting material  {'_id': 'module-39862_0t', 'title': '', 'type': 'label', 'content': 'Mincost-maxflow', 'indent': 20}
Converting material  {'_id': 'module-39864_0t', 'title': '', 'type': 'label', 'content': 'Паросочетание максимального веста, венгерский алгоритм', 'indent': 20}
Converting material  {'_id': 'module-39866_0t', 'title': '', 'type': 'label', 'content': 'Матрицы и их применение к ДП', 'indent': 20}
Converting material  {'_id': '10В', 'title': 'Уровень 10В', 'type': 'level'}
Result= [{'materials': [], 'force': False, '_id': 'reghead', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Региональные олимпиады</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}]}, {'force': False, '_id': 'reg2009', 'order': 2009, 'type': 'level', 'indent': 0, 'title': '2009', 'content': '', 'path': []}, {'force': False, '_id': 'reg2010', 'order': 2010, 'type': 'level', 'indent': 0, 'title': '2010', 'content': '', 'path': []}, {'force': False, '_id': 'reg2011', 'order': 2011, 'type': 'level', 'indent': 0, 'title': '2011', 'content': '', 'path': []}, {'force': False, '_id': 'reg2012', 'order': 2012, 'type': 'level', 'indent': 0, 'title': '2012', 'content': '', 'path': []}, {'force': False, '_id': 'reg2013', 'order': 2013, 'type': 'level', 'indent': 0, 'title': '2013', 'content': '', 'path': []}, {'force': False, '_id': 'reg2014', 'order': 2014, 'type': 'level', 'indent': 0, 'title': '2014', 'content': '', 'path': []}, {'force': False, '_id': 'reg2015', 'order': 2015, 'type': 'level', 'indent': 0, 'title': '2015', 'content': '', 'path': []}, {'force': False, '_id': 'reg2016', 'order': 2016, 'type': 'level', 'indent': 0, 'title': '2016', 'content': '', 'path': []}, {'force': False, '_id': 'reg2017', 'order': 2017, 'type': 'level', 'indent': 0, 'title': '2017', 'content': '', 'path': []}, {'force': False, '_id': 'reg2018', 'order': 2018, 'type': 'level', 'indent': 0, 'title': '2018', 'content': '', 'path': []}, {'force': False, '_id': 'reg2019', 'order': 2019, 'type': 'level', 'indent': 0, 'title': '2019', 'content': '', 'path': []}]
In convert_level reg materials= [{'materials': [], 'force': False, '_id': 'reghead', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Региональные олимпиады</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}]}, {'force': False, '_id': 'reg2009', 'order': 2009, 'type': 'level', 'indent': 0, 'title': '2009', 'content': '', 'path': []}, {'force': False, '_id': 'reg2010', 'order': 2010, 'type': 'level', 'indent': 0, 'title': '2010', 'content': '', 'path': []}, {'force': False, '_id': 'reg2011', 'order': 2011, 'type': 'level', 'indent': 0, 'title': '2011', 'content': '', 'path': []}, {'force': False, '_id': 'reg2012', 'order': 2012, 'type': 'level', 'indent': 0, 'title': '2012', 'content': '', 'path': []}, {'force': False, '_id': 'reg2013', 'order': 2013, 'type': 'level', 'indent': 0, 'title': '2013', 'content': '', 'path': []}, {'force': False, '_id': 'reg2014', 'order': 2014, 'type': 'level', 'indent': 0, 'title': '2014', 'content': '', 'path': []}, {'force': False, '_id': 'reg2015', 'order': 2015, 'type': 'level', 'indent': 0, 'title': '2015', 'content': '', 'path': []}, {'force': False, '_id': 'reg2016', 'order': 2016, 'type': 'level', 'indent': 0, 'title': '2016', 'content': '', 'path': []}, {'force': False, '_id': 'reg2017', 'order': 2017, 'type': 'level', 'indent': 0, 'title': '2017', 'content': '', 'path': []}, {'force': False, '_id': 'reg2018', 'order': 2018, 'type': 'level', 'indent': 0, 'title': '2018', 'content': '', 'path': []}, {'force': False, '_id': 'reg2019', 'order': 2019, 'type': 'level', 'indent': 0, 'title': '2019', 'content': '', 'path': []}]
Converting material  {'materials': [], 'force': False, '_id': 'reghead', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Региональные олимпиады</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}]}
Converting material  {'force': False, '_id': 'reg2009', 'order': 2009, 'type': 'level', 'indent': 0, 'title': '2009', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'reg2010', 'order': 2010, 'type': 'level', 'indent': 0, 'title': '2010', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'reg2011', 'order': 2011, 'type': 'level', 'indent': 0, 'title': '2011', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'reg2012', 'order': 2012, 'type': 'level', 'indent': 0, 'title': '2012', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'reg2013', 'order': 2013, 'type': 'level', 'indent': 0, 'title': '2013', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'reg2014', 'order': 2014, 'type': 'level', 'indent': 0, 'title': '2014', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'reg2015', 'order': 2015, 'type': 'level', 'indent': 0, 'title': '2015', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'reg2016', 'order': 2016, 'type': 'level', 'indent': 0, 'title': '2016', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'reg2017', 'order': 2017, 'type': 'level', 'indent': 0, 'title': '2017', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'reg2018', 'order': 2018, 'type': 'level', 'indent': 0, 'title': '2018', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'reg2019', 'order': 2019, 'type': 'level', 'indent': 0, 'title': '2019', 'content': '', 'path': []}
Correct label <h4>Простые потоки</h4>
<p>См. теорию на вики ИТМО: <a href="https://neerc.ifmo.ru/wiki/index.php?title=%D0%9E%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5_%D1%81%D0%B5%D1%82%D0%B8,_%D0%BF%D0%BE%D1%82%D0%BE%D0%BA%D0%B0">1</a>, <a href="https://neerc.ifmo.ru/wiki/index.php?title=%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC_%D0%A4%D0%BE%D1%80%D0%B4%D0%B0-%D0%A4%D0%B0%D0%BB%D0%BA%D0%B5%D1%80%D1%81%D0%BE%D0%BD%D0%B0,_%D1%80%D0%B5%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F_%D1%81_%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E_%D0%BF%D0%BE%D0%B8%D1%81%D0%BA%D0%B0_%D0%B2_%D0%B3%D0%BB%D1%83%D0%B1%D0%B8%D0%BD%D1%83">2</a>, <a href="https://neerc.ifmo.ru/wiki/index.php?title=%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC_%D0%AD%D0%B4%D0%BC%D0%BE%D0%BD%D0%B4%D1%81%D0%B0-%D0%9A%D0%B0%D1%80%D0%BF%D0%B0">3</a>, <a href="https://neerc.ifmo.ru/wiki/index.php?title=%D0%A0%D0%B0%D0%B7%D1%80%D0%B5%D0%B7,_%D0%BB%D0%B5%D0%BC%D0%BC%D0%B0_%D0%BE_%D0%BF%D0%BE%D1%82%D0%BE%D0%BA%D0%B5_%D1%87%D0%B5%D1%80%D0%B5%D0%B7_%D1%80%D0%B0%D0%B7%D1%80%D0%B5%D0%B7">4</a>.
</p>
<p>Если в вики ИТМО слишком теоретизированно, посмотрите где-нибудь еще. Продвинутые алгоритмы потока (проталкивание предпотока, Диница) пока не нужны.</p>
Corrected label <h2>Простые потоки</h2>
<p>См. теорию на вики ИТМО: <a href="https://neerc.ifmo.ru/wiki/index.php?title=%D0%9E%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5_%D1%81%D0%B5%D1%82%D0%B8,_%D0%BF%D0%BE%D1%82%D0%BE%D0%BA%D0%B0">1</a>, <a href="https://neerc.ifmo.ru/wiki/index.php?title=%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC_%D0%A4%D0%BE%D1%80%D0%B4%D0%B0-%D0%A4%D0%B0%D0%BB%D0%BA%D0%B5%D1%80%D1%81%D0%BE%D0%BD%D0%B0,_%D1%80%D0%B5%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F_%D1%81_%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E_%D0%BF%D0%BE%D0%B8%D1%81%D0%BA%D0%B0_%D0%B2_%D0%B3%D0%BB%D1%83%D0%B1%D0%B8%D0%BD%D1%83">2</a>, <a href="https://neerc.ifmo.ru/wiki/index.php?title=%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC_%D0%AD%D0%B4%D0%BC%D0%BE%D0%BD%D0%B4%D1%81%D0%B0-%D0%9A%D0%B0%D1%80%D0%BF%D0%B0">3</a>, <a href="https://neerc.ifmo.ru/wiki/index.php?title=%D0%A0%D0%B0%D0%B7%D1%80%D0%B5%D0%B7,_%D0%BB%D0%B5%D0%BC%D0%BC%D0%B0_%D0%BE_%D0%BF%D0%BE%D1%82%D0%BE%D0%BA%D0%B5_%D1%87%D0%B5%D1%80%D0%B5%D0%B7_%D1%80%D0%B0%D0%B7%D1%80%D0%B5%D0%B7">4</a>.
</p>
<p>Если в вики ИТМО слишком теоретизированно, посмотрите где-нибудь еще. Продвинутые алгоритмы потока (проталкивание предпотока, Диница) пока не нужны.</p>
Correct label <h4>Дерево Фенвика</h4>
<p>См. <a href="http://e-maxx.ru/algo/fenwick_tree">теорию на e-maxx</a>.</p>
Corrected label <h2>Дерево Фенвика</h2>
<p>См. <a href="http://e-maxx.ru/algo/fenwick_tree">теорию на e-maxx</a>.</p>
Correct label <h4>LCA</h4>
<p><a href="https://aleks5d.github.io/blog_LCA_1.html">Теория по LCA от Алексея Упирвицкого</a></p>
<p>См. еще <a href="http://e-maxx.ru/algo/">теорию на e-maxx (там несколько разделов)</a>.</p>
Corrected label <h2>LCA</h2>
<p><a href="https://aleks5d.github.io/blog_LCA_1.html">Теория по LCA от Алексея Упирвицкого</a></p>
<p>См. еще <a href="http://e-maxx.ru/algo/">теорию на e-maxx (там несколько разделов)</a>.</p>
Result= [{'materials': [], 'force': False, '_id': 'module-35190_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 9А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39533e89c0>, <coroutine object convert_topic_like at 0x7f39533e8340>, {'materials': [], 'force': False, '_id': 'module-35698_0', 'order': 7, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>LCA</h2>\n<p><a href="https://aleks5d.github.io/blog_LCA_1.html">Теория по LCA от Алексея Упирвицкого</a></p>\n<p>См. еще <a href="http://e-maxx.ru/algo/">теорию на e-maxx (там несколько разделов)</a>.</p>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-35700_0', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': 'Задач тут пока нет :( Поищите на CF', 'path': []}]
In convert_level 9А materials= [{'materials': [], 'force': False, '_id': 'module-35190_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 9А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39533e89c0>, <coroutine object convert_topic_like at 0x7f39533e8340>, {'materials': [], 'force': False, '_id': 'module-35698_0', 'order': 7, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>LCA</h2>\n<p><a href="https://aleks5d.github.io/blog_LCA_1.html">Теория по LCA от Алексея Упирвицкого</a></p>\n<p>См. еще <a href="http://e-maxx.ru/algo/">теорию на e-maxx (там несколько разделов)</a>.</p>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-35700_0', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': 'Задач тут пока нет :( Поищите на CF', 'path': []}]
Converting material  {'materials': [], 'force': False, '_id': 'module-35190_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 9А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-35698_0', 'order': 7, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>LCA</h2>\n<p><a href="https://aleks5d.github.io/blog_LCA_1.html">Теория по LCA от Алексея Упирвицкого</a></p>\n<p>См. еще <a href="http://e-maxx.ru/algo/">теорию на e-maxx (там несколько разделов)</a>.</p>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-35700_0', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': 'Задач тут пока нет :( Поищите на CF', 'path': []}
Correct label <h4>*Работа с файлами (без контеста)</h4>

Corrected label <h2>*Работа с файлами (без контеста)</h2>

Pending materials  [{'materials': [], 'force': False, '_id': 'module-15998_0', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>*Работа с файлами (без контеста)</h2>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-24341', 'order': 3, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Питон: работа с файлами', 'path': []}]
Correct label <h4>*Функции (без контеста)</h4>
<p>Теории тут нет, прочитайте в книжке или прослушайте на занятии.</p>
Corrected label <h2>*Функции (без контеста)</h2>
<p>Теории тут нет, прочитайте в книжке или прослушайте на занятии.</p>
Pending materials  [{'materials': [], 'force': False, '_id': 'module-16005_0', 'order': 4, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>*Функции (без контеста)</h2>\n<p>Теории тут нет, прочитайте в книжке или прослушайте на занятии.</p>', 'path': []}]
Correct label <h4>НОД, алгоритм Евклида</h4>
Corrected label <h2>НОД, алгоритм Евклида</h2>
Correct label <h4>*Рекурсивный перебор</h4>
Corrected label <h2>*Рекурсивный перебор</h2>
Correct label <h4>Квадратичные сортировки</h4>
Corrected label <h2>Квадратичные сортировки</h2>
Correct label <h4>Задачи "на технику"</h4>

Corrected label <h2>Задачи "на технику"</h2>

Result= [{'materials': [], 'force': False, '_id': 'module-15999_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 2А</h3>\n<p>Чтобы перейти на следующий уровень, необходимо решить все задачи, кроме раздела "Рекурсивный перебор"</p>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-15998_0', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>*Работа с файлами (без контеста)</h2>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-24341', 'order': 3, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Питон: работа с файлами', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16005_0', 'order': 4, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>*Функции (без контеста)</h2>\n<p>Теории тут нет, прочитайте в книжке или прослушайте на занятии.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39538aedc0>, <coroutine object convert_topic_like at 0x7f39533d20c0>, <coroutine object convert_topic_like at 0x7f39534578c0>, <coroutine object convert_topic_like at 0x7f39534570c0>, {'materials': [], 'force': False, '_id': 'module-25629', 'order': 20, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Разбор задачи "Смайлики", читать только тем, кто решил', 'path': []}]
In convert_level 2А materials= [{'materials': [], 'force': False, '_id': 'module-15999_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 2А</h3>\n<p>Чтобы перейти на следующий уровень, необходимо решить все задачи, кроме раздела "Рекурсивный перебор"</p>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-15998_0', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>*Работа с файлами (без контеста)</h2>\n', 'path': []}, {'materials': [], 'force': False, '_id': 'module-24341', 'order': 3, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Питон: работа с файлами', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16005_0', 'order': 4, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>*Функции (без контеста)</h2>\n<p>Теории тут нет, прочитайте в книжке или прослушайте на занятии.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39538aedc0>, <coroutine object convert_topic_like at 0x7f39533d20c0>, <coroutine object convert_topic_like at 0x7f39534578c0>, <coroutine object convert_topic_like at 0x7f39534570c0>, {'materials': [], 'force': False, '_id': 'module-25629', 'order': 20, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Разбор задачи "Смайлики", читать только тем, кто решил', 'path': []}]
Converting material  {'materials': [], 'force': False, '_id': 'module-15999_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 2А</h3>\n<p>Чтобы перейти на следующий уровень, необходимо решить все задачи, кроме раздела "Рекурсивный перебор"</p>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-15998_0', 'order': 2, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>*Работа с файлами (без контеста)</h2>\n', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-24341', 'order': 3, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Питон: работа с файлами', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16005_0', 'order': 4, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>*Функции (без контеста)</h2>\n<p>Теории тут нет, прочитайте в книжке или прослушайте на занятии.</p>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-25629', 'order': 20, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Разбор задачи "Смайлики", читать только тем, кто решил', 'path': []}
Result= [{'materials': [], 'force': False, '_id': 'roihead', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Всероссийские олимпиады</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}]}, {'force': False, '_id': 'roi2009', 'order': 2009, 'type': 'level', 'indent': 0, 'title': '2009', 'content': '', 'path': []}, {'force': False, '_id': 'roi2010', 'order': 2010, 'type': 'level', 'indent': 0, 'title': '2010', 'content': '', 'path': []}, {'force': False, '_id': 'roi2011', 'order': 2011, 'type': 'level', 'indent': 0, 'title': '2011', 'content': '', 'path': []}, {'force': False, '_id': 'roi2012', 'order': 2012, 'type': 'level', 'indent': 0, 'title': '2012', 'content': '', 'path': []}, {'force': False, '_id': 'roi2013', 'order': 2013, 'type': 'level', 'indent': 0, 'title': '2013', 'content': '', 'path': []}, {'force': False, '_id': 'roi2014', 'order': 2014, 'type': 'level', 'indent': 0, 'title': '2014', 'content': '', 'path': []}, {'force': False, '_id': 'roi2015', 'order': 2015, 'type': 'level', 'indent': 0, 'title': '2015', 'content': '', 'path': []}, {'force': False, '_id': 'roi2016', 'order': 2016, 'type': 'level', 'indent': 0, 'title': '2016', 'content': '', 'path': []}, {'force': False, '_id': 'roi2017', 'order': 2017, 'type': 'level', 'indent': 0, 'title': '2017', 'content': '', 'path': []}, {'force': False, '_id': 'roi2018', 'order': 2018, 'type': 'level', 'indent': 0, 'title': '2018', 'content': '', 'path': []}, {'force': False, '_id': 'roi2019', 'order': 2019, 'type': 'level', 'indent': 0, 'title': '2019', 'content': '', 'path': []}]
In convert_level roi materials= [{'materials': [], 'force': False, '_id': 'roihead', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Всероссийские олимпиады</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}]}, {'force': False, '_id': 'roi2009', 'order': 2009, 'type': 'level', 'indent': 0, 'title': '2009', 'content': '', 'path': []}, {'force': False, '_id': 'roi2010', 'order': 2010, 'type': 'level', 'indent': 0, 'title': '2010', 'content': '', 'path': []}, {'force': False, '_id': 'roi2011', 'order': 2011, 'type': 'level', 'indent': 0, 'title': '2011', 'content': '', 'path': []}, {'force': False, '_id': 'roi2012', 'order': 2012, 'type': 'level', 'indent': 0, 'title': '2012', 'content': '', 'path': []}, {'force': False, '_id': 'roi2013', 'order': 2013, 'type': 'level', 'indent': 0, 'title': '2013', 'content': '', 'path': []}, {'force': False, '_id': 'roi2014', 'order': 2014, 'type': 'level', 'indent': 0, 'title': '2014', 'content': '', 'path': []}, {'force': False, '_id': 'roi2015', 'order': 2015, 'type': 'level', 'indent': 0, 'title': '2015', 'content': '', 'path': []}, {'force': False, '_id': 'roi2016', 'order': 2016, 'type': 'level', 'indent': 0, 'title': '2016', 'content': '', 'path': []}, {'force': False, '_id': 'roi2017', 'order': 2017, 'type': 'level', 'indent': 0, 'title': '2017', 'content': '', 'path': []}, {'force': False, '_id': 'roi2018', 'order': 2018, 'type': 'level', 'indent': 0, 'title': '2018', 'content': '', 'path': []}, {'force': False, '_id': 'roi2019', 'order': 2019, 'type': 'level', 'indent': 0, 'title': '2019', 'content': '', 'path': []}]
Converting material  {'materials': [], 'force': False, '_id': 'roihead', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Всероссийские олимпиады</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}]}
Converting material  {'force': False, '_id': 'roi2009', 'order': 2009, 'type': 'level', 'indent': 0, 'title': '2009', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'roi2010', 'order': 2010, 'type': 'level', 'indent': 0, 'title': '2010', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'roi2011', 'order': 2011, 'type': 'level', 'indent': 0, 'title': '2011', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'roi2012', 'order': 2012, 'type': 'level', 'indent': 0, 'title': '2012', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'roi2013', 'order': 2013, 'type': 'level', 'indent': 0, 'title': '2013', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'roi2014', 'order': 2014, 'type': 'level', 'indent': 0, 'title': '2014', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'roi2015', 'order': 2015, 'type': 'level', 'indent': 0, 'title': '2015', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'roi2016', 'order': 2016, 'type': 'level', 'indent': 0, 'title': '2016', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'roi2017', 'order': 2017, 'type': 'level', 'indent': 0, 'title': '2017', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'roi2018', 'order': 2018, 'type': 'level', 'indent': 0, 'title': '2018', 'content': '', 'path': []}
Converting material  {'force': False, '_id': 'roi2019', 'order': 2019, 'type': 'level', 'indent': 0, 'title': '2019', 'content': '', 'path': []}
Correct label <h4>Арифметические операции</h4>

Corrected label <h2>Арифметические операции</h2>

Correct label <h4>Условный оператор</h4>
Corrected label <h2>Условный оператор</h2>
Correct label <h4>Как отлаживать программы</h4>
Corrected label <h2>Как отлаживать программы</h2>
Pending materials  [{'materials': [], 'force': False, '_id': 'module-49287_0', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Как отлаживать программы</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-33219_0', 'order': 10, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="http://blog.algoprog.ru/how-to-debug-small-programs/">Про то, как искать ошибки в маленьких программах</a>. Вы, наверное, пока еще не все тут поймете, но тем не менее прочитайте, а потом возвращайтесь к этому тексту на всем протяжении уровня 1.', 'path': []}]
Correct label <h4>Циклы</h4>
Corrected label <h2>Циклы</h2>
Result= [{'materials': [], 'force': False, '_id': 'module-15940_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 1А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953863c40>, <coroutine object convert_topic_like at 0x7f395387fe40>, {'materials': [], 'force': False, '_id': 'module-49287_0', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Как отлаживать программы</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-33219_0', 'order': 10, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="http://blog.algoprog.ru/how-to-debug-small-programs/">Про то, как искать ошибки в маленьких программах</a>. Вы, наверное, пока еще не все тут поймете, но тем не менее прочитайте, а потом возвращайтесь к этому тексту на всем протяжении уровня 1.', 'path': []}, <coroutine object convert_topic_like at 0x7f3953863f40>]
In convert_level 1А materials= [{'materials': [], 'force': False, '_id': 'module-15940_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 1А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953863c40>, <coroutine object convert_topic_like at 0x7f395387fe40>, {'materials': [], 'force': False, '_id': 'module-49287_0', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Как отлаживать программы</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-33219_0', 'order': 10, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="http://blog.algoprog.ru/how-to-debug-small-programs/">Про то, как искать ошибки в маленьких программах</a>. Вы, наверное, пока еще не все тут поймете, но тем не менее прочитайте, а потом возвращайтесь к этому тексту на всем протяжении уровня 1.', 'path': []}, <coroutine object convert_topic_like at 0x7f3953863f40>]
Converting material  {'materials': [], 'force': False, '_id': 'module-15940_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 1А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-49287_0', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Как отлаживать программы</h2>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-33219_0', 'order': 10, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="http://blog.algoprog.ru/how-to-debug-small-programs/">Про то, как искать ошибки в маленьких программах</a>. Вы, наверное, пока еще не все тут поймете, но тем не менее прочитайте, а потом возвращайтесь к этому тексту на всем протяжении уровня 1.', 'path': []}
Correct label <h4>Сложные задачи на поиск в глубину</h4>
<p>Теория вся есть в том же тексте про поиск в глубину (ссылка выше на уровне 3), только теперь вам уже надо знать тут вообще всё.</p>
<p>Еще можете посмотреть на e-maxx, в частности, там есть <a href="http://e-maxx.ru/algo/strong_connected_components">простое доказательство алгоритма построения сильносвязных компонент</a>.</p>
Corrected label <h2>Сложные задачи на поиск в глубину</h2>
<p>Теория вся есть в том же тексте про поиск в глубину (ссылка выше на уровне 3), только теперь вам уже надо знать тут вообще всё.</p>
<p>Еще можете посмотреть на e-maxx, в частности, там есть <a href="http://e-maxx.ru/algo/strong_connected_components">простое доказательство алгоритма построения сильносвязных компонент</a>.</p>
Correct label <h4>Алгоритм Кнута-Морриса-Пратта (КМП)</h4>
<p>
См. <a href="http://sis.khashaev.ru/2008/august/b-prime/">видеозаписи лекций ЛКШ.2008.B'</a>, раздел "Алгоритмы на строках".<br>
<a href="http://e-maxx.ru/algo/prefix_function">Теория на e-maxx</a><br>
<a href="https://habrahabr.ru/post/191454/">Теория на хабре</a><br>
Можете в интернете поискать еще.<br>
Помимо собственно поиска подстроки в строке, префикс-функция также нередко имеет другие полезные применения. Задачи на это ниже тоже есть.<br>
Какие-то из задач ниже, наверное, были ранее в задачах на хеши. Решите их повторно с использованием КМП.</p>
Corrected label <h2>Алгоритм Кнута-Морриса-Пратта (КМП)</h2>
<p>
См. <a href="http://sis.khashaev.ru/2008/august/b-prime/">видеозаписи лекций ЛКШ.2008.B'</a>, раздел "Алгоритмы на строках".<br>
<a href="http://e-maxx.ru/algo/prefix_function">Теория на e-maxx</a><br>
<a href="https://habrahabr.ru/post/191454/">Теория на хабре</a><br>
Можете в интернете поискать еще.<br>
Помимо собственно поиска подстроки в строке, префикс-функция также нередко имеет другие полезные применения. Задачи на это ниже тоже есть.<br>
Какие-то из задач ниже, наверное, были ранее в задачах на хеши. Решите их повторно с использованием КМП.</p>
Correct label <h4>Z-функция</h4>
<p>См. <a href="http://sis.khashaev.ru/2008/august/b-prime/">видеозаписи лекций ЛКШ.2008.B'</a>, раздел "Алгоритмы на строках".<br>
<a href="http://e-maxx.ru/algo/z_function">Теория на e-maxx</a><br>
<a href="https://ru.wikipedia.org/wiki/Z-функция">Теория в википедии (!)</a><br>
<a href="http://neerc.ifmo.ru/wiki/index.php?title=Z-функция">Теория на сайте ИТМО</a><br>
<a href="https://habrahabr.ru/post/113266/">Теория на хабре</a></p>
Corrected label <h2>Z-функция</h2>
<p>См. <a href="http://sis.khashaev.ru/2008/august/b-prime/">видеозаписи лекций ЛКШ.2008.B'</a>, раздел "Алгоритмы на строках".<br>
<a href="http://e-maxx.ru/algo/z_function">Теория на e-maxx</a><br>
<a href="https://ru.wikipedia.org/wiki/Z-функция">Теория в википедии (!)</a><br>
<a href="http://neerc.ifmo.ru/wiki/index.php?title=Z-функция">Теория на сайте ИТМО</a><br>
<a href="https://habrahabr.ru/post/113266/">Теория на хабре</a></p>
Result= [{'materials': [], 'force': False, '_id': 'module-25509_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 7А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395387fa40>, <coroutine object convert_topic_like at 0x7f395387f9c0>, <coroutine object convert_topic_like at 0x7f395387fac0>]
In convert_level 7А materials= [{'materials': [], 'force': False, '_id': 'module-25509_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 7А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395387fa40>, <coroutine object convert_topic_like at 0x7f395387f9c0>, <coroutine object convert_topic_like at 0x7f395387fac0>]
Converting material  {'materials': [], 'force': False, '_id': 'module-25509_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 7А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}
Correct label <h4>Продвинутая теория чисел, китайская теорема об остатках</h4>
<p>См. теорию на e-maxx: <br>
<a href="http://e-maxx.ru/algo/extended_euclid_algorithm">расширенный алгоритм Евклида</a>, <br>
<a href="http://e-maxx.ru/algo/reverse_element">обратный по простому модулю</a>, <br>
<a href="http://e-maxx.ru/algo/diofant_2_equation">линейные диофантовы уравнения</a>, <br>
<a href="http://e-maxx.ru/algo/diofant_1_equation">линейное уравнение по модулю</a><br>
<a href="http://e-maxx.ru/algo/chinese_theorem">китайская теорема об остатках</a>.</p>
Corrected label <h2>Продвинутая теория чисел, китайская теорема об остатках</h2>
<p>См. теорию на e-maxx: <br>
<a href="http://e-maxx.ru/algo/extended_euclid_algorithm">расширенный алгоритм Евклида</a>, <br>
<a href="http://e-maxx.ru/algo/reverse_element">обратный по простому модулю</a>, <br>
<a href="http://e-maxx.ru/algo/diofant_2_equation">линейные диофантовы уравнения</a>, <br>
<a href="http://e-maxx.ru/algo/diofant_1_equation">линейное уравнение по модулю</a><br>
<a href="http://e-maxx.ru/algo/chinese_theorem">китайская теорема об остатках</a>.</p>
Correct label <h4>Суффиксные структуры данных</h4>
<p>См. теорию на e-maxx: <br>
<a href="http://e-maxx.ru/algo/suffix_array">суффиксный массив</a>, <br>
<a href="http://e-maxx.ru/algo/suffix_automata">суффиксный автомат</a>, <br>
<a href="http://e-maxx.ru/algo/ukkonen">суффиксное дерево</a>.</p>
Corrected label <h2>Суффиксные структуры данных</h2>
<p>См. теорию на e-maxx: <br>
<a href="http://e-maxx.ru/algo/suffix_array">суффиксный массив</a>, <br>
<a href="http://e-maxx.ru/algo/suffix_automata">суффиксный автомат</a>, <br>
<a href="http://e-maxx.ru/algo/ukkonen">суффиксное дерево</a>.</p>
Correct label <h4>Сложная геометрия</h4>

Corrected label <h2>Сложная геометрия</h2>

Result= [{'materials': [], 'force': False, '_id': 'module-39720_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 10А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953634940>, <coroutine object convert_topic_like at 0x7f395363ab40>, <coroutine object convert_topic_like at 0x7f3953618ac0>]
In convert_level 10А materials= [{'materials': [], 'force': False, '_id': 'module-39720_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 10А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953634940>, <coroutine object convert_topic_like at 0x7f395363ab40>, <coroutine object convert_topic_like at 0x7f3953618ac0>]
Converting material  {'materials': [], 'force': False, '_id': 'module-39720_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 10А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}
Correct label <h4>Sqrt-декомпозиция, она же корневая эвристика</h4>
<p><a href="http://e-maxx.ru/algo/sqrt_decomposition">Теория на e-maxx</a><br>
<a href="http://neerc.ifmo.ru/wiki/index.php?title=Статистики_на_отрезках._Корневая_эвристика">Теория в конспектах ИТМО</a><br>
<a href="https://habrahabr.ru/post/138946/">Статья на хабре</a></p>
<p>Тут нашлась только одна задача, но можете еще попробовать порешать задачи из следующих тем.</p>
Corrected label <h2>Sqrt-декомпозиция, она же корневая эвристика</h2>
<p><a href="http://e-maxx.ru/algo/sqrt_decomposition">Теория на e-maxx</a><br>
<a href="http://neerc.ifmo.ru/wiki/index.php?title=Статистики_на_отрезках._Корневая_эвристика">Теория в конспектах ИТМО</a><br>
<a href="https://habrahabr.ru/post/138946/">Статья на хабре</a></p>
<p>Тут нашлась только одна задача, но можете еще попробовать порешать задачи из следующих тем.</p>
Correct label <h4>Дерево отрезков</h4>
<p><a href="http://e-maxx.ru/algo/segment_tree">Теория на e-maxx</a><br>
<a href="http://neerc.ifmo.ru/wiki/index.php?title=Дерево_отрезков._Построение">Теория на сайте ИТМО</a><br>
<a href="https://habrahabr.ru/post/115026/">Статия на хабре</a></p>
Corrected label <h2>Дерево отрезков</h2>
<p><a href="http://e-maxx.ru/algo/segment_tree">Теория на e-maxx</a><br>
<a href="http://neerc.ifmo.ru/wiki/index.php?title=Дерево_отрезков._Построение">Теория на сайте ИТМО</a><br>
<a href="https://habrahabr.ru/post/115026/">Статия на хабре</a></p>
Correct label <h4>Декартово дерево</h4>
<p>Для начала почитайте про <a href="https://ru.wikipedia.org/wiki/Двоичное_дерево_поиска">двоичные деревья поиска</a>, ну или <a href="http://neerc.ifmo.ru/wiki/index.php?title=Дерево_поиска%2C_наивная_реализация">еще здесь</a>. Вам не обязательно (пока) уметь их писать, но просто поймите, что это такое и с чем его едят.</p>
<p><a href="http://e-maxx.ru/algo/treap">Теория на e-maxx</a><br>
<a href="http://neerc.ifmo.ru/wiki/index.php?title=Декартово_дерево">Теория на сайте ИТМО</a><br>
<a href="http://www.mkurnosov.net/teaching/uploads/DSA/dsa-fall2014-lec7.pdf">Еще какая-то теория</a><br>
<a href="http://opentrains.mipt.ru/zksh/files/zksh2015/lectures/zksh_cartesian.pdf">Еще какая-то теория</a><br>
Можете еще погуглить
</p>

Corrected label <h2>Декартово дерево</h2>
<p>Для начала почитайте про <a href="https://ru.wikipedia.org/wiki/Двоичное_дерево_поиска">двоичные деревья поиска</a>, ну или <a href="http://neerc.ifmo.ru/wiki/index.php?title=Дерево_поиска%2C_наивная_реализация">еще здесь</a>. Вам не обязательно (пока) уметь их писать, но просто поймите, что это такое и с чем его едят.</p>
<p><a href="http://e-maxx.ru/algo/treap">Теория на e-maxx</a><br>
<a href="http://neerc.ifmo.ru/wiki/index.php?title=Декартово_дерево">Теория на сайте ИТМО</a><br>
<a href="http://www.mkurnosov.net/teaching/uploads/DSA/dsa-fall2014-lec7.pdf">Еще какая-то теория</a><br>
<a href="http://opentrains.mipt.ru/zksh/files/zksh2015/lectures/zksh_cartesian.pdf">Еще какая-то теория</a><br>
Можете еще погуглить
</p>

Result= [{'materials': [], 'force': False, '_id': 'module-25517_0', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 7Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953871cc0>, <coroutine object convert_topic_like at 0x7f3953627440>, <coroutine object convert_topic_like at 0x7f39537e0740>]
In convert_level 7Б materials= [{'materials': [], 'force': False, '_id': 'module-25517_0', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 7Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953871cc0>, <coroutine object convert_topic_like at 0x7f3953627440>, <coroutine object convert_topic_like at 0x7f39537e0740>]
Converting material  {'materials': [], 'force': False, '_id': 'module-25517_0', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 7Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}
Result= [{'materials': [], 'force': False, '_id': 'module-25535_0', 'order': 15, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 7В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953837640>, <coroutine object convert_topic_like at 0x7f3953837340>]
In convert_level 7В materials= [{'materials': [], 'force': False, '_id': 'module-25535_0', 'order': 15, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 7В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953837640>, <coroutine object convert_topic_like at 0x7f3953837340>]
Converting material  {'materials': [], 'force': False, '_id': 'module-25535_0', 'order': 15, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 7В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}
Correct label <h4>Вещественные числа</h4>
Если вы еще не решали задачи на вещественные числа из уровня 1Б, то прочитайте там теорию и прорешайте все эти задачи. Там есть тонкости, которые обязательно надо знать.
Corrected label <h2>Вещественные числа</h2>
Если вы еще не решали задачи на вещественные числа из уровня 1Б, то прочитайте там теорию и прорешайте все эти задачи. Там есть тонкости, которые обязательно надо знать.
Pending materials  [{'materials': [], 'force': False, '_id': 'module-21146_0', 'order': 26, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Вещественные числа</h2>\nЕсли вы еще не решали задачи на вещественные числа из уровня 1Б, то прочитайте там теорию и прорешайте все эти задачи. Там есть тонкости, которые обязательно надо знать.', 'path': []}]
Correct label <h4>Основы тестирования задач (без контеста)</h4>
Corrected label <h2>Основы тестирования задач (без контеста)</h2>
Pending materials  [{'materials': [], 'force': False, '_id': 'module-15980_0', 'order': 27, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Основы тестирования задач (без контеста)</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-15982_0', 'order': 28, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="http://notes.algoprog.ru/testing/06_testing_main.html">Теория по тестированию задач</a>. Вы там многое не поймете (особенно в примерах и в продвинутых методиках тестирования), но поймите хотя бы основы. в будущем, на более высоких уровнях, возвращайтесь к этому тексту.', 'path': []}]
Correct label <h4>Задачи</h4>
Corrected label <h2>Задачи</h2>
Result= [{'materials': [], 'force': False, '_id': 'module-15953_0', 'order': 25, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 1В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-21146_0', 'order': 26, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Вещественные числа</h2>\nЕсли вы еще не решали задачи на вещественные числа из уровня 1Б, то прочитайте там теорию и прорешайте все эти задачи. Там есть тонкости, которые обязательно надо знать.', 'path': []}, {'materials': [], 'force': False, '_id': 'module-15980_0', 'order': 27, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Основы тестирования задач (без контеста)</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-15982_0', 'order': 28, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="http://notes.algoprog.ru/testing/06_testing_main.html">Теория по тестированию задач</a>. Вы там многое не поймете (особенно в примерах и в продвинутых методиках тестирования), но поймите хотя бы основы. в будущем, на более высоких уровнях, возвращайтесь к этому тексту.', 'path': []}, <coroutine object convert_topic_like at 0x7f3953846ac0>, {'materials': [], 'force': False, '_id': 'module-17396', 'order': 33, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Разбор задачи "Строки в книге" (читать только тем, кто ее решил!)', 'path': []}, <coroutine object convert_topic_like at 0x7f3953846a40>, {'materials': [], 'force': False, '_id': 'module-15986', 'order': 35, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Разбор задачи про Франциска Ксавьера (читать только тем, кто решил саму задачу!)', 'path': []}, {'materials': [], 'force': False, '_id': 'module-26083_0', 'order': 36, 'indent': 0, 'type': 'label', 'title': '', 'content': 'Если вы пишете на питоне, то в первых двух задачах из продвинутых задач на циклы массивами пользоваться можно — просто потому, что иначе вы не сможете считать много чисел в одной строке.', 'path': []}, <coroutine object convert_topic_like at 0x7f39538467c0>, <coroutine object convert_topic_like at 0x7f39538465c0>, {'materials': [], 'force': False, '_id': 'module-16368_0', 'order': 39, 'indent': 0, 'type': 'label', 'title': '', 'content': 'Две последние задачи в "Продвинутых задачах на вещественные числа" повторяют задачи из просто "Задач на вещественные числа" с уровня 1Б. Так задумано для тех, кто не решал уровень 1Б; если вы решали контест на вещественные числа на уровне 1Б, то вам пересдавать эти задачи не надо.', 'path': []}, <coroutine object convert_topic_like at 0x7f395346e040>, <coroutine object convert_topic_like at 0x7f395346ea40>]
In convert_level 1В materials= [{'materials': [], 'force': False, '_id': 'module-15953_0', 'order': 25, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 1В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-21146_0', 'order': 26, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Вещественные числа</h2>\nЕсли вы еще не решали задачи на вещественные числа из уровня 1Б, то прочитайте там теорию и прорешайте все эти задачи. Там есть тонкости, которые обязательно надо знать.', 'path': []}, {'materials': [], 'force': False, '_id': 'module-15980_0', 'order': 27, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Основы тестирования задач (без контеста)</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-15982_0', 'order': 28, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="http://notes.algoprog.ru/testing/06_testing_main.html">Теория по тестированию задач</a>. Вы там многое не поймете (особенно в примерах и в продвинутых методиках тестирования), но поймите хотя бы основы. в будущем, на более высоких уровнях, возвращайтесь к этому тексту.', 'path': []}, <coroutine object convert_topic_like at 0x7f3953846ac0>, {'materials': [], 'force': False, '_id': 'module-17396', 'order': 33, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Разбор задачи "Строки в книге" (читать только тем, кто ее решил!)', 'path': []}, <coroutine object convert_topic_like at 0x7f3953846a40>, {'materials': [], 'force': False, '_id': 'module-15986', 'order': 35, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Разбор задачи про Франциска Ксавьера (читать только тем, кто решил саму задачу!)', 'path': []}, {'materials': [], 'force': False, '_id': 'module-26083_0', 'order': 36, 'indent': 0, 'type': 'label', 'title': '', 'content': 'Если вы пишете на питоне, то в первых двух задачах из продвинутых задач на циклы массивами пользоваться можно — просто потому, что иначе вы не сможете считать много чисел в одной строке.', 'path': []}, <coroutine object convert_topic_like at 0x7f39538467c0>, <coroutine object convert_topic_like at 0x7f39538465c0>, {'materials': [], 'force': False, '_id': 'module-16368_0', 'order': 39, 'indent': 0, 'type': 'label', 'title': '', 'content': 'Две последние задачи в "Продвинутых задачах на вещественные числа" повторяют задачи из просто "Задач на вещественные числа" с уровня 1Б. Так задумано для тех, кто не решал уровень 1Б; если вы решали контест на вещественные числа на уровне 1Б, то вам пересдавать эти задачи не надо.', 'path': []}, <coroutine object convert_topic_like at 0x7f395346e040>, <coroutine object convert_topic_like at 0x7f395346ea40>]
Converting material  {'materials': [], 'force': False, '_id': 'module-15953_0', 'order': 25, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 1В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-21146_0', 'order': 26, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Вещественные числа</h2>\nЕсли вы еще не решали задачи на вещественные числа из уровня 1Б, то прочитайте там теорию и прорешайте все эти задачи. Там есть тонкости, которые обязательно надо знать.', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-15980_0', 'order': 27, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Основы тестирования задач (без контеста)</h2>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-15982_0', 'order': 28, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="http://notes.algoprog.ru/testing/06_testing_main.html">Теория по тестированию задач</a>. Вы там многое не поймете (особенно в примерах и в продвинутых методиках тестирования), но поймите хотя бы основы. в будущем, на более высоких уровнях, возвращайтесь к этому тексту.', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-17396', 'order': 33, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Разбор задачи "Строки в книге" (читать только тем, кто ее решил!)', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-15986', 'order': 35, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Разбор задачи про Франциска Ксавьера (читать только тем, кто решил саму задачу!)', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-26083_0', 'order': 36, 'indent': 0, 'type': 'label', 'title': '', 'content': 'Если вы пишете на питоне, то в первых двух задачах из продвинутых задач на циклы массивами пользоваться можно — просто потому, что иначе вы не сможете считать много чисел в одной строке.', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16368_0', 'order': 39, 'indent': 0, 'type': 'label', 'title': '', 'content': 'Две последние задачи в "Продвинутых задачах на вещественные числа" повторяют задачи из просто "Задач на вещественные числа" с уровня 1Б. Так задумано для тех, кто не решал уровень 1Б; если вы решали контест на вещественные числа на уровне 1Б, то вам пересдавать эти задачи не надо.', 'path': []}
Correct label <h4>Групповые операции на деревьях</h4>
<p>См. <a href="http://e-maxx.ru/algo/segment_tree#20">теорию на e-maxx</a>.</p>
Corrected label <h2>Групповые операции на деревьях</h2>
<p>См. <a href="http://e-maxx.ru/algo/segment_tree#20">теорию на e-maxx</a>.</p>
Correct label <h4>Бор и алгоритм Ахо-Корасик</h4>
<p>См. <a href="http://e-maxx.ru/algo/aho_corasick">теорию на e-maxx</a>.</p>
Corrected label <h2>Бор и алгоритм Ахо-Корасик</h2>
<p>См. <a href="http://e-maxx.ru/algo/aho_corasick">теорию на e-maxx</a>.</p>
Correct label <h4>Многомерные деревья</h4>
<p>См. теорию на e-maxx: <a href="http://e-maxx.ru/algo/segment_tree#25">деревья отрезков</a>, <a href="http://e-maxx.ru/algo/fenwick_tree#4">дерево Фенвика</a>.</p>
Corrected label <h2>Многомерные деревья</h2>
<p>См. теорию на e-maxx: <a href="http://e-maxx.ru/algo/segment_tree#25">деревья отрезков</a>, <a href="http://e-maxx.ru/algo/fenwick_tree#4">дерево Фенвика</a>.</p>
Result= [{'materials': [], 'force': False, '_id': 'module-35702_0', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 9Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39538f7440>, <coroutine object convert_topic_like at 0x7f39538f75c0>, <coroutine object convert_topic_like at 0x7f39538f7640>]
In convert_level 9Б materials= [{'materials': [], 'force': False, '_id': 'module-35702_0', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 9Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39538f7440>, <coroutine object convert_topic_like at 0x7f39538f75c0>, <coroutine object convert_topic_like at 0x7f39538f7640>]
Converting material  {'materials': [], 'force': False, '_id': 'module-35702_0', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 9Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}
Correct label <h4>Системы непересекающихся множеств и минимальный остов</h4>
<p>См. <a href="http://sis.khashaev.ru/2013/july/a-prime/">соответствующую лекцию параллели A'</a><br>
См. лекции "Система непересекающихся множеств (СНМ)" и "Остовные деревья" из <a href="http://sis.khashaev.ru/2008/august/b-prime/">ЛКШ.2008.B'</a></p>
<p>Теория на e-maxx:<br>
- <a href="http://e-maxx.ru/algo/dsu">Система непересекающихся множеств</a><br>
- <a href="http://e-maxx.ru/algo/mst_kruskal">Алгоритм Краскала</a><br>
- <a href="http://e-maxx.ru/algo/mst_kruskal_with_dsu">Как подружить Краскала и СНМ</a><br>
- <a href="http://e-maxx.ru/algo/mst_prim">Алгоритм Прима</a>
</p>
Corrected label <h2>Системы непересекающихся множеств и минимальный остов</h2>
<p>См. <a href="http://sis.khashaev.ru/2013/july/a-prime/">соответствующую лекцию параллели A'</a><br>
См. лекции "Система непересекающихся множеств (СНМ)" и "Остовные деревья" из <a href="http://sis.khashaev.ru/2008/august/b-prime/">ЛКШ.2008.B'</a></p>
<p>Теория на e-maxx:<br>
- <a href="http://e-maxx.ru/algo/dsu">Система непересекающихся множеств</a><br>
- <a href="http://e-maxx.ru/algo/mst_kruskal">Алгоритм Краскала</a><br>
- <a href="http://e-maxx.ru/algo/mst_kruskal_with_dsu">Как подружить Краскала и СНМ</a><br>
- <a href="http://e-maxx.ru/algo/mst_prim">Алгоритм Прима</a>
</p>
Correct label <h4>Паросочетания и связанные темы</h4>
<p><a href="http://e-maxx.ru/algo/kuhn_matching">Теория на e-maxx</a><br>
Дополнительный (но важный) материал на вики ИТМО: <a href="http://neerc.ifmo.ru/wiki/index.php?title=Связь_максимального_паросочетания_и_минимального_вершинного_покрытия_в_двудольных_графах">раз</a>, <a href="http://neerc.ifmo.ru/wiki/index.php?title=Связь_вершинного_покрытия_и_независимого_множества">два</a>.<br>
На тему связи паросочетания, независимого множества и вершинного покрытия можете еще поискать в интернете, если в конспекте ИТМО непонятно.</p>

Corrected label <h2>Паросочетания и связанные темы</h2>
<p><a href="http://e-maxx.ru/algo/kuhn_matching">Теория на e-maxx</a><br>
Дополнительный (но важный) материал на вики ИТМО: <a href="http://neerc.ifmo.ru/wiki/index.php?title=Связь_максимального_паросочетания_и_минимального_вершинного_покрытия_в_двудольных_графах">раз</a>, <a href="http://neerc.ifmo.ru/wiki/index.php?title=Связь_вершинного_покрытия_и_независимого_множества">два</a>.<br>
На тему связи паросочетания, независимого множества и вершинного покрытия можете еще поискать в интернете, если в конспекте ИТМО непонятно.</p>

Correct label <h4>Функция Гранди</h4>
<p><a href="http://e-maxx.ru/algo/sprague_grundy">Теория на e-maxx</a><br>
<a href="https://habrahabr.ru/post/124856/">Теория на хабре</a><br>
<a>Можете еще в интернете поискать</a></p>
Corrected label <h2>Функция Гранди</h2>
<p><a href="http://e-maxx.ru/algo/sprague_grundy">Теория на e-maxx</a><br>
<a href="https://habrahabr.ru/post/124856/">Теория на хабре</a><br>
<a>Можете еще в интернете поискать</a></p>
Result= [{'materials': [], 'force': False, '_id': 'module-26192_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 8А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395390b240>, <coroutine object convert_topic_like at 0x7f395390b8c0>, <coroutine object convert_topic_like at 0x7f395390b440>]
In convert_level 8А materials= [{'materials': [], 'force': False, '_id': 'module-26192_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 8А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395390b240>, <coroutine object convert_topic_like at 0x7f395390b8c0>, <coroutine object convert_topic_like at 0x7f395390b440>]
Converting material  {'materials': [], 'force': False, '_id': 'module-26192_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 8А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}
Result= [{'materials': [], 'force': False, '_id': 'module-15992_0', 'order': 42, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 1Г</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум треть задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395390b840>, <coroutine object convert_topic_like at 0x7f395390b540>, <coroutine object convert_topic_like at 0x7f395390b5c0>]
In convert_level 1Г materials= [{'materials': [], 'force': False, '_id': 'module-15992_0', 'order': 42, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 1Г</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум треть задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395390b840>, <coroutine object convert_topic_like at 0x7f395390b540>, <coroutine object convert_topic_like at 0x7f395390b5c0>]
Converting material  {'materials': [], 'force': False, '_id': 'module-15992_0', 'order': 42, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 1Г</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум треть задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}
Result= [{'materials': [], 'force': False, '_id': 'module-35710_0', 'order': 16, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 9В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953819640>, <coroutine object convert_topic_like at 0x7f3953819440>]
In convert_level 9В materials= [{'materials': [], 'force': False, '_id': 'module-35710_0', 'order': 16, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 9В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953819640>, <coroutine object convert_topic_like at 0x7f3953819440>]
Converting material  {'materials': [], 'force': False, '_id': 'module-35710_0', 'order': 16, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 9В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}
Result= [{'materials': [], 'force': False, '_id': 'module-16374_0', 'order': 28, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 3В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>хотя бы половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395346ecc0>, <coroutine object convert_topic_like at 0x7f395346ed40>, <coroutine object convert_topic_like at 0x7f395346eec0>, <coroutine object convert_topic_like at 0x7f395346ee40>]
In convert_level 3В materials= [{'materials': [], 'force': False, '_id': 'module-16374_0', 'order': 28, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 3В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>хотя бы половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395346ecc0>, <coroutine object convert_topic_like at 0x7f395346ed40>, <coroutine object convert_topic_like at 0x7f395346eec0>, <coroutine object convert_topic_like at 0x7f395346ee40>]
Converting material  {'materials': [], 'force': False, '_id': 'module-16374_0', 'order': 28, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 3В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>хотя бы половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}
Correct label <h4>Про сайт codeforces</h4>
Corrected label <h2>Про сайт codeforces</h2>
Pending materials  [{'materials': [], 'force': False, '_id': 'module-17503_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Про сайт codeforces</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-17501', 'order': 2, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Про сайт Codeforces', 'path': []}, {'materials': [], 'force': False, '_id': 'module-48572', 'order': 3, 'type': 'link', 'indent': 0, 'content': 'https://informatics.msk.ru/mod/resource/view.php?id=48572', 'title': 'Как решать другие контесты и codeforces', 'path': []}]
Correct label <h4>Про язык C++</h4>
Corrected label <h2>Про язык C++</h2>
Pending materials  [{'materials': [], 'force': False, '_id': 'module-24697_0', 'order': 4, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Про язык C++</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-24698', 'order': 5, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Про язык C++', 'path': []}, {'materials': [], 'force': False, '_id': 'module-24698', 'order': 5, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Про язык C++', 'path': []}]
Correct label <h4>Проcтые графы</h4>
Corrected label <h2>Проcтые графы</h2>
Correct label <h4>Поиск в ширину</h4>
Corrected label <h2>Поиск в ширину</h2>
Correct label <h4>Бинарный поиск (поиск делением пополам)</h4>

Corrected label <h2>Бинарный поиск (поиск делением пополам)</h2>

Result= [{'materials': [], 'force': False, '_id': 'module-17503_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Про сайт codeforces</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-17501', 'order': 2, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Про сайт Codeforces', 'path': []}, {'materials': [], 'force': False, '_id': 'module-48572', 'order': 3, 'type': 'link', 'indent': 0, 'content': 'https://informatics.msk.ru/mod/resource/view.php?id=48572', 'title': 'Как решать другие контесты и codeforces', 'path': []}, {'materials': [], 'force': False, '_id': 'module-24697_0', 'order': 4, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Про язык C++</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-24698', 'order': 5, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Про язык C++', 'path': []}, {'materials': [], 'force': False, '_id': 'module-24698', 'order': 5, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Про язык C++', 'path': []}, <coroutine object convert_topic_like at 0x7f39537d67c0>, <coroutine object convert_topic_like at 0x7f39538ff640>, <coroutine object convert_topic_like at 0x7f39538ffa40>]
In convert_level 3А materials= [{'materials': [], 'force': False, '_id': 'module-17503_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Про сайт codeforces</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-17501', 'order': 2, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Про сайт Codeforces', 'path': []}, {'materials': [], 'force': False, '_id': 'module-48572', 'order': 3, 'type': 'link', 'indent': 0, 'content': 'https://informatics.msk.ru/mod/resource/view.php?id=48572', 'title': 'Как решать другие контесты и codeforces', 'path': []}, {'materials': [], 'force': False, '_id': 'module-24697_0', 'order': 4, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Про язык C++</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-24698', 'order': 5, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Про язык C++', 'path': []}, {'materials': [], 'force': False, '_id': 'module-24698', 'order': 5, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Про язык C++', 'path': []}, <coroutine object convert_topic_like at 0x7f39537d67c0>, <coroutine object convert_topic_like at 0x7f39538ff640>, <coroutine object convert_topic_like at 0x7f39538ffa40>]
Converting material  {'materials': [], 'force': False, '_id': 'module-17503_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Про сайт codeforces</h2>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-17501', 'order': 2, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Про сайт Codeforces', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-48572', 'order': 3, 'type': 'link', 'indent': 0, 'content': 'https://informatics.msk.ru/mod/resource/view.php?id=48572', 'title': 'Как решать другие контесты и codeforces', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-24697_0', 'order': 4, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Про язык C++</h2>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-24698', 'order': 5, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Про язык C++', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-24698', 'order': 5, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Про язык C++', 'path': []}
Result= [{'materials': [], 'force': False, '_id': 'module-16063_0', 'order': 39, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 2В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b> (не учитывая продвинутых задач на рекурсивный перебор). Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39538195c0>, <coroutine object convert_topic_like at 0x7f39538191c0>, {'materials': [], 'force': False, '_id': 'module-16828', 'order': 42, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Разбор задачи "Резисторы"', 'path': []}, <coroutine object convert_topic_like at 0x7f39533e8240>, <coroutine object convert_topic_like at 0x7f39533e80c0>, <coroutine object convert_topic_like at 0x7f39533e8c40>, <coroutine object convert_topic_like at 0x7f395390bc40>, <coroutine object convert_topic_like at 0x7f395390b940>]
In convert_level 2В materials= [{'materials': [], 'force': False, '_id': 'module-16063_0', 'order': 39, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 2В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b> (не учитывая продвинутых задач на рекурсивный перебор). Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39538195c0>, <coroutine object convert_topic_like at 0x7f39538191c0>, {'materials': [], 'force': False, '_id': 'module-16828', 'order': 42, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Разбор задачи "Резисторы"', 'path': []}, <coroutine object convert_topic_like at 0x7f39533e8240>, <coroutine object convert_topic_like at 0x7f39533e80c0>, <coroutine object convert_topic_like at 0x7f39533e8c40>, <coroutine object convert_topic_like at 0x7f395390bc40>, <coroutine object convert_topic_like at 0x7f395390b940>]
Converting material  {'materials': [], 'force': False, '_id': 'module-16063_0', 'order': 39, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 2В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b> (не учитывая продвинутых задач на рекурсивный перебор). Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16828', 'order': 42, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Разбор задачи "Резисторы"', 'path': []}
Correct label <h4>Сложность алгоритмов (без контеста)</h4>
Corrected label <h2>Сложность алгоритмов (без контеста)</h2>
Pending materials  [{'materials': [], 'force': False, '_id': 'module-16027_0', 'order': 22, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Сложность алгоритмов (без контеста)</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-52198_0', 'order': 23, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="http://notes.algoprog.ru/complexity/index.html">Теория про сложность алгоритмов (самое важное в разделе «O-обозначение для оценки сложности алгоритмов»; про P и NP читать не обязательно)</a>', 'path': []}]
Correct label <h4>Основы динамического программирования</h4>
Corrected label <h2>Основы динамического программирования</h2>
Correct label <h4>Стек, дек, очередь</h4>
Corrected label <h2>Стек, дек, очередь</h2>
Correct label <h4>Простые числа и разложение на множители</h4>
Corrected label <h2>Простые числа и разложение на множители</h2>
Correct label <h4>Простая жадность</h4>
Corrected label <h2>Простая жадность</h2>
Result= [{'materials': [], 'force': False, '_id': 'module-16026_0', 'order': 21, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 2Б</h3>\n<p>Чтобы перейти на следующий уровень, необходимо решить все задачи.</p>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16027_0', 'order': 22, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Сложность алгоритмов (без контеста)</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-52198_0', 'order': 23, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="http://notes.algoprog.ru/complexity/index.html">Теория про сложность алгоритмов (самое важное в разделе «O-обозначение для оценки сложности алгоритмов»; про P и NP читать не обязательно)</a>', 'path': []}, <coroutine object convert_topic_like at 0x7f39538ef340>, <coroutine object convert_topic_like at 0x7f3953877040>, <coroutine object convert_topic_like at 0x7f39538ef840>, <coroutine object convert_topic_like at 0x7f395390bd40>, {'materials': [], 'force': False, '_id': 'module-25835', 'order': 38, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Разбор задачи "Путешествие", читать только тем, кто ее решил!', 'path': []}]
In convert_level 2Б materials= [{'materials': [], 'force': False, '_id': 'module-16026_0', 'order': 21, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 2Б</h3>\n<p>Чтобы перейти на следующий уровень, необходимо решить все задачи.</p>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16027_0', 'order': 22, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Сложность алгоритмов (без контеста)</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-52198_0', 'order': 23, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="http://notes.algoprog.ru/complexity/index.html">Теория про сложность алгоритмов (самое важное в разделе «O-обозначение для оценки сложности алгоритмов»; про P и NP читать не обязательно)</a>', 'path': []}, <coroutine object convert_topic_like at 0x7f39538ef340>, <coroutine object convert_topic_like at 0x7f3953877040>, <coroutine object convert_topic_like at 0x7f39538ef840>, <coroutine object convert_topic_like at 0x7f395390bd40>, {'materials': [], 'force': False, '_id': 'module-25835', 'order': 38, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Разбор задачи "Путешествие", читать только тем, кто ее решил!', 'path': []}]
Converting material  {'materials': [], 'force': False, '_id': 'module-16026_0', 'order': 21, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 2Б</h3>\n<p>Чтобы перейти на следующий уровень, необходимо решить все задачи.</p>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16027_0', 'order': 22, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Сложность алгоритмов (без контеста)</h2>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-52198_0', 'order': 23, 'indent': 0, 'type': 'label', 'title': '', 'content': '<a href="http://notes.algoprog.ru/complexity/index.html">Теория про сложность алгоритмов (самое важное в разделе «O-обозначение для оценки сложности алгоритмов»; про P и NP читать не обязательно)</a>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-25835', 'order': 38, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Разбор задачи "Путешествие", читать только тем, кто ее решил!', 'path': []}
Correct label <h4>Системы счисления. Двоичная система счисления.</h4>
Corrected label <h2>Системы счисления. Двоичная система счисления.</h2>
Correct label <h4>Два указателя</h4>
Corrected label <h2>Два указателя</h2>
Correct label <h4>Основы поиска в глубину</h4>
Corrected label <h2>Основы поиска в глубину</h2>
Correct label <h4>Продвинутое тестирование задач (без контеста)</h4>
<p>Перечитайте еще раз текст про тестирование задач из уровня 1В — вам он теперь наверняка еще более полезен, и вы можете освоить более продвинутые техники (если еще не освоили).</p>
Corrected label <h2>Продвинутое тестирование задач (без контеста)</h2>
<p>Перечитайте еще раз текст про тестирование задач из уровня 1В — вам он теперь наверняка еще более полезен, и вы можете освоить более продвинутые техники (если еще не освоили).</p>
Result= [{'materials': [], 'force': False, '_id': 'module-16284_0', 'order': 17, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 3Б</h3>\n<p>Чтобы перейти на следующий уровень, необходимо решить все задачи</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953905940>, <coroutine object convert_topic_like at 0x7f39539053c0>, <coroutine object convert_topic_like at 0x7f39539050c0>, {'materials': [], 'force': False, '_id': 'module-16373_0', 'order': 27, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Продвинутое тестирование задач (без контеста)</h2>\n<p>Перечитайте еще раз текст про тестирование задач из уровня 1В — вам он теперь наверняка еще более полезен, и вы можете освоить более продвинутые техники (если еще не освоили).</p>', 'path': []}]
In convert_level 3Б materials= [{'materials': [], 'force': False, '_id': 'module-16284_0', 'order': 17, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 3Б</h3>\n<p>Чтобы перейти на следующий уровень, необходимо решить все задачи</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953905940>, <coroutine object convert_topic_like at 0x7f39539053c0>, <coroutine object convert_topic_like at 0x7f39539050c0>, {'materials': [], 'force': False, '_id': 'module-16373_0', 'order': 27, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Продвинутое тестирование задач (без контеста)</h2>\n<p>Перечитайте еще раз текст про тестирование задач из уровня 1В — вам он теперь наверняка еще более полезен, и вы можете освоить более продвинутые техники (если еще не освоили).</p>', 'path': []}]
Converting material  {'materials': [], 'force': False, '_id': 'module-16284_0', 'order': 17, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 3Б</h3>\n<p>Чтобы перейти на следующий уровень, необходимо решить все задачи</p>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16373_0', 'order': 27, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Продвинутое тестирование задач (без контеста)</h2>\n<p>Перечитайте еще раз текст про тестирование задач из уровня 1В — вам он теперь наверняка еще более полезен, и вы можете освоить более продвинутые техники (если еще не освоили).</p>', 'path': []}
Correct label <h4>Массивы</h4>
Corrected label <h2>Массивы</h2>
Correct label <h4>Символы и строки</h4>
Corrected label <h2>Символы и строки</h2>
Correct label <h4>Вещественные числа</h4>
Corrected label <h2>Вещественные числа</h2>
Result= [{'materials': [], 'force': False, '_id': 'module-15944_0', 'order': 15, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 1Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39538ab2c0>, <coroutine object convert_topic_like at 0x7f39537125c0>, <coroutine object convert_topic_like at 0x7f3953712d40>]
In convert_level 1Б materials= [{'materials': [], 'force': False, '_id': 'module-15944_0', 'order': 15, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 1Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39538ab2c0>, <coroutine object convert_topic_like at 0x7f39537125c0>, <coroutine object convert_topic_like at 0x7f3953712d40>]
Converting material  {'materials': [], 'force': False, '_id': 'module-15944_0', 'order': 15, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 1Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}
Correct label <h4>Жадные алгоритмы</h4>
<p><a href="http://www.williamspublishing.com/PDF/5-8459-0857-4/part.pdf">Довольно продвинутая теория</a> (про коды Хаффмана можете не читать, можете прочитать "для сведения"). Еще вспомните теорию с уровня 2Б, и можете еще погуглить.</p>
<p>Задачи ниже какие-то скучные, но других на этом сайте я не нашел.</p>
Corrected label <h2>Жадные алгоритмы</h2>
<p><a href="http://www.williamspublishing.com/PDF/5-8459-0857-4/part.pdf">Довольно продвинутая теория</a> (про коды Хаффмана можете не читать, можете прочитать "для сведения"). Еще вспомните теорию с уровня 2Б, и можете еще погуглить.</p>
<p>Задачи ниже какие-то скучные, но других на этом сайте я не нашел.</p>
Correct label <h4>Простая геометрия</h4>
<p>См. <a href="http://sis.khashaev.ru/2013/july/b-prime/">видеозаписи лекций ЛКШ.2013.B'</a>, раздел "Вычислительная геометрия".<br>
См. <a href="http://sis.khashaev.ru/2008/august/b-prime/">видеозаписи лекций ЛКШ.2008.B'</a>, раздел "Вычислительная геометрия".</p>

Corrected label <h2>Простая геометрия</h2>
<p>См. <a href="http://sis.khashaev.ru/2013/july/b-prime/">видеозаписи лекций ЛКШ.2013.B'</a>, раздел "Вычислительная геометрия".<br>
См. <a href="http://sis.khashaev.ru/2008/august/b-prime/">видеозаписи лекций ЛКШ.2008.B'</a>, раздел "Вычислительная геометрия".</p>

Result= [{'materials': [], 'force': False, '_id': 'module-19480_0', 'order': 11, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 6Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953905540>, <coroutine object convert_topic_like at 0x7f39539059c0>]
In convert_level 6Б materials= [{'materials': [], 'force': False, '_id': 'module-19480_0', 'order': 11, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 6Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953905540>, <coroutine object convert_topic_like at 0x7f39539059c0>]
Converting material  {'materials': [], 'force': False, '_id': 'module-19480_0', 'order': 11, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 6Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}
Correct label <h4>Сложные задачи на ДП</h4>
Corrected label <h2>Сложные задачи на ДП</h2>
Correct label <h4>Декартово дерево по неявному ключу</h4>
<p><a href="http://e-maxx.ru/algo/treap#7">Теория на e-maxx</a><br>
<a href="https://habrahabr.ru/post/102364/">теория на хабре</a><br>
Думаю, еще много чего легко ищется в интернете</p>
Corrected label <h2>Декартово дерево по неявному ключу</h2>
<p><a href="http://e-maxx.ru/algo/treap#7">Теория на e-maxx</a><br>
<a href="https://habrahabr.ru/post/102364/">теория на хабре</a><br>
Думаю, еще много чего легко ищется в интернете</p>
Correct label <h4>Геометрия средней сложности</h4>
<p>Материал должен быть ближе к концу соответствующей лекции <a href="http://sis.khashaev.ru/2013/july/b-prime/">в ЛКШ.2013.B'</a><br>
Также можете смотреть нужные по каждой задаче разделы на e-maxx.</p>
Corrected label <h2>Геометрия средней сложности</h2>
<p>Материал должен быть ближе к концу соответствующей лекции <a href="http://sis.khashaev.ru/2013/july/b-prime/">в ЛКШ.2013.B'</a><br>
Также можете смотреть нужные по каждой задаче разделы на e-maxx.</p>
Result= [{'materials': [], 'force': False, '_id': 'module-26199_0', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 8Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953905740>, <coroutine object convert_topic_like at 0x7f39538660c0>, <coroutine object convert_topic_like at 0x7f39538ab6c0>]
In convert_level 8Б materials= [{'materials': [], 'force': False, '_id': 'module-26199_0', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 8Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f3953905740>, <coroutine object convert_topic_like at 0x7f39538660c0>, <coroutine object convert_topic_like at 0x7f39538ab6c0>]
Converting material  {'materials': [], 'force': False, '_id': 'module-26199_0', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 8Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}
Result= [{'materials': [], 'force': False, '_id': 'module-26206_0', 'order': 15, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 8В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395361ac40>, <coroutine object convert_topic_like at 0x7f395361acc0>]
In convert_level 8В materials= [{'materials': [], 'force': False, '_id': 'module-26206_0', 'order': 15, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 8В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395361ac40>, <coroutine object convert_topic_like at 0x7f395361acc0>]
Converting material  {'materials': [], 'force': False, '_id': 'module-26206_0', 'order': 15, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 8В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}
Correct label <h4>Алгоритмы Флойда и Форда-Беллмана</h4>
Corrected label <h2>Алгоритмы Флойда и Форда-Беллмана</h2>
Correct label <h4>Простые игры на графах</h4>
Corrected label <h2>Простые игры на графах</h2>
Correct label <h4>Поиск в ширину в 1-k и 0-k графах</h4>
Corrected label <h2>Поиск в ширину в 1-k и 0-k графах</h2>
Result= [{'materials': [], 'force': False, '_id': 'module-19471_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 6А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395362fac0>, <coroutine object convert_topic_like at 0x7f395362f9c0>, <coroutine object convert_topic_like at 0x7f39538a37c0>]
In convert_level 6А materials= [{'materials': [], 'force': False, '_id': 'module-19471_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 6А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395362fac0>, <coroutine object convert_topic_like at 0x7f395362f9c0>, <coroutine object convert_topic_like at 0x7f39538a37c0>]
Converting material  {'materials': [], 'force': False, '_id': 'module-19471_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 6А</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}
Correct label <h4>Куча</h4>
Corrected label <h2>Куча</h2>
Correct label <h4>Продвинутый алгоритм Дейкстры</h4>
Corrected label <h2>Продвинутый алгоритм Дейкстры</h2>
Correct label <h4>Рекурсивный перебор</h4>
<p>Для тех, кто не изучал или не понял эту тему на уровне 2А, теперь она обязательна. Теория есть на уровне 2А.</p>
Corrected label <h2>Рекурсивный перебор</h2>
<p>Для тех, кто не изучал или не понял эту тему на уровне 2А, теперь она обязательна. Теория есть на уровне 2А.</p>
Correct label <h4>Применения сортировки</h4>
<p>Теории тут нет, спросите на занятии</p>
Corrected label <h2>Применения сортировки</h2>
<p>Теории тут нет, спросите на занятии</p>
Result= [{'materials': [], 'force': False, '_id': 'module-17238_0', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 5Б</h3>\nЧтобы перейти на следующий уровень, надо решить все задачи.', 'path': []}, <coroutine object convert_topic_like at 0x7f395383e6c0>, <coroutine object convert_topic_like at 0x7f395383e740>, <coroutine object convert_topic_like at 0x7f395383e7c0>, <coroutine object convert_topic_like at 0x7f395383e040>]
In convert_level 5Б materials= [{'materials': [], 'force': False, '_id': 'module-17238_0', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 5Б</h3>\nЧтобы перейти на следующий уровень, надо решить все задачи.', 'path': []}, <coroutine object convert_topic_like at 0x7f395383e6c0>, <coroutine object convert_topic_like at 0x7f395383e740>, <coroutine object convert_topic_like at 0x7f395383e7c0>, <coroutine object convert_topic_like at 0x7f395383e040>]
Converting material  {'materials': [], 'force': False, '_id': 'module-17238_0', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 5Б</h3>\nЧтобы перейти на следующий уровень, надо решить все задачи.', 'path': []}
Result= [{'materials': [], 'force': False, '_id': 'module-19485_0', 'order': 16, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 6В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395382ecc0>, <coroutine object convert_topic_like at 0x7f3953837bc0>]
In convert_level 6В materials= [{'materials': [], 'force': False, '_id': 'module-19485_0', 'order': 16, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 6В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395382ecc0>, <coroutine object convert_topic_like at 0x7f3953837bc0>]
Converting material  {'materials': [], 'force': False, '_id': 'module-19485_0', 'order': 16, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 6В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}
Correct label <h4>Тернарный (троичный) поиск</h4>
Corrected label <h2>Тернарный (троичный) поиск</h2>
Correct label <h4>Задачи средней сложности на ДП</h4>
Corrected label <h2>Задачи средней сложности на ДП</h2>
Correct label <h4>Хеширование</h4>
Основной теории тут пока нет, поищите в интернете.<br>
Дополнительная теория (предполагает, что вы уже почитали основную теорию): <a href="http://blog.algoprog.ru/hash-no-multiply">как писать хеширование без домножения</a>.<br>
Еще полезное <a href="https://codeforces.com/blog/entry/4898">про антихештесты</a>.
Corrected label <h2>Хеширование</h2>
Основной теории тут пока нет, поищите в интернете.<br>
Дополнительная теория (предполагает, что вы уже почитали основную теорию): <a href="http://blog.algoprog.ru/hash-no-multiply">как писать хеширование без домножения</a>.<br>
Еще полезное <a href="https://codeforces.com/blog/entry/4898">про антихештесты</a>.
Result= [{'materials': [], 'force': False, '_id': 'module-16886_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 5А</h3>\nЧтобы перейти на сладующий уровень, надо решить все задачи.', 'path': []}, <coroutine object convert_topic_like at 0x7f3953837e40>, <coroutine object convert_topic_like at 0x7f3953837ec0>, <coroutine object convert_topic_like at 0x7f3953837f40>]
In convert_level 5А materials= [{'materials': [], 'force': False, '_id': 'module-16886_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 5А</h3>\nЧтобы перейти на сладующий уровень, надо решить все задачи.', 'path': []}, <coroutine object convert_topic_like at 0x7f3953837e40>, <coroutine object convert_topic_like at 0x7f3953837ec0>, <coroutine object convert_topic_like at 0x7f3953837f40>]
Converting material  {'materials': [], 'force': False, '_id': 'module-16886_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 5А</h3>\nЧтобы перейти на сладующий уровень, надо решить все задачи.', 'path': []}
Result= [{'materials': [], 'force': False, '_id': 'module-19013_0', 'order': 20, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 5В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395363a540>, <coroutine object convert_topic_like at 0x7f395388b7c0>, <coroutine object convert_topic_like at 0x7f395388b740>, <coroutine object convert_topic_like at 0x7f395388b6c0>]
In convert_level 5В materials= [{'materials': [], 'force': False, '_id': 'module-19013_0', 'order': 20, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 5В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395363a540>, <coroutine object convert_topic_like at 0x7f395388b7c0>, <coroutine object convert_topic_like at 0x7f395388b740>, <coroutine object convert_topic_like at 0x7f395388b6c0>]
Converting material  {'materials': [], 'force': False, '_id': 'module-19013_0', 'order': 20, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 5В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}
Correct label <h4>Логарифмические сортировки</h4>
Corrected label <h2>Логарифмические сортировки</h2>
Correct label <h4>Динамическое программирование: баяны</h4>
Есть ряд классических задач на динамическое программирование, которые хорошо бы знать наизусть. Большинство этих задач разобраны в теории про ДП выше. В контесте ниже, помимо этих баянов, есть еще несколько интересных задач на ДП.
Corrected label <h2>Динамическое программирование: баяны</h2>
Есть ряд классических задач на динамическое программирование, которые хорошо бы знать наизусть. Большинство этих задач разобраны в теории про ДП выше. В контесте ниже, помимо этих баянов, есть еще несколько интересных задач на ДП.
Correct label <h4>Связные списки</h4>

Corrected label <h2>Связные списки</h2>

Correct label <h4>Хранение графов списками смежности</h4>
Corrected label <h2>Хранение графов списками смежности</h2>
Result= [{'materials': [], 'force': False, '_id': 'module-16471_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 4А</h3>\nЧтобы перейти на следующий уровень, необходимо решить все задачи.', 'path': []}, <coroutine object convert_topic_like at 0x7f3953627d40>, <coroutine object convert_topic_like at 0x7f39538127c0>, <coroutine object convert_topic_like at 0x7f39537d6740>, {'materials': [], 'force': False, '_id': 'module-16618_0', 'order': 11, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Хранение графов списками смежности</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16619', 'order': 12, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Хранение графов списками смежности', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16620_0', 'order': 13, 'indent': 0, 'type': 'label', 'title': '', 'content': 'Задач на храние графов списками смежности тут не будут, будут в уровне 4В.', 'path': []}]
In convert_level 4А materials= [{'materials': [], 'force': False, '_id': 'module-16471_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 4А</h3>\nЧтобы перейти на следующий уровень, необходимо решить все задачи.', 'path': []}, <coroutine object convert_topic_like at 0x7f3953627d40>, <coroutine object convert_topic_like at 0x7f39538127c0>, <coroutine object convert_topic_like at 0x7f39537d6740>, {'materials': [], 'force': False, '_id': 'module-16618_0', 'order': 11, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Хранение графов списками смежности</h2>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16619', 'order': 12, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Хранение графов списками смежности', 'path': []}, {'materials': [], 'force': False, '_id': 'module-16620_0', 'order': 13, 'indent': 0, 'type': 'label', 'title': '', 'content': 'Задач на храние графов списками смежности тут не будут, будут в уровне 4В.', 'path': []}]
Converting material  {'materials': [], 'force': False, '_id': 'module-16471_0', 'order': 1, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 4А</h3>\nЧтобы перейти на следующий уровень, необходимо решить все задачи.', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16618_0', 'order': 11, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Хранение графов списками смежности</h2>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16619', 'order': 12, 'type': 'page', 'indent': 0, 'content': '', 'title': 'Хранение графов списками смежности', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-16620_0', 'order': 13, 'indent': 0, 'type': 'label', 'title': '', 'content': 'Задач на храние графов списками смежности тут не будут, будут в уровне 4В.', 'path': []}
Result= [{'materials': [], 'force': False, '_id': 'reg2009head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2009</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2009', 'title': '2009'}]}, <coroutine object convert_topic_like at 0x7f39537f0440>, <coroutine object convert_topic_like at 0x7f395364a040>]
In convert_level reg2009 materials= [{'materials': [], 'force': False, '_id': 'reg2009head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2009</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2009', 'title': '2009'}]}, <coroutine object convert_topic_like at 0x7f39537f0440>, <coroutine object convert_topic_like at 0x7f395364a040>]
Converting material  {'materials': [], 'force': False, '_id': 'reg2009head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2009</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2009', 'title': '2009'}]}
Result= [{'materials': [], 'force': False, '_id': 'reg2010head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2010</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2010', 'title': '2010'}]}, <coroutine object convert_topic_like at 0x7f395346e0c0>, <coroutine object convert_topic_like at 0x7f39538a3140>]
In convert_level reg2010 materials= [{'materials': [], 'force': False, '_id': 'reg2010head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2010</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2010', 'title': '2010'}]}, <coroutine object convert_topic_like at 0x7f395346e0c0>, <coroutine object convert_topic_like at 0x7f39538a3140>]
Converting material  {'materials': [], 'force': False, '_id': 'reg2010head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2010</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2010', 'title': '2010'}]}
Result= [{'materials': [], 'force': False, '_id': 'reg2011head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2011</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2011', 'title': '2011'}]}, <coroutine object convert_topic_like at 0x7f3953642cc0>, <coroutine object convert_topic_like at 0x7f39537e0e40>]
In convert_level reg2011 materials= [{'materials': [], 'force': False, '_id': 'reg2011head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2011</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2011', 'title': '2011'}]}, <coroutine object convert_topic_like at 0x7f3953642cc0>, <coroutine object convert_topic_like at 0x7f39537e0e40>]
Converting material  {'materials': [], 'force': False, '_id': 'reg2011head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2011</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2011', 'title': '2011'}]}
Result= [{'materials': [], 'force': False, '_id': 'reg2015head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2015</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2015', 'title': '2015'}]}, <coroutine object convert_topic_like at 0x7f3953627040>, <coroutine object convert_topic_like at 0x7f3953627c40>]
In convert_level reg2015 materials= [{'materials': [], 'force': False, '_id': 'reg2015head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2015</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2015', 'title': '2015'}]}, <coroutine object convert_topic_like at 0x7f3953627040>, <coroutine object convert_topic_like at 0x7f3953627c40>]
Converting material  {'materials': [], 'force': False, '_id': 'reg2015head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2015</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2015', 'title': '2015'}]}
Result= [{'materials': [], 'force': False, '_id': 'reg2013head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2013</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2013', 'title': '2013'}]}, <coroutine object convert_topic_like at 0x7f39536270c0>, <coroutine object convert_topic_like at 0x7f39537f0940>]
In convert_level reg2013 materials= [{'materials': [], 'force': False, '_id': 'reg2013head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2013</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2013', 'title': '2013'}]}, <coroutine object convert_topic_like at 0x7f39536270c0>, <coroutine object convert_topic_like at 0x7f39537f0940>]
Converting material  {'materials': [], 'force': False, '_id': 'reg2013head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2013</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2013', 'title': '2013'}]}
Result= [{'materials': [], 'force': False, '_id': 'reg2012head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2012</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2012', 'title': '2012'}]}, <coroutine object convert_topic_like at 0x7f3953627640>, <coroutine object convert_topic_like at 0x7f3953627140>]
In convert_level reg2012 materials= [{'materials': [], 'force': False, '_id': 'reg2012head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2012</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2012', 'title': '2012'}]}, <coroutine object convert_topic_like at 0x7f3953627640>, <coroutine object convert_topic_like at 0x7f3953627140>]
Converting material  {'materials': [], 'force': False, '_id': 'reg2012head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2012</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2012', 'title': '2012'}]}
Result= [{'materials': [], 'force': False, '_id': 'module-39868_0', 'order': 14, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 10В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39537f0a40>]
In convert_level 10В materials= [{'materials': [], 'force': False, '_id': 'module-39868_0', 'order': 14, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 10В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39537f0a40>]
Converting material  {'materials': [], 'force': False, '_id': 'module-39868_0', 'order': 14, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 10В</h3>\n<p>Чтобы перейти на следующий уровень, надо решить <b>минимум половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}
Correct label <h4>Mincost-maxflow</h4>
<p>См. <a href="http://e-maxx.ru/algo/min_cost_flow">теорию на e-maxx</a>
</p>
<p>Я не нашел на информатиксе задач на эту тему :(</p>
Corrected label <h2>Mincost-maxflow</h2>
<p>См. <a href="http://e-maxx.ru/algo/min_cost_flow">теорию на e-maxx</a>
</p>
<p>Я не нашел на информатиксе задач на эту тему :(</p>
Pending materials  [{'materials': [], 'force': False, '_id': 'module-39862_0', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Mincost-maxflow</h2>\n<p>См. <a href="http://e-maxx.ru/algo/min_cost_flow">теорию на e-maxx</a>\n</p>\n<p>Я не нашел на информатиксе задач на эту тему :(</p>', 'path': []}]
Correct label <h4>Паросочетание максимального веста, венгерский алгоритм</h4>
<p>См.
<a href="http://e-maxx.ru/algo/assignment_hungary">теорию на e-maxx</a>, но <a href="http://e-maxx.ru/algo/assignment_mincostflow">можно писать и mincost-maxflow</a>.
</p>

Corrected label <h2>Паросочетание максимального веста, венгерский алгоритм</h2>
<p>См.
<a href="http://e-maxx.ru/algo/assignment_hungary">теорию на e-maxx</a>, но <a href="http://e-maxx.ru/algo/assignment_mincostflow">можно писать и mincost-maxflow</a>.
</p>

Correct label <h4>Матрицы и их применение к ДП</h4>
<p>См.
<a href="http://e-maxx.ru/algo/linear_systems_gauss">теорию по методу Гаусса на e-maxx</a>. Теории по применению матриц к ДП в удобоваримом виде я не нашел.
</p>

Corrected label <h2>Матрицы и их применение к ДП</h2>
<p>См.
<a href="http://e-maxx.ru/algo/linear_systems_gauss">теорию по методу Гаусса на e-maxx</a>. Теории по применению матриц к ДП в удобоваримом виде я не нашел.
</p>

Result= [{'materials': [], 'force': False, '_id': 'module-39858_0', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 10Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-39862_0', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Mincost-maxflow</h2>\n<p>См. <a href="http://e-maxx.ru/algo/min_cost_flow">теорию на e-maxx</a>\n</p>\n<p>Я не нашел на информатиксе задач на эту тему :(</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395364a8c0>, <coroutine object convert_topic_like at 0x7f395364a140>]
In convert_level 10Б materials= [{'materials': [], 'force': False, '_id': 'module-39858_0', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 10Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, {'materials': [], 'force': False, '_id': 'module-39862_0', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Mincost-maxflow</h2>\n<p>См. <a href="http://e-maxx.ru/algo/min_cost_flow">теорию на e-maxx</a>\n</p>\n<p>Я не нашел на информатиксе задач на эту тему :(</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f395364a8c0>, <coroutine object convert_topic_like at 0x7f395364a140>]
Converting material  {'materials': [], 'force': False, '_id': 'module-39858_0', 'order': 8, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 10Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}
Converting material  {'materials': [], 'force': False, '_id': 'module-39862_0', 'order': 9, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>Mincost-maxflow</h2>\n<p>См. <a href="http://e-maxx.ru/algo/min_cost_flow">теорию на e-maxx</a>\n</p>\n<p>Я не нашел на информатиксе задач на эту тему :(</p>', 'path': []}
Result= [{'materials': [], 'force': False, '_id': 'reg2019head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2019</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2019', 'title': '2019'}]}, <coroutine object convert_topic_like at 0x7f39538009c0>, <coroutine object convert_topic_like at 0x7f39537f6740>]
In convert_level reg2019 materials= [{'materials': [], 'force': False, '_id': 'reg2019head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2019</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2019', 'title': '2019'}]}, <coroutine object convert_topic_like at 0x7f39538009c0>, <coroutine object convert_topic_like at 0x7f39537f6740>]
Converting material  {'materials': [], 'force': False, '_id': 'reg2019head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2019</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2019', 'title': '2019'}]}
Result= [{'materials': [], 'force': False, '_id': 'roi2009head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2009</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2009', 'title': '2009'}]}, <coroutine object convert_topic_like at 0x7f3953634ac0>]
In convert_level roi2009 materials= [{'materials': [], 'force': False, '_id': 'roi2009head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2009</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2009', 'title': '2009'}]}, <coroutine object convert_topic_like at 0x7f3953634ac0>]
Converting material  {'materials': [], 'force': False, '_id': 'roi2009head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2009</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2009', 'title': '2009'}]}
Result= [{'materials': [], 'force': False, '_id': 'roi2010head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2010</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2010', 'title': '2010'}]}, <coroutine object convert_topic_like at 0x7f3953634bc0>]
In convert_level roi2010 materials= [{'materials': [], 'force': False, '_id': 'roi2010head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2010</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2010', 'title': '2010'}]}, <coroutine object convert_topic_like at 0x7f3953634bc0>]
Converting material  {'materials': [], 'force': False, '_id': 'roi2010head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2010</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2010', 'title': '2010'}]}
Result= [{'materials': [], 'force': False, '_id': 'roi2019head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2019</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2019', 'title': '2019'}]}, <coroutine object convert_topic_like at 0x7f3953712ac0>, <coroutine object convert_topic_like at 0x7f3953642340>]
In convert_level roi2019 materials= [{'materials': [], 'force': False, '_id': 'roi2019head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2019</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2019', 'title': '2019'}]}, <coroutine object convert_topic_like at 0x7f3953712ac0>, <coroutine object convert_topic_like at 0x7f3953642340>]
Converting material  {'materials': [], 'force': False, '_id': 'roi2019head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2019</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2019', 'title': '2019'}]}
Correct label <h4>Алгоритм Дейкстры</h4>
Corrected label <h2>Алгоритм Дейкстры</h2>
Correct label <h4>Сортировка подсчетом</h4>
См. <a href="http://sis.khashaev.ru/2013/august/c-prime/Prz7x1bkW5Y/">видеозаписи лекций ЛКШ параллели C'</a><br>
См. видеозаписи лекций ЛКШ параллели B' (старой): <a href="http://sis.khashaev.ru/2008/august/b-prime/kVcmMxhr-CI/">раз</a> и <a href="http://sis.khashaev.ru/2008/august/b-prime/mkdwnjYkg-g/">два</a><br>
См. <a href="http://sis.khashaev.ru/2013/july/b-prime/X27QTFl70lY/">видеозаписи лекций ЛКШ параллели B' (новой)</a>
Corrected label <h2>Сортировка подсчетом</h2>
См. <a href="http://sis.khashaev.ru/2013/august/c-prime/Prz7x1bkW5Y/">видеозаписи лекций ЛКШ параллели C'</a><br>
См. видеозаписи лекций ЛКШ параллели B' (старой): <a href="http://sis.khashaev.ru/2008/august/b-prime/kVcmMxhr-CI/">раз</a> и <a href="http://sis.khashaev.ru/2008/august/b-prime/mkdwnjYkg-g/">два</a><br>
См. <a href="http://sis.khashaev.ru/2013/july/b-prime/X27QTFl70lY/">видеозаписи лекций ЛКШ параллели B' (новой)</a>
Correct label <h4>Длинная арифметика</h4>
Corrected label <h2>Длинная арифметика</h2>
Correct label <h4>Сортировка событий</h4>
Теории тут пока нет, прослушайте на занятии (попросите меня рассказать).
Corrected label <h2>Сортировка событий</h2>
Теории тут пока нет, прослушайте на занятии (попросите меня рассказать).
Result= [{'materials': [], 'force': False, '_id': 'module-16621_0', 'order': 14, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 4Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39537d61c0>, <coroutine object convert_topic_like at 0x7f39538b7f40>, <coroutine object convert_topic_like at 0x7f39537d6240>, <coroutine object convert_topic_like at 0x7f39538b7bc0>]
In convert_level 4Б materials= [{'materials': [], 'force': False, '_id': 'module-16621_0', 'order': 14, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 4Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39537d61c0>, <coroutine object convert_topic_like at 0x7f39538b7f40>, <coroutine object convert_topic_like at 0x7f39537d6240>, <coroutine object convert_topic_like at 0x7f39538b7bc0>]
Converting material  {'materials': [], 'force': False, '_id': 'module-16621_0', 'order': 14, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 4Б</h3>\n<p>Чтобы перейти на следующий уровень, надо решить все задачи.</p>', 'path': []}
Result= [{'materials': [], 'force': False, '_id': 'reg2014head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2014</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2014', 'title': '2014'}]}, <coroutine object convert_topic_like at 0x7f39536272c0>, <coroutine object convert_topic_like at 0x7f395354bb40>]
In convert_level reg2014 materials= [{'materials': [], 'force': False, '_id': 'reg2014head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2014</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2014', 'title': '2014'}]}, <coroutine object convert_topic_like at 0x7f39536272c0>, <coroutine object convert_topic_like at 0x7f395354bb40>]
Converting material  {'materials': [], 'force': False, '_id': 'reg2014head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2014</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2014', 'title': '2014'}]}
Result= [{'materials': [], 'force': False, '_id': 'module-16879_0', 'order': 26, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 4В</h3>\n<p>Чтобы перейти на следующий уровень, необходимо решить <b>хотя бы половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39537d6dc0>, <coroutine object convert_topic_like at 0x7f39534927c0>, <coroutine object convert_topic_like at 0x7f3953492840>]
In convert_level 4В materials= [{'materials': [], 'force': False, '_id': 'module-16879_0', 'order': 26, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 4В</h3>\n<p>Чтобы перейти на следующий уровень, необходимо решить <b>хотя бы половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}, <coroutine object convert_topic_like at 0x7f39537d6dc0>, <coroutine object convert_topic_like at 0x7f39534927c0>, <coroutine object convert_topic_like at 0x7f3953492840>]
Converting material  {'materials': [], 'force': False, '_id': 'module-16879_0', 'order': 26, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h3>Уровень 4В</h3>\n<p>Чтобы перейти на следующий уровень, необходимо решить <b>хотя бы половину задач</b>. Когда вы их решите, я рекомендую вам переходить на следующий уровень, чтобы не откладывать изучение новой теории. К оставшимся задачам этого уровня возвращайтесь позже время от времени и постарайтесь со временем все-таки дорешать почти все их до конца.</p>', 'path': []}
Result= [{'materials': [], 'force': False, '_id': 'reg2016head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2016</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2016', 'title': '2016'}]}, <coroutine object convert_topic_like at 0x7f39538ff0c0>, <coroutine object convert_topic_like at 0x7f395349c440>]
In convert_level reg2016 materials= [{'materials': [], 'force': False, '_id': 'reg2016head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2016</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2016', 'title': '2016'}]}, <coroutine object convert_topic_like at 0x7f39538ff0c0>, <coroutine object convert_topic_like at 0x7f395349c440>]
Converting material  {'materials': [], 'force': False, '_id': 'reg2016head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2016</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2016', 'title': '2016'}]}
Result= [{'materials': [], 'force': False, '_id': 'reg2017head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2017</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2017', 'title': '2017'}]}, <coroutine object convert_topic_like at 0x7f39538ff140>, <coroutine object convert_topic_like at 0x7f39538fff40>]
In convert_level reg2017 materials= [{'materials': [], 'force': False, '_id': 'reg2017head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2017</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2017', 'title': '2017'}]}, <coroutine object convert_topic_like at 0x7f39538ff140>, <coroutine object convert_topic_like at 0x7f39538fff40>]
Converting material  {'materials': [], 'force': False, '_id': 'reg2017head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2017</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2017', 'title': '2017'}]}
Result= [{'materials': [], 'force': False, '_id': 'reg2018head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2018</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2018', 'title': '2018'}]}, <coroutine object convert_topic_like at 0x7f39537f6a40>, <coroutine object convert_topic_like at 0x7f39537f69c0>]
In convert_level reg2018 materials= [{'materials': [], 'force': False, '_id': 'reg2018head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2018</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2018', 'title': '2018'}]}, <coroutine object convert_topic_like at 0x7f39537f6a40>, <coroutine object convert_topic_like at 0x7f39537f69c0>]
Converting material  {'materials': [], 'force': False, '_id': 'reg2018head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2018</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'reg', 'title': 'Региональные олимпиады'}, {'_id': 'reg2018', 'title': '2018'}]}
Result= [{'materials': [], 'force': False, '_id': 'roi2011head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2011</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2011', 'title': '2011'}]}, <coroutine object convert_topic_like at 0x7f3953634140>]
In convert_level roi2011 materials= [{'materials': [], 'force': False, '_id': 'roi2011head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2011</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2011', 'title': '2011'}]}, <coroutine object convert_topic_like at 0x7f3953634140>]
Converting material  {'materials': [], 'force': False, '_id': 'roi2011head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2011</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2011', 'title': '2011'}]}
Result= [{'materials': [], 'force': False, '_id': 'roi2012head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2012</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2012', 'title': '2012'}]}, <coroutine object convert_topic_like at 0x7f3953905340>]
In convert_level roi2012 materials= [{'materials': [], 'force': False, '_id': 'roi2012head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2012</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2012', 'title': '2012'}]}, <coroutine object convert_topic_like at 0x7f3953905340>]
Converting material  {'materials': [], 'force': False, '_id': 'roi2012head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2012</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2012', 'title': '2012'}]}
Result= [{'materials': [], 'force': False, '_id': 'roi2013head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2013</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2013', 'title': '2013'}]}, <coroutine object convert_topic_like at 0x7f395375eec0>, <coroutine object convert_topic_like at 0x7f395375ec40>]
In convert_level roi2013 materials= [{'materials': [], 'force': False, '_id': 'roi2013head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2013</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2013', 'title': '2013'}]}, <coroutine object convert_topic_like at 0x7f395375eec0>, <coroutine object convert_topic_like at 0x7f395375ec40>]
Converting material  {'materials': [], 'force': False, '_id': 'roi2013head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2013</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2013', 'title': '2013'}]}
Result= [{'materials': [], 'force': False, '_id': 'roi2015head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2015</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2015', 'title': '2015'}]}, <coroutine object convert_topic_like at 0x7f3953778440>, <coroutine object convert_topic_like at 0x7f395362fa40>]
In convert_level roi2015 materials= [{'materials': [], 'force': False, '_id': 'roi2015head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2015</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2015', 'title': '2015'}]}, <coroutine object convert_topic_like at 0x7f3953778440>, <coroutine object convert_topic_like at 0x7f395362fa40>]
Converting material  {'materials': [], 'force': False, '_id': 'roi2015head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2015</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2015', 'title': '2015'}]}
Result= [{'materials': [], 'force': False, '_id': 'roi2014head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2014</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2014', 'title': '2014'}]}, <coroutine object convert_topic_like at 0x7f39537781c0>, <coroutine object convert_topic_like at 0x7f395362fc40>]
In convert_level roi2014 materials= [{'materials': [], 'force': False, '_id': 'roi2014head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2014</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2014', 'title': '2014'}]}, <coroutine object convert_topic_like at 0x7f39537781c0>, <coroutine object convert_topic_like at 0x7f395362fc40>]
Converting material  {'materials': [], 'force': False, '_id': 'roi2014head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2014</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2014', 'title': '2014'}]}
Result= [{'materials': [], 'force': False, '_id': 'roi2017head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2017</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2017', 'title': '2017'}]}, <coroutine object convert_topic_like at 0x7f39538cbe40>, <coroutine object convert_topic_like at 0x7f3953805dc0>]
In convert_level roi2017 materials= [{'materials': [], 'force': False, '_id': 'roi2017head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2017</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2017', 'title': '2017'}]}, <coroutine object convert_topic_like at 0x7f39538cbe40>, <coroutine object convert_topic_like at 0x7f3953805dc0>]
Converting material  {'materials': [], 'force': False, '_id': 'roi2017head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2017</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2017', 'title': '2017'}]}
Result= [{'materials': [], 'force': False, '_id': 'roi2018head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2018</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2018', 'title': '2018'}]}, <coroutine object convert_topic_like at 0x7f395363a8c0>, <coroutine object convert_topic_like at 0x7f39538a3f40>]
In convert_level roi2018 materials= [{'materials': [], 'force': False, '_id': 'roi2018head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2018</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2018', 'title': '2018'}]}, <coroutine object convert_topic_like at 0x7f395363a8c0>, <coroutine object convert_topic_like at 0x7f39538a3f40>]
Converting material  {'materials': [], 'force': False, '_id': 'roi2018head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2018</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2018', 'title': '2018'}]}
Result= [{'materials': [], 'force': False, '_id': 'roi2016head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2016</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2016', 'title': '2016'}]}, <coroutine object convert_topic_like at 0x7f39537786c0>, <coroutine object convert_topic_like at 0x7f395362f240>]
In convert_level roi2016 materials= [{'materials': [], 'force': False, '_id': 'roi2016head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2016</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2016', 'title': '2016'}]}, <coroutine object convert_topic_like at 0x7f39537786c0>, <coroutine object convert_topic_like at 0x7f395362f240>]
Converting material  {'materials': [], 'force': False, '_id': 'roi2016head', 'order': 0, 'indent': 0, 'type': 'label', 'title': '', 'content': '<h2>2016</h2>', 'path': [{'_id': 'main', 'title': '/'}, {'_id': 'roi', 'title': 'Всероссийские олимпиады'}, {'_id': 'roi2016', 'title': '2016'}]}
